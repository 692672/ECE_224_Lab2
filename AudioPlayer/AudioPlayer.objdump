
AudioPlayer.elf:     file format elf32-littlenios2
AudioPlayer.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0001e9cc memsz 0x0001e9cc flags r-x
    LOAD off    0x0001f9ec vaddr 0x0081e9ec paddr 0x0081f708 align 2**12
         filesz 0x00000d1c memsz 0x00000d1c flags rw-
    LOAD off    0x00021424 vaddr 0x00820424 paddr 0x00820424 align 2**12
         filesz 0x00000000 memsz 0x00002b50 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001db9c  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000c0c  0081dde0  0081dde0  0001ede0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000d1c  0081e9ec  0081f708  0001f9ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00002b50  00820424  00820424  00021424  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_0      00000000  00822f74  00822f74  00020708  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00020708  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000012a0  00000000  00000000  00020730  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00033a1c  00000000  00000000  000219d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000c333  00000000  00000000  000553ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00010866  00000000  00000000  0006171f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000037b8  00000000  00000000  00071f88  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004ad8  00000000  00000000  00075740  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001c276  00000000  00000000  0007a218  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  00096490  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001b60  00000000  00000000  000964f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0009caee  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0009caf1  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0009cafd  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0009cafe  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0009caff  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0009cb03  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0009cb07  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0009cb0b  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0009cb16  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0009cb21  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0009cb2c  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  0009cb37  2**0
                  CONTENTS, READONLY
 29 .jdi          00004244  00000000  00000000  0009cb5a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008ff91  00000000  00000000  000a0d9e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
0081dde0 l    d  .rodata	00000000 .rodata
0081e9ec l    d  .rwdata	00000000 .rwdata
00820424 l    d  .bss	00000000 .bss
00822f74 l    d  .sdram_0	00000000 .sdram_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../AudioPlayer_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 fatfs.c
00000000 l    df *ABS*	00000000 fatfs_diskio.c
0081f6a8 l     O .rwdata	00000001 Stat
00820424 l     O .bss	00000001 CardType
00820426 l     O .bss	00000002 Timer1
00820428 l     O .bss	00000002 Timer2
0082042a l     O .bss	00000001 XMITDummy
0082042c l     O .bss	00000004 Control1
008002b4 l     F .text	0000004c SetLowSpeed
00800300 l     F .text	0000006c SetHighSpeed
0080036c l     F .text	00000044 InitDiskIOHardware
008003b0 l     F .text	0000003c Set8BitTransfer
008003ec l     F .text	00000038 Set32BitTransfer
00800424 l     F .text	00000050 ReceiveU8
00800474 l     F .text	0000012c ReceiveDatablock
008005a0 l     F .text	00000188 TransmitDatablock
0080074c l     F .text	00000054 WaitReady
00800728 l     F .text	00000024 GetCDWP
008007a0 l     F .text	00000044 ReleaseBus
008007e4 l     F .text	00000250 SendCMD
00820430 l     O .bss	00000004 pvm.1830
00000000 l    df *ABS*	00000000 fatfs_nios2_de0_nano_spi.c
00000000 l    df *ABS*	00000000 fatfs_nios2_de1_pio.c
00000000 l    df *ABS*	00000000 fatfs_nios2_de1_spi.c
00000000 l    df *ABS*	00000000 ff.c
00820434 l     O .bss	00000004 FatFs
00820438 l     O .bss	00000002 Fsid
00801548 l     F .text	0000006c mem_cpy
008015b4 l     F .text	00000058 mem_set
0080160c l     F .text	0000008c mem_cmp
00801698 l     F .text	0000007c chk_chr
00801714 l     F .text	0000015c move_window
00801870 l     F .text	0000021c sync
008020ec l     F .text	00000114 remove_chain
00802200 l     F .text	000001e4 create_chain
008023e4 l     F .text	000001ec dir_sdi
008025d0 l     F .text	000002e8 dir_next
008028b8 l     F .text	000000f4 dir_find
008029ac l     F .text	000000fc dir_read
00802aa8 l     F .text	00000120 dir_register
00802bc8 l     F .text	00000098 dir_remove
00802c60 l     F .text	000002ec create_name
0081de24 l     O .rodata	00000080 excvt.1856
00802f4c l     F .text	00000230 get_fileinfo
0080317c l     F .text	000001d0 follow_path
0080334c l     F .text	00000174 check_fs
008034c0 l     F .text	0000093c chk_mounted
00803dfc l     F .text	00000090 validate
0081dea4 l     O .rodata	00000016 vst.2095
0081deba l     O .rodata	00000016 cst.2096
00000000 l    df *ABS*	00000000 main.c
008204b0 l     O .bss	00000018 alarm
0082043c l     O .bss	00000004 Systick
00820440 l     O .bss	00000002 Timer
008080b0 l     F .text	00000068 TimerFunction
0082045c l     O .bss	00000002 wTimer10ms.3579
00808118 l     F .text	00000050 IoInit
00808168 l     F .text	00000140 scan_files
008082a8 l     F .text	000000a4 put_rc
0080834c l     F .text	00000030 display_help
008085a4 l     F .text	000005d4 handle_button_interrupts
00808b78 l     F .text	00000058 init_button_pio
0081f6bc l     O .rwdata	00000004 ft.3708
00000000 l    df *ABS*	00000000 monitor.c
00000000 l    df *ABS*	00000000 uart_nios2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
008099a0 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00809e64 l     F .text	00000008 __fp_lock
00809e6c l     F .text	00000008 __fp_unlock
00809e80 l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0081e9ec l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
0080bafc l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081e42e l     O .rodata	00000010 zeroes.4240
0081e43e l     O .rodata	00000010 blanks.4239
00000000 l    df *ABS*	00000000 vfprintf.c
0081e44e l     O .rodata	00000010 zeroes.4255
0080fff4 l     F .text	000000bc __sbprintf
0081e45e l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 dtoa.c
008102b4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
0081f238 l     O .rwdata	00000020 lc_ctype_charset
0081f218 l     O .rwdata	00000020 lc_message_charset
0081f258 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0081e48c l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081e5b0 l     O .rodata	00000010 zeroes.4184
0081e5c0 l     O .rodata	00000010 blanks.4183
00000000 l    df *ABS*	00000000 vfprintf.c
00815040 l     F .text	000000fc __sprint_r.part.0
0081e5e0 l     O .rodata	00000010 blanks.4199
0081e5d0 l     O .rodata	00000010 zeroes.4200
00816448 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_close.c
00819d74 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00819e94 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00819ec0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0081a170 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0081a264 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0081a348 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0081a524 l     F .text	00000050 alt_get_errno
0081a574 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0081aa04 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0081f6f4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0081ae2c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0081af74 l     F .text	00000038 alt_dev_reg
0081f438 l     O .rwdata	0000002c jtag_uart_0
0081f464 l     O .rwdata	00000120 lcd_display
0081f584 l     O .rwdata	000000c4 uart
0081f648 l     O .rwdata	00000030 audio_i2c_config
0081f678 l     O .rwdata	00000030 Audio
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
0081f700 l     O .rwdata	00000004 colstart
0081b29c l     F .text	000000b4 lcd_write_command
0081b350 l     F .text	000000d4 lcd_write_data
0081b424 l     F .text	000000cc lcd_clear_screen
0081b4f0 l     F .text	000001e8 lcd_repaint_screen
0081b6d8 l     F .text	000000c8 lcd_scroll_up
0081b7a0 l     F .text	000002a0 lcd_handle_escape
0081bf28 l     F .text	000000ac alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0081c31c l     F .text	0000009c altera_avalon_uart_irq
0081c3b8 l     F .text	000000e0 altera_avalon_uart_rxirq
0081c498 l     F .text	00000144 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0081c630 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0081c85c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 altera_up_avalon_audio.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0081d388 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081d7bc l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 ctype_.c
0081e869 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008204ac g     O .bss	00000004 alt_instruction_exception_handler
0080ba28 g     F .text	00000018 putchar
0081347c g     F .text	00000074 _mprec_log10
00813568 g     F .text	0000008c __any_on
00812148 g     F .text	00000054 _isatty_r
0081e498 g     O .rodata	00000028 __mprec_tinytens
008077c8 g     F .text	000000d0 f_gets
0081a46c g     F .text	00000078 alt_main
0080bfc8 g     F .text	00000090 strcpy
0080ba40 g     F .text	000000a8 _puts_r
008204f0 g     O .bss	00000230 Fatfs
00822e74 g     O .bss	00000100 alt_irq
0081227c g     F .text	0000005c _lseek_r
00801af8 g     F .text	00000284 get_fat
0081f708 g       *ABS*	00000000 __flash_rwdata_start
00811bdc g     F .text	000000ac __sflags
0081879c g     F .text	00000084 .hidden __eqdf2
00820448 g     O .bss	00000004 isPlaying
00820454 g     O .bss	00000004 previousClust
0081ccf0 g     F .text	00000060 alt_up_audio_read_fifo_avail
00822f74 g       *ABS*	00000000 __alt_heap_start
00809910 g     F .text	00000038 uart0_put
0080b9e4 g     F .text	0000003c printf
008079a4 g     F .text	00000650 f_printf
0081cd50 g     F .text	00000068 alt_up_audio_record_r
008168fc g     F .text	0000009c _wcrtomb_r
0080bf64 g     F .text	0000005c __sseek
0080a1b4 g     F .text	00000010 __sinit
00816504 g     F .text	00000138 __swbuf_r
00820460 g     O .bss	00000004 musicWordCounter
0081219c g     F .text	0000007c _setlocale_r
0080a01c g     F .text	00000068 __sfmoreglue
0081a504 g     F .text	00000020 __malloc_unlock
00820720 g     O .bss	00000224 File1
0081cc60 g     F .text	00000090 alt_up_audio_reset_audio_core
008124f8 g     F .text	0000015c memmove
0080a19c g     F .text	00000018 _cleanup
00812654 g     F .text	000000a8 _Balloc
00818820 g     F .text	000000e0 .hidden __gtdf2
0081d8f4 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00800000 g     F .entry	0000001c __reset
00820464 g     O .bss	00000004 edge_capture
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080ac00 g     F .text	00000058 _fstat_r
00820478 g     O .bss	00000004 errno
0080bd60 g     F .text	00000014 __srget
0080bee0 g     F .text	00000008 __seofread
00800f08 g     F .text	0000016c ffs_DiskIOWrite
00814008 g     F .text	00001038 ___svfiprintf_internal_r
0081cc20 g     F .text	00000040 alt_up_audio_write_interrupt_pending
0082049c g     O .bss	00000004 alt_argv
008276a8 g       *ABS*	00000000 _gp
0081adfc g     F .text	00000030 usleep
0081f2b8 g     O .rwdata	00000180 alt_fd_list
00820944 g     O .bss	00000018 Finfo
0080ade0 g     F .text	00000070 _getc_r
0080ae50 g     F .text	00000088 getc
0080ba20 g     F .text	00000008 _putchar_r
00801074 g     F .text	000004a8 ffs_DiskIOIoctl
0081d534 g     F .text	00000090 alt_find_dev
008123c0 g     F .text	00000138 memcpy
0082095c g     O .bss	00000104 fileName
00809e74 g     F .text	0000000c _cleanup_r
00819a5c g     F .text	000000d0 .hidden __floatsidf
0081d87c g     F .text	00000078 alt_io_redirect
00818900 g     F .text	000000e0 .hidden __ltdf2
0081dde0 g       *ABS*	00000000 __DTOR_END__
0080bae8 g     F .text	00000014 puts
0081d9a0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00813d24 g     F .text	00000074 __fpclassifyd
008133d8 g     F .text	000000a4 __ratio
00816424 g     F .text	00000024 __vfiprintf_internal
008065f8 g     F .text	00000314 f_rename
0081d138 g     F .text	00000050 alt_up_audio_read_fifo_head
0081b124 g     F .text	000000e4 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
0080b9b8 g     F .text	0000002c _printf_r
00809abc g     F .text	00000008 .hidden __udivsi3
0081a1c0 g     F .text	000000a4 isatty
00820a60 g     O .bss	00000034 fileSize
0081e4e8 g     O .rodata	000000c8 __mprec_tens
00820468 g     O .bss	00000002 acc_dirs
00812218 g     F .text	0000000c __locale_charset
008092b4 g     F .text	000001b8 xitoa
0081d914 g     F .text	0000008c alt_icache_flush
00820484 g     O .bss	00000004 __malloc_top_pad
00805ba0 g     F .text	000001e8 f_truncate
00808f78 g     F .text	00000284 xatoi
00807ff4 g     F .text	000000bc isWav
0081f6d0 g     O .rwdata	00000004 __mb_cur_max
00812248 g     F .text	0000000c _localeconv_r
00812a60 g     F .text	0000003c __i2b
00811c88 g     F .text	000004c0 __sfvwrite_r
0082046c g     O .bss	00000004 audio_dev
0080bd74 g     F .text	00000054 _sbrk_r
00809718 g     F .text	0000011c put_dump
00813760 g     F .text	0000005c _read_r
0081f6e8 g     O .rwdata	00000004 alt_max_fd
0081d188 g     F .text	00000064 alt_up_audio_write_fifo_head
00809acc g     F .text	000000f0 _fclose_r
00820470 g     O .bss	00000002 acc_files
00809e34 g     F .text	00000030 fflush
00820480 g     O .bss	00000004 __malloc_max_sbrked_mem
00819fc0 g     F .text	000001b0 alt_irq_register
00817634 g     F .text	0000089c .hidden __adddf3
00813180 g     F .text	0000011c __b2d
008170a4 g     F .text	00000590 .hidden __umoddi3
0081a398 g     F .text	000000d4 lseek
0081f6c0 g     O .rwdata	00000004 _global_impure_ptr
008137bc g     F .text	00000568 _realloc_r
00822f74 g       *ABS*	00000000 __bss_end
0081acf8 g     F .text	00000104 alt_tick
00816ae4 g     F .text	000005c0 .hidden __udivdi3
0081671c g     F .text	00000184 _fputwc_r
0081e4c0 g     O .rodata	00000028 __mprec_bigtens
00812844 g     F .text	00000104 __s2b
00819b2c g     F .text	000000a4 .hidden __floatunsidf
00812f28 g     F .text	00000060 __mcmp
0081c27c g     F .text	000000a0 altera_avalon_uart_init
0081ca58 g     F .text	00000040 alt_up_audio_open_dev
0080a1d4 g     F .text	00000018 __fp_lock_all
00805d88 g     F .text	00000218 f_unlink
0081ce80 g     F .text	00000068 alt_up_audio_play_r
0081ac60 g     F .text	00000098 alt_alarm_stop
00820450 g     O .bss	00000004 previousIsPlaying
0080946c g     F .text	000002ac xprintf
00820494 g     O .bss	00000004 alt_irq_active
0080a798 g     F .text	00000444 _fseeko_r
00809834 g     F .text	000000bc get_line
008000fc g     F .exceptions	000000d4 alt_irq_handler
0081f290 g     O .rwdata	00000028 alt_dev_null
00807898 g     F .text	00000074 f_putc
0080790c g     F .text	00000098 f_puts
0081d344 g     F .text	00000044 alt_dcache_flush_all
00812948 g     F .text	00000068 __hi0bits
008199d4 g     F .text	00000088 .hidden __fixdfsi
0081f708 g       *ABS*	00000000 __ram_rwdata_end
0081f6e0 g     O .rwdata	00000008 alt_dev_list
0081ae7c g     F .text	000000f8 write
008135f4 g     F .text	000000a0 _putc_r
0081e9ec g       *ABS*	00000000 __ram_rodata_end
00819f10 g     F .text	000000b0 fstat
0080a338 g     F .text	00000024 fprintf
00818900 g     F .text	000000e0 .hidden __ledf2
00812c98 g     F .text	00000140 __pow5mult
00815154 g     F .text	000012d0 ___vfiprintf_internal_r
00820490 g     O .bss	00000004 __nlocale_changed
00809ac4 g     F .text	00000008 .hidden __umodsi3
00822f74 g       *ABS*	00000000 end
0081ba40 g     F .text	000004e8 altera_avalon_lcd_16207_write
0080abdc g     F .text	00000024 fseeko
0081c8ac g     F .text	000001ac altera_avalon_uart_write
0080a774 g     F .text	00000024 fseek
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0080837c g     F .text	000001ac songIndex
0081dde0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0081c1cc g     F .text	00000060 altera_avalon_uart_write_fd
00819bd0 g     F .text	00000064 .hidden __clzsi2
0081c22c g     F .text	00000050 altera_avalon_uart_close_fd
0081b208 g     F .text	00000094 altera_avalon_jtag_uart_write
0080a1c4 g     F .text	00000004 __sfp_lock_acquire
008122d8 g     F .text	000000e8 memchr
0080e080 g     F .text	00001f50 ___vfprintf_internal_r
0080bdc8 g     F .text	00000058 _sprintf_r
0080a480 g     F .text	000002f0 _free_r
0081a798 g     F .text	00000228 alt_printf
00812224 g     F .text	00000010 __locale_mb_cur_max
0080924c g     F .text	00000068 xputs
0081dc18 g     F .text	00000194 __call_exitprocs
0080bcec g     F .text	00000074 __srget_r
008098f0 g     F .text	00000020 uart0_init
00820a94 g     O .bss	00002000 Buff
0082048c g     O .bss	00000004 __mlocale_changed
0080508c g     F .text	00000048 f_close
0081f6c8 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
008204a4 g     O .bss	00000004 _alt_tick_rate
0081d030 g     F .text	00000108 alt_up_audio_write_fifo
00812dd8 g     F .text	00000150 __lshift
008204a8 g     O .bss	00000004 _alt_nticks
0081aa54 g     F .text	000000fc read
0081afe0 g     F .text	00000084 alt_sys_init
00813e3c g     F .text	000001cc __ssprint_r
0081cf50 g     F .text	000000e0 alt_up_audio_read_fifo
0080b95c g     F .text	0000005c _open_r
0081db04 g     F .text	00000114 __register_exitproc
008043a4 g     F .text	000004e4 f_read
0081cb8c g     F .text	00000054 alt_up_audio_disable_write_interrupt
00812a9c g     F .text	000001fc __multiply
00805730 g     F .text	000000e4 f_readdir
0081e9ec g       *ABS*	00000000 __ram_rwdata_start
00800dec g     F .text	0000011c ffs_DiskIORead
0081dde0 g       *ABS*	00000000 __ram_rodata_start
008204c8 g     O .bss	00000028 __malloc_current_mallinfo
0081329c g     F .text	0000013c __d2b
008063e0 g     F .text	00000104 f_chmod
00822a94 g     O .bss	00000224 File2
0081b064 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0081d6d8 g     F .text	000000b4 alt_get_fd
00800a60 g     F .text	00000108 ffs_DiskIOTimerproc
0081d1ec g     F .text	00000158 alt_busy_sleep
00810260 g     F .text	00000054 _close_r
0081cb3c g     F .text	00000050 alt_up_audio_enable_write_interrupt
00800b68 g     F .text	0000025c ffs_DiskIOInitialize
0081da88 g     F .text	0000007c memcmp
00822f74 g       *ABS*	00000000 __alt_stack_base
00820444 g     O .bss	00000004 songPointer
0081010c g     F .text	00000154 __swsetup_r
00822cb8 g     O .bss	0000001c Dir
00817ed0 g     F .text	000008cc .hidden __divdf3
0081cae8 g     F .text	00000054 alt_up_audio_disable_read_interrupt
0080a084 g     F .text	00000118 __sfp
008134f0 g     F .text	00000078 __copybits
0081ee10 g     O .rwdata	00000408 __malloc_av_
0080a1d0 g     F .text	00000004 __sinit_lock_release
008189e0 g     F .text	00000724 .hidden __muldf3
0080be8c g     F .text	00000054 __sread
00820474 g     O .bss	00000004 acc_size
0080151c g     F .text	0000002c get_fattime
0081d5c4 g     F .text	00000114 alt_find_file
0081d3d8 g     F .text	000000a4 alt_dev_llist_insert
0081a4e4 g     F .text	00000020 __malloc_lock
0080a310 g     F .text	00000028 _fprintf_r
0081abb0 g     F .text	000000b0 sbrk
0080c0f0 g     F .text	00001f90 ___svfprintf_internal_r
00809dd8 g     F .text	0000005c _fflush_r
00816658 g     F .text	000000c4 _calloc_r
0080a2f4 g     F .text	0000001c fopen
00820424 g       *ABS*	00000000 __bss_start
0080b838 g     F .text	00000124 memset
00808bd0 g     F .text	000003a8 main
00822cd4 g     O .bss	000000a0 lcdString
0081ce20 g     F .text	00000060 alt_up_audio_write_fifo_space
008204a0 g     O .bss	00000004 alt_envp
0082047c g     O .bss	00000004 __malloc_max_total_mem
0081b0c4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0081663c g     F .text	0000001c __swbuf
00804e04 g     F .text	00000288 f_sync
0081bfd4 g     F .text	00000138 altera_avalon_lcd_16207_init
0080bfc0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00809bbc g     F .text	00000014 fclose
008104b4 g     F .text	00001728 _dtoa_r
0080b090 g     F .text	000007a8 _malloc_r
00816a58 g     F .text	00000030 __ascii_wctomb
00822d74 g     O .bss	00000100 Line
0080690c g     F .text	00000ebc f_mkfs
0081f6ec g     O .rwdata	00000004 alt_errno
00803e8c g     F .text	00000094 f_mount
0080ac58 g     F .text	000000c4 _fwalk
008055c0 g     F .text	00000170 f_opendir
00813694 g     F .text	000000cc putc
00809a0c g     F .text	00000054 .hidden __divsi3
0080a35c g     F .text	00000124 _malloc_trim_r
0081dde0 g       *ABS*	00000000 __CTOR_END__
00813d98 g     F .text	000000a4 strcmp
0081dde0 g       *ABS*	00000000 __flash_rodata_start
0081dde0 g       *ABS*	00000000 __DTOR_LIST__
00801d7c g     F .text	00000370 put_fat
008091fc g     F .text	00000050 xputc
0081879c g     F .text	00000084 .hidden __nedf2
0081afac g     F .text	00000034 alt_irq_init
0081ab50 g     F .text	00000060 alt_release_fd
008050d4 g     F .text	000004ec f_lseek
0080be20 g     F .text	0000006c sprintf
0081e5f0 g     O .rodata	00000100 .hidden __clz_tab
00820488 g     O .bss	00000004 _PathLocale
0081da3c g     F .text	00000014 atexit
008100b0 g     F .text	0000005c _write_r
00812254 g     F .text	0000001c setlocale
0081f6c4 g     O .rwdata	00000004 _impure_ptr
00820498 g     O .bss	00000004 alt_argc
00809bd0 g     F .text	00000208 __sflush_r
0081d4d8 g     F .text	0000005c _do_dtors
00812240 g     F .text	00000008 __locale_cjk_lang
0080a770 g     F .text	00000004 _fseek_r
0080bb18 g     F .text	000001d4 __srefill_r
00800000 g       *ABS*	00000000 __alt_mem_sdram_0
00800020 g       .exceptions	00000000 alt_irq_entry
00800dc4 g     F .text	00000028 ffs_DiskIOStatus
00813120 g     F .text	00000060 __ulp
00805814 g     F .text	000000a0 f_stat
0080a1ec g     F .text	00000018 __fp_unlock_all
0081c10c g     F .text	00000060 altera_avalon_lcd_16207_write_fd
0081f6d8 g     O .rwdata	00000008 alt_fs_list
0081cdb8 g     F .text	00000068 alt_up_audio_record_l
0081f6b0 g     O .rwdata	00000004 previousButton0
00800020 g       *ABS*	00000000 __ram_exceptions_start
00812270 g     F .text	0000000c localeconv
00801a8c g     F .text	0000006c clust2sect
0081f708 g       *ABS*	00000000 _edata
0081f6ac g     O .rwdata	00000004 bytesPerLoop
008064e4 g     F .text	00000114 f_utime
0081c16c g     F .text	00000060 altera_avalon_uart_read_fd
00822f74 g       *ABS*	00000000 _end
00800244 g       *ABS*	00000000 __ram_exceptions_end
00804888 g     F .text	0000057c f_write
0081cee8 g     F .text	00000068 alt_up_audio_play_l
0080bee8 g     F .text	0000007c __swrite
0081f6cc g     O .rwdata	00000004 __malloc_trim_threshold
00803f20 g     F .text	00000484 f_open
00812234 g     F .text	0000000c __locale_msgcharset
0081da50 g     F .text	00000038 exit
0080ad1c g     F .text	000000c4 _fwalk_reent
00812f88 g     F .text	00000198 __mdiff
00809a60 g     F .text	0000005c .hidden __modsi3
0081f704 g     O .rwdata	00000004 __ctype_ptr__
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080a1c8 g     F .text	00000004 __sfp_lock_release
0081e768 g     O .rodata	00000101 _ctype_
00809948 g     F .text	00000058 uart0_get
00805fa0 g     F .text	00000440 f_mkdir
0081c5dc g     F .text	00000054 altera_avalon_uart_close
0080a204 g     F .text	000000f0 _fopen_r
0081ddac g     F .text	00000034 _exit
00800290 g     F .text	00000024 ffs_Init
00819c34 g     F .text	00000140 alt_alarm_start
0081f6b8 g     O .rwdata	00000004 forwardStepSize
0080aed8 g     F .text	000001b8 __smakebuf_r
0080c058 g     F .text	00000098 strlen
0081f6b4 g     O .rwdata	00000004 backStepSize
0081a640 g     F .text	00000158 open
00818820 g     F .text	000000e0 .hidden __gedf2
0082044c g     O .bss	00000004 doubleSpeed
0081a9c0 g     F .text	00000044 alt_putchar
00808528 g     F .text	0000007c displayLCD
0081f6d4 g     O .rwdata	00000004 __wctomb
0081513c g     F .text	00000018 __sprint_r
0081d78c g     F .text	00000030 alt_icache_flush_all
008058b4 g     F .text	000002ec f_getfree
0081f6f0 g     O .rwdata	00000004 alt_priority_mask
0080ffd0 g     F .text	00000024 __vfprintf_internal
0081c680 g     F .text	000001dc altera_avalon_uart_read
00816a88 g     F .text	0000005c _wctomb_r
00819104 g     F .text	000008d0 .hidden __subdf3
00800a34 g     F .text	0000002c ffs_DiskIOInit
008129b0 g     F .text	000000b0 __lo0bits
0081f6f8 g     O .rwdata	00000008 alt_alarm_list
0081d47c g     F .text	0000005c _do_ctors
00816998 g     F .text	000000c0 wcrtomb
00819dc4 g     F .text	000000d0 close
00820458 g     O .bss	00000004 songByteCount
0081a2c8 g     F .text	00000080 alt_load
0081ca98 g     F .text	00000050 alt_up_audio_enable_read_interrupt
008168a0 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
0080a1cc g     F .text	00000004 __sinit_lock_acquire
00812724 g     F .text	00000120 __multadd
008126fc g     F .text	00000028 _Bfree
0081cbe0 g     F .text	00000040 alt_up_audio_read_interrupt_pending



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001526 	beq	r2,zero,800190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  80013c:	008020b4 	movhi	r2,130
  800140:	108b9d04 	addi	r2,r2,11892
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	108b9d04 	addi	r2,r2,11892
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	21000104 	addi	r4,r4,4
  800168:	1105883a 	add	r2,r2,r4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	e17ffd17 	ldw	r5,-12(fp)
  800178:	183ee83a 	callr	r3
#endif
        break;
  80017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800180:	0005313a 	rdctl	r2,ipending
  800184:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800188:	e0bfff17 	ldw	r2,-4(fp)
  80018c:	00000706 	br	8001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
  800190:	e0bffc17 	ldw	r2,-16(fp)
  800194:	1085883a 	add	r2,r2,r2
  800198:	e0bffc15 	stw	r2,-16(fp)
      i++;
  80019c:	e0bffd17 	ldw	r2,-12(fp)
  8001a0:	10800044 	addi	r2,r2,1
  8001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a8:	003fe006 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001b0:	e0bffb17 	ldw	r2,-20(fp)
  8001b4:	103fda1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b8:	0001883a 	nop
}
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a38117 	ldw	r2,-29180(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a38117 	ldw	r2,-29180(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	1809883a 	mov	r4,r3
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	e1bffe17 	ldw	r6,-8(fp)
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	068020b4 	movhi	gp,130
    ori gp, gp, %lo(_gp)
  800260:	d69daa14 	ori	gp,gp,30376
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	008020b4 	movhi	r2,130
    ori r2, r2, %lo(__bss_start)
  800268:	10810914 	ori	r2,r2,1060

    movhi r3, %hi(__bss_end)
  80026c:	00c020b4 	movhi	r3,130
    ori r3, r3, %lo(__bss_end)
  800270:	18cbdd14 	ori	r3,r3,12148

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	081a2c80 	call	81a2c8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	081a46c0 	call	81a46c <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <ffs_Init>:
  800290:	defffe04 	addi	sp,sp,-8
  800294:	df000115 	stw	fp,4(sp)
  800298:	df000104 	addi	fp,sp,4
  80029c:	e03fff0d 	sth	zero,-4(fp)
  8002a0:	e0bfff0b 	ldhu	r2,-4(fp)
  8002a4:	e037883a 	mov	sp,fp
  8002a8:	df000017 	ldw	fp,0(sp)
  8002ac:	dec00104 	addi	sp,sp,4
  8002b0:	f800283a 	ret

008002b4 <SetLowSpeed>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void SetLowSpeed(void)
{
  8002b4:	deffff04 	addi	sp,sp,-4
  8002b8:	df000015 	stw	fp,0(sp)
  8002bc:	d839883a 	mov	fp,sp
   Control1 &= ~0xFF00;
  8002c0:	d0e36117 	ldw	r3,-29308(gp)
  8002c4:	00bffff4 	movhi	r2,65535
  8002c8:	10803fc4 	addi	r2,r2,255
  8002cc:	1884703a 	and	r2,r3,r2
  8002d0:	d0a36115 	stw	r2,-29308(gp)
   Control1 |= (249 << 8);
  8002d4:	d0a36117 	ldw	r2,-29308(gp)
  8002d8:	10be4014 	ori	r2,r2,63744
  8002dc:	d0a36115 	stw	r2,-29308(gp)
   SPI_CTRL  = Control1;
  8002e0:	00a04034 	movhi	r2,33024
  8002e4:	10840a04 	addi	r2,r2,4136
  8002e8:	d0e36117 	ldw	r3,-29308(gp)
  8002ec:	10c00015 	stw	r3,0(r2)
} /* SetLowSpeed */
  8002f0:	e037883a 	mov	sp,fp
  8002f4:	df000017 	ldw	fp,0(sp)
  8002f8:	dec00104 	addi	sp,sp,4
  8002fc:	f800283a 	ret

00800300 <SetHighSpeed>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void SetHighSpeed(void)
{
  800300:	deffff04 	addi	sp,sp,-4
  800304:	df000015 	stw	fp,0(sp)
  800308:	d839883a 	mov	fp,sp
   Control1 &= ~0xFF00;
  80030c:	d0e36117 	ldw	r3,-29308(gp)
  800310:	00bffff4 	movhi	r2,65535
  800314:	10803fc4 	addi	r2,r2,255
  800318:	1884703a 	and	r2,r3,r2
  80031c:	d0a36115 	stw	r2,-29308(gp)

   if (0 == (CardType & 0x01))
  800320:	d0a35f03 	ldbu	r2,-29316(gp)
  800324:	10803fcc 	andi	r2,r2,255
  800328:	1080004c 	andi	r2,r2,1
  80032c:	1000041e 	bne	r2,zero,800340 <SetHighSpeed+0x40>
   {
      /* SD card 25 MHz */
      Control1 |= (1 << 8);
  800330:	d0a36117 	ldw	r2,-29308(gp)
  800334:	10804014 	ori	r2,r2,256
  800338:	d0a36115 	stw	r2,-29308(gp)
  80033c:	00000306 	br	80034c <SetHighSpeed+0x4c>
   }
   else
   {
      /* MMC card 16 MHz */
      Control1 |= (2 << 8);
  800340:	d0a36117 	ldw	r2,-29308(gp)
  800344:	10808014 	ori	r2,r2,512
  800348:	d0a36115 	stw	r2,-29308(gp)
   }
   SPI_CTRL  = Control1;
  80034c:	00a04034 	movhi	r2,33024
  800350:	10840a04 	addi	r2,r2,4136
  800354:	d0e36117 	ldw	r3,-29308(gp)
  800358:	10c00015 	stw	r3,0(r2)
} /* SetHighSpeed */
  80035c:	e037883a 	mov	sp,fp
  800360:	df000017 	ldw	fp,0(sp)
  800364:	dec00104 	addi	sp,sp,4
  800368:	f800283a 	ret

0080036c <InitDiskIOHardware>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void InitDiskIOHardware(void)
{
  80036c:	defffe04 	addi	sp,sp,-8
  800370:	dfc00115 	stw	ra,4(sp)
  800374:	df000015 	stw	fp,0(sp)
  800378:	d839883a 	mov	fp,sp
   /*
    * Deselct before to prevent glitch
    */
   DESELECT();
  80037c:	d0a36117 	ldw	r2,-29308(gp)
  800380:	10800054 	ori	r2,r2,1
  800384:	d0a36115 	stw	r2,-29308(gp)
  800388:	00a04034 	movhi	r2,33024
  80038c:	10840a04 	addi	r2,r2,4136
  800390:	d0e36117 	ldw	r3,-29308(gp)
  800394:	10c00015 	stw	r3,0(r2)

   /* Slow during init */
   SetLowSpeed();
  800398:	08002b40 	call	8002b4 <SetLowSpeed>
   
} /* InitDiskIOHardware */
  80039c:	e037883a 	mov	sp,fp
  8003a0:	dfc00117 	ldw	ra,4(sp)
  8003a4:	df000017 	ldw	fp,0(sp)
  8003a8:	dec00204 	addi	sp,sp,8
  8003ac:	f800283a 	ret

008003b0 <Set8BitTransfer>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void Set8BitTransfer(void)
{
  8003b0:	deffff04 	addi	sp,sp,-4
  8003b4:	df000015 	stw	fp,0(sp)
  8003b8:	d839883a 	mov	fp,sp
   Control1 &= ~CTRL_BIT32;
  8003bc:	d0e36117 	ldw	r3,-29308(gp)
  8003c0:	00bfff44 	movi	r2,-3
  8003c4:	1884703a 	and	r2,r3,r2
  8003c8:	d0a36115 	stw	r2,-29308(gp)
   SPI_CTRL  = Control1;
  8003cc:	00a04034 	movhi	r2,33024
  8003d0:	10840a04 	addi	r2,r2,4136
  8003d4:	d0e36117 	ldw	r3,-29308(gp)
  8003d8:	10c00015 	stw	r3,0(r2)
} /* Set8BitTransfer */
  8003dc:	e037883a 	mov	sp,fp
  8003e0:	df000017 	ldw	fp,0(sp)
  8003e4:	dec00104 	addi	sp,sp,4
  8003e8:	f800283a 	ret

008003ec <Set32BitTransfer>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void Set32BitTransfer(void)
{
  8003ec:	deffff04 	addi	sp,sp,-4
  8003f0:	df000015 	stw	fp,0(sp)
  8003f4:	d839883a 	mov	fp,sp
   Control1 |= CTRL_BIT32;
  8003f8:	d0a36117 	ldw	r2,-29308(gp)
  8003fc:	10800094 	ori	r2,r2,2
  800400:	d0a36115 	stw	r2,-29308(gp)
   SPI_CTRL  = Control1;
  800404:	00a04034 	movhi	r2,33024
  800408:	10840a04 	addi	r2,r2,4136
  80040c:	d0e36117 	ldw	r3,-29308(gp)
  800410:	10c00015 	stw	r3,0(r2)
} /* Set32BitTransfer */
  800414:	e037883a 	mov	sp,fp
  800418:	df000017 	ldw	fp,0(sp)
  80041c:	dec00104 	addi	sp,sp,4
  800420:	f800283a 	ret

00800424 <ReceiveU8>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: Data                                                           */
/***************************************************************************/
static FFS_U8 ReceiveU8 (void)
{
  800424:	deffff04 	addi	sp,sp,-4
  800428:	df000015 	stw	fp,0(sp)
  80042c:	d839883a 	mov	fp,sp
   SPI_TXR = (uint32_t) 0xff;
  800430:	00a04034 	movhi	r2,33024
  800434:	10840804 	addi	r2,r2,4128
  800438:	00c03fc4 	movi	r3,255
  80043c:	10c00015 	stw	r3,0(r2)

   /* wait for char */
   while (!(SPI_SR & SPI_SR_DONE)) ;
  800440:	0001883a 	nop
  800444:	00a04034 	movhi	r2,33024
  800448:	10840b04 	addi	r2,r2,4140
  80044c:	10800017 	ldw	r2,0(r2)
  800450:	1080004c 	andi	r2,r2,1
  800454:	103ffb26 	beq	r2,zero,800444 <__alt_data_end+0xff800444>

   return(SPI_RXR);
  800458:	00a04034 	movhi	r2,33024
  80045c:	10840904 	addi	r2,r2,4132
  800460:	10800017 	ldw	r2,0(r2)
} /* ReceiveU8 */
  800464:	e037883a 	mov	sp,fp
  800468:	df000017 	ldw	fp,0(sp)
  80046c:	dec00104 	addi	sp,sp,4
  800470:	f800283a 	ret

00800474 <ReceiveDatablock>:
/*  In    : buff, btr                                                      */
/*  Out   : none                                                           */
/*  Return: In case of an error return FALSE                               */
/***************************************************************************/
static int ReceiveDatablock(FFS_U8 * buff, uint32_t btr)
{
  800474:	defff904 	addi	sp,sp,-28
  800478:	dfc00615 	stw	ra,24(sp)
  80047c:	df000515 	stw	fp,20(sp)
  800480:	df000504 	addi	fp,sp,20
  800484:	e13ffe15 	stw	r4,-8(fp)
  800488:	e17fff15 	stw	r5,-4(fp)
   FFS_U8 token, cnt;
   FFS_U32 *buff32 = (FFS_U32*)buff;
  80048c:	e0bffe17 	ldw	r2,-8(fp)
  800490:	e0bffc15 	stw	r2,-16(fp)

   Timer1 = 10;
  800494:	00800284 	movi	r2,10
  800498:	d0a35f8d 	sth	r2,-29314(gp)
   do /* Wait for data packet in timeout of 100ms */
   {
      token = ReceiveU8();
  80049c:	08004240 	call	800424 <ReceiveU8>
  8004a0:	e0bffd05 	stb	r2,-12(fp)
   }
   while ((token == 0xFF) && Timer1);
  8004a4:	e0bffd03 	ldbu	r2,-12(fp)
  8004a8:	10803fd8 	cmpnei	r2,r2,255
  8004ac:	1000031e 	bne	r2,zero,8004bc <ReceiveDatablock+0x48>
  8004b0:	d0a35f8b 	ldhu	r2,-29314(gp)
  8004b4:	10bfffcc 	andi	r2,r2,65535
  8004b8:	103ff81e 	bne	r2,zero,80049c <__alt_data_end+0xff80049c>

   if (token != 0xFE)
  8004bc:	e0bffd03 	ldbu	r2,-12(fp)
  8004c0:	10803fa0 	cmpeqi	r2,r2,254
  8004c4:	1000021e 	bne	r2,zero,8004d0 <ReceiveDatablock+0x5c>
      return(FFS_FALSE);  /* If not valid data token, return with error */
  8004c8:	0005883a 	mov	r2,zero
  8004cc:	00002f06 	br	80058c <ReceiveDatablock+0x118>
      
   /* Receive the data block into buffer */
   Set32BitTransfer();
  8004d0:	08003ec0 	call	8003ec <Set32BitTransfer>
   
   /* Divide by 8 */
   cnt = btr >> 3;
  8004d4:	e0bfff17 	ldw	r2,-4(fp)
  8004d8:	1004d0fa 	srli	r2,r2,3
  8004dc:	e0bffb05 	stb	r2,-20(fp)

   do /* Receive the data block into buffer */
   {
      RECEIVE_FAST(buff32);
  8004e0:	00a04034 	movhi	r2,33024
  8004e4:	10840804 	addi	r2,r2,4128
  8004e8:	00ffffc4 	movi	r3,-1
  8004ec:	10c00015 	stw	r3,0(r2)
  8004f0:	0001883a 	nop
  8004f4:	00a04034 	movhi	r2,33024
  8004f8:	10840b04 	addi	r2,r2,4140
  8004fc:	10800017 	ldw	r2,0(r2)
  800500:	1080004c 	andi	r2,r2,1
  800504:	103ffb26 	beq	r2,zero,8004f4 <__alt_data_end+0xff8004f4>
  800508:	e0fffc17 	ldw	r3,-16(fp)
  80050c:	18800104 	addi	r2,r3,4
  800510:	e0bffc15 	stw	r2,-16(fp)
  800514:	00a04034 	movhi	r2,33024
  800518:	10840904 	addi	r2,r2,4132
  80051c:	10800017 	ldw	r2,0(r2)
  800520:	18800015 	stw	r2,0(r3)
      RECEIVE_FAST(buff32);
  800524:	00a04034 	movhi	r2,33024
  800528:	10840804 	addi	r2,r2,4128
  80052c:	00ffffc4 	movi	r3,-1
  800530:	10c00015 	stw	r3,0(r2)
  800534:	0001883a 	nop
  800538:	00a04034 	movhi	r2,33024
  80053c:	10840b04 	addi	r2,r2,4140
  800540:	10800017 	ldw	r2,0(r2)
  800544:	1080004c 	andi	r2,r2,1
  800548:	103ffb26 	beq	r2,zero,800538 <__alt_data_end+0xff800538>
  80054c:	e0fffc17 	ldw	r3,-16(fp)
  800550:	18800104 	addi	r2,r3,4
  800554:	e0bffc15 	stw	r2,-16(fp)
  800558:	00a04034 	movhi	r2,33024
  80055c:	10840904 	addi	r2,r2,4132
  800560:	10800017 	ldw	r2,0(r2)
  800564:	18800015 	stw	r2,0(r3)
   }
   while (--cnt);
  800568:	e0bffb03 	ldbu	r2,-20(fp)
  80056c:	10bfffc4 	addi	r2,r2,-1
  800570:	e0bffb05 	stb	r2,-20(fp)
  800574:	e0bffb03 	ldbu	r2,-20(fp)
  800578:	103fd91e 	bne	r2,zero,8004e0 <__alt_data_end+0xff8004e0>
   
   Set8BitTransfer();   
  80057c:	08003b00 	call	8003b0 <Set8BitTransfer>
   ReceiveU8();   /* Discard CRC */
  800580:	08004240 	call	800424 <ReceiveU8>
   ReceiveU8();   /* Discard CRC */
  800584:	08004240 	call	800424 <ReceiveU8>

   return(FFS_TRUE);  /* Return with success */
  800588:	00800044 	movi	r2,1
} /* ReceiveDatablock */
  80058c:	e037883a 	mov	sp,fp
  800590:	dfc00117 	ldw	ra,4(sp)
  800594:	df000017 	ldw	fp,0(sp)
  800598:	dec00204 	addi	sp,sp,8
  80059c:	f800283a 	ret

008005a0 <TransmitDatablock>:
/*  In    : buff, token (Data/Stop token)                                  */
/*  Out   : none                                                           */
/*  Return: In case of an error return FALSE                               */
/***************************************************************************/
static int TransmitDatablock(const FFS_U8 * buff, FFS_U8 token)
{
  8005a0:	defff904 	addi	sp,sp,-28
  8005a4:	dfc00615 	stw	ra,24(sp)
  8005a8:	df000515 	stw	fp,20(sp)
  8005ac:	df000504 	addi	fp,sp,20
  8005b0:	e13ffe15 	stw	r4,-8(fp)
  8005b4:	2805883a 	mov	r2,r5
  8005b8:	e0bfff05 	stb	r2,-4(fp)
   FFS_U8 resp, cnt = 0;
  8005bc:	e03ffb05 	stb	zero,-20(fp)
   FFS_U32 *buff32 = (FFS_U32*)buff;
  8005c0:	e0bffe17 	ldw	r2,-8(fp)
  8005c4:	e0bffc15 	stw	r2,-16(fp)

   if (WaitReady() != 0xFF)
  8005c8:	080074c0 	call	80074c <WaitReady>
  8005cc:	10803fcc 	andi	r2,r2,255
  8005d0:	10803fe0 	cmpeqi	r2,r2,255
  8005d4:	1000021e 	bne	r2,zero,8005e0 <TransmitDatablock+0x40>
      return(FFS_FALSE);
  8005d8:	0005883a 	mov	r2,zero
  8005dc:	00004d06 	br	800714 <TransmitDatablock+0x174>

   TRANSMIT_U8(token);  /* Xmit data token */
  8005e0:	00a04034 	movhi	r2,33024
  8005e4:	10840804 	addi	r2,r2,4128
  8005e8:	e0ffff03 	ldbu	r3,-4(fp)
  8005ec:	10c00015 	stw	r3,0(r2)
  8005f0:	0001883a 	nop
  8005f4:	00a04034 	movhi	r2,33024
  8005f8:	10840b04 	addi	r2,r2,4140
  8005fc:	10800017 	ldw	r2,0(r2)
  800600:	1080004c 	andi	r2,r2,1
  800604:	103ffb26 	beq	r2,zero,8005f4 <__alt_data_end+0xff8005f4>
   if (token != 0xFD)   /* Is data token */
  800608:	e0bfff03 	ldbu	r2,-4(fp)
  80060c:	10803f60 	cmpeqi	r2,r2,253
  800610:	10003f1e 	bne	r2,zero,800710 <TransmitDatablock+0x170>
   {
   
      cnt = 512 / 8;
  800614:	00801004 	movi	r2,64
  800618:	e0bffb05 	stb	r2,-20(fp)
   
      /* Send the 512 byte data block */
      Set32BitTransfer();
  80061c:	08003ec0 	call	8003ec <Set32BitTransfer>
      do /* Send the 512 byte data block */
      {
         TRANSMIT_FAST(*buff32++);
  800620:	00a04034 	movhi	r2,33024
  800624:	10840804 	addi	r2,r2,4128
  800628:	e0fffc17 	ldw	r3,-16(fp)
  80062c:	19000104 	addi	r4,r3,4
  800630:	e13ffc15 	stw	r4,-16(fp)
  800634:	18c00017 	ldw	r3,0(r3)
  800638:	10c00015 	stw	r3,0(r2)
  80063c:	0001883a 	nop
  800640:	00a04034 	movhi	r2,33024
  800644:	10840b04 	addi	r2,r2,4140
  800648:	10800017 	ldw	r2,0(r2)
  80064c:	1080004c 	andi	r2,r2,1
  800650:	103ffb26 	beq	r2,zero,800640 <__alt_data_end+0xff800640>
         TRANSMIT_FAST(*buff32++);
  800654:	00a04034 	movhi	r2,33024
  800658:	10840804 	addi	r2,r2,4128
  80065c:	e0fffc17 	ldw	r3,-16(fp)
  800660:	19000104 	addi	r4,r3,4
  800664:	e13ffc15 	stw	r4,-16(fp)
  800668:	18c00017 	ldw	r3,0(r3)
  80066c:	10c00015 	stw	r3,0(r2)
  800670:	0001883a 	nop
  800674:	00a04034 	movhi	r2,33024
  800678:	10840b04 	addi	r2,r2,4140
  80067c:	10800017 	ldw	r2,0(r2)
  800680:	1080004c 	andi	r2,r2,1
  800684:	103ffb26 	beq	r2,zero,800674 <__alt_data_end+0xff800674>
      }
      while (--cnt);
  800688:	e0bffb03 	ldbu	r2,-20(fp)
  80068c:	10bfffc4 	addi	r2,r2,-1
  800690:	e0bffb05 	stb	r2,-20(fp)
  800694:	e0bffb03 	ldbu	r2,-20(fp)
  800698:	103fe11e 	bne	r2,zero,800620 <__alt_data_end+0xff800620>

      Set8BitTransfer();
  80069c:	08003b00 	call	8003b0 <Set8BitTransfer>
      TRANSMIT_U8(0xFF);   /* CRC (Dummy) */
  8006a0:	00a04034 	movhi	r2,33024
  8006a4:	10840804 	addi	r2,r2,4128
  8006a8:	00c03fc4 	movi	r3,255
  8006ac:	10c00015 	stw	r3,0(r2)
  8006b0:	0001883a 	nop
  8006b4:	00a04034 	movhi	r2,33024
  8006b8:	10840b04 	addi	r2,r2,4140
  8006bc:	10800017 	ldw	r2,0(r2)
  8006c0:	1080004c 	andi	r2,r2,1
  8006c4:	103ffb26 	beq	r2,zero,8006b4 <__alt_data_end+0xff8006b4>
      TRANSMIT_U8(0xFF);   /* CRC (Dummy) */
  8006c8:	00a04034 	movhi	r2,33024
  8006cc:	10840804 	addi	r2,r2,4128
  8006d0:	00c03fc4 	movi	r3,255
  8006d4:	10c00015 	stw	r3,0(r2)
  8006d8:	0001883a 	nop
  8006dc:	00a04034 	movhi	r2,33024
  8006e0:	10840b04 	addi	r2,r2,4140
  8006e4:	10800017 	ldw	r2,0(r2)
  8006e8:	1080004c 	andi	r2,r2,1
  8006ec:	103ffb26 	beq	r2,zero,8006dc <__alt_data_end+0xff8006dc>

      resp = ReceiveU8();  /* Reveive data response */
  8006f0:	08004240 	call	800424 <ReceiveU8>
  8006f4:	e0bffd05 	stb	r2,-12(fp)
      if ((resp & 0x1F) != 0x05) /* If not accepted, return with error */
  8006f8:	e0bffd03 	ldbu	r2,-12(fp)
  8006fc:	108007cc 	andi	r2,r2,31
  800700:	10800160 	cmpeqi	r2,r2,5
  800704:	1000021e 	bne	r2,zero,800710 <TransmitDatablock+0x170>
      {
         return(FFS_FALSE);
  800708:	0005883a 	mov	r2,zero
  80070c:	00000106 	br	800714 <TransmitDatablock+0x174>
      }
   }

   return(FFS_TRUE);  /* Return with success */
  800710:	00800044 	movi	r2,1
} /* TransmitDatablock */
  800714:	e037883a 	mov	sp,fp
  800718:	dfc00117 	ldw	ra,4(sp)
  80071c:	df000017 	ldw	fp,0(sp)
  800720:	dec00204 	addi	sp,sp,8
  800724:	f800283a 	ret

00800728 <GetCDWP>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: Data                                                           */
/***************************************************************************/
static FFS_U32 GetCDWP(void)
{
  800728:	defffe04 	addi	sp,sp,-8
  80072c:	df000115 	stw	fp,4(sp)
  800730:	df000104 	addi	fp,sp,4
   FFS_U32 value = 0;
  800734:	e03fff15 	stw	zero,-4(fp)
   
   /*
    * CD and WP is not supported by the Altera DE1 board.
    */

   return(value);
  800738:	e0bfff17 	ldw	r2,-4(fp)
} /* GetCDWP */
  80073c:	e037883a 	mov	sp,fp
  800740:	df000017 	ldw	fp,0(sp)
  800744:	dec00104 	addi	sp,sp,4
  800748:	f800283a 	ret

0080074c <WaitReady>:

/*-----------------------------------------------------------------------*/
/* Wait for card ready                                                   */
/*-----------------------------------------------------------------------*/
static FFS_U8 WaitReady (void)
{
  80074c:	defffd04 	addi	sp,sp,-12
  800750:	dfc00215 	stw	ra,8(sp)
  800754:	df000115 	stw	fp,4(sp)
  800758:	df000104 	addi	fp,sp,4
   FFS_U8 res;
   
#if (FFS_USE_REAL_TIME_OS == 0)
   Timer2 = (WAIT_READY_TIME_MAX_MS / 10);
  80075c:	00800c84 	movi	r2,50
  800760:	d0a3600d 	sth	r2,-29312(gp)
   ReceiveU8();
  800764:	08004240 	call	800424 <ReceiveU8>
   do
   {
      res = ReceiveU8();
  800768:	08004240 	call	800424 <ReceiveU8>
  80076c:	e0bfff05 	stb	r2,-4(fp)
   }
   while ((res != 0xFF) && Timer2);
  800770:	e0bfff03 	ldbu	r2,-4(fp)
  800774:	10803fe0 	cmpeqi	r2,r2,255
  800778:	1000031e 	bne	r2,zero,800788 <WaitReady+0x3c>
  80077c:	d0a3600b 	ldhu	r2,-29312(gp)
  800780:	10bfffcc 	andi	r2,r2,65535
  800784:	103ff81e 	bne	r2,zero,800768 <__alt_data_end+0xff800768>
      ff_wait_ms(WAIT_READY_TIME_RTOS_MS);
   }
   while ((res != 0xFF) && (cnt < WAIT_READY_TIME_CNT_RTOS));
#endif   

   return(res);
  800788:	e0bfff03 	ldbu	r2,-4(fp)
} /* WaitReady */
  80078c:	e037883a 	mov	sp,fp
  800790:	dfc00117 	ldw	ra,4(sp)
  800794:	df000017 	ldw	fp,0(sp)
  800798:	dec00204 	addi	sp,sp,8
  80079c:	f800283a 	ret

008007a0 <ReleaseBus>:

/*-----------------------------------------------------------------------*/
/* Deselect the card and release SPI bus                                 */
/*-----------------------------------------------------------------------*/
static void ReleaseBus (void)
{
  8007a0:	defffe04 	addi	sp,sp,-8
  8007a4:	dfc00115 	stw	ra,4(sp)
  8007a8:	df000015 	stw	fp,0(sp)
  8007ac:	d839883a 	mov	fp,sp
    * master device must send a byte after deasserted CS signal.   
    *
    * More information can be found here:
    * http://elm-chan.org/docs/mmc/mmc_e.html
    */
   DESELECT();
  8007b0:	d0a36117 	ldw	r2,-29308(gp)
  8007b4:	10800054 	ori	r2,r2,1
  8007b8:	d0a36115 	stw	r2,-29308(gp)
  8007bc:	00a04034 	movhi	r2,33024
  8007c0:	10840a04 	addi	r2,r2,4136
  8007c4:	d0e36117 	ldw	r3,-29308(gp)
  8007c8:	10c00015 	stw	r3,0(r2)
   ReceiveU8();
  8007cc:	08004240 	call	800424 <ReceiveU8>
} /* ReleaseBus */
  8007d0:	e037883a 	mov	sp,fp
  8007d4:	dfc00117 	ldw	ra,4(sp)
  8007d8:	df000017 	ldw	fp,0(sp)
  8007dc:	dec00204 	addi	sp,sp,8
  8007e0:	f800283a 	ret

008007e4 <SendCMD>:
/*-----------------------------------------------------------------------*/
/* Send a command packet to MMC                                          */
/*-----------------------------------------------------------------------*/
static FFS_U8 SendCMD (FFS_U8 cmd,   /* Command byte */
                       FFS_U32 arg)  /* Argument */
{
  8007e4:	defffb04 	addi	sp,sp,-20
  8007e8:	dfc00415 	stw	ra,16(sp)
  8007ec:	df000315 	stw	fp,12(sp)
  8007f0:	df000304 	addi	fp,sp,12
  8007f4:	2005883a 	mov	r2,r4
  8007f8:	e17fff15 	stw	r5,-4(fp)
  8007fc:	e0bffe05 	stb	r2,-8(fp)
   FFS_U8 n, res;

   if (cmd & 0x80)   /* ACMD<n> is the command sequense of CMD55-CMD<n> */
  800800:	e0bffe03 	ldbu	r2,-8(fp)
  800804:	10803fcc 	andi	r2,r2,255
  800808:	1080201c 	xori	r2,r2,128
  80080c:	10bfe004 	addi	r2,r2,-128
  800810:	10000c0e 	bge	r2,zero,800844 <SendCMD+0x60>
   {
      cmd &= 0x7F;
  800814:	e0bffe03 	ldbu	r2,-8(fp)
  800818:	10801fcc 	andi	r2,r2,127
  80081c:	e0bffe05 	stb	r2,-8(fp)
      res = SendCMD(CMD55, 0);
  800820:	01001dc4 	movi	r4,119
  800824:	000b883a 	mov	r5,zero
  800828:	08007e40 	call	8007e4 <SendCMD>
  80082c:	e0bffd45 	stb	r2,-11(fp)
      if (res > 1)
  800830:	e0bffd43 	ldbu	r2,-11(fp)
  800834:	108000b0 	cmpltui	r2,r2,2
  800838:	1000021e 	bne	r2,zero,800844 <SendCMD+0x60>
         return res;
  80083c:	e0bffd43 	ldbu	r2,-11(fp)
  800840:	00007706 	br	800a20 <SendCMD+0x23c>
   }

   /* Select the card and wait for ready */
   DESELECT();
  800844:	d0a36117 	ldw	r2,-29308(gp)
  800848:	10800054 	ori	r2,r2,1
  80084c:	d0a36115 	stw	r2,-29308(gp)
  800850:	00a04034 	movhi	r2,33024
  800854:	10840a04 	addi	r2,r2,4136
  800858:	d0e36117 	ldw	r3,-29308(gp)
  80085c:	10c00015 	stw	r3,0(r2)
   SELECT();
  800860:	d0e36117 	ldw	r3,-29308(gp)
  800864:	00bfff84 	movi	r2,-2
  800868:	1884703a 	and	r2,r3,r2
  80086c:	d0a36115 	stw	r2,-29308(gp)
  800870:	00a04034 	movhi	r2,33024
  800874:	10840a04 	addi	r2,r2,4136
  800878:	d0e36117 	ldw	r3,-29308(gp)
  80087c:	10c00015 	stw	r3,0(r2)

   if (WaitReady() != 0xFF)
  800880:	080074c0 	call	80074c <WaitReady>
  800884:	10803fcc 	andi	r2,r2,255
  800888:	10803fe0 	cmpeqi	r2,r2,255
  80088c:	1000021e 	bne	r2,zero,800898 <SendCMD+0xb4>
      return 0xFF;
  800890:	00bfffc4 	movi	r2,-1
  800894:	00006206 	br	800a20 <SendCMD+0x23c>

   /* Send command packet */
   TRANSMIT_U8(cmd); /* Start + Command index */
  800898:	00a04034 	movhi	r2,33024
  80089c:	10840804 	addi	r2,r2,4128
  8008a0:	e0fffe03 	ldbu	r3,-8(fp)
  8008a4:	10c00015 	stw	r3,0(r2)
  8008a8:	0001883a 	nop
  8008ac:	00a04034 	movhi	r2,33024
  8008b0:	10840b04 	addi	r2,r2,4140
  8008b4:	10800017 	ldw	r2,0(r2)
  8008b8:	1080004c 	andi	r2,r2,1
  8008bc:	103ffb26 	beq	r2,zero,8008ac <__alt_data_end+0xff8008ac>
   TRANSMIT_U8((FFS_U8) (arg >> 24));  /* Argument[31..24] */
  8008c0:	00a04034 	movhi	r2,33024
  8008c4:	10840804 	addi	r2,r2,4128
  8008c8:	e0ffff17 	ldw	r3,-4(fp)
  8008cc:	1806d63a 	srli	r3,r3,24
  8008d0:	18c03fcc 	andi	r3,r3,255
  8008d4:	10c00015 	stw	r3,0(r2)
  8008d8:	0001883a 	nop
  8008dc:	00a04034 	movhi	r2,33024
  8008e0:	10840b04 	addi	r2,r2,4140
  8008e4:	10800017 	ldw	r2,0(r2)
  8008e8:	1080004c 	andi	r2,r2,1
  8008ec:	103ffb26 	beq	r2,zero,8008dc <__alt_data_end+0xff8008dc>
   TRANSMIT_U8((FFS_U8) (arg >> 16));  /* Argument[23..16] */
  8008f0:	00a04034 	movhi	r2,33024
  8008f4:	10840804 	addi	r2,r2,4128
  8008f8:	e0ffff17 	ldw	r3,-4(fp)
  8008fc:	1806d43a 	srli	r3,r3,16
  800900:	18c03fcc 	andi	r3,r3,255
  800904:	10c00015 	stw	r3,0(r2)
  800908:	0001883a 	nop
  80090c:	00a04034 	movhi	r2,33024
  800910:	10840b04 	addi	r2,r2,4140
  800914:	10800017 	ldw	r2,0(r2)
  800918:	1080004c 	andi	r2,r2,1
  80091c:	103ffb26 	beq	r2,zero,80090c <__alt_data_end+0xff80090c>
   TRANSMIT_U8((FFS_U8) (arg >> 8));   /* Argument[15..8] */
  800920:	00a04034 	movhi	r2,33024
  800924:	10840804 	addi	r2,r2,4128
  800928:	e0ffff17 	ldw	r3,-4(fp)
  80092c:	1806d23a 	srli	r3,r3,8
  800930:	18c03fcc 	andi	r3,r3,255
  800934:	10c00015 	stw	r3,0(r2)
  800938:	0001883a 	nop
  80093c:	00a04034 	movhi	r2,33024
  800940:	10840b04 	addi	r2,r2,4140
  800944:	10800017 	ldw	r2,0(r2)
  800948:	1080004c 	andi	r2,r2,1
  80094c:	103ffb26 	beq	r2,zero,80093c <__alt_data_end+0xff80093c>
   TRANSMIT_U8((FFS_U8) arg); /* Argument[7..0] */
  800950:	00a04034 	movhi	r2,33024
  800954:	10840804 	addi	r2,r2,4128
  800958:	e0ffff17 	ldw	r3,-4(fp)
  80095c:	18c03fcc 	andi	r3,r3,255
  800960:	10c00015 	stw	r3,0(r2)
  800964:	0001883a 	nop
  800968:	00a04034 	movhi	r2,33024
  80096c:	10840b04 	addi	r2,r2,4140
  800970:	10800017 	ldw	r2,0(r2)
  800974:	1080004c 	andi	r2,r2,1
  800978:	103ffb26 	beq	r2,zero,800968 <__alt_data_end+0xff800968>

   n = 0x01;   /* Dummy CRC + Stop */
  80097c:	00800044 	movi	r2,1
  800980:	e0bffd05 	stb	r2,-12(fp)
   if (cmd == CMD0)
  800984:	e0bffe03 	ldbu	r2,-8(fp)
  800988:	10801018 	cmpnei	r2,r2,64
  80098c:	1000021e 	bne	r2,zero,800998 <SendCMD+0x1b4>
      n = 0x95;   /* Valid CRC for CMD0(0) */
  800990:	00bfe544 	movi	r2,-107
  800994:	e0bffd05 	stb	r2,-12(fp)
   if (cmd == CMD8)
  800998:	e0bffe03 	ldbu	r2,-8(fp)
  80099c:	10801218 	cmpnei	r2,r2,72
  8009a0:	1000021e 	bne	r2,zero,8009ac <SendCMD+0x1c8>
      n = 0x87;   /* Valid CRC for CMD8(0x1AA) */
  8009a4:	00bfe1c4 	movi	r2,-121
  8009a8:	e0bffd05 	stb	r2,-12(fp)
   TRANSMIT_U8(n);
  8009ac:	00a04034 	movhi	r2,33024
  8009b0:	10840804 	addi	r2,r2,4128
  8009b4:	e0fffd03 	ldbu	r3,-12(fp)
  8009b8:	10c00015 	stw	r3,0(r2)
  8009bc:	0001883a 	nop
  8009c0:	00a04034 	movhi	r2,33024
  8009c4:	10840b04 	addi	r2,r2,4140
  8009c8:	10800017 	ldw	r2,0(r2)
  8009cc:	1080004c 	andi	r2,r2,1
  8009d0:	103ffb26 	beq	r2,zero,8009c0 <__alt_data_end+0xff8009c0>

   /* Receive command response */
   if (cmd == CMD12)
  8009d4:	e0bffe03 	ldbu	r2,-8(fp)
  8009d8:	10801318 	cmpnei	r2,r2,76
  8009dc:	1000011e 	bne	r2,zero,8009e4 <SendCMD+0x200>
      ReceiveU8();   /* Skip a stuff byte when stop reading */
  8009e0:	08004240 	call	800424 <ReceiveU8>

   n = 10;  /* Wait for a valid response in timeout of 10 attempts */
  8009e4:	00800284 	movi	r2,10
  8009e8:	e0bffd05 	stb	r2,-12(fp)
   do
   {
      res = ReceiveU8();
  8009ec:	08004240 	call	800424 <ReceiveU8>
  8009f0:	e0bffd45 	stb	r2,-11(fp)
   }
   while ((res & 0x80) && --n);
  8009f4:	e0bffd43 	ldbu	r2,-11(fp)
  8009f8:	10803fcc 	andi	r2,r2,255
  8009fc:	1080201c 	xori	r2,r2,128
  800a00:	10bfe004 	addi	r2,r2,-128
  800a04:	1000050e 	bge	r2,zero,800a1c <SendCMD+0x238>
  800a08:	e0bffd03 	ldbu	r2,-12(fp)
  800a0c:	10bfffc4 	addi	r2,r2,-1
  800a10:	e0bffd05 	stb	r2,-12(fp)
  800a14:	e0bffd03 	ldbu	r2,-12(fp)
  800a18:	103ff41e 	bne	r2,zero,8009ec <__alt_data_end+0xff8009ec>

   return(res); /* Return with the response value */
  800a1c:	e0bffd43 	ldbu	r2,-11(fp)
} /* SendCMD */
  800a20:	e037883a 	mov	sp,fp
  800a24:	dfc00117 	ldw	ra,4(sp)
  800a28:	df000017 	ldw	fp,0(sp)
  800a2c:	dec00204 	addi	sp,sp,8
  800a30:	f800283a 	ret

00800a34 <ffs_DiskIOInit>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: FFS_OK                                                         */
/***************************************************************************/
FFS_RESULT ffs_DiskIOInit (void)
{
  800a34:	defffe04 	addi	sp,sp,-8
  800a38:	dfc00115 	stw	ra,4(sp)
  800a3c:	df000015 	stw	fp,0(sp)
  800a40:	d839883a 	mov	fp,sp
   (void)XMITDummy;

   InitDiskIOHardware();
  800a44:	080036c0 	call	80036c <InitDiskIOHardware>

   return(FFS_OK);
  800a48:	0005883a 	mov	r2,zero
} /* ffs_DiskIOInit */
  800a4c:	e037883a 	mov	sp,fp
  800a50:	dfc00117 	ldw	ra,4(sp)
  800a54:	df000017 	ldw	fp,0(sp)
  800a58:	dec00204 	addi	sp,sp,8
  800a5c:	f800283a 	ret

00800a60 <ffs_DiskIOTimerproc>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
void ffs_DiskIOTimerproc (void)
{
  800a60:	defffc04 	addi	sp,sp,-16
  800a64:	dfc00315 	stw	ra,12(sp)
  800a68:	df000215 	stw	fp,8(sp)
  800a6c:	df000204 	addi	fp,sp,8
   static FFS_U32 pvm;
   FFS_U32 n;
   DSTATUS s;

   /* 100Hz decrement timer */
   n = Timer1;
  800a70:	d0a35f8b 	ldhu	r2,-29314(gp)
  800a74:	10bfffcc 	andi	r2,r2,65535
  800a78:	e0bfff15 	stw	r2,-4(fp)
   if (n)
  800a7c:	e0bfff17 	ldw	r2,-4(fp)
  800a80:	10000526 	beq	r2,zero,800a98 <ffs_DiskIOTimerproc+0x38>
      Timer1 = (FFS_U16)-- n;
  800a84:	e0bfff17 	ldw	r2,-4(fp)
  800a88:	10bfffc4 	addi	r2,r2,-1
  800a8c:	e0bfff15 	stw	r2,-4(fp)
  800a90:	e0bfff17 	ldw	r2,-4(fp)
  800a94:	d0a35f8d 	sth	r2,-29314(gp)
   n = Timer2;
  800a98:	d0a3600b 	ldhu	r2,-29312(gp)
  800a9c:	10bfffcc 	andi	r2,r2,65535
  800aa0:	e0bfff15 	stw	r2,-4(fp)
   if (n)
  800aa4:	e0bfff17 	ldw	r2,-4(fp)
  800aa8:	10000526 	beq	r2,zero,800ac0 <ffs_DiskIOTimerproc+0x60>
      Timer2 = (FFS_U16)-- n;
  800aac:	e0bfff17 	ldw	r2,-4(fp)
  800ab0:	10bfffc4 	addi	r2,r2,-1
  800ab4:	e0bfff15 	stw	r2,-4(fp)
  800ab8:	e0bfff17 	ldw	r2,-4(fp)
  800abc:	d0a3600d 	sth	r2,-29312(gp)

   n = pvm;
  800ac0:	d0a36217 	ldw	r2,-29304(gp)
  800ac4:	e0bfff15 	stw	r2,-4(fp)

   /* Sample socket switch */
   pvm = GetCDWP();
  800ac8:	08007280 	call	800728 <GetCDWP>
  800acc:	d0a36215 	stw	r2,-29304(gp)

   /* Have contacts stabled? */
   if (n == pvm)
  800ad0:	d0a36217 	ldw	r2,-29304(gp)
  800ad4:	e0ffff17 	ldw	r3,-4(fp)
  800ad8:	18801e1e 	bne	r3,r2,800b54 <ffs_DiskIOTimerproc+0xf4>
   {
      s = Stat;
  800adc:	d0a00003 	ldbu	r2,-32768(gp)
  800ae0:	e0bffe05 	stb	r2,-8(fp)

      /* Check write protect */
      if (pvm & SOCK_WP_ACTIVE)
  800ae4:	d0a36217 	ldw	r2,-29304(gp)
  800ae8:	1080008c 	andi	r2,r2,2
  800aec:	10000426 	beq	r2,zero,800b00 <ffs_DiskIOTimerproc+0xa0>
         s |= STA_PROTECT;
  800af0:	e0bffe03 	ldbu	r2,-8(fp)
  800af4:	10800114 	ori	r2,r2,4
  800af8:	e0bffe05 	stb	r2,-8(fp)
  800afc:	00000406 	br	800b10 <ffs_DiskIOTimerproc+0xb0>
      else
         s &= ~STA_PROTECT;
  800b00:	e0fffe03 	ldbu	r3,-8(fp)
  800b04:	00bffec4 	movi	r2,-5
  800b08:	1884703a 	and	r2,r3,r2
  800b0c:	e0bffe05 	stb	r2,-8(fp)

      /* Check socket empty */
      if (pvm & SOCK_CD_EMPTY)
  800b10:	d0a36217 	ldw	r2,-29304(gp)
  800b14:	1080004c 	andi	r2,r2,1
  800b18:	10000426 	beq	r2,zero,800b2c <ffs_DiskIOTimerproc+0xcc>
         s |= (STA_NODISK | STA_NOINIT);
  800b1c:	e0bffe03 	ldbu	r2,-8(fp)
  800b20:	108000d4 	ori	r2,r2,3
  800b24:	e0bffe05 	stb	r2,-8(fp)
  800b28:	00000406 	br	800b3c <ffs_DiskIOTimerproc+0xdc>
      else
         s &= ~STA_NODISK;
  800b2c:	e0fffe03 	ldbu	r3,-8(fp)
  800b30:	00bfff44 	movi	r2,-3
  800b34:	1884703a 	and	r2,r3,r2
  800b38:	e0bffe05 	stb	r2,-8(fp)

#if (FFS_SUPPORT_HW_WP == 0)
      /* Ignore the write protect */
      s &= ~STA_PROTECT;
  800b3c:	e0fffe03 	ldbu	r3,-8(fp)
  800b40:	00bffec4 	movi	r2,-5
  800b44:	1884703a 	and	r2,r3,r2
  800b48:	e0bffe05 	stb	r2,-8(fp)
#endif

      Stat = s;
  800b4c:	e0bffe03 	ldbu	r2,-8(fp)
  800b50:	d0a00005 	stb	r2,-32768(gp)
   }
} /* ffs_DiskIOTimerproc */
  800b54:	e037883a 	mov	sp,fp
  800b58:	dfc00117 	ldw	ra,4(sp)
  800b5c:	df000017 	ldw	fp,0(sp)
  800b60:	dec00204 	addi	sp,sp,8
  800b64:	f800283a 	ret

00800b68 <ffs_DiskIOInitialize>:
/*  In    : Physical drive nmuber                                          */
/*  Out   : none                                                           */
/*  Return: DSTATUS                                                        */
/***************************************************************************/
DSTATUS ffs_DiskIOInitialize (FFS_U8 drv)
{
  800b68:	defffa04 	addi	sp,sp,-24
  800b6c:	dfc00515 	stw	ra,20(sp)
  800b70:	df000415 	stw	fp,16(sp)
  800b74:	dc000315 	stw	r16,12(sp)
  800b78:	df000404 	addi	fp,sp,16
  800b7c:	2005883a 	mov	r2,r4
  800b80:	e0bffe05 	stb	r2,-8(fp)
   FFS_U8 n, ty, cmd, ocr[4];

   (void)drv;

   if (Stat & STA_NODISK)  /* No card in the socket */
  800b84:	d0a00003 	ldbu	r2,-32768(gp)
  800b88:	10803fcc 	andi	r2,r2,255
  800b8c:	1080008c 	andi	r2,r2,2
  800b90:	10000226 	beq	r2,zero,800b9c <ffs_DiskIOInitialize+0x34>
      return Stat;
  800b94:	d0a00003 	ldbu	r2,-32768(gp)
  800b98:	00008406 	br	800dac <ffs_DiskIOInitialize+0x244>

   /* low speed during init */
   SetLowSpeed();
  800b9c:	08002b40 	call	8002b4 <SetLowSpeed>

   POWER_ON(); /* Force socket power ON */
   for (n = 10; n; n--)
  800ba0:	00800284 	movi	r2,10
  800ba4:	e0bffc05 	stb	r2,-16(fp)
  800ba8:	00000406 	br	800bbc <ffs_DiskIOInitialize+0x54>
      ReceiveU8();   /* 80 dummy clocks */
  800bac:	08004240 	call	800424 <ReceiveU8>

   /* low speed during init */
   SetLowSpeed();

   POWER_ON(); /* Force socket power ON */
   for (n = 10; n; n--)
  800bb0:	e0bffc03 	ldbu	r2,-16(fp)
  800bb4:	10bfffc4 	addi	r2,r2,-1
  800bb8:	e0bffc05 	stb	r2,-16(fp)
  800bbc:	e0bffc03 	ldbu	r2,-16(fp)
  800bc0:	103ffa1e 	bne	r2,zero,800bac <__alt_data_end+0xff800bac>
      ReceiveU8();   /* 80 dummy clocks */

   ty = 0;
  800bc4:	e03ffc45 	stb	zero,-15(fp)
   if (SendCMD(CMD0, 0) == 1)
  800bc8:	01001004 	movi	r4,64
  800bcc:	000b883a 	mov	r5,zero
  800bd0:	08007e40 	call	8007e4 <SendCMD>
  800bd4:	10803fcc 	andi	r2,r2,255
  800bd8:	10800058 	cmpnei	r2,r2,1
  800bdc:	1000681e 	bne	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
   {  /* Enter Idle state */
      Timer1 = 100;  /* Initialization timeout of 1000 msec */
  800be0:	00801904 	movi	r2,100
  800be4:	d0a35f8d 	sth	r2,-29314(gp)
      if (SendCMD(CMD8, 0x1AA) == 1)
  800be8:	01001204 	movi	r4,72
  800bec:	01406a84 	movi	r5,426
  800bf0:	08007e40 	call	8007e4 <SendCMD>
  800bf4:	10803fcc 	andi	r2,r2,255
  800bf8:	10800058 	cmpnei	r2,r2,1
  800bfc:	10003e1e 	bne	r2,zero,800cf8 <ffs_DiskIOInitialize+0x190>
      {  /* SDC ver 2.00 */
         for (n = 0; n < 4; n++)
  800c00:	e03ffc05 	stb	zero,-16(fp)
  800c04:	00000906 	br	800c2c <ffs_DiskIOInitialize+0xc4>
            ocr[n] = ReceiveU8();
  800c08:	e43ffc03 	ldbu	r16,-16(fp)
  800c0c:	08004240 	call	800424 <ReceiveU8>
  800c10:	1007883a 	mov	r3,r2
  800c14:	e0bffcc4 	addi	r2,fp,-13
  800c18:	1405883a 	add	r2,r2,r16
  800c1c:	10c00005 	stb	r3,0(r2)
   if (SendCMD(CMD0, 0) == 1)
   {  /* Enter Idle state */
      Timer1 = 100;  /* Initialization timeout of 1000 msec */
      if (SendCMD(CMD8, 0x1AA) == 1)
      {  /* SDC ver 2.00 */
         for (n = 0; n < 4; n++)
  800c20:	e0bffc03 	ldbu	r2,-16(fp)
  800c24:	10800044 	addi	r2,r2,1
  800c28:	e0bffc05 	stb	r2,-16(fp)
  800c2c:	e0bffc03 	ldbu	r2,-16(fp)
  800c30:	10800130 	cmpltui	r2,r2,4
  800c34:	103ff41e 	bne	r2,zero,800c08 <__alt_data_end+0xff800c08>
            ocr[n] = ReceiveU8();
         if (ocr[2] == 0x01 && ocr[3] == 0xAA)
  800c38:	e0bffd43 	ldbu	r2,-11(fp)
  800c3c:	10803fcc 	andi	r2,r2,255
  800c40:	10800058 	cmpnei	r2,r2,1
  800c44:	10004e1e 	bne	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
  800c48:	e0bffd83 	ldbu	r2,-10(fp)
  800c4c:	10803fcc 	andi	r2,r2,255
  800c50:	10802a98 	cmpnei	r2,r2,170
  800c54:	10004a1e 	bne	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
         {  /* The card can work at vdd range of 2.7-3.6V */
            while (Timer1 && SendCMD(ACMD41, 1UL << 30)) ;  /* ACMD41 with HCS bit */
  800c58:	0001883a 	nop
  800c5c:	d0a35f8b 	ldhu	r2,-29314(gp)
  800c60:	10bfffcc 	andi	r2,r2,65535
  800c64:	10000526 	beq	r2,zero,800c7c <ffs_DiskIOInitialize+0x114>
  800c68:	01003a44 	movi	r4,233
  800c6c:	01500034 	movhi	r5,16384
  800c70:	08007e40 	call	8007e4 <SendCMD>
  800c74:	10803fcc 	andi	r2,r2,255
  800c78:	103ff81e 	bne	r2,zero,800c5c <__alt_data_end+0xff800c5c>
            if (Timer1 && SendCMD(CMD58, 0) == 0)
  800c7c:	d0a35f8b 	ldhu	r2,-29314(gp)
  800c80:	10bfffcc 	andi	r2,r2,65535
  800c84:	10003e26 	beq	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
  800c88:	01001e84 	movi	r4,122
  800c8c:	000b883a 	mov	r5,zero
  800c90:	08007e40 	call	8007e4 <SendCMD>
  800c94:	10803fcc 	andi	r2,r2,255
  800c98:	1000391e 	bne	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
            {  /* Check CCS bit */
               for (n = 0; n < 4; n++)
  800c9c:	e03ffc05 	stb	zero,-16(fp)
  800ca0:	00000906 	br	800cc8 <ffs_DiskIOInitialize+0x160>
                  ocr[n] = ReceiveU8();
  800ca4:	e43ffc03 	ldbu	r16,-16(fp)
  800ca8:	08004240 	call	800424 <ReceiveU8>
  800cac:	1007883a 	mov	r3,r2
  800cb0:	e0bffcc4 	addi	r2,fp,-13
  800cb4:	1405883a 	add	r2,r2,r16
  800cb8:	10c00005 	stb	r3,0(r2)
         if (ocr[2] == 0x01 && ocr[3] == 0xAA)
         {  /* The card can work at vdd range of 2.7-3.6V */
            while (Timer1 && SendCMD(ACMD41, 1UL << 30)) ;  /* ACMD41 with HCS bit */
            if (Timer1 && SendCMD(CMD58, 0) == 0)
            {  /* Check CCS bit */
               for (n = 0; n < 4; n++)
  800cbc:	e0bffc03 	ldbu	r2,-16(fp)
  800cc0:	10800044 	addi	r2,r2,1
  800cc4:	e0bffc05 	stb	r2,-16(fp)
  800cc8:	e0bffc03 	ldbu	r2,-16(fp)
  800ccc:	10800130 	cmpltui	r2,r2,4
  800cd0:	103ff41e 	bne	r2,zero,800ca4 <__alt_data_end+0xff800ca4>
                  ocr[n] = ReceiveU8();
               ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2; /* Card id SDv2 */
  800cd4:	e0bffcc3 	ldbu	r2,-13(fp)
  800cd8:	10803fcc 	andi	r2,r2,255
  800cdc:	1080100c 	andi	r2,r2,64
  800ce0:	10000226 	beq	r2,zero,800cec <ffs_DiskIOInitialize+0x184>
  800ce4:	00800304 	movi	r2,12
  800ce8:	00000106 	br	800cf0 <ffs_DiskIOInitialize+0x188>
  800cec:	00800104 	movi	r2,4
  800cf0:	e0bffc45 	stb	r2,-15(fp)
  800cf4:	00002206 	br	800d80 <ffs_DiskIOInitialize+0x218>
            }
         }
      }
      else
      {  /* SDC ver 1.XX or MMC */
         if (SendCMD(ACMD41, 0) <= 1)
  800cf8:	01003a44 	movi	r4,233
  800cfc:	000b883a 	mov	r5,zero
  800d00:	08007e40 	call	8007e4 <SendCMD>
  800d04:	10803fcc 	andi	r2,r2,255
  800d08:	108000a8 	cmpgeui	r2,r2,2
  800d0c:	1000051e 	bne	r2,zero,800d24 <ffs_DiskIOInitialize+0x1bc>
         {
            ty  = CT_SD1;
  800d10:	00800084 	movi	r2,2
  800d14:	e0bffc45 	stb	r2,-15(fp)
            cmd = ACMD41;  /* SDC ver 1.XX */
  800d18:	00bffa44 	movi	r2,-23
  800d1c:	e0bffc85 	stb	r2,-14(fp)
  800d20:	00000406 	br	800d34 <ffs_DiskIOInitialize+0x1cc>
         }
         else
         {
            ty  = CT_MMC;
  800d24:	00800044 	movi	r2,1
  800d28:	e0bffc45 	stb	r2,-15(fp)
            cmd = CMD1; /* MMC */
  800d2c:	00801044 	movi	r2,65
  800d30:	e0bffc85 	stb	r2,-14(fp)
         }
         while (Timer1 && SendCMD(cmd, 0)) ; /* Wait for leaving idle state */
  800d34:	0001883a 	nop
  800d38:	d0a35f8b 	ldhu	r2,-29314(gp)
  800d3c:	10bfffcc 	andi	r2,r2,65535
  800d40:	10000626 	beq	r2,zero,800d5c <ffs_DiskIOInitialize+0x1f4>
  800d44:	e0bffc83 	ldbu	r2,-14(fp)
  800d48:	1009883a 	mov	r4,r2
  800d4c:	000b883a 	mov	r5,zero
  800d50:	08007e40 	call	8007e4 <SendCMD>
  800d54:	10803fcc 	andi	r2,r2,255
  800d58:	103ff71e 	bne	r2,zero,800d38 <__alt_data_end+0xff800d38>
         if (!Timer1 || SendCMD(CMD16, 512) != 0)  /* Select R/W block length */
  800d5c:	d0a35f8b 	ldhu	r2,-29314(gp)
  800d60:	10bfffcc 	andi	r2,r2,65535
  800d64:	10000526 	beq	r2,zero,800d7c <ffs_DiskIOInitialize+0x214>
  800d68:	01001404 	movi	r4,80
  800d6c:	01408004 	movi	r5,512
  800d70:	08007e40 	call	8007e4 <SendCMD>
  800d74:	10803fcc 	andi	r2,r2,255
  800d78:	10000126 	beq	r2,zero,800d80 <ffs_DiskIOInitialize+0x218>
            ty = 0;
  800d7c:	e03ffc45 	stb	zero,-15(fp)
      }
   }
   CardType = ty;
  800d80:	e0bffc43 	ldbu	r2,-15(fp)
  800d84:	d0a35f05 	stb	r2,-29316(gp)
   ReleaseBus();
  800d88:	08007a00 	call	8007a0 <ReleaseBus>

   if (ty)
  800d8c:	e0bffc43 	ldbu	r2,-15(fp)
  800d90:	10000526 	beq	r2,zero,800da8 <ffs_DiskIOInitialize+0x240>
   {  /* Initialization succeded */
      Stat &= ~STA_NOINIT; /* Clear STA_NOINIT */
  800d94:	d0e00003 	ldbu	r3,-32768(gp)
  800d98:	00bfff84 	movi	r2,-2
  800d9c:	1884703a 	and	r2,r3,r2
  800da0:	d0a00005 	stb	r2,-32768(gp)

      SetHighSpeed();
  800da4:	08003000 	call	800300 <SetHighSpeed>
   else
   {  /* Initialization failed */
      POWER_OFF();
   }

   return(Stat);
  800da8:	d0a00003 	ldbu	r2,-32768(gp)
} /* ffs_DiskIOInitialize */
  800dac:	e6ffff04 	addi	sp,fp,-4
  800db0:	dfc00217 	ldw	ra,8(sp)
  800db4:	df000117 	ldw	fp,4(sp)
  800db8:	dc000017 	ldw	r16,0(sp)
  800dbc:	dec00304 	addi	sp,sp,12
  800dc0:	f800283a 	ret

00800dc4 <ffs_DiskIOStatus>:
/*  In    : Physical drive nmuber                                          */
/*  Out   : none                                                           */
/*  Return: DSTATUS                                                        */
/***************************************************************************/
DSTATUS ffs_DiskIOStatus (FFS_U8 drv)
{
  800dc4:	defffe04 	addi	sp,sp,-8
  800dc8:	df000115 	stw	fp,4(sp)
  800dcc:	df000104 	addi	fp,sp,4
  800dd0:	2005883a 	mov	r2,r4
  800dd4:	e0bfff05 	stb	r2,-4(fp)
   (void)drv;

   return(Stat);
  800dd8:	d0a00003 	ldbu	r2,-32768(gp)
} /* ffs_DiskIOStatus */
  800ddc:	e037883a 	mov	sp,fp
  800de0:	df000017 	ldw	fp,0(sp)
  800de4:	dec00104 	addi	sp,sp,4
  800de8:	f800283a 	ret

00800dec <ffs_DiskIORead>:
/*                                                                         */
/*  Out   : buff                                                           */
/*  Return: DRESULT                                                        */
/***************************************************************************/
DRESULT ffs_DiskIORead (FFS_U8 drv, FFS_U8 * buff, FFS_U32 sector, FFS_U8 count)
{
  800dec:	defffa04 	addi	sp,sp,-24
  800df0:	dfc00515 	stw	ra,20(sp)
  800df4:	df000415 	stw	fp,16(sp)
  800df8:	df000404 	addi	fp,sp,16
  800dfc:	2007883a 	mov	r3,r4
  800e00:	e17ffd15 	stw	r5,-12(fp)
  800e04:	e1bffe15 	stw	r6,-8(fp)
  800e08:	3805883a 	mov	r2,r7
  800e0c:	e0fffc05 	stb	r3,-16(fp)
  800e10:	e0bfff05 	stb	r2,-4(fp)
   (void)drv;

   if (!count)
  800e14:	e0bfff03 	ldbu	r2,-4(fp)
  800e18:	1000021e 	bne	r2,zero,800e24 <ffs_DiskIORead+0x38>
      return RES_PARERR;
  800e1c:	00800104 	movi	r2,4
  800e20:	00003406 	br	800ef4 <ffs_DiskIORead+0x108>
   if (Stat & STA_NOINIT)
  800e24:	d0a00003 	ldbu	r2,-32768(gp)
  800e28:	10803fcc 	andi	r2,r2,255
  800e2c:	1080004c 	andi	r2,r2,1
  800e30:	10000226 	beq	r2,zero,800e3c <ffs_DiskIORead+0x50>
      return RES_NOTRDY;
  800e34:	008000c4 	movi	r2,3
  800e38:	00002e06 	br	800ef4 <ffs_DiskIORead+0x108>

   if (!(CardType & CT_BLOCK))
  800e3c:	d0a35f03 	ldbu	r2,-29316(gp)
  800e40:	10803fcc 	andi	r2,r2,255
  800e44:	1080020c 	andi	r2,r2,8
  800e48:	1000031e 	bne	r2,zero,800e58 <ffs_DiskIORead+0x6c>
      sector *= 512; /* Convert LBA to byte address if needed */
  800e4c:	e0bffe17 	ldw	r2,-8(fp)
  800e50:	1004927a 	slli	r2,r2,9
  800e54:	e0bffe15 	stw	r2,-8(fp)

   if (count == 1)
  800e58:	e0bfff03 	ldbu	r2,-4(fp)
  800e5c:	10800058 	cmpnei	r2,r2,1
  800e60:	10000b1e 	bne	r2,zero,800e90 <ffs_DiskIORead+0xa4>
   {  /* Single block read */
      if ((SendCMD(CMD17, sector) == 0)   /* READ_SINGLE_BLOCK */
  800e64:	01001444 	movi	r4,81
  800e68:	e17ffe17 	ldw	r5,-8(fp)
  800e6c:	08007e40 	call	8007e4 <SendCMD>
  800e70:	10803fcc 	andi	r2,r2,255
  800e74:	10001b1e 	bne	r2,zero,800ee4 <ffs_DiskIORead+0xf8>
          && ReceiveDatablock(buff, 512))
  800e78:	e13ffd17 	ldw	r4,-12(fp)
  800e7c:	01408004 	movi	r5,512
  800e80:	08004740 	call	800474 <ReceiveDatablock>
  800e84:	10001726 	beq	r2,zero,800ee4 <ffs_DiskIORead+0xf8>
         count = 0;
  800e88:	e03fff05 	stb	zero,-4(fp)
  800e8c:	00001506 	br	800ee4 <ffs_DiskIORead+0xf8>
   }
   else
   {  /* Multiple block read */
      if (SendCMD(CMD18, sector) == 0)
  800e90:	01001484 	movi	r4,82
  800e94:	e17ffe17 	ldw	r5,-8(fp)
  800e98:	08007e40 	call	8007e4 <SendCMD>
  800e9c:	10803fcc 	andi	r2,r2,255
  800ea0:	1000101e 	bne	r2,zero,800ee4 <ffs_DiskIORead+0xf8>
      {  /* READ_MULTIPLE_BLOCK */
         do
         {
            if (!ReceiveDatablock(buff, 512))
  800ea4:	e13ffd17 	ldw	r4,-12(fp)
  800ea8:	01408004 	movi	r5,512
  800eac:	08004740 	call	800474 <ReceiveDatablock>
  800eb0:	1000011e 	bne	r2,zero,800eb8 <ffs_DiskIORead+0xcc>
               break;
  800eb4:	00000806 	br	800ed8 <ffs_DiskIORead+0xec>
            buff += 512;
  800eb8:	e0bffd17 	ldw	r2,-12(fp)
  800ebc:	10808004 	addi	r2,r2,512
  800ec0:	e0bffd15 	stw	r2,-12(fp)
         }
         while (--count);
  800ec4:	e0bfff03 	ldbu	r2,-4(fp)
  800ec8:	10bfffc4 	addi	r2,r2,-1
  800ecc:	e0bfff05 	stb	r2,-4(fp)
  800ed0:	e0bfff03 	ldbu	r2,-4(fp)
  800ed4:	103ff31e 	bne	r2,zero,800ea4 <__alt_data_end+0xff800ea4>
         SendCMD(CMD12, 0);   /* STOP_TRANSMISSION */
  800ed8:	01001304 	movi	r4,76
  800edc:	000b883a 	mov	r5,zero
  800ee0:	08007e40 	call	8007e4 <SendCMD>
      }
   }
   ReleaseBus();
  800ee4:	08007a00 	call	8007a0 <ReleaseBus>

   return(count ? RES_ERROR : RES_OK);
  800ee8:	e0bfff03 	ldbu	r2,-4(fp)
  800eec:	1004c03a 	cmpne	r2,r2,zero
  800ef0:	10803fcc 	andi	r2,r2,255
} /* ffs_DiskIORead */
  800ef4:	e037883a 	mov	sp,fp
  800ef8:	dfc00117 	ldw	ra,4(sp)
  800efc:	df000017 	ldw	fp,0(sp)
  800f00:	dec00204 	addi	sp,sp,8
  800f04:	f800283a 	ret

00800f08 <ffs_DiskIOWrite>:
/*                                                                         */
/*  Out   : buff                                                           */
/*  Return: DRESULT                                                        */
/***************************************************************************/
DRESULT ffs_DiskIOWrite (FFS_U8 drv, const FFS_U8 * buff, FFS_U32 sector, FFS_U8 count)
{
  800f08:	defffa04 	addi	sp,sp,-24
  800f0c:	dfc00515 	stw	ra,20(sp)
  800f10:	df000415 	stw	fp,16(sp)
  800f14:	df000404 	addi	fp,sp,16
  800f18:	2007883a 	mov	r3,r4
  800f1c:	e17ffd15 	stw	r5,-12(fp)
  800f20:	e1bffe15 	stw	r6,-8(fp)
  800f24:	3805883a 	mov	r2,r7
  800f28:	e0fffc05 	stb	r3,-16(fp)
  800f2c:	e0bfff05 	stb	r2,-4(fp)
   (void)drv;

   if (!count)
  800f30:	e0bfff03 	ldbu	r2,-4(fp)
  800f34:	1000021e 	bne	r2,zero,800f40 <ffs_DiskIOWrite+0x38>
      return RES_PARERR;
  800f38:	00800104 	movi	r2,4
  800f3c:	00004806 	br	801060 <ffs_DiskIOWrite+0x158>
   if (Stat & STA_NOINIT)
  800f40:	d0a00003 	ldbu	r2,-32768(gp)
  800f44:	10803fcc 	andi	r2,r2,255
  800f48:	1080004c 	andi	r2,r2,1
  800f4c:	10000226 	beq	r2,zero,800f58 <ffs_DiskIOWrite+0x50>
      return RES_NOTRDY;
  800f50:	008000c4 	movi	r2,3
  800f54:	00004206 	br	801060 <ffs_DiskIOWrite+0x158>
   if (Stat & STA_PROTECT)
  800f58:	d0a00003 	ldbu	r2,-32768(gp)
  800f5c:	10803fcc 	andi	r2,r2,255
  800f60:	1080010c 	andi	r2,r2,4
  800f64:	10000226 	beq	r2,zero,800f70 <ffs_DiskIOWrite+0x68>
      return RES_WRPRT;
  800f68:	00800084 	movi	r2,2
  800f6c:	00003c06 	br	801060 <ffs_DiskIOWrite+0x158>

   if (!(CardType & CT_BLOCK))
  800f70:	d0a35f03 	ldbu	r2,-29316(gp)
  800f74:	10803fcc 	andi	r2,r2,255
  800f78:	1080020c 	andi	r2,r2,8
  800f7c:	1000031e 	bne	r2,zero,800f8c <ffs_DiskIOWrite+0x84>
      sector *= 512; /* Convert LBA to byte address if needed */
  800f80:	e0bffe17 	ldw	r2,-8(fp)
  800f84:	1004927a 	slli	r2,r2,9
  800f88:	e0bffe15 	stw	r2,-8(fp)

   if (count == 1)
  800f8c:	e0bfff03 	ldbu	r2,-4(fp)
  800f90:	10800058 	cmpnei	r2,r2,1
  800f94:	10000b1e 	bne	r2,zero,800fc4 <ffs_DiskIOWrite+0xbc>
   {  /* Single block write */
      if ((SendCMD(CMD24, sector) == 0)   /* WRITE_BLOCK */
  800f98:	01001604 	movi	r4,88
  800f9c:	e17ffe17 	ldw	r5,-8(fp)
  800fa0:	08007e40 	call	8007e4 <SendCMD>
  800fa4:	10803fcc 	andi	r2,r2,255
  800fa8:	1000291e 	bne	r2,zero,801050 <ffs_DiskIOWrite+0x148>
          && TransmitDatablock(buff, 0xFE))
  800fac:	e13ffd17 	ldw	r4,-12(fp)
  800fb0:	01403f84 	movi	r5,254
  800fb4:	08005a00 	call	8005a0 <TransmitDatablock>
  800fb8:	10002526 	beq	r2,zero,801050 <ffs_DiskIOWrite+0x148>
         count = 0;
  800fbc:	e03fff05 	stb	zero,-4(fp)
  800fc0:	00002306 	br	801050 <ffs_DiskIOWrite+0x148>
   }
   else
   {  /* Multiple block write */
      if (CardType & CT_SDC)
  800fc4:	d0a35f03 	ldbu	r2,-29316(gp)
  800fc8:	10803fcc 	andi	r2,r2,255
  800fcc:	1080018c 	andi	r2,r2,6
  800fd0:	10000726 	beq	r2,zero,800ff0 <ffs_DiskIOWrite+0xe8>
      {
         SendCMD(CMD55, 0);
  800fd4:	01001dc4 	movi	r4,119
  800fd8:	000b883a 	mov	r5,zero
  800fdc:	08007e40 	call	8007e4 <SendCMD>
         SendCMD(CMD23, count);  /* ACMD23 */
  800fe0:	e0bfff03 	ldbu	r2,-4(fp)
  800fe4:	010015c4 	movi	r4,87
  800fe8:	100b883a 	mov	r5,r2
  800fec:	08007e40 	call	8007e4 <SendCMD>
      }
      if (SendCMD(CMD25, sector) == 0)
  800ff0:	01001644 	movi	r4,89
  800ff4:	e17ffe17 	ldw	r5,-8(fp)
  800ff8:	08007e40 	call	8007e4 <SendCMD>
  800ffc:	10803fcc 	andi	r2,r2,255
  801000:	1000131e 	bne	r2,zero,801050 <ffs_DiskIOWrite+0x148>
      {  /* WRITE_MULTIPLE_BLOCK */
         do
         {
            if (!TransmitDatablock(buff, 0xFC))
  801004:	e13ffd17 	ldw	r4,-12(fp)
  801008:	01403f04 	movi	r5,252
  80100c:	08005a00 	call	8005a0 <TransmitDatablock>
  801010:	1000011e 	bne	r2,zero,801018 <ffs_DiskIOWrite+0x110>
               break;
  801014:	00000806 	br	801038 <ffs_DiskIOWrite+0x130>
            buff += 512;
  801018:	e0bffd17 	ldw	r2,-12(fp)
  80101c:	10808004 	addi	r2,r2,512
  801020:	e0bffd15 	stw	r2,-12(fp)
         }
         while (--count);
  801024:	e0bfff03 	ldbu	r2,-4(fp)
  801028:	10bfffc4 	addi	r2,r2,-1
  80102c:	e0bfff05 	stb	r2,-4(fp)
  801030:	e0bfff03 	ldbu	r2,-4(fp)
  801034:	103ff31e 	bne	r2,zero,801004 <__alt_data_end+0xff801004>
         if (!TransmitDatablock(0, 0xFD)) /* STOP_TRAN token */
  801038:	0009883a 	mov	r4,zero
  80103c:	01403f44 	movi	r5,253
  801040:	08005a00 	call	8005a0 <TransmitDatablock>
  801044:	1000021e 	bne	r2,zero,801050 <ffs_DiskIOWrite+0x148>
            count = 1;
  801048:	00800044 	movi	r2,1
  80104c:	e0bfff05 	stb	r2,-4(fp)
      }
   }
   ReleaseBus();
  801050:	08007a00 	call	8007a0 <ReleaseBus>

   return(count ? RES_ERROR : RES_OK);
  801054:	e0bfff03 	ldbu	r2,-4(fp)
  801058:	1004c03a 	cmpne	r2,r2,zero
  80105c:	10803fcc 	andi	r2,r2,255
} /* ffs_DiskIOWrite */
  801060:	e037883a 	mov	sp,fp
  801064:	dfc00117 	ldw	ra,4(sp)
  801068:	df000017 	ldw	fp,0(sp)
  80106c:	dec00204 	addi	sp,sp,8
  801070:	f800283a 	ret

00801074 <ffs_DiskIOIoctl>:
/*                                                                         */
/*  Out   : buff                                                           */
/*  Return: DRESULT                                                        */
/***************************************************************************/
DRESULT ffs_DiskIOIoctl (FFS_U8 drv, FFS_U8 ctrl, void *buff)
{
  801074:	defff204 	addi	sp,sp,-56
  801078:	dfc00d15 	stw	ra,52(sp)
  80107c:	df000c15 	stw	fp,48(sp)
  801080:	dc000b15 	stw	r16,44(sp)
  801084:	df000c04 	addi	fp,sp,48
  801088:	2007883a 	mov	r3,r4
  80108c:	2805883a 	mov	r2,r5
  801090:	e1bffe15 	stw	r6,-8(fp)
  801094:	e0fffc05 	stb	r3,-16(fp)
  801098:	e0bffd05 	stb	r2,-12(fp)
   DRESULT res;
   FFS_U8 n, csd[16], *ptr = buff;
  80109c:	e0bffe17 	ldw	r2,-8(fp)
  8010a0:	e0bff615 	stw	r2,-40(fp)
   FFS_U16 csize;

   (void)drv;

   if (Stat & STA_NOINIT)
  8010a4:	d0a00003 	ldbu	r2,-32768(gp)
  8010a8:	10803fcc 	andi	r2,r2,255
  8010ac:	1080004c 	andi	r2,r2,1
  8010b0:	10000226 	beq	r2,zero,8010bc <ffs_DiskIOIoctl+0x48>
      return RES_NOTRDY;
  8010b4:	008000c4 	movi	r2,3
  8010b8:	00011206 	br	801504 <ffs_DiskIOIoctl+0x490>

   res = RES_ERROR;
  8010bc:	00800044 	movi	r2,1
  8010c0:	e0bff415 	stw	r2,-48(fp)
   switch (ctrl)
  8010c4:	e0bffd03 	ldbu	r2,-12(fp)
  8010c8:	10c003e8 	cmpgeui	r3,r2,15
  8010cc:	1801091e 	bne	r3,zero,8014f4 <ffs_DiskIOIoctl+0x480>
  8010d0:	100690ba 	slli	r3,r2,2
  8010d4:	00802034 	movhi	r2,128
  8010d8:	10843a04 	addi	r2,r2,4328
  8010dc:	1885883a 	add	r2,r3,r2
  8010e0:	10800017 	ldw	r2,0(r2)
  8010e4:	1000683a 	jmp	r2
  8010e8:	00801124 	muli	r2,zero,68
  8010ec:	00801160 	cmpeqi	r2,zero,69
  8010f0:	00801274 	movhi	r2,73
  8010f4:	00801288 	cmpgei	r2,zero,74
  8010f8:	008014f4 	movhi	r2,83
  8010fc:	008014f4 	movhi	r2,83
  801100:	008014f4 	movhi	r2,83
  801104:	008014f4 	movhi	r2,83
  801108:	008014f4 	movhi	r2,83
  80110c:	008014f4 	movhi	r2,83
  801110:	008013f8 	rdprs	r2,zero,79
  801114:	0080140c 	andi	r2,zero,80
  801118:	0080143c 	xorhi	r2,zero,80
  80111c:	0080146c 	andhi	r2,zero,81
  801120:	008014c0 	call	8014c <__reset-0x77feb4>
   {
      case CTRL_SYNC:  /* Make sure that pending write process has been finished */
         SELECT();
  801124:	d0e36117 	ldw	r3,-29308(gp)
  801128:	00bfff84 	movi	r2,-2
  80112c:	1884703a 	and	r2,r3,r2
  801130:	d0a36115 	stw	r2,-29308(gp)
  801134:	00a04034 	movhi	r2,33024
  801138:	10840a04 	addi	r2,r2,4136
  80113c:	d0e36117 	ldw	r3,-29308(gp)
  801140:	10c00015 	stw	r3,0(r2)
         if (WaitReady() == 0xFF)
  801144:	080074c0 	call	80074c <WaitReady>
  801148:	10803fcc 	andi	r2,r2,255
  80114c:	10803fd8 	cmpnei	r2,r2,255
  801150:	1000021e 	bne	r2,zero,80115c <ffs_DiskIOIoctl+0xe8>
            res = RES_OK;
  801154:	e03ff415 	stw	zero,-48(fp)
         break;
  801158:	0000e806 	br	8014fc <ffs_DiskIOIoctl+0x488>
  80115c:	0000e706 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case GET_SECTOR_COUNT: /* Get number of sectors on the disk (DWORD) */
         if ((SendCMD(CMD9, 0) == 0) && ReceiveDatablock(csd, 16))
  801160:	01001244 	movi	r4,73
  801164:	000b883a 	mov	r5,zero
  801168:	08007e40 	call	8007e4 <SendCMD>
  80116c:	10803fcc 	andi	r2,r2,255
  801170:	10003f1e 	bne	r2,zero,801270 <ffs_DiskIOIoctl+0x1fc>
  801174:	e0bff784 	addi	r2,fp,-34
  801178:	1009883a 	mov	r4,r2
  80117c:	01400404 	movi	r5,16
  801180:	08004740 	call	800474 <ReceiveDatablock>
  801184:	10003a26 	beq	r2,zero,801270 <ffs_DiskIOIoctl+0x1fc>
         {
            if ((csd[0] >> 6) == 1)
  801188:	e0bff783 	ldbu	r2,-34(fp)
  80118c:	10803fcc 	andi	r2,r2,255
  801190:	1004d1ba 	srli	r2,r2,6
  801194:	10803fcc 	andi	r2,r2,255
  801198:	10800058 	cmpnei	r2,r2,1
  80119c:	10000d1e 	bne	r2,zero,8011d4 <ffs_DiskIOIoctl+0x160>
            {  /* SDC ver 2.00 */
               //@@MF csize = csd[9] + ((FFS_U16)csd[8] << 8) + 1;
               csize = (FFS_U16) ((FFS_U16) csd[9] | ((FFS_U16) csd[8] << 8)) + 1;
  8011a0:	e0bff9c3 	ldbu	r2,-25(fp)
  8011a4:	10803fcc 	andi	r2,r2,255
  8011a8:	e0fff983 	ldbu	r3,-26(fp)
  8011ac:	18c03fcc 	andi	r3,r3,255
  8011b0:	1806923a 	slli	r3,r3,8
  8011b4:	10c4b03a 	or	r2,r2,r3
  8011b8:	10800044 	addi	r2,r2,1
  8011bc:	e0bff70d 	sth	r2,-36(fp)
               *(FFS_U32 *) buff = (FFS_U32) csize << 10;
  8011c0:	e0bff70b 	ldhu	r2,-36(fp)
  8011c4:	100692ba 	slli	r3,r2,10
  8011c8:	e0bffe17 	ldw	r2,-8(fp)
  8011cc:	10c00015 	stw	r3,0(r2)
  8011d0:	00002506 	br	801268 <ffs_DiskIOIoctl+0x1f4>
            }
            else
            {  /* MMC or SDC ver 1.XX */
               n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
  8011d4:	e0bff8c3 	ldbu	r2,-29(fp)
  8011d8:	108003cc 	andi	r2,r2,15
  8011dc:	1007883a 	mov	r3,r2
  8011e0:	e0bffa03 	ldbu	r2,-24(fp)
  8011e4:	10803fcc 	andi	r2,r2,255
  8011e8:	1004d1fa 	srli	r2,r2,7
  8011ec:	1885883a 	add	r2,r3,r2
  8011f0:	1007883a 	mov	r3,r2
  8011f4:	e0bff9c3 	ldbu	r2,-25(fp)
  8011f8:	108000cc 	andi	r2,r2,3
  8011fc:	1085883a 	add	r2,r2,r2
  801200:	1885883a 	add	r2,r3,r2
  801204:	10800084 	addi	r2,r2,2
  801208:	e0bff505 	stb	r2,-44(fp)
               csize = (csd[8] >> 6) + ((FFS_U16) csd[7] << 2) + ((FFS_U16) (csd[6] & 3) << 10) + 1;
  80120c:	e0bff983 	ldbu	r2,-26(fp)
  801210:	10803fcc 	andi	r2,r2,255
  801214:	1004d1ba 	srli	r2,r2,6
  801218:	10c03fcc 	andi	r3,r2,255
  80121c:	e0bff943 	ldbu	r2,-27(fp)
  801220:	10803fcc 	andi	r2,r2,255
  801224:	1085883a 	add	r2,r2,r2
  801228:	1085883a 	add	r2,r2,r2
  80122c:	1885883a 	add	r2,r3,r2
  801230:	1007883a 	mov	r3,r2
  801234:	e0bff903 	ldbu	r2,-28(fp)
  801238:	10803fcc 	andi	r2,r2,255
  80123c:	108000cc 	andi	r2,r2,3
  801240:	100492ba 	slli	r2,r2,10
  801244:	1885883a 	add	r2,r3,r2
  801248:	10800044 	addi	r2,r2,1
  80124c:	e0bff70d 	sth	r2,-36(fp)
               *(FFS_U32 *) buff = (FFS_U32) csize << (n - 9);
  801250:	e0fff70b 	ldhu	r3,-36(fp)
  801254:	e0bff503 	ldbu	r2,-44(fp)
  801258:	10bffdc4 	addi	r2,r2,-9
  80125c:	1886983a 	sll	r3,r3,r2
  801260:	e0bffe17 	ldw	r2,-8(fp)
  801264:	10c00015 	stw	r3,0(r2)
            }
            res = RES_OK;
  801268:	e03ff415 	stw	zero,-48(fp)
         }
         break;
  80126c:	0000a306 	br	8014fc <ffs_DiskIOIoctl+0x488>
  801270:	0000a206 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case GET_SECTOR_SIZE:  /* Get sectors on the disk (WORD) */
         *(FFS_U16 *) buff = 512;
  801274:	e0bffe17 	ldw	r2,-8(fp)
  801278:	00c08004 	movi	r3,512
  80127c:	10c0000d 	sth	r3,0(r2)
         res = RES_OK;
  801280:	e03ff415 	stw	zero,-48(fp)
         break;
  801284:	00009d06 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case GET_BLOCK_SIZE:   /* Get erase block size in unit of sectors (DWORD) */
         if (CardType & CT_SD2)
  801288:	d0a35f03 	ldbu	r2,-29316(gp)
  80128c:	10803fcc 	andi	r2,r2,255
  801290:	1080010c 	andi	r2,r2,4
  801294:	10001e26 	beq	r2,zero,801310 <ffs_DiskIOIoctl+0x29c>
         {  /* SDC ver 2.00 */
            if (SendCMD(ACMD13, 0) == 0)
  801298:	01003344 	movi	r4,205
  80129c:	000b883a 	mov	r5,zero
  8012a0:	08007e40 	call	8007e4 <SendCMD>
  8012a4:	10803fcc 	andi	r2,r2,255
  8012a8:	1000521e 	bne	r2,zero,8013f4 <ffs_DiskIOIoctl+0x380>
            {  /* Read SD status */
               ReceiveU8();
  8012ac:	08004240 	call	800424 <ReceiveU8>
               if (ReceiveDatablock(csd, 16))
  8012b0:	e0bff784 	addi	r2,fp,-34
  8012b4:	1009883a 	mov	r4,r2
  8012b8:	01400404 	movi	r5,16
  8012bc:	08004740 	call	800474 <ReceiveDatablock>
  8012c0:	10004c26 	beq	r2,zero,8013f4 <ffs_DiskIOIoctl+0x380>
               {  /* Read partial block */
                  for (n = 64 - 16; n; n--)
  8012c4:	00800c04 	movi	r2,48
  8012c8:	e0bff505 	stb	r2,-44(fp)
  8012cc:	00000406 	br	8012e0 <ffs_DiskIOIoctl+0x26c>
                     ReceiveU8();   /* Purge trailing data */
  8012d0:	08004240 	call	800424 <ReceiveU8>
            if (SendCMD(ACMD13, 0) == 0)
            {  /* Read SD status */
               ReceiveU8();
               if (ReceiveDatablock(csd, 16))
               {  /* Read partial block */
                  for (n = 64 - 16; n; n--)
  8012d4:	e0bff503 	ldbu	r2,-44(fp)
  8012d8:	10bfffc4 	addi	r2,r2,-1
  8012dc:	e0bff505 	stb	r2,-44(fp)
  8012e0:	e0bff503 	ldbu	r2,-44(fp)
  8012e4:	103ffa1e 	bne	r2,zero,8012d0 <__alt_data_end+0xff8012d0>
                     ReceiveU8();   /* Purge trailing data */
                  *(FFS_U32 *) buff = 16UL << (csd[10] >> 4);
  8012e8:	e0bffa03 	ldbu	r2,-24(fp)
  8012ec:	10803fcc 	andi	r2,r2,255
  8012f0:	1004d13a 	srli	r2,r2,4
  8012f4:	10803fcc 	andi	r2,r2,255
  8012f8:	00c00404 	movi	r3,16
  8012fc:	1886983a 	sll	r3,r3,r2
  801300:	e0bffe17 	ldw	r2,-8(fp)
  801304:	10c00015 	stw	r3,0(r2)
                  res = RES_OK;
  801308:	e03ff415 	stw	zero,-48(fp)
                  *(FFS_U32 *) buff = ((FFS_U16) ((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
               }
               res = RES_OK;
            }
         }
         break;
  80130c:	00007b06 	br	8014fc <ffs_DiskIOIoctl+0x488>
               }
            }
         }
         else
         {  /* SDC ver 1.XX or MMC */
            if ((SendCMD(CMD9, 0) == 0) && ReceiveDatablock(csd, 16))
  801310:	01001244 	movi	r4,73
  801314:	000b883a 	mov	r5,zero
  801318:	08007e40 	call	8007e4 <SendCMD>
  80131c:	10803fcc 	andi	r2,r2,255
  801320:	1000341e 	bne	r2,zero,8013f4 <ffs_DiskIOIoctl+0x380>
  801324:	e0bff784 	addi	r2,fp,-34
  801328:	1009883a 	mov	r4,r2
  80132c:	01400404 	movi	r5,16
  801330:	08004740 	call	800474 <ReceiveDatablock>
  801334:	10002f26 	beq	r2,zero,8013f4 <ffs_DiskIOIoctl+0x380>
            {  /* Read CSD */
               if (CardType & CT_SD1)
  801338:	d0a35f03 	ldbu	r2,-29316(gp)
  80133c:	10803fcc 	andi	r2,r2,255
  801340:	1080008c 	andi	r2,r2,2
  801344:	10001526 	beq	r2,zero,80139c <ffs_DiskIOIoctl+0x328>
               {  /* SDC ver 1.XX */
                  *(FFS_U32 *) buff = (((csd[10] & 63) << 1) + ((FFS_U16) (csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
  801348:	e0bffa03 	ldbu	r2,-24(fp)
  80134c:	10803fcc 	andi	r2,r2,255
  801350:	10800fcc 	andi	r2,r2,63
  801354:	1085883a 	add	r2,r2,r2
  801358:	1007883a 	mov	r3,r2
  80135c:	e0bffa43 	ldbu	r2,-23(fp)
  801360:	10803fcc 	andi	r2,r2,255
  801364:	1004d1fa 	srli	r2,r2,7
  801368:	10803fcc 	andi	r2,r2,255
  80136c:	1885883a 	add	r2,r3,r2
  801370:	10c00044 	addi	r3,r2,1
  801374:	e0bffac3 	ldbu	r2,-21(fp)
  801378:	10803fcc 	andi	r2,r2,255
  80137c:	1004d1ba 	srli	r2,r2,6
  801380:	10803fcc 	andi	r2,r2,255
  801384:	10bfffc4 	addi	r2,r2,-1
  801388:	1884983a 	sll	r2,r3,r2
  80138c:	1007883a 	mov	r3,r2
  801390:	e0bffe17 	ldw	r2,-8(fp)
  801394:	10c00015 	stw	r3,0(r2)
  801398:	00001406 	br	8013ec <ffs_DiskIOIoctl+0x378>
               }
               else
               {  /* MMC */
                  *(FFS_U32 *) buff = ((FFS_U16) ((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
  80139c:	e0bffa03 	ldbu	r2,-24(fp)
  8013a0:	10803fcc 	andi	r2,r2,255
  8013a4:	10801f0c 	andi	r2,r2,124
  8013a8:	1005d0ba 	srai	r2,r2,2
  8013ac:	10bfffcc 	andi	r2,r2,65535
  8013b0:	10c00044 	addi	r3,r2,1
  8013b4:	e0bffa43 	ldbu	r2,-23(fp)
  8013b8:	10803fcc 	andi	r2,r2,255
  8013bc:	108000cc 	andi	r2,r2,3
  8013c0:	100890fa 	slli	r4,r2,3
  8013c4:	e0bffa43 	ldbu	r2,-23(fp)
  8013c8:	10803fcc 	andi	r2,r2,255
  8013cc:	1004d17a 	srli	r2,r2,5
  8013d0:	10803fcc 	andi	r2,r2,255
  8013d4:	2085883a 	add	r2,r4,r2
  8013d8:	10800044 	addi	r2,r2,1
  8013dc:	1885383a 	mul	r2,r3,r2
  8013e0:	1007883a 	mov	r3,r2
  8013e4:	e0bffe17 	ldw	r2,-8(fp)
  8013e8:	10c00015 	stw	r3,0(r2)
               }
               res = RES_OK;
  8013ec:	e03ff415 	stw	zero,-48(fp)
            }
         }
         break;
  8013f0:	00004206 	br	8014fc <ffs_DiskIOIoctl+0x488>
  8013f4:	00004106 	br	8014fc <ffs_DiskIOIoctl+0x488>
         
      /* Following command are not used by FatFs module */
         
      case MMC_GET_TYPE:  /* Get MMC/SDC type (BYTE) */
         *ptr = CardType;
  8013f8:	d0e35f03 	ldbu	r3,-29316(gp)
  8013fc:	e0bff617 	ldw	r2,-40(fp)
  801400:	10c00005 	stb	r3,0(r2)
         res = RES_OK;
  801404:	e03ff415 	stw	zero,-48(fp)
         break;
  801408:	00003c06 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case MMC_GET_CSD:   /* Receive CSD as a data block (16 bytes) */
         if (SendCMD(CMD9, 0) == 0  /* READ_CSD */
  80140c:	01001244 	movi	r4,73
  801410:	000b883a 	mov	r5,zero
  801414:	08007e40 	call	8007e4 <SendCMD>
  801418:	10803fcc 	andi	r2,r2,255
  80141c:	1000061e 	bne	r2,zero,801438 <ffs_DiskIOIoctl+0x3c4>
             && ReceiveDatablock(ptr, 16))
  801420:	e13ff617 	ldw	r4,-40(fp)
  801424:	01400404 	movi	r5,16
  801428:	08004740 	call	800474 <ReceiveDatablock>
  80142c:	10000226 	beq	r2,zero,801438 <ffs_DiskIOIoctl+0x3c4>
            res = RES_OK;
  801430:	e03ff415 	stw	zero,-48(fp)
         break;
  801434:	00003106 	br	8014fc <ffs_DiskIOIoctl+0x488>
  801438:	00003006 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case MMC_GET_CID:   /* Receive CID as a data block (16 bytes) */
         if (SendCMD(CMD10, 0) == 0 /* READ_CID */
  80143c:	01001284 	movi	r4,74
  801440:	000b883a 	mov	r5,zero
  801444:	08007e40 	call	8007e4 <SendCMD>
  801448:	10803fcc 	andi	r2,r2,255
  80144c:	1000061e 	bne	r2,zero,801468 <ffs_DiskIOIoctl+0x3f4>
             && ReceiveDatablock(ptr, 16))
  801450:	e13ff617 	ldw	r4,-40(fp)
  801454:	01400404 	movi	r5,16
  801458:	08004740 	call	800474 <ReceiveDatablock>
  80145c:	10000226 	beq	r2,zero,801468 <ffs_DiskIOIoctl+0x3f4>
            res = RES_OK;
  801460:	e03ff415 	stw	zero,-48(fp)
         break;
  801464:	00002506 	br	8014fc <ffs_DiskIOIoctl+0x488>
  801468:	00002406 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case MMC_GET_OCR:   /* Receive OCR as an R3 resp (4 bytes) */
         if (SendCMD(CMD58, 0) == 0)
  80146c:	01001e84 	movi	r4,122
  801470:	000b883a 	mov	r5,zero
  801474:	08007e40 	call	8007e4 <SendCMD>
  801478:	10803fcc 	andi	r2,r2,255
  80147c:	10000f1e 	bne	r2,zero,8014bc <ffs_DiskIOIoctl+0x448>
         {  /* READ_OCR */
            for (n = 0; n < 4; n++)
  801480:	e03ff505 	stb	zero,-44(fp)
  801484:	00000806 	br	8014a8 <ffs_DiskIOIoctl+0x434>
               *ptr++ = ReceiveU8();
  801488:	e43ff617 	ldw	r16,-40(fp)
  80148c:	80800044 	addi	r2,r16,1
  801490:	e0bff615 	stw	r2,-40(fp)
  801494:	08004240 	call	800424 <ReceiveU8>
  801498:	80800005 	stb	r2,0(r16)
         break;

      case MMC_GET_OCR:   /* Receive OCR as an R3 resp (4 bytes) */
         if (SendCMD(CMD58, 0) == 0)
         {  /* READ_OCR */
            for (n = 0; n < 4; n++)
  80149c:	e0bff503 	ldbu	r2,-44(fp)
  8014a0:	10800044 	addi	r2,r2,1
  8014a4:	e0bff505 	stb	r2,-44(fp)
  8014a8:	e0bff503 	ldbu	r2,-44(fp)
  8014ac:	10800130 	cmpltui	r2,r2,4
  8014b0:	103ff51e 	bne	r2,zero,801488 <__alt_data_end+0xff801488>
               *ptr++ = ReceiveU8();
            res = RES_OK;
  8014b4:	e03ff415 	stw	zero,-48(fp)
         }
         break;
  8014b8:	00001006 	br	8014fc <ffs_DiskIOIoctl+0x488>
  8014bc:	00000f06 	br	8014fc <ffs_DiskIOIoctl+0x488>

      case MMC_GET_SDSTAT:   /* Receive SD statsu as a data block (64 bytes) */
         if (SendCMD(ACMD13, 0) == 0)
  8014c0:	01003344 	movi	r4,205
  8014c4:	000b883a 	mov	r5,zero
  8014c8:	08007e40 	call	8007e4 <SendCMD>
  8014cc:	10803fcc 	andi	r2,r2,255
  8014d0:	1000071e 	bne	r2,zero,8014f0 <ffs_DiskIOIoctl+0x47c>
         {  /* SD_STATUS */
            ReceiveU8();
  8014d4:	08004240 	call	800424 <ReceiveU8>
            if (ReceiveDatablock(ptr, 64))
  8014d8:	e13ff617 	ldw	r4,-40(fp)
  8014dc:	01401004 	movi	r5,64
  8014e0:	08004740 	call	800474 <ReceiveDatablock>
  8014e4:	10000226 	beq	r2,zero,8014f0 <ffs_DiskIOIoctl+0x47c>
               res = RES_OK;
  8014e8:	e03ff415 	stw	zero,-48(fp)
         }
         break;
  8014ec:	00000306 	br	8014fc <ffs_DiskIOIoctl+0x488>
  8014f0:	00000206 	br	8014fc <ffs_DiskIOIoctl+0x488>

      default:
         res = RES_PARERR;
  8014f4:	00800104 	movi	r2,4
  8014f8:	e0bff415 	stw	r2,-48(fp)
   }

   ReleaseBus();
  8014fc:	08007a00 	call	8007a0 <ReleaseBus>

   return(res);
  801500:	e0bff417 	ldw	r2,-48(fp)
} /* ffs_DiskIOIoctl */
  801504:	e6ffff04 	addi	sp,fp,-4
  801508:	dfc00217 	ldw	ra,8(sp)
  80150c:	df000117 	ldw	fp,4(sp)
  801510:	dc000017 	ldw	r16,0(sp)
  801514:	dec00304 	addi	sp,sp,12
  801518:	f800283a 	ret

0080151c <get_fattime>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: time                                                           */
/***************************************************************************/
FFS_U32 get_fattime (void)
{
  80151c:	defffe04 	addi	sp,sp,-8
  801520:	df000115 	stw	fp,4(sp)
  801524:	df000104 	addi	fp,sp,4
   FFS_U32 dTime;

   dTime = ((FFS_U32)(2008 - 1980) << 25) |
  801528:	008e57f4 	movhi	r2,14687
  80152c:	10a87844 	addi	r2,r2,-24095
  801530:	e0bfff15 	stw	r2,-4(fp)
                     ((FFS_U32) 30 << 16) | 
                     ((FFS_U32) 20 << 11) | 
                     ((FFS_U32) 15 << 5)  | 
                     ((FFS_U32) 2 >> 1);

   return(dTime);
  801534:	e0bfff17 	ldw	r2,-4(fp)
} /* get_fattime */
  801538:	e037883a 	mov	sp,fp
  80153c:	df000017 	ldw	fp,0(sp)
  801540:	dec00104 	addi	sp,sp,4
  801544:	f800283a 	ret

00801548 <mem_cpy>:
  801548:	defffa04 	addi	sp,sp,-24
  80154c:	df000515 	stw	fp,20(sp)
  801550:	df000504 	addi	fp,sp,20
  801554:	e13ffd15 	stw	r4,-12(fp)
  801558:	e17ffe15 	stw	r5,-8(fp)
  80155c:	e1bfff15 	stw	r6,-4(fp)
  801560:	e0bffd17 	ldw	r2,-12(fp)
  801564:	e0bffb15 	stw	r2,-20(fp)
  801568:	e0bffe17 	ldw	r2,-8(fp)
  80156c:	e0bffc15 	stw	r2,-16(fp)
  801570:	00000806 	br	801594 <mem_cpy+0x4c>
  801574:	e0bffb17 	ldw	r2,-20(fp)
  801578:	10c00044 	addi	r3,r2,1
  80157c:	e0fffb15 	stw	r3,-20(fp)
  801580:	e0fffc17 	ldw	r3,-16(fp)
  801584:	19000044 	addi	r4,r3,1
  801588:	e13ffc15 	stw	r4,-16(fp)
  80158c:	18c00003 	ldbu	r3,0(r3)
  801590:	10c00005 	stb	r3,0(r2)
  801594:	e0bfff17 	ldw	r2,-4(fp)
  801598:	10ffffc4 	addi	r3,r2,-1
  80159c:	e0ffff15 	stw	r3,-4(fp)
  8015a0:	103ff41e 	bne	r2,zero,801574 <__alt_data_end+0xff801574>
  8015a4:	e037883a 	mov	sp,fp
  8015a8:	df000017 	ldw	fp,0(sp)
  8015ac:	dec00104 	addi	sp,sp,4
  8015b0:	f800283a 	ret

008015b4 <mem_set>:
  8015b4:	defffb04 	addi	sp,sp,-20
  8015b8:	df000415 	stw	fp,16(sp)
  8015bc:	df000404 	addi	fp,sp,16
  8015c0:	e13ffd15 	stw	r4,-12(fp)
  8015c4:	e17ffe15 	stw	r5,-8(fp)
  8015c8:	e1bfff15 	stw	r6,-4(fp)
  8015cc:	e0bffd17 	ldw	r2,-12(fp)
  8015d0:	e0bffc15 	stw	r2,-16(fp)
  8015d4:	00000506 	br	8015ec <mem_set+0x38>
  8015d8:	e0bffc17 	ldw	r2,-16(fp)
  8015dc:	10c00044 	addi	r3,r2,1
  8015e0:	e0fffc15 	stw	r3,-16(fp)
  8015e4:	e0fffe17 	ldw	r3,-8(fp)
  8015e8:	10c00005 	stb	r3,0(r2)
  8015ec:	e0bfff17 	ldw	r2,-4(fp)
  8015f0:	10ffffc4 	addi	r3,r2,-1
  8015f4:	e0ffff15 	stw	r3,-4(fp)
  8015f8:	103ff71e 	bne	r2,zero,8015d8 <__alt_data_end+0xff8015d8>
  8015fc:	e037883a 	mov	sp,fp
  801600:	df000017 	ldw	fp,0(sp)
  801604:	dec00104 	addi	sp,sp,4
  801608:	f800283a 	ret

0080160c <mem_cmp>:
  80160c:	defff904 	addi	sp,sp,-28
  801610:	df000615 	stw	fp,24(sp)
  801614:	df000604 	addi	fp,sp,24
  801618:	e13ffd15 	stw	r4,-12(fp)
  80161c:	e17ffe15 	stw	r5,-8(fp)
  801620:	e1bfff15 	stw	r6,-4(fp)
  801624:	e0bffd17 	ldw	r2,-12(fp)
  801628:	e0bffa15 	stw	r2,-24(fp)
  80162c:	e0bffe17 	ldw	r2,-8(fp)
  801630:	e0bffb15 	stw	r2,-20(fp)
  801634:	e03ffc15 	stw	zero,-16(fp)
  801638:	0001883a 	nop
  80163c:	e0bfff17 	ldw	r2,-4(fp)
  801640:	10ffffc4 	addi	r3,r2,-1
  801644:	e0ffff15 	stw	r3,-4(fp)
  801648:	10000e26 	beq	r2,zero,801684 <mem_cmp+0x78>
  80164c:	e0bffa17 	ldw	r2,-24(fp)
  801650:	10c00044 	addi	r3,r2,1
  801654:	e0fffa15 	stw	r3,-24(fp)
  801658:	10800003 	ldbu	r2,0(r2)
  80165c:	10c03fcc 	andi	r3,r2,255
  801660:	e0bffb17 	ldw	r2,-20(fp)
  801664:	11000044 	addi	r4,r2,1
  801668:	e13ffb15 	stw	r4,-20(fp)
  80166c:	10800003 	ldbu	r2,0(r2)
  801670:	10803fcc 	andi	r2,r2,255
  801674:	1885c83a 	sub	r2,r3,r2
  801678:	e0bffc15 	stw	r2,-16(fp)
  80167c:	e0bffc17 	ldw	r2,-16(fp)
  801680:	103fee26 	beq	r2,zero,80163c <__alt_data_end+0xff80163c>
  801684:	e0bffc17 	ldw	r2,-16(fp)
  801688:	e037883a 	mov	sp,fp
  80168c:	df000017 	ldw	fp,0(sp)
  801690:	dec00104 	addi	sp,sp,4
  801694:	f800283a 	ret

00801698 <chk_chr>:
  801698:	defffd04 	addi	sp,sp,-12
  80169c:	df000215 	stw	fp,8(sp)
  8016a0:	df000204 	addi	fp,sp,8
  8016a4:	e13ffe15 	stw	r4,-8(fp)
  8016a8:	e17fff15 	stw	r5,-4(fp)
  8016ac:	00000306 	br	8016bc <chk_chr+0x24>
  8016b0:	e0bffe17 	ldw	r2,-8(fp)
  8016b4:	10800044 	addi	r2,r2,1
  8016b8:	e0bffe15 	stw	r2,-8(fp)
  8016bc:	e0bffe17 	ldw	r2,-8(fp)
  8016c0:	10800003 	ldbu	r2,0(r2)
  8016c4:	10803fcc 	andi	r2,r2,255
  8016c8:	1080201c 	xori	r2,r2,128
  8016cc:	10bfe004 	addi	r2,r2,-128
  8016d0:	10000726 	beq	r2,zero,8016f0 <chk_chr+0x58>
  8016d4:	e0bffe17 	ldw	r2,-8(fp)
  8016d8:	10800003 	ldbu	r2,0(r2)
  8016dc:	10c03fcc 	andi	r3,r2,255
  8016e0:	18c0201c 	xori	r3,r3,128
  8016e4:	18ffe004 	addi	r3,r3,-128
  8016e8:	e0bfff17 	ldw	r2,-4(fp)
  8016ec:	18bff01e 	bne	r3,r2,8016b0 <__alt_data_end+0xff8016b0>
  8016f0:	e0bffe17 	ldw	r2,-8(fp)
  8016f4:	10800003 	ldbu	r2,0(r2)
  8016f8:	10803fcc 	andi	r2,r2,255
  8016fc:	1080201c 	xori	r2,r2,128
  801700:	10bfe004 	addi	r2,r2,-128
  801704:	e037883a 	mov	sp,fp
  801708:	df000017 	ldw	fp,0(sp)
  80170c:	dec00104 	addi	sp,sp,4
  801710:	f800283a 	ret

00801714 <move_window>:
  801714:	defffa04 	addi	sp,sp,-24
  801718:	dfc00515 	stw	ra,20(sp)
  80171c:	df000415 	stw	fp,16(sp)
  801720:	df000404 	addi	fp,sp,16
  801724:	e13ffe15 	stw	r4,-8(fp)
  801728:	e17fff15 	stw	r5,-4(fp)
  80172c:	e0bffe17 	ldw	r2,-8(fp)
  801730:	10800b17 	ldw	r2,44(r2)
  801734:	e0bffc15 	stw	r2,-16(fp)
  801738:	e0fffc17 	ldw	r3,-16(fp)
  80173c:	e0bfff17 	ldw	r2,-4(fp)
  801740:	18804526 	beq	r3,r2,801858 <move_window+0x144>
  801744:	e0bffe17 	ldw	r2,-8(fp)
  801748:	10800103 	ldbu	r2,4(r2)
  80174c:	10803fcc 	andi	r2,r2,255
  801750:	10002f26 	beq	r2,zero,801810 <move_window+0xfc>
  801754:	e0bffe17 	ldw	r2,-8(fp)
  801758:	10800043 	ldbu	r2,1(r2)
  80175c:	10c03fcc 	andi	r3,r2,255
  801760:	e0bffe17 	ldw	r2,-8(fp)
  801764:	10800c04 	addi	r2,r2,48
  801768:	1809883a 	mov	r4,r3
  80176c:	100b883a 	mov	r5,r2
  801770:	e1bffc17 	ldw	r6,-16(fp)
  801774:	01c00044 	movi	r7,1
  801778:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  80177c:	10000226 	beq	r2,zero,801788 <move_window+0x74>
  801780:	00800044 	movi	r2,1
  801784:	00003506 	br	80185c <move_window+0x148>
  801788:	e0bffe17 	ldw	r2,-8(fp)
  80178c:	10000105 	stb	zero,4(r2)
  801790:	e0bffe17 	ldw	r2,-8(fp)
  801794:	10c00817 	ldw	r3,32(r2)
  801798:	e0bffe17 	ldw	r2,-8(fp)
  80179c:	10800717 	ldw	r2,28(r2)
  8017a0:	1885883a 	add	r2,r3,r2
  8017a4:	e0fffc17 	ldw	r3,-16(fp)
  8017a8:	1880192e 	bgeu	r3,r2,801810 <move_window+0xfc>
  8017ac:	e0bffe17 	ldw	r2,-8(fp)
  8017b0:	108000c3 	ldbu	r2,3(r2)
  8017b4:	e0bffd05 	stb	r2,-12(fp)
  8017b8:	00001206 	br	801804 <move_window+0xf0>
  8017bc:	e0bffe17 	ldw	r2,-8(fp)
  8017c0:	10800717 	ldw	r2,28(r2)
  8017c4:	e0fffc17 	ldw	r3,-16(fp)
  8017c8:	1885883a 	add	r2,r3,r2
  8017cc:	e0bffc15 	stw	r2,-16(fp)
  8017d0:	e0bffe17 	ldw	r2,-8(fp)
  8017d4:	10800043 	ldbu	r2,1(r2)
  8017d8:	10c03fcc 	andi	r3,r2,255
  8017dc:	e0bffe17 	ldw	r2,-8(fp)
  8017e0:	10800c04 	addi	r2,r2,48
  8017e4:	1809883a 	mov	r4,r3
  8017e8:	100b883a 	mov	r5,r2
  8017ec:	e1bffc17 	ldw	r6,-16(fp)
  8017f0:	01c00044 	movi	r7,1
  8017f4:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  8017f8:	e0bffd03 	ldbu	r2,-12(fp)
  8017fc:	10bfffc4 	addi	r2,r2,-1
  801800:	e0bffd05 	stb	r2,-12(fp)
  801804:	e0bffd03 	ldbu	r2,-12(fp)
  801808:	108000a8 	cmpgeui	r2,r2,2
  80180c:	103feb1e 	bne	r2,zero,8017bc <__alt_data_end+0xff8017bc>
  801810:	e0bfff17 	ldw	r2,-4(fp)
  801814:	10001026 	beq	r2,zero,801858 <move_window+0x144>
  801818:	e0bffe17 	ldw	r2,-8(fp)
  80181c:	10800043 	ldbu	r2,1(r2)
  801820:	10c03fcc 	andi	r3,r2,255
  801824:	e0bffe17 	ldw	r2,-8(fp)
  801828:	10800c04 	addi	r2,r2,48
  80182c:	1809883a 	mov	r4,r3
  801830:	100b883a 	mov	r5,r2
  801834:	e1bfff17 	ldw	r6,-4(fp)
  801838:	01c00044 	movi	r7,1
  80183c:	0800dec0 	call	800dec <ffs_DiskIORead>
  801840:	10000226 	beq	r2,zero,80184c <move_window+0x138>
  801844:	00800044 	movi	r2,1
  801848:	00000406 	br	80185c <move_window+0x148>
  80184c:	e0bffe17 	ldw	r2,-8(fp)
  801850:	e0ffff17 	ldw	r3,-4(fp)
  801854:	10c00b15 	stw	r3,44(r2)
  801858:	0005883a 	mov	r2,zero
  80185c:	e037883a 	mov	sp,fp
  801860:	dfc00117 	ldw	ra,4(sp)
  801864:	df000017 	ldw	fp,0(sp)
  801868:	dec00204 	addi	sp,sp,8
  80186c:	f800283a 	ret

00801870 <sync>:
  801870:	defffc04 	addi	sp,sp,-16
  801874:	dfc00315 	stw	ra,12(sp)
  801878:	df000215 	stw	fp,8(sp)
  80187c:	df000204 	addi	fp,sp,8
  801880:	e13fff15 	stw	r4,-4(fp)
  801884:	e13fff17 	ldw	r4,-4(fp)
  801888:	000b883a 	mov	r5,zero
  80188c:	08017140 	call	801714 <move_window>
  801890:	e0bffe15 	stw	r2,-8(fp)
  801894:	e0bffe17 	ldw	r2,-8(fp)
  801898:	1000761e 	bne	r2,zero,801a74 <sync+0x204>
  80189c:	e0bfff17 	ldw	r2,-4(fp)
  8018a0:	10800003 	ldbu	r2,0(r2)
  8018a4:	10803fcc 	andi	r2,r2,255
  8018a8:	108000d8 	cmpnei	r2,r2,3
  8018ac:	1000671e 	bne	r2,zero,801a4c <sync+0x1dc>
  8018b0:	e0bfff17 	ldw	r2,-4(fp)
  8018b4:	10800143 	ldbu	r2,5(r2)
  8018b8:	10803fcc 	andi	r2,r2,255
  8018bc:	10006326 	beq	r2,zero,801a4c <sync+0x1dc>
  8018c0:	e0bfff17 	ldw	r2,-4(fp)
  8018c4:	10000b15 	stw	zero,44(r2)
  8018c8:	e0bfff17 	ldw	r2,-4(fp)
  8018cc:	10800c04 	addi	r2,r2,48
  8018d0:	1009883a 	mov	r4,r2
  8018d4:	000b883a 	mov	r5,zero
  8018d8:	01808004 	movi	r6,512
  8018dc:	08015b40 	call	8015b4 <mem_set>
  8018e0:	e0bfff17 	ldw	r2,-4(fp)
  8018e4:	00c01544 	movi	r3,85
  8018e8:	10c08b85 	stb	r3,558(r2)
  8018ec:	e0bfff17 	ldw	r2,-4(fp)
  8018f0:	00ffea84 	movi	r3,-86
  8018f4:	10c08bc5 	stb	r3,559(r2)
  8018f8:	e0bfff17 	ldw	r2,-4(fp)
  8018fc:	00c01484 	movi	r3,82
  801900:	10c00c05 	stb	r3,48(r2)
  801904:	e0bfff17 	ldw	r2,-4(fp)
  801908:	00c01484 	movi	r3,82
  80190c:	10c00c45 	stb	r3,49(r2)
  801910:	e0bfff17 	ldw	r2,-4(fp)
  801914:	00c01844 	movi	r3,97
  801918:	10c00c85 	stb	r3,50(r2)
  80191c:	e0bfff17 	ldw	r2,-4(fp)
  801920:	00c01044 	movi	r3,65
  801924:	10c00cc5 	stb	r3,51(r2)
  801928:	e0bfff17 	ldw	r2,-4(fp)
  80192c:	00c01c84 	movi	r3,114
  801930:	10c08505 	stb	r3,532(r2)
  801934:	e0bfff17 	ldw	r2,-4(fp)
  801938:	00c01c84 	movi	r3,114
  80193c:	10c08545 	stb	r3,533(r2)
  801940:	e0bfff17 	ldw	r2,-4(fp)
  801944:	00c01044 	movi	r3,65
  801948:	10c08585 	stb	r3,534(r2)
  80194c:	e0bfff17 	ldw	r2,-4(fp)
  801950:	00c01844 	movi	r3,97
  801954:	10c085c5 	stb	r3,535(r2)
  801958:	e0bfff17 	ldw	r2,-4(fp)
  80195c:	10800417 	ldw	r2,16(r2)
  801960:	1007883a 	mov	r3,r2
  801964:	e0bfff17 	ldw	r2,-4(fp)
  801968:	10c08605 	stb	r3,536(r2)
  80196c:	e0bfff17 	ldw	r2,-4(fp)
  801970:	10800417 	ldw	r2,16(r2)
  801974:	10bfffcc 	andi	r2,r2,65535
  801978:	1004d23a 	srli	r2,r2,8
  80197c:	1007883a 	mov	r3,r2
  801980:	e0bfff17 	ldw	r2,-4(fp)
  801984:	10c08645 	stb	r3,537(r2)
  801988:	e0bfff17 	ldw	r2,-4(fp)
  80198c:	10800417 	ldw	r2,16(r2)
  801990:	1004d43a 	srli	r2,r2,16
  801994:	1007883a 	mov	r3,r2
  801998:	e0bfff17 	ldw	r2,-4(fp)
  80199c:	10c08685 	stb	r3,538(r2)
  8019a0:	e0bfff17 	ldw	r2,-4(fp)
  8019a4:	10800417 	ldw	r2,16(r2)
  8019a8:	1004d63a 	srli	r2,r2,24
  8019ac:	1007883a 	mov	r3,r2
  8019b0:	e0bfff17 	ldw	r2,-4(fp)
  8019b4:	10c086c5 	stb	r3,539(r2)
  8019b8:	e0bfff17 	ldw	r2,-4(fp)
  8019bc:	10800317 	ldw	r2,12(r2)
  8019c0:	1007883a 	mov	r3,r2
  8019c4:	e0bfff17 	ldw	r2,-4(fp)
  8019c8:	10c08705 	stb	r3,540(r2)
  8019cc:	e0bfff17 	ldw	r2,-4(fp)
  8019d0:	10800317 	ldw	r2,12(r2)
  8019d4:	10bfffcc 	andi	r2,r2,65535
  8019d8:	1004d23a 	srli	r2,r2,8
  8019dc:	1007883a 	mov	r3,r2
  8019e0:	e0bfff17 	ldw	r2,-4(fp)
  8019e4:	10c08745 	stb	r3,541(r2)
  8019e8:	e0bfff17 	ldw	r2,-4(fp)
  8019ec:	10800317 	ldw	r2,12(r2)
  8019f0:	1004d43a 	srli	r2,r2,16
  8019f4:	1007883a 	mov	r3,r2
  8019f8:	e0bfff17 	ldw	r2,-4(fp)
  8019fc:	10c08785 	stb	r3,542(r2)
  801a00:	e0bfff17 	ldw	r2,-4(fp)
  801a04:	10800317 	ldw	r2,12(r2)
  801a08:	1004d63a 	srli	r2,r2,24
  801a0c:	1007883a 	mov	r3,r2
  801a10:	e0bfff17 	ldw	r2,-4(fp)
  801a14:	10c087c5 	stb	r3,543(r2)
  801a18:	e0bfff17 	ldw	r2,-4(fp)
  801a1c:	10800043 	ldbu	r2,1(r2)
  801a20:	11003fcc 	andi	r4,r2,255
  801a24:	e0bfff17 	ldw	r2,-4(fp)
  801a28:	10c00c04 	addi	r3,r2,48
  801a2c:	e0bfff17 	ldw	r2,-4(fp)
  801a30:	10800517 	ldw	r2,20(r2)
  801a34:	180b883a 	mov	r5,r3
  801a38:	100d883a 	mov	r6,r2
  801a3c:	01c00044 	movi	r7,1
  801a40:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  801a44:	e0bfff17 	ldw	r2,-4(fp)
  801a48:	10000145 	stb	zero,5(r2)
  801a4c:	e0bfff17 	ldw	r2,-4(fp)
  801a50:	10800043 	ldbu	r2,1(r2)
  801a54:	10803fcc 	andi	r2,r2,255
  801a58:	1009883a 	mov	r4,r2
  801a5c:	000b883a 	mov	r5,zero
  801a60:	000d883a 	mov	r6,zero
  801a64:	08010740 	call	801074 <ffs_DiskIOIoctl>
  801a68:	10000226 	beq	r2,zero,801a74 <sync+0x204>
  801a6c:	00800044 	movi	r2,1
  801a70:	e0bffe15 	stw	r2,-8(fp)
  801a74:	e0bffe17 	ldw	r2,-8(fp)
  801a78:	e037883a 	mov	sp,fp
  801a7c:	dfc00117 	ldw	ra,4(sp)
  801a80:	df000017 	ldw	fp,0(sp)
  801a84:	dec00204 	addi	sp,sp,8
  801a88:	f800283a 	ret

00801a8c <clust2sect>:
  801a8c:	defffd04 	addi	sp,sp,-12
  801a90:	df000215 	stw	fp,8(sp)
  801a94:	df000204 	addi	fp,sp,8
  801a98:	e13ffe15 	stw	r4,-8(fp)
  801a9c:	e17fff15 	stw	r5,-4(fp)
  801aa0:	e0bfff17 	ldw	r2,-4(fp)
  801aa4:	10bfff84 	addi	r2,r2,-2
  801aa8:	e0bfff15 	stw	r2,-4(fp)
  801aac:	e0bffe17 	ldw	r2,-8(fp)
  801ab0:	10800617 	ldw	r2,24(r2)
  801ab4:	10bfff84 	addi	r2,r2,-2
  801ab8:	e0ffff17 	ldw	r3,-4(fp)
  801abc:	18800236 	bltu	r3,r2,801ac8 <clust2sect+0x3c>
  801ac0:	0005883a 	mov	r2,zero
  801ac4:	00000806 	br	801ae8 <clust2sect+0x5c>
  801ac8:	e0bffe17 	ldw	r2,-8(fp)
  801acc:	10800083 	ldbu	r2,2(r2)
  801ad0:	10c03fcc 	andi	r3,r2,255
  801ad4:	e0bfff17 	ldw	r2,-4(fp)
  801ad8:	1887383a 	mul	r3,r3,r2
  801adc:	e0bffe17 	ldw	r2,-8(fp)
  801ae0:	10800a17 	ldw	r2,40(r2)
  801ae4:	1885883a 	add	r2,r3,r2
  801ae8:	e037883a 	mov	sp,fp
  801aec:	df000017 	ldw	fp,0(sp)
  801af0:	dec00104 	addi	sp,sp,4
  801af4:	f800283a 	ret

00801af8 <get_fat>:
  801af8:	defff904 	addi	sp,sp,-28
  801afc:	dfc00615 	stw	ra,24(sp)
  801b00:	df000515 	stw	fp,20(sp)
  801b04:	df000504 	addi	fp,sp,20
  801b08:	e13ffe15 	stw	r4,-8(fp)
  801b0c:	e17fff15 	stw	r5,-4(fp)
  801b10:	e0bfff17 	ldw	r2,-4(fp)
  801b14:	108000b0 	cmpltui	r2,r2,2
  801b18:	1000041e 	bne	r2,zero,801b2c <get_fat+0x34>
  801b1c:	e0bffe17 	ldw	r2,-8(fp)
  801b20:	10800617 	ldw	r2,24(r2)
  801b24:	e0ffff17 	ldw	r3,-4(fp)
  801b28:	18800236 	bltu	r3,r2,801b34 <get_fat+0x3c>
  801b2c:	00800044 	movi	r2,1
  801b30:	00008d06 	br	801d68 <get_fat+0x270>
  801b34:	e0bffe17 	ldw	r2,-8(fp)
  801b38:	10800003 	ldbu	r2,0(r2)
  801b3c:	10803fcc 	andi	r2,r2,255
  801b40:	10c000a0 	cmpeqi	r3,r2,2
  801b44:	18003f1e 	bne	r3,zero,801c44 <get_fat+0x14c>
  801b48:	10c000e0 	cmpeqi	r3,r2,3
  801b4c:	18005a1e 	bne	r3,zero,801cb8 <get_fat+0x1c0>
  801b50:	10800060 	cmpeqi	r2,r2,1
  801b54:	10008326 	beq	r2,zero,801d64 <get_fat+0x26c>
  801b58:	e0bfff17 	ldw	r2,-4(fp)
  801b5c:	e0bffb15 	stw	r2,-20(fp)
  801b60:	e0bffb17 	ldw	r2,-20(fp)
  801b64:	1004d07a 	srli	r2,r2,1
  801b68:	e0fffb17 	ldw	r3,-20(fp)
  801b6c:	1885883a 	add	r2,r3,r2
  801b70:	e0bffb15 	stw	r2,-20(fp)
  801b74:	e0bffe17 	ldw	r2,-8(fp)
  801b78:	10c00817 	ldw	r3,32(r2)
  801b7c:	e0bffb17 	ldw	r2,-20(fp)
  801b80:	1004d27a 	srli	r2,r2,9
  801b84:	1885883a 	add	r2,r3,r2
  801b88:	e13ffe17 	ldw	r4,-8(fp)
  801b8c:	100b883a 	mov	r5,r2
  801b90:	08017140 	call	801714 <move_window>
  801b94:	10000126 	beq	r2,zero,801b9c <get_fat+0xa4>
  801b98:	00007206 	br	801d64 <get_fat+0x26c>
  801b9c:	e0bffb17 	ldw	r2,-20(fp)
  801ba0:	10807fcc 	andi	r2,r2,511
  801ba4:	e0fffe17 	ldw	r3,-8(fp)
  801ba8:	1885883a 	add	r2,r3,r2
  801bac:	10800c04 	addi	r2,r2,48
  801bb0:	10800003 	ldbu	r2,0(r2)
  801bb4:	10803fcc 	andi	r2,r2,255
  801bb8:	e0bffc15 	stw	r2,-16(fp)
  801bbc:	e0bffb17 	ldw	r2,-20(fp)
  801bc0:	10800044 	addi	r2,r2,1
  801bc4:	e0bffb15 	stw	r2,-20(fp)
  801bc8:	e0bffe17 	ldw	r2,-8(fp)
  801bcc:	10c00817 	ldw	r3,32(r2)
  801bd0:	e0bffb17 	ldw	r2,-20(fp)
  801bd4:	1004d27a 	srli	r2,r2,9
  801bd8:	1885883a 	add	r2,r3,r2
  801bdc:	e13ffe17 	ldw	r4,-8(fp)
  801be0:	100b883a 	mov	r5,r2
  801be4:	08017140 	call	801714 <move_window>
  801be8:	10000126 	beq	r2,zero,801bf0 <get_fat+0xf8>
  801bec:	00005d06 	br	801d64 <get_fat+0x26c>
  801bf0:	e0bffb17 	ldw	r2,-20(fp)
  801bf4:	10807fcc 	andi	r2,r2,511
  801bf8:	e0fffe17 	ldw	r3,-8(fp)
  801bfc:	1885883a 	add	r2,r3,r2
  801c00:	10800c04 	addi	r2,r2,48
  801c04:	10800003 	ldbu	r2,0(r2)
  801c08:	10803fcc 	andi	r2,r2,255
  801c0c:	1004923a 	slli	r2,r2,8
  801c10:	1007883a 	mov	r3,r2
  801c14:	e0bffc17 	ldw	r2,-16(fp)
  801c18:	10c4b03a 	or	r2,r2,r3
  801c1c:	e0bffc15 	stw	r2,-16(fp)
  801c20:	e0bfff17 	ldw	r2,-4(fp)
  801c24:	1080004c 	andi	r2,r2,1
  801c28:	10000326 	beq	r2,zero,801c38 <get_fat+0x140>
  801c2c:	e0bffc17 	ldw	r2,-16(fp)
  801c30:	1004d13a 	srli	r2,r2,4
  801c34:	00004c06 	br	801d68 <get_fat+0x270>
  801c38:	e0bffc17 	ldw	r2,-16(fp)
  801c3c:	1083ffcc 	andi	r2,r2,4095
  801c40:	00004906 	br	801d68 <get_fat+0x270>
  801c44:	e0bffe17 	ldw	r2,-8(fp)
  801c48:	10c00817 	ldw	r3,32(r2)
  801c4c:	e0bfff17 	ldw	r2,-4(fp)
  801c50:	1004d23a 	srli	r2,r2,8
  801c54:	1885883a 	add	r2,r3,r2
  801c58:	e13ffe17 	ldw	r4,-8(fp)
  801c5c:	100b883a 	mov	r5,r2
  801c60:	08017140 	call	801714 <move_window>
  801c64:	10000126 	beq	r2,zero,801c6c <get_fat+0x174>
  801c68:	00003e06 	br	801d64 <get_fat+0x26c>
  801c6c:	e0bfff17 	ldw	r2,-4(fp)
  801c70:	1085883a 	add	r2,r2,r2
  801c74:	10807f8c 	andi	r2,r2,510
  801c78:	10800c04 	addi	r2,r2,48
  801c7c:	e0fffe17 	ldw	r3,-8(fp)
  801c80:	1885883a 	add	r2,r3,r2
  801c84:	e0bffd15 	stw	r2,-12(fp)
  801c88:	e0bffd17 	ldw	r2,-12(fp)
  801c8c:	10800044 	addi	r2,r2,1
  801c90:	10800003 	ldbu	r2,0(r2)
  801c94:	10803fcc 	andi	r2,r2,255
  801c98:	1004923a 	slli	r2,r2,8
  801c9c:	1007883a 	mov	r3,r2
  801ca0:	e0bffd17 	ldw	r2,-12(fp)
  801ca4:	10800003 	ldbu	r2,0(r2)
  801ca8:	10803fcc 	andi	r2,r2,255
  801cac:	1884b03a 	or	r2,r3,r2
  801cb0:	10bfffcc 	andi	r2,r2,65535
  801cb4:	00002c06 	br	801d68 <get_fat+0x270>
  801cb8:	e0bffe17 	ldw	r2,-8(fp)
  801cbc:	10c00817 	ldw	r3,32(r2)
  801cc0:	e0bfff17 	ldw	r2,-4(fp)
  801cc4:	1004d1fa 	srli	r2,r2,7
  801cc8:	1885883a 	add	r2,r3,r2
  801ccc:	e13ffe17 	ldw	r4,-8(fp)
  801cd0:	100b883a 	mov	r5,r2
  801cd4:	08017140 	call	801714 <move_window>
  801cd8:	10000126 	beq	r2,zero,801ce0 <get_fat+0x1e8>
  801cdc:	00002106 	br	801d64 <get_fat+0x26c>
  801ce0:	e0bfff17 	ldw	r2,-4(fp)
  801ce4:	1085883a 	add	r2,r2,r2
  801ce8:	1085883a 	add	r2,r2,r2
  801cec:	10807f0c 	andi	r2,r2,508
  801cf0:	10800c04 	addi	r2,r2,48
  801cf4:	e0fffe17 	ldw	r3,-8(fp)
  801cf8:	1885883a 	add	r2,r3,r2
  801cfc:	e0bffd15 	stw	r2,-12(fp)
  801d00:	e0bffd17 	ldw	r2,-12(fp)
  801d04:	108000c4 	addi	r2,r2,3
  801d08:	10800003 	ldbu	r2,0(r2)
  801d0c:	10803fcc 	andi	r2,r2,255
  801d10:	1006963a 	slli	r3,r2,24
  801d14:	e0bffd17 	ldw	r2,-12(fp)
  801d18:	10800084 	addi	r2,r2,2
  801d1c:	10800003 	ldbu	r2,0(r2)
  801d20:	10803fcc 	andi	r2,r2,255
  801d24:	1004943a 	slli	r2,r2,16
  801d28:	1884b03a 	or	r2,r3,r2
  801d2c:	e0fffd17 	ldw	r3,-12(fp)
  801d30:	18c00044 	addi	r3,r3,1
  801d34:	18c00003 	ldbu	r3,0(r3)
  801d38:	18c03fcc 	andi	r3,r3,255
  801d3c:	1806923a 	slli	r3,r3,8
  801d40:	10c6b03a 	or	r3,r2,r3
  801d44:	e0bffd17 	ldw	r2,-12(fp)
  801d48:	10800003 	ldbu	r2,0(r2)
  801d4c:	10803fcc 	andi	r2,r2,255
  801d50:	1886b03a 	or	r3,r3,r2
  801d54:	00840034 	movhi	r2,4096
  801d58:	10bfffc4 	addi	r2,r2,-1
  801d5c:	1884703a 	and	r2,r3,r2
  801d60:	00000106 	br	801d68 <get_fat+0x270>
  801d64:	00bfffc4 	movi	r2,-1
  801d68:	e037883a 	mov	sp,fp
  801d6c:	dfc00117 	ldw	ra,4(sp)
  801d70:	df000017 	ldw	fp,0(sp)
  801d74:	dec00204 	addi	sp,sp,8
  801d78:	f800283a 	ret

00801d7c <put_fat>:
  801d7c:	defff804 	addi	sp,sp,-32
  801d80:	dfc00715 	stw	ra,28(sp)
  801d84:	df000615 	stw	fp,24(sp)
  801d88:	df000604 	addi	fp,sp,24
  801d8c:	e13ffd15 	stw	r4,-12(fp)
  801d90:	e17ffe15 	stw	r5,-8(fp)
  801d94:	e1bfff15 	stw	r6,-4(fp)
  801d98:	e0bffe17 	ldw	r2,-8(fp)
  801d9c:	108000b0 	cmpltui	r2,r2,2
  801da0:	1000041e 	bne	r2,zero,801db4 <put_fat+0x38>
  801da4:	e0bffd17 	ldw	r2,-12(fp)
  801da8:	10800617 	ldw	r2,24(r2)
  801dac:	e0fffe17 	ldw	r3,-8(fp)
  801db0:	18800336 	bltu	r3,r2,801dc0 <put_fat+0x44>
  801db4:	00800084 	movi	r2,2
  801db8:	e0bffa15 	stw	r2,-24(fp)
  801dbc:	0000c506 	br	8020d4 <put_fat+0x358>
  801dc0:	e0bffd17 	ldw	r2,-12(fp)
  801dc4:	10800003 	ldbu	r2,0(r2)
  801dc8:	10803fcc 	andi	r2,r2,255
  801dcc:	10c000a0 	cmpeqi	r3,r2,2
  801dd0:	18005b1e 	bne	r3,zero,801f40 <put_fat+0x1c4>
  801dd4:	10c000e0 	cmpeqi	r3,r2,3
  801dd8:	1800771e 	bne	r3,zero,801fb8 <put_fat+0x23c>
  801ddc:	10800060 	cmpeqi	r2,r2,1
  801de0:	1000b726 	beq	r2,zero,8020c0 <put_fat+0x344>
  801de4:	e0bffe17 	ldw	r2,-8(fp)
  801de8:	e0bffb15 	stw	r2,-20(fp)
  801dec:	e0bffb17 	ldw	r2,-20(fp)
  801df0:	1004d07a 	srli	r2,r2,1
  801df4:	e0fffb17 	ldw	r3,-20(fp)
  801df8:	1885883a 	add	r2,r3,r2
  801dfc:	e0bffb15 	stw	r2,-20(fp)
  801e00:	e0bffd17 	ldw	r2,-12(fp)
  801e04:	10c00817 	ldw	r3,32(r2)
  801e08:	e0bffb17 	ldw	r2,-20(fp)
  801e0c:	1004d27a 	srli	r2,r2,9
  801e10:	1885883a 	add	r2,r3,r2
  801e14:	e13ffd17 	ldw	r4,-12(fp)
  801e18:	100b883a 	mov	r5,r2
  801e1c:	08017140 	call	801714 <move_window>
  801e20:	e0bffa15 	stw	r2,-24(fp)
  801e24:	e0bffa17 	ldw	r2,-24(fp)
  801e28:	10000126 	beq	r2,zero,801e30 <put_fat+0xb4>
  801e2c:	0000a606 	br	8020c8 <put_fat+0x34c>
  801e30:	e0bffb17 	ldw	r2,-20(fp)
  801e34:	10807fcc 	andi	r2,r2,511
  801e38:	10800c04 	addi	r2,r2,48
  801e3c:	e0fffd17 	ldw	r3,-12(fp)
  801e40:	1885883a 	add	r2,r3,r2
  801e44:	e0bffc15 	stw	r2,-16(fp)
  801e48:	e0bffe17 	ldw	r2,-8(fp)
  801e4c:	1080004c 	andi	r2,r2,1
  801e50:	10000a26 	beq	r2,zero,801e7c <put_fat+0x100>
  801e54:	e0bffc17 	ldw	r2,-16(fp)
  801e58:	10800003 	ldbu	r2,0(r2)
  801e5c:	108003cc 	andi	r2,r2,15
  801e60:	1007883a 	mov	r3,r2
  801e64:	e0bfff17 	ldw	r2,-4(fp)
  801e68:	10803fcc 	andi	r2,r2,255
  801e6c:	1004913a 	slli	r2,r2,4
  801e70:	1884b03a 	or	r2,r3,r2
  801e74:	1007883a 	mov	r3,r2
  801e78:	00000206 	br	801e84 <put_fat+0x108>
  801e7c:	e0bfff17 	ldw	r2,-4(fp)
  801e80:	1007883a 	mov	r3,r2
  801e84:	e0bffc17 	ldw	r2,-16(fp)
  801e88:	10c00005 	stb	r3,0(r2)
  801e8c:	e0bffb17 	ldw	r2,-20(fp)
  801e90:	10800044 	addi	r2,r2,1
  801e94:	e0bffb15 	stw	r2,-20(fp)
  801e98:	e0bffd17 	ldw	r2,-12(fp)
  801e9c:	00c00044 	movi	r3,1
  801ea0:	10c00105 	stb	r3,4(r2)
  801ea4:	e0bffd17 	ldw	r2,-12(fp)
  801ea8:	10c00817 	ldw	r3,32(r2)
  801eac:	e0bffb17 	ldw	r2,-20(fp)
  801eb0:	1004d27a 	srli	r2,r2,9
  801eb4:	1885883a 	add	r2,r3,r2
  801eb8:	e13ffd17 	ldw	r4,-12(fp)
  801ebc:	100b883a 	mov	r5,r2
  801ec0:	08017140 	call	801714 <move_window>
  801ec4:	e0bffa15 	stw	r2,-24(fp)
  801ec8:	e0bffa17 	ldw	r2,-24(fp)
  801ecc:	10000126 	beq	r2,zero,801ed4 <put_fat+0x158>
  801ed0:	00007d06 	br	8020c8 <put_fat+0x34c>
  801ed4:	e0bffb17 	ldw	r2,-20(fp)
  801ed8:	10807fcc 	andi	r2,r2,511
  801edc:	10800c04 	addi	r2,r2,48
  801ee0:	e0fffd17 	ldw	r3,-12(fp)
  801ee4:	1885883a 	add	r2,r3,r2
  801ee8:	e0bffc15 	stw	r2,-16(fp)
  801eec:	e0bffe17 	ldw	r2,-8(fp)
  801ef0:	1080004c 	andi	r2,r2,1
  801ef4:	10000426 	beq	r2,zero,801f08 <put_fat+0x18c>
  801ef8:	e0bfff17 	ldw	r2,-4(fp)
  801efc:	1004d13a 	srli	r2,r2,4
  801f00:	1007883a 	mov	r3,r2
  801f04:	00000b06 	br	801f34 <put_fat+0x1b8>
  801f08:	e0bffc17 	ldw	r2,-16(fp)
  801f0c:	10800003 	ldbu	r2,0(r2)
  801f10:	1007883a 	mov	r3,r2
  801f14:	00bffc04 	movi	r2,-16
  801f18:	1884703a 	and	r2,r3,r2
  801f1c:	1007883a 	mov	r3,r2
  801f20:	e0bfff17 	ldw	r2,-4(fp)
  801f24:	1004d23a 	srli	r2,r2,8
  801f28:	108003cc 	andi	r2,r2,15
  801f2c:	1884b03a 	or	r2,r3,r2
  801f30:	1007883a 	mov	r3,r2
  801f34:	e0bffc17 	ldw	r2,-16(fp)
  801f38:	10c00005 	stb	r3,0(r2)
  801f3c:	00006206 	br	8020c8 <put_fat+0x34c>
  801f40:	e0bffd17 	ldw	r2,-12(fp)
  801f44:	10c00817 	ldw	r3,32(r2)
  801f48:	e0bffe17 	ldw	r2,-8(fp)
  801f4c:	1004d23a 	srli	r2,r2,8
  801f50:	1885883a 	add	r2,r3,r2
  801f54:	e13ffd17 	ldw	r4,-12(fp)
  801f58:	100b883a 	mov	r5,r2
  801f5c:	08017140 	call	801714 <move_window>
  801f60:	e0bffa15 	stw	r2,-24(fp)
  801f64:	e0bffa17 	ldw	r2,-24(fp)
  801f68:	10000126 	beq	r2,zero,801f70 <put_fat+0x1f4>
  801f6c:	00005606 	br	8020c8 <put_fat+0x34c>
  801f70:	e0bffe17 	ldw	r2,-8(fp)
  801f74:	1085883a 	add	r2,r2,r2
  801f78:	10807f8c 	andi	r2,r2,510
  801f7c:	10800c04 	addi	r2,r2,48
  801f80:	e0fffd17 	ldw	r3,-12(fp)
  801f84:	1885883a 	add	r2,r3,r2
  801f88:	e0bffc15 	stw	r2,-16(fp)
  801f8c:	e0bfff17 	ldw	r2,-4(fp)
  801f90:	1007883a 	mov	r3,r2
  801f94:	e0bffc17 	ldw	r2,-16(fp)
  801f98:	10c00005 	stb	r3,0(r2)
  801f9c:	e0bffc17 	ldw	r2,-16(fp)
  801fa0:	10800044 	addi	r2,r2,1
  801fa4:	e0ffff17 	ldw	r3,-4(fp)
  801fa8:	18ffffcc 	andi	r3,r3,65535
  801fac:	1806d23a 	srli	r3,r3,8
  801fb0:	10c00005 	stb	r3,0(r2)
  801fb4:	00004406 	br	8020c8 <put_fat+0x34c>
  801fb8:	e0bffd17 	ldw	r2,-12(fp)
  801fbc:	10c00817 	ldw	r3,32(r2)
  801fc0:	e0bffe17 	ldw	r2,-8(fp)
  801fc4:	1004d1fa 	srli	r2,r2,7
  801fc8:	1885883a 	add	r2,r3,r2
  801fcc:	e13ffd17 	ldw	r4,-12(fp)
  801fd0:	100b883a 	mov	r5,r2
  801fd4:	08017140 	call	801714 <move_window>
  801fd8:	e0bffa15 	stw	r2,-24(fp)
  801fdc:	e0bffa17 	ldw	r2,-24(fp)
  801fe0:	10000126 	beq	r2,zero,801fe8 <put_fat+0x26c>
  801fe4:	00003806 	br	8020c8 <put_fat+0x34c>
  801fe8:	e0bffe17 	ldw	r2,-8(fp)
  801fec:	1085883a 	add	r2,r2,r2
  801ff0:	1085883a 	add	r2,r2,r2
  801ff4:	10807f0c 	andi	r2,r2,508
  801ff8:	10800c04 	addi	r2,r2,48
  801ffc:	e0fffd17 	ldw	r3,-12(fp)
  802000:	1885883a 	add	r2,r3,r2
  802004:	e0bffc15 	stw	r2,-16(fp)
  802008:	e0bffc17 	ldw	r2,-16(fp)
  80200c:	108000c4 	addi	r2,r2,3
  802010:	10800003 	ldbu	r2,0(r2)
  802014:	10803fcc 	andi	r2,r2,255
  802018:	1006963a 	slli	r3,r2,24
  80201c:	e0bffc17 	ldw	r2,-16(fp)
  802020:	10800084 	addi	r2,r2,2
  802024:	10800003 	ldbu	r2,0(r2)
  802028:	10803fcc 	andi	r2,r2,255
  80202c:	1004943a 	slli	r2,r2,16
  802030:	1884b03a 	or	r2,r3,r2
  802034:	e0fffc17 	ldw	r3,-16(fp)
  802038:	18c00044 	addi	r3,r3,1
  80203c:	18c00003 	ldbu	r3,0(r3)
  802040:	18c03fcc 	andi	r3,r3,255
  802044:	1806923a 	slli	r3,r3,8
  802048:	10c6b03a 	or	r3,r2,r3
  80204c:	e0bffc17 	ldw	r2,-16(fp)
  802050:	10800003 	ldbu	r2,0(r2)
  802054:	10803fcc 	andi	r2,r2,255
  802058:	1884b03a 	or	r2,r3,r2
  80205c:	10bc002c 	andhi	r2,r2,61440
  802060:	e0ffff17 	ldw	r3,-4(fp)
  802064:	1884b03a 	or	r2,r3,r2
  802068:	e0bfff15 	stw	r2,-4(fp)
  80206c:	e0bfff17 	ldw	r2,-4(fp)
  802070:	1007883a 	mov	r3,r2
  802074:	e0bffc17 	ldw	r2,-16(fp)
  802078:	10c00005 	stb	r3,0(r2)
  80207c:	e0bffc17 	ldw	r2,-16(fp)
  802080:	10800044 	addi	r2,r2,1
  802084:	e0ffff17 	ldw	r3,-4(fp)
  802088:	18ffffcc 	andi	r3,r3,65535
  80208c:	1806d23a 	srli	r3,r3,8
  802090:	10c00005 	stb	r3,0(r2)
  802094:	e0bffc17 	ldw	r2,-16(fp)
  802098:	10800084 	addi	r2,r2,2
  80209c:	e0ffff17 	ldw	r3,-4(fp)
  8020a0:	1806d43a 	srli	r3,r3,16
  8020a4:	10c00005 	stb	r3,0(r2)
  8020a8:	e0bffc17 	ldw	r2,-16(fp)
  8020ac:	108000c4 	addi	r2,r2,3
  8020b0:	e0ffff17 	ldw	r3,-4(fp)
  8020b4:	1806d63a 	srli	r3,r3,24
  8020b8:	10c00005 	stb	r3,0(r2)
  8020bc:	00000206 	br	8020c8 <put_fat+0x34c>
  8020c0:	00800084 	movi	r2,2
  8020c4:	e0bffa15 	stw	r2,-24(fp)
  8020c8:	e0bffd17 	ldw	r2,-12(fp)
  8020cc:	00c00044 	movi	r3,1
  8020d0:	10c00105 	stb	r3,4(r2)
  8020d4:	e0bffa17 	ldw	r2,-24(fp)
  8020d8:	e037883a 	mov	sp,fp
  8020dc:	dfc00117 	ldw	ra,4(sp)
  8020e0:	df000017 	ldw	fp,0(sp)
  8020e4:	dec00204 	addi	sp,sp,8
  8020e8:	f800283a 	ret

008020ec <remove_chain>:
  8020ec:	defffa04 	addi	sp,sp,-24
  8020f0:	dfc00515 	stw	ra,20(sp)
  8020f4:	df000415 	stw	fp,16(sp)
  8020f8:	df000404 	addi	fp,sp,16
  8020fc:	e13ffe15 	stw	r4,-8(fp)
  802100:	e17fff15 	stw	r5,-4(fp)
  802104:	e0bfff17 	ldw	r2,-4(fp)
  802108:	108000b0 	cmpltui	r2,r2,2
  80210c:	1000041e 	bne	r2,zero,802120 <remove_chain+0x34>
  802110:	e0bffe17 	ldw	r2,-8(fp)
  802114:	10800617 	ldw	r2,24(r2)
  802118:	e0ffff17 	ldw	r3,-4(fp)
  80211c:	18800336 	bltu	r3,r2,80212c <remove_chain+0x40>
  802120:	00800084 	movi	r2,2
  802124:	e0bffc15 	stw	r2,-16(fp)
  802128:	00002f06 	br	8021e8 <remove_chain+0xfc>
  80212c:	e03ffc15 	stw	zero,-16(fp)
  802130:	00002906 	br	8021d8 <remove_chain+0xec>
  802134:	e13ffe17 	ldw	r4,-8(fp)
  802138:	e17fff17 	ldw	r5,-4(fp)
  80213c:	0801af80 	call	801af8 <get_fat>
  802140:	e0bffd15 	stw	r2,-12(fp)
  802144:	e0bffd17 	ldw	r2,-12(fp)
  802148:	1000011e 	bne	r2,zero,802150 <remove_chain+0x64>
  80214c:	00002606 	br	8021e8 <remove_chain+0xfc>
  802150:	e0bffd17 	ldw	r2,-12(fp)
  802154:	10800058 	cmpnei	r2,r2,1
  802158:	1000031e 	bne	r2,zero,802168 <remove_chain+0x7c>
  80215c:	00800084 	movi	r2,2
  802160:	e0bffc15 	stw	r2,-16(fp)
  802164:	00002006 	br	8021e8 <remove_chain+0xfc>
  802168:	e0bffd17 	ldw	r2,-12(fp)
  80216c:	10bfffd8 	cmpnei	r2,r2,-1
  802170:	1000031e 	bne	r2,zero,802180 <remove_chain+0x94>
  802174:	00800044 	movi	r2,1
  802178:	e0bffc15 	stw	r2,-16(fp)
  80217c:	00001a06 	br	8021e8 <remove_chain+0xfc>
  802180:	e13ffe17 	ldw	r4,-8(fp)
  802184:	e17fff17 	ldw	r5,-4(fp)
  802188:	000d883a 	mov	r6,zero
  80218c:	0801d7c0 	call	801d7c <put_fat>
  802190:	e0bffc15 	stw	r2,-16(fp)
  802194:	e0bffc17 	ldw	r2,-16(fp)
  802198:	10000126 	beq	r2,zero,8021a0 <remove_chain+0xb4>
  80219c:	00001206 	br	8021e8 <remove_chain+0xfc>
  8021a0:	e0bffe17 	ldw	r2,-8(fp)
  8021a4:	10800417 	ldw	r2,16(r2)
  8021a8:	10bfffe0 	cmpeqi	r2,r2,-1
  8021ac:	1000081e 	bne	r2,zero,8021d0 <remove_chain+0xe4>
  8021b0:	e0bffe17 	ldw	r2,-8(fp)
  8021b4:	10800417 	ldw	r2,16(r2)
  8021b8:	10c00044 	addi	r3,r2,1
  8021bc:	e0bffe17 	ldw	r2,-8(fp)
  8021c0:	10c00415 	stw	r3,16(r2)
  8021c4:	e0bffe17 	ldw	r2,-8(fp)
  8021c8:	00c00044 	movi	r3,1
  8021cc:	10c00145 	stb	r3,5(r2)
  8021d0:	e0bffd17 	ldw	r2,-12(fp)
  8021d4:	e0bfff15 	stw	r2,-4(fp)
  8021d8:	e0bffe17 	ldw	r2,-8(fp)
  8021dc:	10800617 	ldw	r2,24(r2)
  8021e0:	e0ffff17 	ldw	r3,-4(fp)
  8021e4:	18bfd336 	bltu	r3,r2,802134 <__alt_data_end+0xff802134>
  8021e8:	e0bffc17 	ldw	r2,-16(fp)
  8021ec:	e037883a 	mov	sp,fp
  8021f0:	dfc00117 	ldw	ra,4(sp)
  8021f4:	df000017 	ldw	fp,0(sp)
  8021f8:	dec00204 	addi	sp,sp,8
  8021fc:	f800283a 	ret

00802200 <create_chain>:
  802200:	defff804 	addi	sp,sp,-32
  802204:	dfc00715 	stw	ra,28(sp)
  802208:	df000615 	stw	fp,24(sp)
  80220c:	df000604 	addi	fp,sp,24
  802210:	e13ffe15 	stw	r4,-8(fp)
  802214:	e17fff15 	stw	r5,-4(fp)
  802218:	e0bfff17 	ldw	r2,-4(fp)
  80221c:	10000c1e 	bne	r2,zero,802250 <create_chain+0x50>
  802220:	e0bffe17 	ldw	r2,-8(fp)
  802224:	10800317 	ldw	r2,12(r2)
  802228:	e0bffb15 	stw	r2,-20(fp)
  80222c:	e0bffb17 	ldw	r2,-20(fp)
  802230:	10000426 	beq	r2,zero,802244 <create_chain+0x44>
  802234:	e0bffe17 	ldw	r2,-8(fp)
  802238:	10800617 	ldw	r2,24(r2)
  80223c:	e0fffb17 	ldw	r3,-20(fp)
  802240:	18801436 	bltu	r3,r2,802294 <create_chain+0x94>
  802244:	00800044 	movi	r2,1
  802248:	e0bffb15 	stw	r2,-20(fp)
  80224c:	00001106 	br	802294 <create_chain+0x94>
  802250:	e13ffe17 	ldw	r4,-8(fp)
  802254:	e17fff17 	ldw	r5,-4(fp)
  802258:	0801af80 	call	801af8 <get_fat>
  80225c:	e0bffd15 	stw	r2,-12(fp)
  802260:	e0bffd17 	ldw	r2,-12(fp)
  802264:	108000a8 	cmpgeui	r2,r2,2
  802268:	1000021e 	bne	r2,zero,802274 <create_chain+0x74>
  80226c:	00800044 	movi	r2,1
  802270:	00005706 	br	8023d0 <create_chain+0x1d0>
  802274:	e0bffe17 	ldw	r2,-8(fp)
  802278:	10800617 	ldw	r2,24(r2)
  80227c:	e0fffd17 	ldw	r3,-12(fp)
  802280:	1880022e 	bgeu	r3,r2,80228c <create_chain+0x8c>
  802284:	e0bffd17 	ldw	r2,-12(fp)
  802288:	00005106 	br	8023d0 <create_chain+0x1d0>
  80228c:	e0bfff17 	ldw	r2,-4(fp)
  802290:	e0bffb15 	stw	r2,-20(fp)
  802294:	e0bffb17 	ldw	r2,-20(fp)
  802298:	e0bffa15 	stw	r2,-24(fp)
  80229c:	e0bffa17 	ldw	r2,-24(fp)
  8022a0:	10800044 	addi	r2,r2,1
  8022a4:	e0bffa15 	stw	r2,-24(fp)
  8022a8:	e0bffe17 	ldw	r2,-8(fp)
  8022ac:	10800617 	ldw	r2,24(r2)
  8022b0:	e0fffa17 	ldw	r3,-24(fp)
  8022b4:	18800736 	bltu	r3,r2,8022d4 <create_chain+0xd4>
  8022b8:	00800084 	movi	r2,2
  8022bc:	e0bffa15 	stw	r2,-24(fp)
  8022c0:	e0bffa17 	ldw	r2,-24(fp)
  8022c4:	e0fffb17 	ldw	r3,-20(fp)
  8022c8:	1880022e 	bgeu	r3,r2,8022d4 <create_chain+0xd4>
  8022cc:	0005883a 	mov	r2,zero
  8022d0:	00003f06 	br	8023d0 <create_chain+0x1d0>
  8022d4:	e13ffe17 	ldw	r4,-8(fp)
  8022d8:	e17ffa17 	ldw	r5,-24(fp)
  8022dc:	0801af80 	call	801af8 <get_fat>
  8022e0:	e0bffd15 	stw	r2,-12(fp)
  8022e4:	e0bffd17 	ldw	r2,-12(fp)
  8022e8:	10000a1e 	bne	r2,zero,802314 <create_chain+0x114>
  8022ec:	0001883a 	nop
  8022f0:	e13ffe17 	ldw	r4,-8(fp)
  8022f4:	e17ffa17 	ldw	r5,-24(fp)
  8022f8:	01840034 	movhi	r6,4096
  8022fc:	31bfffc4 	addi	r6,r6,-1
  802300:	0801d7c0 	call	801d7c <put_fat>
  802304:	e0bffc15 	stw	r2,-16(fp)
  802308:	e0bffc17 	ldw	r2,-16(fp)
  80230c:	1000161e 	bne	r2,zero,802368 <create_chain+0x168>
  802310:	00000e06 	br	80234c <create_chain+0x14c>
  802314:	e0bffd17 	ldw	r2,-12(fp)
  802318:	10bfffe0 	cmpeqi	r2,r2,-1
  80231c:	1000031e 	bne	r2,zero,80232c <create_chain+0x12c>
  802320:	e0bffd17 	ldw	r2,-12(fp)
  802324:	10800058 	cmpnei	r2,r2,1
  802328:	1000021e 	bne	r2,zero,802334 <create_chain+0x134>
  80232c:	e0bffd17 	ldw	r2,-12(fp)
  802330:	00002706 	br	8023d0 <create_chain+0x1d0>
  802334:	e0fffa17 	ldw	r3,-24(fp)
  802338:	e0bffb17 	ldw	r2,-20(fp)
  80233c:	1880021e 	bne	r3,r2,802348 <create_chain+0x148>
  802340:	0005883a 	mov	r2,zero
  802344:	00002206 	br	8023d0 <create_chain+0x1d0>
  802348:	003fd406 	br	80229c <__alt_data_end+0xff80229c>
  80234c:	e0bfff17 	ldw	r2,-4(fp)
  802350:	10000526 	beq	r2,zero,802368 <create_chain+0x168>
  802354:	e13ffe17 	ldw	r4,-8(fp)
  802358:	e17fff17 	ldw	r5,-4(fp)
  80235c:	e1bffa17 	ldw	r6,-24(fp)
  802360:	0801d7c0 	call	801d7c <put_fat>
  802364:	e0bffc15 	stw	r2,-16(fp)
  802368:	e0bffc17 	ldw	r2,-16(fp)
  80236c:	1000101e 	bne	r2,zero,8023b0 <create_chain+0x1b0>
  802370:	e0bffe17 	ldw	r2,-8(fp)
  802374:	e0fffa17 	ldw	r3,-24(fp)
  802378:	10c00315 	stw	r3,12(r2)
  80237c:	e0bffe17 	ldw	r2,-8(fp)
  802380:	10800417 	ldw	r2,16(r2)
  802384:	10bfffe0 	cmpeqi	r2,r2,-1
  802388:	1000101e 	bne	r2,zero,8023cc <create_chain+0x1cc>
  80238c:	e0bffe17 	ldw	r2,-8(fp)
  802390:	10800417 	ldw	r2,16(r2)
  802394:	10ffffc4 	addi	r3,r2,-1
  802398:	e0bffe17 	ldw	r2,-8(fp)
  80239c:	10c00415 	stw	r3,16(r2)
  8023a0:	e0bffe17 	ldw	r2,-8(fp)
  8023a4:	00c00044 	movi	r3,1
  8023a8:	10c00145 	stb	r3,5(r2)
  8023ac:	00000706 	br	8023cc <create_chain+0x1cc>
  8023b0:	e0bffc17 	ldw	r2,-16(fp)
  8023b4:	10800058 	cmpnei	r2,r2,1
  8023b8:	1000021e 	bne	r2,zero,8023c4 <create_chain+0x1c4>
  8023bc:	00bfffc4 	movi	r2,-1
  8023c0:	00000106 	br	8023c8 <create_chain+0x1c8>
  8023c4:	00800044 	movi	r2,1
  8023c8:	e0bffa15 	stw	r2,-24(fp)
  8023cc:	e0bffa17 	ldw	r2,-24(fp)
  8023d0:	e037883a 	mov	sp,fp
  8023d4:	dfc00117 	ldw	ra,4(sp)
  8023d8:	df000017 	ldw	fp,0(sp)
  8023dc:	dec00204 	addi	sp,sp,8
  8023e0:	f800283a 	ret

008023e4 <dir_sdi>:
  8023e4:	defffa04 	addi	sp,sp,-24
  8023e8:	dfc00515 	stw	ra,20(sp)
  8023ec:	df000415 	stw	fp,16(sp)
  8023f0:	df000404 	addi	fp,sp,16
  8023f4:	e13ffe15 	stw	r4,-8(fp)
  8023f8:	2805883a 	mov	r2,r5
  8023fc:	e0bfff0d 	sth	r2,-4(fp)
  802400:	e0bffe17 	ldw	r2,-8(fp)
  802404:	e0ffff0b 	ldhu	r3,-4(fp)
  802408:	10c0018d 	sth	r3,6(r2)
  80240c:	e0bffe17 	ldw	r2,-8(fp)
  802410:	10800217 	ldw	r2,8(r2)
  802414:	e0bffc15 	stw	r2,-16(fp)
  802418:	e0bffc17 	ldw	r2,-16(fp)
  80241c:	10800060 	cmpeqi	r2,r2,1
  802420:	1000051e 	bne	r2,zero,802438 <dir_sdi+0x54>
  802424:	e0bffe17 	ldw	r2,-8(fp)
  802428:	10800017 	ldw	r2,0(r2)
  80242c:	10800617 	ldw	r2,24(r2)
  802430:	e0fffc17 	ldw	r3,-16(fp)
  802434:	18800236 	bltu	r3,r2,802440 <dir_sdi+0x5c>
  802438:	00800084 	movi	r2,2
  80243c:	00005f06 	br	8025bc <dir_sdi+0x1d8>
  802440:	e0bffc17 	ldw	r2,-16(fp)
  802444:	10000a1e 	bne	r2,zero,802470 <dir_sdi+0x8c>
  802448:	e0bffe17 	ldw	r2,-8(fp)
  80244c:	10800017 	ldw	r2,0(r2)
  802450:	10800003 	ldbu	r2,0(r2)
  802454:	10803fcc 	andi	r2,r2,255
  802458:	108000d8 	cmpnei	r2,r2,3
  80245c:	1000041e 	bne	r2,zero,802470 <dir_sdi+0x8c>
  802460:	e0bffe17 	ldw	r2,-8(fp)
  802464:	10800017 	ldw	r2,0(r2)
  802468:	10800917 	ldw	r2,36(r2)
  80246c:	e0bffc15 	stw	r2,-16(fp)
  802470:	e0bffc17 	ldw	r2,-16(fp)
  802474:	1000151e 	bne	r2,zero,8024cc <dir_sdi+0xe8>
  802478:	e0bffe17 	ldw	r2,-8(fp)
  80247c:	e0fffc17 	ldw	r3,-16(fp)
  802480:	10c00315 	stw	r3,12(r2)
  802484:	e0bffe17 	ldw	r2,-8(fp)
  802488:	10800017 	ldw	r2,0(r2)
  80248c:	1080020b 	ldhu	r2,8(r2)
  802490:	10bfffcc 	andi	r2,r2,65535
  802494:	e0ffff0b 	ldhu	r3,-4(fp)
  802498:	18800236 	bltu	r3,r2,8024a4 <dir_sdi+0xc0>
  80249c:	00800084 	movi	r2,2
  8024a0:	00004606 	br	8025bc <dir_sdi+0x1d8>
  8024a4:	e0bffe17 	ldw	r2,-8(fp)
  8024a8:	10800017 	ldw	r2,0(r2)
  8024ac:	10c00917 	ldw	r3,36(r2)
  8024b0:	e0bfff0b 	ldhu	r2,-4(fp)
  8024b4:	1004d13a 	srli	r2,r2,4
  8024b8:	10bfffcc 	andi	r2,r2,65535
  8024bc:	1887883a 	add	r3,r3,r2
  8024c0:	e0bffe17 	ldw	r2,-8(fp)
  8024c4:	10c00415 	stw	r3,16(r2)
  8024c8:	00003206 	br	802594 <dir_sdi+0x1b0>
  8024cc:	e0bffe17 	ldw	r2,-8(fp)
  8024d0:	10800017 	ldw	r2,0(r2)
  8024d4:	10800083 	ldbu	r2,2(r2)
  8024d8:	10803fcc 	andi	r2,r2,255
  8024dc:	1004913a 	slli	r2,r2,4
  8024e0:	e0bffd0d 	sth	r2,-12(fp)
  8024e4:	00001906 	br	80254c <dir_sdi+0x168>
  8024e8:	e0bffe17 	ldw	r2,-8(fp)
  8024ec:	10800017 	ldw	r2,0(r2)
  8024f0:	1009883a 	mov	r4,r2
  8024f4:	e17ffc17 	ldw	r5,-16(fp)
  8024f8:	0801af80 	call	801af8 <get_fat>
  8024fc:	e0bffc15 	stw	r2,-16(fp)
  802500:	e0bffc17 	ldw	r2,-16(fp)
  802504:	10bfffd8 	cmpnei	r2,r2,-1
  802508:	1000021e 	bne	r2,zero,802514 <dir_sdi+0x130>
  80250c:	00800044 	movi	r2,1
  802510:	00002a06 	br	8025bc <dir_sdi+0x1d8>
  802514:	e0bffc17 	ldw	r2,-16(fp)
  802518:	108000b0 	cmpltui	r2,r2,2
  80251c:	1000051e 	bne	r2,zero,802534 <dir_sdi+0x150>
  802520:	e0bffe17 	ldw	r2,-8(fp)
  802524:	10800017 	ldw	r2,0(r2)
  802528:	10800617 	ldw	r2,24(r2)
  80252c:	e0fffc17 	ldw	r3,-16(fp)
  802530:	18800236 	bltu	r3,r2,80253c <dir_sdi+0x158>
  802534:	00800084 	movi	r2,2
  802538:	00002006 	br	8025bc <dir_sdi+0x1d8>
  80253c:	e0ffff0b 	ldhu	r3,-4(fp)
  802540:	e0bffd0b 	ldhu	r2,-12(fp)
  802544:	1885c83a 	sub	r2,r3,r2
  802548:	e0bfff0d 	sth	r2,-4(fp)
  80254c:	e0ffff0b 	ldhu	r3,-4(fp)
  802550:	e0bffd0b 	ldhu	r2,-12(fp)
  802554:	18bfe42e 	bgeu	r3,r2,8024e8 <__alt_data_end+0xff8024e8>
  802558:	e0bffe17 	ldw	r2,-8(fp)
  80255c:	e0fffc17 	ldw	r3,-16(fp)
  802560:	10c00315 	stw	r3,12(r2)
  802564:	e0bffe17 	ldw	r2,-8(fp)
  802568:	10800017 	ldw	r2,0(r2)
  80256c:	1009883a 	mov	r4,r2
  802570:	e17ffc17 	ldw	r5,-16(fp)
  802574:	0801a8c0 	call	801a8c <clust2sect>
  802578:	1007883a 	mov	r3,r2
  80257c:	e0bfff0b 	ldhu	r2,-4(fp)
  802580:	1004d13a 	srli	r2,r2,4
  802584:	10bfffcc 	andi	r2,r2,65535
  802588:	1887883a 	add	r3,r3,r2
  80258c:	e0bffe17 	ldw	r2,-8(fp)
  802590:	10c00415 	stw	r3,16(r2)
  802594:	e0bffe17 	ldw	r2,-8(fp)
  802598:	10c00017 	ldw	r3,0(r2)
  80259c:	e0bfff0b 	ldhu	r2,-4(fp)
  8025a0:	108003cc 	andi	r2,r2,15
  8025a4:	1004917a 	slli	r2,r2,5
  8025a8:	10800c04 	addi	r2,r2,48
  8025ac:	1887883a 	add	r3,r3,r2
  8025b0:	e0bffe17 	ldw	r2,-8(fp)
  8025b4:	10c00515 	stw	r3,20(r2)
  8025b8:	0005883a 	mov	r2,zero
  8025bc:	e037883a 	mov	sp,fp
  8025c0:	dfc00117 	ldw	ra,4(sp)
  8025c4:	df000017 	ldw	fp,0(sp)
  8025c8:	dec00204 	addi	sp,sp,8
  8025cc:	f800283a 	ret

008025d0 <dir_next>:
  8025d0:	defff904 	addi	sp,sp,-28
  8025d4:	dfc00615 	stw	ra,24(sp)
  8025d8:	df000515 	stw	fp,20(sp)
  8025dc:	dc000415 	stw	r16,16(sp)
  8025e0:	df000504 	addi	fp,sp,20
  8025e4:	e13ffd15 	stw	r4,-12(fp)
  8025e8:	e17ffe15 	stw	r5,-8(fp)
  8025ec:	e0bffd17 	ldw	r2,-12(fp)
  8025f0:	1080018b 	ldhu	r2,6(r2)
  8025f4:	10800044 	addi	r2,r2,1
  8025f8:	e0bffc8d 	sth	r2,-14(fp)
  8025fc:	e0bffc8b 	ldhu	r2,-14(fp)
  802600:	10000326 	beq	r2,zero,802610 <dir_next+0x40>
  802604:	e0bffd17 	ldw	r2,-12(fp)
  802608:	10800417 	ldw	r2,16(r2)
  80260c:	1000021e 	bne	r2,zero,802618 <dir_next+0x48>
  802610:	00800104 	movi	r2,4
  802614:	0000a206 	br	8028a0 <dir_next+0x2d0>
  802618:	e0bffc8b 	ldhu	r2,-14(fp)
  80261c:	108003cc 	andi	r2,r2,15
  802620:	10bfffcc 	andi	r2,r2,65535
  802624:	1000911e 	bne	r2,zero,80286c <dir_next+0x29c>
  802628:	e0bffd17 	ldw	r2,-12(fp)
  80262c:	10800417 	ldw	r2,16(r2)
  802630:	10c00044 	addi	r3,r2,1
  802634:	e0bffd17 	ldw	r2,-12(fp)
  802638:	10c00415 	stw	r3,16(r2)
  80263c:	e0bffd17 	ldw	r2,-12(fp)
  802640:	10800317 	ldw	r2,12(r2)
  802644:	1000081e 	bne	r2,zero,802668 <dir_next+0x98>
  802648:	e0bffd17 	ldw	r2,-12(fp)
  80264c:	10800017 	ldw	r2,0(r2)
  802650:	1080020b 	ldhu	r2,8(r2)
  802654:	10bfffcc 	andi	r2,r2,65535
  802658:	e0fffc8b 	ldhu	r3,-14(fp)
  80265c:	18808336 	bltu	r3,r2,80286c <dir_next+0x29c>
  802660:	00800104 	movi	r2,4
  802664:	00008e06 	br	8028a0 <dir_next+0x2d0>
  802668:	e0bffc8b 	ldhu	r2,-14(fp)
  80266c:	1004d13a 	srli	r2,r2,4
  802670:	10bfffcc 	andi	r2,r2,65535
  802674:	e0fffd17 	ldw	r3,-12(fp)
  802678:	18c00017 	ldw	r3,0(r3)
  80267c:	18c00083 	ldbu	r3,2(r3)
  802680:	18c03fcc 	andi	r3,r3,255
  802684:	18ffffc4 	addi	r3,r3,-1
  802688:	10c4703a 	and	r2,r2,r3
  80268c:	1000771e 	bne	r2,zero,80286c <dir_next+0x29c>
  802690:	e0bffd17 	ldw	r2,-12(fp)
  802694:	10c00017 	ldw	r3,0(r2)
  802698:	e0bffd17 	ldw	r2,-12(fp)
  80269c:	10800317 	ldw	r2,12(r2)
  8026a0:	1809883a 	mov	r4,r3
  8026a4:	100b883a 	mov	r5,r2
  8026a8:	0801af80 	call	801af8 <get_fat>
  8026ac:	e0bffb15 	stw	r2,-20(fp)
  8026b0:	e0bffb17 	ldw	r2,-20(fp)
  8026b4:	108000a8 	cmpgeui	r2,r2,2
  8026b8:	1000021e 	bne	r2,zero,8026c4 <dir_next+0xf4>
  8026bc:	00800084 	movi	r2,2
  8026c0:	00007706 	br	8028a0 <dir_next+0x2d0>
  8026c4:	e0bffb17 	ldw	r2,-20(fp)
  8026c8:	10bfffd8 	cmpnei	r2,r2,-1
  8026cc:	1000021e 	bne	r2,zero,8026d8 <dir_next+0x108>
  8026d0:	00800044 	movi	r2,1
  8026d4:	00007206 	br	8028a0 <dir_next+0x2d0>
  8026d8:	e0bffd17 	ldw	r2,-12(fp)
  8026dc:	10800017 	ldw	r2,0(r2)
  8026e0:	10800617 	ldw	r2,24(r2)
  8026e4:	e0fffb17 	ldw	r3,-20(fp)
  8026e8:	18805536 	bltu	r3,r2,802840 <dir_next+0x270>
  8026ec:	e0bffe17 	ldw	r2,-8(fp)
  8026f0:	1000021e 	bne	r2,zero,8026fc <dir_next+0x12c>
  8026f4:	00800104 	movi	r2,4
  8026f8:	00006906 	br	8028a0 <dir_next+0x2d0>
  8026fc:	e0bffd17 	ldw	r2,-12(fp)
  802700:	10c00017 	ldw	r3,0(r2)
  802704:	e0bffd17 	ldw	r2,-12(fp)
  802708:	10800317 	ldw	r2,12(r2)
  80270c:	1809883a 	mov	r4,r3
  802710:	100b883a 	mov	r5,r2
  802714:	08022000 	call	802200 <create_chain>
  802718:	e0bffb15 	stw	r2,-20(fp)
  80271c:	e0bffb17 	ldw	r2,-20(fp)
  802720:	1000021e 	bne	r2,zero,80272c <dir_next+0x15c>
  802724:	008001c4 	movi	r2,7
  802728:	00005d06 	br	8028a0 <dir_next+0x2d0>
  80272c:	e0bffb17 	ldw	r2,-20(fp)
  802730:	10800058 	cmpnei	r2,r2,1
  802734:	1000021e 	bne	r2,zero,802740 <dir_next+0x170>
  802738:	00800084 	movi	r2,2
  80273c:	00005806 	br	8028a0 <dir_next+0x2d0>
  802740:	e0bffb17 	ldw	r2,-20(fp)
  802744:	10bfffd8 	cmpnei	r2,r2,-1
  802748:	1000021e 	bne	r2,zero,802754 <dir_next+0x184>
  80274c:	00800044 	movi	r2,1
  802750:	00005306 	br	8028a0 <dir_next+0x2d0>
  802754:	e0bffd17 	ldw	r2,-12(fp)
  802758:	10800017 	ldw	r2,0(r2)
  80275c:	1009883a 	mov	r4,r2
  802760:	000b883a 	mov	r5,zero
  802764:	08017140 	call	801714 <move_window>
  802768:	10000226 	beq	r2,zero,802774 <dir_next+0x1a4>
  80276c:	00800044 	movi	r2,1
  802770:	00004b06 	br	8028a0 <dir_next+0x2d0>
  802774:	e0bffd17 	ldw	r2,-12(fp)
  802778:	10800017 	ldw	r2,0(r2)
  80277c:	10800c04 	addi	r2,r2,48
  802780:	1009883a 	mov	r4,r2
  802784:	000b883a 	mov	r5,zero
  802788:	01808004 	movi	r6,512
  80278c:	08015b40 	call	8015b4 <mem_set>
  802790:	e0bffd17 	ldw	r2,-12(fp)
  802794:	14000017 	ldw	r16,0(r2)
  802798:	e0bffd17 	ldw	r2,-12(fp)
  80279c:	10800017 	ldw	r2,0(r2)
  8027a0:	1009883a 	mov	r4,r2
  8027a4:	e17ffb17 	ldw	r5,-20(fp)
  8027a8:	0801a8c0 	call	801a8c <clust2sect>
  8027ac:	80800b15 	stw	r2,44(r16)
  8027b0:	e03ffc05 	stb	zero,-16(fp)
  8027b4:	00001406 	br	802808 <dir_next+0x238>
  8027b8:	e0bffd17 	ldw	r2,-12(fp)
  8027bc:	10800017 	ldw	r2,0(r2)
  8027c0:	00c00044 	movi	r3,1
  8027c4:	10c00105 	stb	r3,4(r2)
  8027c8:	e0bffd17 	ldw	r2,-12(fp)
  8027cc:	10800017 	ldw	r2,0(r2)
  8027d0:	1009883a 	mov	r4,r2
  8027d4:	000b883a 	mov	r5,zero
  8027d8:	08017140 	call	801714 <move_window>
  8027dc:	10000226 	beq	r2,zero,8027e8 <dir_next+0x218>
  8027e0:	00800044 	movi	r2,1
  8027e4:	00002e06 	br	8028a0 <dir_next+0x2d0>
  8027e8:	e0bffd17 	ldw	r2,-12(fp)
  8027ec:	10800017 	ldw	r2,0(r2)
  8027f0:	10c00b17 	ldw	r3,44(r2)
  8027f4:	18c00044 	addi	r3,r3,1
  8027f8:	10c00b15 	stw	r3,44(r2)
  8027fc:	e0bffc03 	ldbu	r2,-16(fp)
  802800:	10800044 	addi	r2,r2,1
  802804:	e0bffc05 	stb	r2,-16(fp)
  802808:	e0bffd17 	ldw	r2,-12(fp)
  80280c:	10800017 	ldw	r2,0(r2)
  802810:	10800083 	ldbu	r2,2(r2)
  802814:	10803fcc 	andi	r2,r2,255
  802818:	e0fffc03 	ldbu	r3,-16(fp)
  80281c:	18bfe636 	bltu	r3,r2,8027b8 <__alt_data_end+0xff8027b8>
  802820:	e0bffd17 	ldw	r2,-12(fp)
  802824:	10800017 	ldw	r2,0(r2)
  802828:	e0fffd17 	ldw	r3,-12(fp)
  80282c:	18c00017 	ldw	r3,0(r3)
  802830:	19000b17 	ldw	r4,44(r3)
  802834:	e0fffc03 	ldbu	r3,-16(fp)
  802838:	20c7c83a 	sub	r3,r4,r3
  80283c:	10c00b15 	stw	r3,44(r2)
  802840:	e0bffd17 	ldw	r2,-12(fp)
  802844:	e0fffb17 	ldw	r3,-20(fp)
  802848:	10c00315 	stw	r3,12(r2)
  80284c:	e0bffd17 	ldw	r2,-12(fp)
  802850:	10800017 	ldw	r2,0(r2)
  802854:	1009883a 	mov	r4,r2
  802858:	e17ffb17 	ldw	r5,-20(fp)
  80285c:	0801a8c0 	call	801a8c <clust2sect>
  802860:	1007883a 	mov	r3,r2
  802864:	e0bffd17 	ldw	r2,-12(fp)
  802868:	10c00415 	stw	r3,16(r2)
  80286c:	e0bffd17 	ldw	r2,-12(fp)
  802870:	e0fffc8b 	ldhu	r3,-14(fp)
  802874:	10c0018d 	sth	r3,6(r2)
  802878:	e0bffd17 	ldw	r2,-12(fp)
  80287c:	10c00017 	ldw	r3,0(r2)
  802880:	e0bffc8b 	ldhu	r2,-14(fp)
  802884:	108003cc 	andi	r2,r2,15
  802888:	1004917a 	slli	r2,r2,5
  80288c:	10800c04 	addi	r2,r2,48
  802890:	1887883a 	add	r3,r3,r2
  802894:	e0bffd17 	ldw	r2,-12(fp)
  802898:	10c00515 	stw	r3,20(r2)
  80289c:	0005883a 	mov	r2,zero
  8028a0:	e6ffff04 	addi	sp,fp,-4
  8028a4:	dfc00217 	ldw	ra,8(sp)
  8028a8:	df000117 	ldw	fp,4(sp)
  8028ac:	dc000017 	ldw	r16,0(sp)
  8028b0:	dec00304 	addi	sp,sp,12
  8028b4:	f800283a 	ret

008028b8 <dir_find>:
  8028b8:	defffa04 	addi	sp,sp,-24
  8028bc:	dfc00515 	stw	ra,20(sp)
  8028c0:	df000415 	stw	fp,16(sp)
  8028c4:	df000404 	addi	fp,sp,16
  8028c8:	e13fff15 	stw	r4,-4(fp)
  8028cc:	e13fff17 	ldw	r4,-4(fp)
  8028d0:	000b883a 	mov	r5,zero
  8028d4:	08023e40 	call	8023e4 <dir_sdi>
  8028d8:	e0bffc15 	stw	r2,-16(fp)
  8028dc:	e0bffc17 	ldw	r2,-16(fp)
  8028e0:	10000226 	beq	r2,zero,8028ec <dir_find+0x34>
  8028e4:	e0bffc17 	ldw	r2,-16(fp)
  8028e8:	00002b06 	br	802998 <dir_find+0xe0>
  8028ec:	e0bfff17 	ldw	r2,-4(fp)
  8028f0:	10c00017 	ldw	r3,0(r2)
  8028f4:	e0bfff17 	ldw	r2,-4(fp)
  8028f8:	10800417 	ldw	r2,16(r2)
  8028fc:	1809883a 	mov	r4,r3
  802900:	100b883a 	mov	r5,r2
  802904:	08017140 	call	801714 <move_window>
  802908:	e0bffc15 	stw	r2,-16(fp)
  80290c:	e0bffc17 	ldw	r2,-16(fp)
  802910:	10000126 	beq	r2,zero,802918 <dir_find+0x60>
  802914:	00001f06 	br	802994 <dir_find+0xdc>
  802918:	e0bfff17 	ldw	r2,-4(fp)
  80291c:	10800517 	ldw	r2,20(r2)
  802920:	e0bffd15 	stw	r2,-12(fp)
  802924:	e0bffd17 	ldw	r2,-12(fp)
  802928:	10800003 	ldbu	r2,0(r2)
  80292c:	e0bffe05 	stb	r2,-8(fp)
  802930:	e0bffe03 	ldbu	r2,-8(fp)
  802934:	1000031e 	bne	r2,zero,802944 <dir_find+0x8c>
  802938:	00800104 	movi	r2,4
  80293c:	e0bffc15 	stw	r2,-16(fp)
  802940:	00001406 	br	802994 <dir_find+0xdc>
  802944:	e0bffd17 	ldw	r2,-12(fp)
  802948:	108002c4 	addi	r2,r2,11
  80294c:	10800003 	ldbu	r2,0(r2)
  802950:	10803fcc 	andi	r2,r2,255
  802954:	1080020c 	andi	r2,r2,8
  802958:	1000081e 	bne	r2,zero,80297c <dir_find+0xc4>
  80295c:	e0bfff17 	ldw	r2,-4(fp)
  802960:	10800617 	ldw	r2,24(r2)
  802964:	e13ffd17 	ldw	r4,-12(fp)
  802968:	100b883a 	mov	r5,r2
  80296c:	018002c4 	movi	r6,11
  802970:	080160c0 	call	80160c <mem_cmp>
  802974:	1000011e 	bne	r2,zero,80297c <dir_find+0xc4>
  802978:	00000606 	br	802994 <dir_find+0xdc>
  80297c:	e13fff17 	ldw	r4,-4(fp)
  802980:	000b883a 	mov	r5,zero
  802984:	08025d00 	call	8025d0 <dir_next>
  802988:	e0bffc15 	stw	r2,-16(fp)
  80298c:	e0bffc17 	ldw	r2,-16(fp)
  802990:	103fd626 	beq	r2,zero,8028ec <__alt_data_end+0xff8028ec>
  802994:	e0bffc17 	ldw	r2,-16(fp)
  802998:	e037883a 	mov	sp,fp
  80299c:	dfc00117 	ldw	ra,4(sp)
  8029a0:	df000017 	ldw	fp,0(sp)
  8029a4:	dec00204 	addi	sp,sp,8
  8029a8:	f800283a 	ret

008029ac <dir_read>:
  8029ac:	defffa04 	addi	sp,sp,-24
  8029b0:	dfc00515 	stw	ra,20(sp)
  8029b4:	df000415 	stw	fp,16(sp)
  8029b8:	df000404 	addi	fp,sp,16
  8029bc:	e13fff15 	stw	r4,-4(fp)
  8029c0:	00800104 	movi	r2,4
  8029c4:	e0bffc15 	stw	r2,-16(fp)
  8029c8:	00002a06 	br	802a74 <dir_read+0xc8>
  8029cc:	e0bfff17 	ldw	r2,-4(fp)
  8029d0:	10c00017 	ldw	r3,0(r2)
  8029d4:	e0bfff17 	ldw	r2,-4(fp)
  8029d8:	10800417 	ldw	r2,16(r2)
  8029dc:	1809883a 	mov	r4,r3
  8029e0:	100b883a 	mov	r5,r2
  8029e4:	08017140 	call	801714 <move_window>
  8029e8:	e0bffc15 	stw	r2,-16(fp)
  8029ec:	e0bffc17 	ldw	r2,-16(fp)
  8029f0:	10000126 	beq	r2,zero,8029f8 <dir_read+0x4c>
  8029f4:	00002206 	br	802a80 <dir_read+0xd4>
  8029f8:	e0bfff17 	ldw	r2,-4(fp)
  8029fc:	10800517 	ldw	r2,20(r2)
  802a00:	e0bffd15 	stw	r2,-12(fp)
  802a04:	e0bffd17 	ldw	r2,-12(fp)
  802a08:	10800003 	ldbu	r2,0(r2)
  802a0c:	e0bffe05 	stb	r2,-8(fp)
  802a10:	e0bffe03 	ldbu	r2,-8(fp)
  802a14:	1000031e 	bne	r2,zero,802a24 <dir_read+0x78>
  802a18:	00800104 	movi	r2,4
  802a1c:	e0bffc15 	stw	r2,-16(fp)
  802a20:	00001706 	br	802a80 <dir_read+0xd4>
  802a24:	e0bffe03 	ldbu	r2,-8(fp)
  802a28:	10803960 	cmpeqi	r2,r2,229
  802a2c:	10000a1e 	bne	r2,zero,802a58 <dir_read+0xac>
  802a30:	e0bffe03 	ldbu	r2,-8(fp)
  802a34:	10800ba0 	cmpeqi	r2,r2,46
  802a38:	1000071e 	bne	r2,zero,802a58 <dir_read+0xac>
  802a3c:	e0bffd17 	ldw	r2,-12(fp)
  802a40:	108002c4 	addi	r2,r2,11
  802a44:	10800003 	ldbu	r2,0(r2)
  802a48:	10803fcc 	andi	r2,r2,255
  802a4c:	1080020c 	andi	r2,r2,8
  802a50:	1000011e 	bne	r2,zero,802a58 <dir_read+0xac>
  802a54:	00000a06 	br	802a80 <dir_read+0xd4>
  802a58:	e13fff17 	ldw	r4,-4(fp)
  802a5c:	000b883a 	mov	r5,zero
  802a60:	08025d00 	call	8025d0 <dir_next>
  802a64:	e0bffc15 	stw	r2,-16(fp)
  802a68:	e0bffc17 	ldw	r2,-16(fp)
  802a6c:	10000126 	beq	r2,zero,802a74 <dir_read+0xc8>
  802a70:	00000306 	br	802a80 <dir_read+0xd4>
  802a74:	e0bfff17 	ldw	r2,-4(fp)
  802a78:	10800417 	ldw	r2,16(r2)
  802a7c:	103fd31e 	bne	r2,zero,8029cc <__alt_data_end+0xff8029cc>
  802a80:	e0bffc17 	ldw	r2,-16(fp)
  802a84:	10000226 	beq	r2,zero,802a90 <dir_read+0xe4>
  802a88:	e0bfff17 	ldw	r2,-4(fp)
  802a8c:	10000415 	stw	zero,16(r2)
  802a90:	e0bffc17 	ldw	r2,-16(fp)
  802a94:	e037883a 	mov	sp,fp
  802a98:	dfc00117 	ldw	ra,4(sp)
  802a9c:	df000017 	ldw	fp,0(sp)
  802aa0:	dec00204 	addi	sp,sp,8
  802aa4:	f800283a 	ret

00802aa8 <dir_register>:
  802aa8:	defffa04 	addi	sp,sp,-24
  802aac:	dfc00515 	stw	ra,20(sp)
  802ab0:	df000415 	stw	fp,16(sp)
  802ab4:	df000404 	addi	fp,sp,16
  802ab8:	e13fff15 	stw	r4,-4(fp)
  802abc:	e13fff17 	ldw	r4,-4(fp)
  802ac0:	000b883a 	mov	r5,zero
  802ac4:	08023e40 	call	8023e4 <dir_sdi>
  802ac8:	e0bffc15 	stw	r2,-16(fp)
  802acc:	e0bffc17 	ldw	r2,-16(fp)
  802ad0:	10001a1e 	bne	r2,zero,802b3c <dir_register+0x94>
  802ad4:	e0bfff17 	ldw	r2,-4(fp)
  802ad8:	10c00017 	ldw	r3,0(r2)
  802adc:	e0bfff17 	ldw	r2,-4(fp)
  802ae0:	10800417 	ldw	r2,16(r2)
  802ae4:	1809883a 	mov	r4,r3
  802ae8:	100b883a 	mov	r5,r2
  802aec:	08017140 	call	801714 <move_window>
  802af0:	e0bffc15 	stw	r2,-16(fp)
  802af4:	e0bffc17 	ldw	r2,-16(fp)
  802af8:	10000126 	beq	r2,zero,802b00 <dir_register+0x58>
  802afc:	00000f06 	br	802b3c <dir_register+0x94>
  802b00:	e0bfff17 	ldw	r2,-4(fp)
  802b04:	10800517 	ldw	r2,20(r2)
  802b08:	10800003 	ldbu	r2,0(r2)
  802b0c:	e0bffd05 	stb	r2,-12(fp)
  802b10:	e0bffd03 	ldbu	r2,-12(fp)
  802b14:	10803960 	cmpeqi	r2,r2,229
  802b18:	1000081e 	bne	r2,zero,802b3c <dir_register+0x94>
  802b1c:	e0bffd03 	ldbu	r2,-12(fp)
  802b20:	10000626 	beq	r2,zero,802b3c <dir_register+0x94>
  802b24:	e13fff17 	ldw	r4,-4(fp)
  802b28:	01400044 	movi	r5,1
  802b2c:	08025d00 	call	8025d0 <dir_next>
  802b30:	e0bffc15 	stw	r2,-16(fp)
  802b34:	e0bffc17 	ldw	r2,-16(fp)
  802b38:	103fe626 	beq	r2,zero,802ad4 <__alt_data_end+0xff802ad4>
  802b3c:	e0bffc17 	ldw	r2,-16(fp)
  802b40:	10001b1e 	bne	r2,zero,802bb0 <dir_register+0x108>
  802b44:	e0bfff17 	ldw	r2,-4(fp)
  802b48:	10c00017 	ldw	r3,0(r2)
  802b4c:	e0bfff17 	ldw	r2,-4(fp)
  802b50:	10800417 	ldw	r2,16(r2)
  802b54:	1809883a 	mov	r4,r3
  802b58:	100b883a 	mov	r5,r2
  802b5c:	08017140 	call	801714 <move_window>
  802b60:	e0bffc15 	stw	r2,-16(fp)
  802b64:	e0bffc17 	ldw	r2,-16(fp)
  802b68:	1000111e 	bne	r2,zero,802bb0 <dir_register+0x108>
  802b6c:	e0bfff17 	ldw	r2,-4(fp)
  802b70:	10800517 	ldw	r2,20(r2)
  802b74:	e0bffe15 	stw	r2,-8(fp)
  802b78:	e13ffe17 	ldw	r4,-8(fp)
  802b7c:	000b883a 	mov	r5,zero
  802b80:	01800804 	movi	r6,32
  802b84:	08015b40 	call	8015b4 <mem_set>
  802b88:	e0bfff17 	ldw	r2,-4(fp)
  802b8c:	10800617 	ldw	r2,24(r2)
  802b90:	e13ffe17 	ldw	r4,-8(fp)
  802b94:	100b883a 	mov	r5,r2
  802b98:	018002c4 	movi	r6,11
  802b9c:	08015480 	call	801548 <mem_cpy>
  802ba0:	e0bfff17 	ldw	r2,-4(fp)
  802ba4:	10800017 	ldw	r2,0(r2)
  802ba8:	00c00044 	movi	r3,1
  802bac:	10c00105 	stb	r3,4(r2)
  802bb0:	e0bffc17 	ldw	r2,-16(fp)
  802bb4:	e037883a 	mov	sp,fp
  802bb8:	dfc00117 	ldw	ra,4(sp)
  802bbc:	df000017 	ldw	fp,0(sp)
  802bc0:	dec00204 	addi	sp,sp,8
  802bc4:	f800283a 	ret

00802bc8 <dir_remove>:
  802bc8:	defffc04 	addi	sp,sp,-16
  802bcc:	dfc00315 	stw	ra,12(sp)
  802bd0:	df000215 	stw	fp,8(sp)
  802bd4:	df000204 	addi	fp,sp,8
  802bd8:	e13fff15 	stw	r4,-4(fp)
  802bdc:	e0bfff17 	ldw	r2,-4(fp)
  802be0:	1080018b 	ldhu	r2,6(r2)
  802be4:	10bfffcc 	andi	r2,r2,65535
  802be8:	e13fff17 	ldw	r4,-4(fp)
  802bec:	100b883a 	mov	r5,r2
  802bf0:	08023e40 	call	8023e4 <dir_sdi>
  802bf4:	e0bffe15 	stw	r2,-8(fp)
  802bf8:	e0bffe17 	ldw	r2,-8(fp)
  802bfc:	1000121e 	bne	r2,zero,802c48 <dir_remove+0x80>
  802c00:	e0bfff17 	ldw	r2,-4(fp)
  802c04:	10c00017 	ldw	r3,0(r2)
  802c08:	e0bfff17 	ldw	r2,-4(fp)
  802c0c:	10800417 	ldw	r2,16(r2)
  802c10:	1809883a 	mov	r4,r3
  802c14:	100b883a 	mov	r5,r2
  802c18:	08017140 	call	801714 <move_window>
  802c1c:	e0bffe15 	stw	r2,-8(fp)
  802c20:	e0bffe17 	ldw	r2,-8(fp)
  802c24:	1000081e 	bne	r2,zero,802c48 <dir_remove+0x80>
  802c28:	e0bfff17 	ldw	r2,-4(fp)
  802c2c:	10800517 	ldw	r2,20(r2)
  802c30:	00fff944 	movi	r3,-27
  802c34:	10c00005 	stb	r3,0(r2)
  802c38:	e0bfff17 	ldw	r2,-4(fp)
  802c3c:	10800017 	ldw	r2,0(r2)
  802c40:	00c00044 	movi	r3,1
  802c44:	10c00105 	stb	r3,4(r2)
  802c48:	e0bffe17 	ldw	r2,-8(fp)
  802c4c:	e037883a 	mov	sp,fp
  802c50:	dfc00117 	ldw	ra,4(sp)
  802c54:	df000017 	ldw	fp,0(sp)
  802c58:	dec00204 	addi	sp,sp,8
  802c5c:	f800283a 	ret

00802c60 <create_name>:
  802c60:	defff604 	addi	sp,sp,-40
  802c64:	dfc00915 	stw	ra,36(sp)
  802c68:	df000815 	stw	fp,32(sp)
  802c6c:	df000804 	addi	fp,sp,32
  802c70:	e13ffe15 	stw	r4,-8(fp)
  802c74:	e17fff15 	stw	r5,-4(fp)
  802c78:	e0bfff17 	ldw	r2,-4(fp)
  802c7c:	10800017 	ldw	r2,0(r2)
  802c80:	e0bffc15 	stw	r2,-16(fp)
  802c84:	00000306 	br	802c94 <create_name+0x34>
  802c88:	e0bffc17 	ldw	r2,-16(fp)
  802c8c:	10800044 	addi	r2,r2,1
  802c90:	e0bffc15 	stw	r2,-16(fp)
  802c94:	e0bffc17 	ldw	r2,-16(fp)
  802c98:	10800003 	ldbu	r2,0(r2)
  802c9c:	10803fcc 	andi	r2,r2,255
  802ca0:	1080201c 	xori	r2,r2,128
  802ca4:	10bfe004 	addi	r2,r2,-128
  802ca8:	10800be0 	cmpeqi	r2,r2,47
  802cac:	103ff61e 	bne	r2,zero,802c88 <__alt_data_end+0xff802c88>
  802cb0:	e0bffc17 	ldw	r2,-16(fp)
  802cb4:	10800003 	ldbu	r2,0(r2)
  802cb8:	10803fcc 	andi	r2,r2,255
  802cbc:	1080201c 	xori	r2,r2,128
  802cc0:	10bfe004 	addi	r2,r2,-128
  802cc4:	10801720 	cmpeqi	r2,r2,92
  802cc8:	103fef1e 	bne	r2,zero,802c88 <__alt_data_end+0xff802c88>
  802ccc:	e0bffe17 	ldw	r2,-8(fp)
  802cd0:	10800617 	ldw	r2,24(r2)
  802cd4:	e0bffd15 	stw	r2,-12(fp)
  802cd8:	e13ffd17 	ldw	r4,-12(fp)
  802cdc:	01400804 	movi	r5,32
  802ce0:	018002c4 	movi	r6,11
  802ce4:	08015b40 	call	8015b4 <mem_set>
  802ce8:	e03ff805 	stb	zero,-32(fp)
  802cec:	e03ffb15 	stw	zero,-20(fp)
  802cf0:	e0bffb17 	ldw	r2,-20(fp)
  802cf4:	e0bffa15 	stw	r2,-24(fp)
  802cf8:	00800204 	movi	r2,8
  802cfc:	e0bff915 	stw	r2,-28(fp)
  802d00:	e0bffa17 	ldw	r2,-24(fp)
  802d04:	10c00044 	addi	r3,r2,1
  802d08:	e0fffa15 	stw	r3,-24(fp)
  802d0c:	e0fffc17 	ldw	r3,-16(fp)
  802d10:	1885883a 	add	r2,r3,r2
  802d14:	10800003 	ldbu	r2,0(r2)
  802d18:	e0bff845 	stb	r2,-31(fp)
  802d1c:	e0bff843 	ldbu	r2,-31(fp)
  802d20:	10800870 	cmpltui	r2,r2,33
  802d24:	1000521e 	bne	r2,zero,802e70 <create_name+0x210>
  802d28:	e0bff843 	ldbu	r2,-31(fp)
  802d2c:	10800be0 	cmpeqi	r2,r2,47
  802d30:	10004f1e 	bne	r2,zero,802e70 <create_name+0x210>
  802d34:	e0bff843 	ldbu	r2,-31(fp)
  802d38:	10801720 	cmpeqi	r2,r2,92
  802d3c:	10004c1e 	bne	r2,zero,802e70 <create_name+0x210>
  802d40:	e0bff843 	ldbu	r2,-31(fp)
  802d44:	10800ba0 	cmpeqi	r2,r2,46
  802d48:	1000031e 	bne	r2,zero,802d58 <create_name+0xf8>
  802d4c:	e0fffb17 	ldw	r3,-20(fp)
  802d50:	e0bff917 	ldw	r2,-28(fp)
  802d54:	18801136 	bltu	r3,r2,802d9c <create_name+0x13c>
  802d58:	e0bff917 	ldw	r2,-28(fp)
  802d5c:	10800218 	cmpnei	r2,r2,8
  802d60:	1000031e 	bne	r2,zero,802d70 <create_name+0x110>
  802d64:	e0bff843 	ldbu	r2,-31(fp)
  802d68:	10800ba0 	cmpeqi	r2,r2,46
  802d6c:	1000021e 	bne	r2,zero,802d78 <create_name+0x118>
  802d70:	00800184 	movi	r2,6
  802d74:	00007006 	br	802f38 <create_name+0x2d8>
  802d78:	00800204 	movi	r2,8
  802d7c:	e0bffb15 	stw	r2,-20(fp)
  802d80:	008002c4 	movi	r2,11
  802d84:	e0bff915 	stw	r2,-28(fp)
  802d88:	e0bff803 	ldbu	r2,-32(fp)
  802d8c:	1085883a 	add	r2,r2,r2
  802d90:	1085883a 	add	r2,r2,r2
  802d94:	e0bff805 	stb	r2,-32(fp)
  802d98:	00003406 	br	802e6c <create_name+0x20c>
  802d9c:	e0bff843 	ldbu	r2,-31(fp)
  802da0:	10803fcc 	andi	r2,r2,255
  802da4:	1080201c 	xori	r2,r2,128
  802da8:	10bfe004 	addi	r2,r2,-128
  802dac:	10000a0e 	bge	r2,zero,802dd8 <create_name+0x178>
  802db0:	e0bff803 	ldbu	r2,-32(fp)
  802db4:	108000d4 	ori	r2,r2,3
  802db8:	e0bff805 	stb	r2,-32(fp)
  802dbc:	e0bff843 	ldbu	r2,-31(fp)
  802dc0:	10ffe004 	addi	r3,r2,-128
  802dc4:	008020b4 	movhi	r2,130
  802dc8:	10b78904 	addi	r2,r2,-8668
  802dcc:	10c5883a 	add	r2,r2,r3
  802dd0:	10800003 	ldbu	r2,0(r2)
  802dd4:	e0bff845 	stb	r2,-31(fp)
  802dd8:	e0bff843 	ldbu	r2,-31(fp)
  802ddc:	010020b4 	movhi	r4,130
  802de0:	21377804 	addi	r4,r4,-8736
  802de4:	100b883a 	mov	r5,r2
  802de8:	08016980 	call	801698 <chk_chr>
  802dec:	10000226 	beq	r2,zero,802df8 <create_name+0x198>
  802df0:	00800184 	movi	r2,6
  802df4:	00005006 	br	802f38 <create_name+0x2d8>
  802df8:	e0bff843 	ldbu	r2,-31(fp)
  802dfc:	10801070 	cmpltui	r2,r2,65
  802e00:	1000071e 	bne	r2,zero,802e20 <create_name+0x1c0>
  802e04:	e0bff843 	ldbu	r2,-31(fp)
  802e08:	108016e8 	cmpgeui	r2,r2,91
  802e0c:	1000041e 	bne	r2,zero,802e20 <create_name+0x1c0>
  802e10:	e0bff803 	ldbu	r2,-32(fp)
  802e14:	10800094 	ori	r2,r2,2
  802e18:	e0bff805 	stb	r2,-32(fp)
  802e1c:	00000c06 	br	802e50 <create_name+0x1f0>
  802e20:	e0bff843 	ldbu	r2,-31(fp)
  802e24:	10801870 	cmpltui	r2,r2,97
  802e28:	1000091e 	bne	r2,zero,802e50 <create_name+0x1f0>
  802e2c:	e0bff843 	ldbu	r2,-31(fp)
  802e30:	10801ee8 	cmpgeui	r2,r2,123
  802e34:	1000061e 	bne	r2,zero,802e50 <create_name+0x1f0>
  802e38:	e0bff803 	ldbu	r2,-32(fp)
  802e3c:	10800054 	ori	r2,r2,1
  802e40:	e0bff805 	stb	r2,-32(fp)
  802e44:	e0bff843 	ldbu	r2,-31(fp)
  802e48:	10bff804 	addi	r2,r2,-32
  802e4c:	e0bff845 	stb	r2,-31(fp)
  802e50:	e0bffb17 	ldw	r2,-20(fp)
  802e54:	10c00044 	addi	r3,r2,1
  802e58:	e0fffb15 	stw	r3,-20(fp)
  802e5c:	e0fffd17 	ldw	r3,-12(fp)
  802e60:	1885883a 	add	r2,r3,r2
  802e64:	e0fff843 	ldbu	r3,-31(fp)
  802e68:	10c00005 	stb	r3,0(r2)
  802e6c:	003fa406 	br	802d00 <__alt_data_end+0xff802d00>
  802e70:	e0fffc17 	ldw	r3,-16(fp)
  802e74:	e0bffa17 	ldw	r2,-24(fp)
  802e78:	1887883a 	add	r3,r3,r2
  802e7c:	e0bfff17 	ldw	r2,-4(fp)
  802e80:	10c00015 	stw	r3,0(r2)
  802e84:	e0bff843 	ldbu	r2,-31(fp)
  802e88:	10800868 	cmpgeui	r2,r2,33
  802e8c:	1000021e 	bne	r2,zero,802e98 <create_name+0x238>
  802e90:	00800104 	movi	r2,4
  802e94:	00000106 	br	802e9c <create_name+0x23c>
  802e98:	0005883a 	mov	r2,zero
  802e9c:	e0bff845 	stb	r2,-31(fp)
  802ea0:	e0bffb17 	ldw	r2,-20(fp)
  802ea4:	1000021e 	bne	r2,zero,802eb0 <create_name+0x250>
  802ea8:	00800184 	movi	r2,6
  802eac:	00002206 	br	802f38 <create_name+0x2d8>
  802eb0:	e0bffd17 	ldw	r2,-12(fp)
  802eb4:	10800003 	ldbu	r2,0(r2)
  802eb8:	10803fcc 	andi	r2,r2,255
  802ebc:	10803958 	cmpnei	r2,r2,229
  802ec0:	1000031e 	bne	r2,zero,802ed0 <create_name+0x270>
  802ec4:	e0bffd17 	ldw	r2,-12(fp)
  802ec8:	00c00144 	movi	r3,5
  802ecc:	10c00005 	stb	r3,0(r2)
  802ed0:	e0bff917 	ldw	r2,-28(fp)
  802ed4:	10800218 	cmpnei	r2,r2,8
  802ed8:	1000041e 	bne	r2,zero,802eec <create_name+0x28c>
  802edc:	e0bff803 	ldbu	r2,-32(fp)
  802ee0:	1085883a 	add	r2,r2,r2
  802ee4:	1085883a 	add	r2,r2,r2
  802ee8:	e0bff805 	stb	r2,-32(fp)
  802eec:	e0bff803 	ldbu	r2,-32(fp)
  802ef0:	108000cc 	andi	r2,r2,3
  802ef4:	10800058 	cmpnei	r2,r2,1
  802ef8:	1000031e 	bne	r2,zero,802f08 <create_name+0x2a8>
  802efc:	e0bff843 	ldbu	r2,-31(fp)
  802f00:	10800414 	ori	r2,r2,16
  802f04:	e0bff845 	stb	r2,-31(fp)
  802f08:	e0bff803 	ldbu	r2,-32(fp)
  802f0c:	1080030c 	andi	r2,r2,12
  802f10:	10800118 	cmpnei	r2,r2,4
  802f14:	1000031e 	bne	r2,zero,802f24 <create_name+0x2c4>
  802f18:	e0bff843 	ldbu	r2,-31(fp)
  802f1c:	10800214 	ori	r2,r2,8
  802f20:	e0bff845 	stb	r2,-31(fp)
  802f24:	e0bffd17 	ldw	r2,-12(fp)
  802f28:	108002c4 	addi	r2,r2,11
  802f2c:	e0fff843 	ldbu	r3,-31(fp)
  802f30:	10c00005 	stb	r3,0(r2)
  802f34:	0005883a 	mov	r2,zero
  802f38:	e037883a 	mov	sp,fp
  802f3c:	dfc00117 	ldw	ra,4(sp)
  802f40:	df000017 	ldw	fp,0(sp)
  802f44:	dec00204 	addi	sp,sp,8
  802f48:	f800283a 	ret

00802f4c <get_fileinfo>:
  802f4c:	defff804 	addi	sp,sp,-32
  802f50:	df000715 	stw	fp,28(sp)
  802f54:	df000704 	addi	fp,sp,28
  802f58:	e13ffe15 	stw	r4,-8(fp)
  802f5c:	e17fff15 	stw	r5,-4(fp)
  802f60:	e0bfff17 	ldw	r2,-4(fp)
  802f64:	10800244 	addi	r2,r2,9
  802f68:	e0bffa15 	stw	r2,-24(fp)
  802f6c:	e0bffe17 	ldw	r2,-8(fp)
  802f70:	10800417 	ldw	r2,16(r2)
  802f74:	10007b26 	beq	r2,zero,803164 <get_fileinfo+0x218>
  802f78:	e0bffe17 	ldw	r2,-8(fp)
  802f7c:	10800517 	ldw	r2,20(r2)
  802f80:	e0bffc15 	stw	r2,-16(fp)
  802f84:	e0bffc17 	ldw	r2,-16(fp)
  802f88:	10800303 	ldbu	r2,12(r2)
  802f8c:	e0bffd05 	stb	r2,-12(fp)
  802f90:	e03ff915 	stw	zero,-28(fp)
  802f94:	00001606 	br	802ff0 <get_fileinfo+0xa4>
  802f98:	e0fffc17 	ldw	r3,-16(fp)
  802f9c:	e0bff917 	ldw	r2,-28(fp)
  802fa0:	1885883a 	add	r2,r3,r2
  802fa4:	10800003 	ldbu	r2,0(r2)
  802fa8:	e0bffb05 	stb	r2,-20(fp)
  802fac:	e0bffb07 	ldb	r2,-20(fp)
  802fb0:	10800818 	cmpnei	r2,r2,32
  802fb4:	1000011e 	bne	r2,zero,802fbc <get_fileinfo+0x70>
  802fb8:	00001006 	br	802ffc <get_fileinfo+0xb0>
  802fbc:	e0bffb07 	ldb	r2,-20(fp)
  802fc0:	10800158 	cmpnei	r2,r2,5
  802fc4:	1000021e 	bne	r2,zero,802fd0 <get_fileinfo+0x84>
  802fc8:	00bff944 	movi	r2,-27
  802fcc:	e0bffb05 	stb	r2,-20(fp)
  802fd0:	e0bffa17 	ldw	r2,-24(fp)
  802fd4:	10c00044 	addi	r3,r2,1
  802fd8:	e0fffa15 	stw	r3,-24(fp)
  802fdc:	e0fffb03 	ldbu	r3,-20(fp)
  802fe0:	10c00005 	stb	r3,0(r2)
  802fe4:	e0bff917 	ldw	r2,-28(fp)
  802fe8:	10800044 	addi	r2,r2,1
  802fec:	e0bff915 	stw	r2,-28(fp)
  802ff0:	e0bff917 	ldw	r2,-28(fp)
  802ff4:	10800230 	cmpltui	r2,r2,8
  802ff8:	103fe71e 	bne	r2,zero,802f98 <__alt_data_end+0xff802f98>
  802ffc:	e0bffc17 	ldw	r2,-16(fp)
  803000:	10800204 	addi	r2,r2,8
  803004:	10800003 	ldbu	r2,0(r2)
  803008:	10803fcc 	andi	r2,r2,255
  80300c:	10800820 	cmpeqi	r2,r2,32
  803010:	10001c1e 	bne	r2,zero,803084 <get_fileinfo+0x138>
  803014:	e0bffa17 	ldw	r2,-24(fp)
  803018:	10c00044 	addi	r3,r2,1
  80301c:	e0fffa15 	stw	r3,-24(fp)
  803020:	00c00b84 	movi	r3,46
  803024:	10c00005 	stb	r3,0(r2)
  803028:	00800204 	movi	r2,8
  80302c:	e0bff915 	stw	r2,-28(fp)
  803030:	00001106 	br	803078 <get_fileinfo+0x12c>
  803034:	e0fffc17 	ldw	r3,-16(fp)
  803038:	e0bff917 	ldw	r2,-28(fp)
  80303c:	1885883a 	add	r2,r3,r2
  803040:	10800003 	ldbu	r2,0(r2)
  803044:	e0bffb05 	stb	r2,-20(fp)
  803048:	e0bffb07 	ldb	r2,-20(fp)
  80304c:	10800818 	cmpnei	r2,r2,32
  803050:	1000011e 	bne	r2,zero,803058 <get_fileinfo+0x10c>
  803054:	00000b06 	br	803084 <get_fileinfo+0x138>
  803058:	e0bffa17 	ldw	r2,-24(fp)
  80305c:	10c00044 	addi	r3,r2,1
  803060:	e0fffa15 	stw	r3,-24(fp)
  803064:	e0fffb03 	ldbu	r3,-20(fp)
  803068:	10c00005 	stb	r3,0(r2)
  80306c:	e0bff917 	ldw	r2,-28(fp)
  803070:	10800044 	addi	r2,r2,1
  803074:	e0bff915 	stw	r2,-28(fp)
  803078:	e0bff917 	ldw	r2,-28(fp)
  80307c:	108002f0 	cmpltui	r2,r2,11
  803080:	103fec1e 	bne	r2,zero,803034 <__alt_data_end+0xff803034>
  803084:	e0bffc17 	ldw	r2,-16(fp)
  803088:	10c002c3 	ldbu	r3,11(r2)
  80308c:	e0bfff17 	ldw	r2,-4(fp)
  803090:	10c00205 	stb	r3,8(r2)
  803094:	e0bffc17 	ldw	r2,-16(fp)
  803098:	108007c4 	addi	r2,r2,31
  80309c:	10800003 	ldbu	r2,0(r2)
  8030a0:	10803fcc 	andi	r2,r2,255
  8030a4:	1006963a 	slli	r3,r2,24
  8030a8:	e0bffc17 	ldw	r2,-16(fp)
  8030ac:	10800784 	addi	r2,r2,30
  8030b0:	10800003 	ldbu	r2,0(r2)
  8030b4:	10803fcc 	andi	r2,r2,255
  8030b8:	1004943a 	slli	r2,r2,16
  8030bc:	1884b03a 	or	r2,r3,r2
  8030c0:	e0fffc17 	ldw	r3,-16(fp)
  8030c4:	18c00744 	addi	r3,r3,29
  8030c8:	18c00003 	ldbu	r3,0(r3)
  8030cc:	18c03fcc 	andi	r3,r3,255
  8030d0:	1806923a 	slli	r3,r3,8
  8030d4:	10c6b03a 	or	r3,r2,r3
  8030d8:	e0bffc17 	ldw	r2,-16(fp)
  8030dc:	10800704 	addi	r2,r2,28
  8030e0:	10800003 	ldbu	r2,0(r2)
  8030e4:	10803fcc 	andi	r2,r2,255
  8030e8:	1886b03a 	or	r3,r3,r2
  8030ec:	e0bfff17 	ldw	r2,-4(fp)
  8030f0:	10c00015 	stw	r3,0(r2)
  8030f4:	e0bffc17 	ldw	r2,-16(fp)
  8030f8:	10800644 	addi	r2,r2,25
  8030fc:	10800003 	ldbu	r2,0(r2)
  803100:	10803fcc 	andi	r2,r2,255
  803104:	1004923a 	slli	r2,r2,8
  803108:	1007883a 	mov	r3,r2
  80310c:	e0bffc17 	ldw	r2,-16(fp)
  803110:	10800604 	addi	r2,r2,24
  803114:	10800003 	ldbu	r2,0(r2)
  803118:	10803fcc 	andi	r2,r2,255
  80311c:	1884b03a 	or	r2,r3,r2
  803120:	1007883a 	mov	r3,r2
  803124:	e0bfff17 	ldw	r2,-4(fp)
  803128:	10c0010d 	sth	r3,4(r2)
  80312c:	e0bffc17 	ldw	r2,-16(fp)
  803130:	108005c4 	addi	r2,r2,23
  803134:	10800003 	ldbu	r2,0(r2)
  803138:	10803fcc 	andi	r2,r2,255
  80313c:	1004923a 	slli	r2,r2,8
  803140:	1007883a 	mov	r3,r2
  803144:	e0bffc17 	ldw	r2,-16(fp)
  803148:	10800584 	addi	r2,r2,22
  80314c:	10800003 	ldbu	r2,0(r2)
  803150:	10803fcc 	andi	r2,r2,255
  803154:	1884b03a 	or	r2,r3,r2
  803158:	1007883a 	mov	r3,r2
  80315c:	e0bfff17 	ldw	r2,-4(fp)
  803160:	10c0018d 	sth	r3,6(r2)
  803164:	e0bffa17 	ldw	r2,-24(fp)
  803168:	10000005 	stb	zero,0(r2)
  80316c:	e037883a 	mov	sp,fp
  803170:	df000017 	ldw	fp,0(sp)
  803174:	dec00104 	addi	sp,sp,4
  803178:	f800283a 	ret

0080317c <follow_path>:
  80317c:	defff904 	addi	sp,sp,-28
  803180:	dfc00615 	stw	ra,24(sp)
  803184:	df000515 	stw	fp,20(sp)
  803188:	df000504 	addi	fp,sp,20
  80318c:	e13ffe15 	stw	r4,-8(fp)
  803190:	e17fff15 	stw	r5,-4(fp)
  803194:	e0bfff17 	ldw	r2,-4(fp)
  803198:	10800003 	ldbu	r2,0(r2)
  80319c:	10803fcc 	andi	r2,r2,255
  8031a0:	1080201c 	xori	r2,r2,128
  8031a4:	10bfe004 	addi	r2,r2,-128
  8031a8:	10800be0 	cmpeqi	r2,r2,47
  8031ac:	1000071e 	bne	r2,zero,8031cc <follow_path+0x50>
  8031b0:	e0bfff17 	ldw	r2,-4(fp)
  8031b4:	10800003 	ldbu	r2,0(r2)
  8031b8:	10803fcc 	andi	r2,r2,255
  8031bc:	1080201c 	xori	r2,r2,128
  8031c0:	10bfe004 	addi	r2,r2,-128
  8031c4:	10801718 	cmpnei	r2,r2,92
  8031c8:	1000031e 	bne	r2,zero,8031d8 <follow_path+0x5c>
  8031cc:	e0bfff17 	ldw	r2,-4(fp)
  8031d0:	10800044 	addi	r2,r2,1
  8031d4:	e0bfff15 	stw	r2,-4(fp)
  8031d8:	e0bffe17 	ldw	r2,-8(fp)
  8031dc:	10000215 	stw	zero,8(r2)
  8031e0:	e0bfff17 	ldw	r2,-4(fp)
  8031e4:	10800003 	ldbu	r2,0(r2)
  8031e8:	10803fcc 	andi	r2,r2,255
  8031ec:	10800828 	cmpgeui	r2,r2,32
  8031f0:	1000071e 	bne	r2,zero,803210 <follow_path+0x94>
  8031f4:	e13ffe17 	ldw	r4,-8(fp)
  8031f8:	000b883a 	mov	r5,zero
  8031fc:	08023e40 	call	8023e4 <dir_sdi>
  803200:	e0bffb15 	stw	r2,-20(fp)
  803204:	e0bffe17 	ldw	r2,-8(fp)
  803208:	10000515 	stw	zero,20(r2)
  80320c:	00004906 	br	803334 <follow_path+0x1b8>
  803210:	e0bfff04 	addi	r2,fp,-4
  803214:	e13ffe17 	ldw	r4,-8(fp)
  803218:	100b883a 	mov	r5,r2
  80321c:	0802c600 	call	802c60 <create_name>
  803220:	e0bffb15 	stw	r2,-20(fp)
  803224:	e0bffb17 	ldw	r2,-20(fp)
  803228:	10000126 	beq	r2,zero,803230 <follow_path+0xb4>
  80322c:	00004106 	br	803334 <follow_path+0x1b8>
  803230:	e13ffe17 	ldw	r4,-8(fp)
  803234:	08028b80 	call	8028b8 <dir_find>
  803238:	e0bffb15 	stw	r2,-20(fp)
  80323c:	e0bffe17 	ldw	r2,-8(fp)
  803240:	10800617 	ldw	r2,24(r2)
  803244:	108002c3 	ldbu	r2,11(r2)
  803248:	e0bffc05 	stb	r2,-16(fp)
  80324c:	e0bffb17 	ldw	r2,-20(fp)
  803250:	10000b26 	beq	r2,zero,803280 <follow_path+0x104>
  803254:	e0bffb17 	ldw	r2,-20(fp)
  803258:	10800120 	cmpeqi	r2,r2,4
  80325c:	1000011e 	bne	r2,zero,803264 <follow_path+0xe8>
  803260:	00003406 	br	803334 <follow_path+0x1b8>
  803264:	e0bffc03 	ldbu	r2,-16(fp)
  803268:	1080010c 	andi	r2,r2,4
  80326c:	1000031e 	bne	r2,zero,80327c <follow_path+0x100>
  803270:	00800144 	movi	r2,5
  803274:	e0bffb15 	stw	r2,-20(fp)
  803278:	00002e06 	br	803334 <follow_path+0x1b8>
  80327c:	00002d06 	br	803334 <follow_path+0x1b8>
  803280:	e0bffc03 	ldbu	r2,-16(fp)
  803284:	1080010c 	andi	r2,r2,4
  803288:	10000126 	beq	r2,zero,803290 <follow_path+0x114>
  80328c:	00002906 	br	803334 <follow_path+0x1b8>
  803290:	e0bffe17 	ldw	r2,-8(fp)
  803294:	10800517 	ldw	r2,20(r2)
  803298:	e0bffd15 	stw	r2,-12(fp)
  80329c:	e0bffd17 	ldw	r2,-12(fp)
  8032a0:	108002c4 	addi	r2,r2,11
  8032a4:	10800003 	ldbu	r2,0(r2)
  8032a8:	10803fcc 	andi	r2,r2,255
  8032ac:	1080040c 	andi	r2,r2,16
  8032b0:	1000031e 	bne	r2,zero,8032c0 <follow_path+0x144>
  8032b4:	00800144 	movi	r2,5
  8032b8:	e0bffb15 	stw	r2,-20(fp)
  8032bc:	00001d06 	br	803334 <follow_path+0x1b8>
  8032c0:	e0bffd17 	ldw	r2,-12(fp)
  8032c4:	10800544 	addi	r2,r2,21
  8032c8:	10800003 	ldbu	r2,0(r2)
  8032cc:	10803fcc 	andi	r2,r2,255
  8032d0:	1004923a 	slli	r2,r2,8
  8032d4:	1007883a 	mov	r3,r2
  8032d8:	e0bffd17 	ldw	r2,-12(fp)
  8032dc:	10800504 	addi	r2,r2,20
  8032e0:	10800003 	ldbu	r2,0(r2)
  8032e4:	10803fcc 	andi	r2,r2,255
  8032e8:	1884b03a 	or	r2,r3,r2
  8032ec:	10bfffcc 	andi	r2,r2,65535
  8032f0:	1006943a 	slli	r3,r2,16
  8032f4:	e0bffd17 	ldw	r2,-12(fp)
  8032f8:	108006c4 	addi	r2,r2,27
  8032fc:	10800003 	ldbu	r2,0(r2)
  803300:	10803fcc 	andi	r2,r2,255
  803304:	1004923a 	slli	r2,r2,8
  803308:	1009883a 	mov	r4,r2
  80330c:	e0bffd17 	ldw	r2,-12(fp)
  803310:	10800684 	addi	r2,r2,26
  803314:	10800003 	ldbu	r2,0(r2)
  803318:	10803fcc 	andi	r2,r2,255
  80331c:	2084b03a 	or	r2,r4,r2
  803320:	10bfffcc 	andi	r2,r2,65535
  803324:	1886b03a 	or	r3,r3,r2
  803328:	e0bffe17 	ldw	r2,-8(fp)
  80332c:	10c00215 	stw	r3,8(r2)
  803330:	003fb706 	br	803210 <__alt_data_end+0xff803210>
  803334:	e0bffb17 	ldw	r2,-20(fp)
  803338:	e037883a 	mov	sp,fp
  80333c:	dfc00117 	ldw	ra,4(sp)
  803340:	df000017 	ldw	fp,0(sp)
  803344:	dec00204 	addi	sp,sp,8
  803348:	f800283a 	ret

0080334c <check_fs>:
  80334c:	defffc04 	addi	sp,sp,-16
  803350:	dfc00315 	stw	ra,12(sp)
  803354:	df000215 	stw	fp,8(sp)
  803358:	df000204 	addi	fp,sp,8
  80335c:	e13ffe15 	stw	r4,-8(fp)
  803360:	e17fff15 	stw	r5,-4(fp)
  803364:	e0bffe17 	ldw	r2,-8(fp)
  803368:	10800043 	ldbu	r2,1(r2)
  80336c:	10c03fcc 	andi	r3,r2,255
  803370:	e0bffe17 	ldw	r2,-8(fp)
  803374:	10800c04 	addi	r2,r2,48
  803378:	1809883a 	mov	r4,r3
  80337c:	100b883a 	mov	r5,r2
  803380:	e1bfff17 	ldw	r6,-4(fp)
  803384:	01c00044 	movi	r7,1
  803388:	0800dec0 	call	800dec <ffs_DiskIORead>
  80338c:	10000226 	beq	r2,zero,803398 <check_fs+0x4c>
  803390:	008000c4 	movi	r2,3
  803394:	00004506 	br	8034ac <check_fs+0x160>
  803398:	e0bffe17 	ldw	r2,-8(fp)
  80339c:	10808bc3 	ldbu	r2,559(r2)
  8033a0:	10803fcc 	andi	r2,r2,255
  8033a4:	1004923a 	slli	r2,r2,8
  8033a8:	1007883a 	mov	r3,r2
  8033ac:	e0bffe17 	ldw	r2,-8(fp)
  8033b0:	10808b83 	ldbu	r2,558(r2)
  8033b4:	10803fcc 	andi	r2,r2,255
  8033b8:	1884b03a 	or	r2,r3,r2
  8033bc:	10bfffcc 	andi	r2,r2,65535
  8033c0:	10a0001c 	xori	r2,r2,32768
  8033c4:	10a00004 	addi	r2,r2,-32768
  8033c8:	10aa9560 	cmpeqi	r2,r2,-21931
  8033cc:	1000021e 	bne	r2,zero,8033d8 <check_fs+0x8c>
  8033d0:	00800084 	movi	r2,2
  8033d4:	00003506 	br	8034ac <check_fs+0x160>
  8033d8:	e0bffe17 	ldw	r2,-8(fp)
  8033dc:	10801a43 	ldbu	r2,105(r2)
  8033e0:	10803fcc 	andi	r2,r2,255
  8033e4:	1006963a 	slli	r3,r2,24
  8033e8:	e0bffe17 	ldw	r2,-8(fp)
  8033ec:	10801a03 	ldbu	r2,104(r2)
  8033f0:	10803fcc 	andi	r2,r2,255
  8033f4:	1004943a 	slli	r2,r2,16
  8033f8:	1884b03a 	or	r2,r3,r2
  8033fc:	e0fffe17 	ldw	r3,-8(fp)
  803400:	18c019c3 	ldbu	r3,103(r3)
  803404:	18c03fcc 	andi	r3,r3,255
  803408:	1806923a 	slli	r3,r3,8
  80340c:	10c6b03a 	or	r3,r2,r3
  803410:	e0bffe17 	ldw	r2,-8(fp)
  803414:	10801983 	ldbu	r2,102(r2)
  803418:	10803fcc 	andi	r2,r2,255
  80341c:	1886b03a 	or	r3,r3,r2
  803420:	00804034 	movhi	r2,256
  803424:	10bfffc4 	addi	r2,r2,-1
  803428:	1886703a 	and	r3,r3,r2
  80342c:	00801534 	movhi	r2,84
  803430:	10905184 	addi	r2,r2,16710
  803434:	1880021e 	bne	r3,r2,803440 <check_fs+0xf4>
  803438:	0005883a 	mov	r2,zero
  80343c:	00001b06 	br	8034ac <check_fs+0x160>
  803440:	e0bffe17 	ldw	r2,-8(fp)
  803444:	10802143 	ldbu	r2,133(r2)
  803448:	10803fcc 	andi	r2,r2,255
  80344c:	1006963a 	slli	r3,r2,24
  803450:	e0bffe17 	ldw	r2,-8(fp)
  803454:	10802103 	ldbu	r2,132(r2)
  803458:	10803fcc 	andi	r2,r2,255
  80345c:	1004943a 	slli	r2,r2,16
  803460:	1884b03a 	or	r2,r3,r2
  803464:	e0fffe17 	ldw	r3,-8(fp)
  803468:	18c020c3 	ldbu	r3,131(r3)
  80346c:	18c03fcc 	andi	r3,r3,255
  803470:	1806923a 	slli	r3,r3,8
  803474:	10c6b03a 	or	r3,r2,r3
  803478:	e0bffe17 	ldw	r2,-8(fp)
  80347c:	10802083 	ldbu	r2,130(r2)
  803480:	10803fcc 	andi	r2,r2,255
  803484:	1886b03a 	or	r3,r3,r2
  803488:	00804034 	movhi	r2,256
  80348c:	10bfffc4 	addi	r2,r2,-1
  803490:	1886703a 	and	r3,r3,r2
  803494:	00801534 	movhi	r2,84
  803498:	10905184 	addi	r2,r2,16710
  80349c:	1880021e 	bne	r3,r2,8034a8 <check_fs+0x15c>
  8034a0:	0005883a 	mov	r2,zero
  8034a4:	00000106 	br	8034ac <check_fs+0x160>
  8034a8:	00800044 	movi	r2,1
  8034ac:	e037883a 	mov	sp,fp
  8034b0:	dfc00117 	ldw	ra,4(sp)
  8034b4:	df000017 	ldw	fp,0(sp)
  8034b8:	dec00204 	addi	sp,sp,8
  8034bc:	f800283a 	ret

008034c0 <chk_mounted>:
  8034c0:	deffee04 	addi	sp,sp,-72
  8034c4:	dfc01115 	stw	ra,68(sp)
  8034c8:	df001015 	stw	fp,64(sp)
  8034cc:	df001004 	addi	fp,sp,64
  8034d0:	e13ffd15 	stw	r4,-12(fp)
  8034d4:	e17ffe15 	stw	r5,-8(fp)
  8034d8:	3005883a 	mov	r2,r6
  8034dc:	e0bfff05 	stb	r2,-4(fp)
  8034e0:	e0bffd17 	ldw	r2,-12(fp)
  8034e4:	10800017 	ldw	r2,0(r2)
  8034e8:	e0bff615 	stw	r2,-40(fp)
  8034ec:	e0bff617 	ldw	r2,-40(fp)
  8034f0:	10800003 	ldbu	r2,0(r2)
  8034f4:	10803fcc 	andi	r2,r2,255
  8034f8:	1080201c 	xori	r2,r2,128
  8034fc:	10bfe004 	addi	r2,r2,-128
  803500:	10bff404 	addi	r2,r2,-48
  803504:	e0bff115 	stw	r2,-60(fp)
  803508:	e0bff117 	ldw	r2,-60(fp)
  80350c:	108002a8 	cmpgeui	r2,r2,10
  803510:	10000f1e 	bne	r2,zero,803550 <chk_mounted+0x90>
  803514:	e0bff617 	ldw	r2,-40(fp)
  803518:	10800044 	addi	r2,r2,1
  80351c:	10800003 	ldbu	r2,0(r2)
  803520:	10803fcc 	andi	r2,r2,255
  803524:	1080201c 	xori	r2,r2,128
  803528:	10bfe004 	addi	r2,r2,-128
  80352c:	10800e98 	cmpnei	r2,r2,58
  803530:	1000071e 	bne	r2,zero,803550 <chk_mounted+0x90>
  803534:	e0bff617 	ldw	r2,-40(fp)
  803538:	10800084 	addi	r2,r2,2
  80353c:	e0bff615 	stw	r2,-40(fp)
  803540:	e0bffd17 	ldw	r2,-12(fp)
  803544:	e0fff617 	ldw	r3,-40(fp)
  803548:	10c00015 	stw	r3,0(r2)
  80354c:	00000106 	br	803554 <chk_mounted+0x94>
  803550:	e03ff115 	stw	zero,-60(fp)
  803554:	e0bff117 	ldw	r2,-60(fp)
  803558:	10000226 	beq	r2,zero,803564 <chk_mounted+0xa4>
  80355c:	008002c4 	movi	r2,11
  803560:	00022106 	br	803de8 <chk_mounted+0x928>
  803564:	e0bff117 	ldw	r2,-60(fp)
  803568:	1085883a 	add	r2,r2,r2
  80356c:	1087883a 	add	r3,r2,r2
  803570:	d0a36304 	addi	r2,gp,-29300
  803574:	1885883a 	add	r2,r3,r2
  803578:	10800017 	ldw	r2,0(r2)
  80357c:	e0bff715 	stw	r2,-36(fp)
  803580:	e0bffe17 	ldw	r2,-8(fp)
  803584:	e0fff717 	ldw	r3,-36(fp)
  803588:	10c00015 	stw	r3,0(r2)
  80358c:	e0bff717 	ldw	r2,-36(fp)
  803590:	1000021e 	bne	r2,zero,80359c <chk_mounted+0xdc>
  803594:	00800304 	movi	r2,12
  803598:	00021306 	br	803de8 <chk_mounted+0x928>
  80359c:	e0bff717 	ldw	r2,-36(fp)
  8035a0:	10800003 	ldbu	r2,0(r2)
  8035a4:	10803fcc 	andi	r2,r2,255
  8035a8:	10001226 	beq	r2,zero,8035f4 <chk_mounted+0x134>
  8035ac:	e0bff717 	ldw	r2,-36(fp)
  8035b0:	10800043 	ldbu	r2,1(r2)
  8035b4:	10803fcc 	andi	r2,r2,255
  8035b8:	1009883a 	mov	r4,r2
  8035bc:	0800dc40 	call	800dc4 <ffs_DiskIOStatus>
  8035c0:	e0bff805 	stb	r2,-32(fp)
  8035c4:	e0bff803 	ldbu	r2,-32(fp)
  8035c8:	1080004c 	andi	r2,r2,1
  8035cc:	1000091e 	bne	r2,zero,8035f4 <chk_mounted+0x134>
  8035d0:	e0bfff03 	ldbu	r2,-4(fp)
  8035d4:	10000526 	beq	r2,zero,8035ec <chk_mounted+0x12c>
  8035d8:	e0bff803 	ldbu	r2,-32(fp)
  8035dc:	1080010c 	andi	r2,r2,4
  8035e0:	10000226 	beq	r2,zero,8035ec <chk_mounted+0x12c>
  8035e4:	00800284 	movi	r2,10
  8035e8:	0001ff06 	br	803de8 <chk_mounted+0x928>
  8035ec:	0005883a 	mov	r2,zero
  8035f0:	0001fd06 	br	803de8 <chk_mounted+0x928>
  8035f4:	e0bff717 	ldw	r2,-36(fp)
  8035f8:	10000005 	stb	zero,0(r2)
  8035fc:	e0bff117 	ldw	r2,-60(fp)
  803600:	1007883a 	mov	r3,r2
  803604:	e0bff717 	ldw	r2,-36(fp)
  803608:	10c00045 	stb	r3,1(r2)
  80360c:	e0bff717 	ldw	r2,-36(fp)
  803610:	10800043 	ldbu	r2,1(r2)
  803614:	10803fcc 	andi	r2,r2,255
  803618:	1009883a 	mov	r4,r2
  80361c:	0800b680 	call	800b68 <ffs_DiskIOInitialize>
  803620:	e0bff805 	stb	r2,-32(fp)
  803624:	e0bff803 	ldbu	r2,-32(fp)
  803628:	1080004c 	andi	r2,r2,1
  80362c:	10000226 	beq	r2,zero,803638 <chk_mounted+0x178>
  803630:	008000c4 	movi	r2,3
  803634:	0001ec06 	br	803de8 <chk_mounted+0x928>
  803638:	e0bfff03 	ldbu	r2,-4(fp)
  80363c:	10000526 	beq	r2,zero,803654 <chk_mounted+0x194>
  803640:	e0bff803 	ldbu	r2,-32(fp)
  803644:	1080010c 	andi	r2,r2,4
  803648:	10000226 	beq	r2,zero,803654 <chk_mounted+0x194>
  80364c:	00800284 	movi	r2,10
  803650:	0001e506 	br	803de8 <chk_mounted+0x928>
  803654:	e03ff215 	stw	zero,-56(fp)
  803658:	e13ff717 	ldw	r4,-36(fp)
  80365c:	e17ff217 	ldw	r5,-56(fp)
  803660:	080334c0 	call	80334c <check_fs>
  803664:	e0bff005 	stb	r2,-64(fp)
  803668:	e0bff003 	ldbu	r2,-64(fp)
  80366c:	10800058 	cmpnei	r2,r2,1
  803670:	10002d1e 	bne	r2,zero,803728 <chk_mounted+0x268>
  803674:	e03ff045 	stb	zero,-63(fp)
  803678:	e0bff043 	ldbu	r2,-63(fp)
  80367c:	10000326 	beq	r2,zero,80368c <chk_mounted+0x1cc>
  803680:	e0bff043 	ldbu	r2,-63(fp)
  803684:	10bfffc4 	addi	r2,r2,-1
  803688:	e0bff045 	stb	r2,-63(fp)
  80368c:	e0bff043 	ldbu	r2,-63(fp)
  803690:	1004913a 	slli	r2,r2,4
  803694:	10806f84 	addi	r2,r2,446
  803698:	10800c04 	addi	r2,r2,48
  80369c:	e0fff717 	ldw	r3,-36(fp)
  8036a0:	1885883a 	add	r2,r3,r2
  8036a4:	e0bff915 	stw	r2,-28(fp)
  8036a8:	e0bff917 	ldw	r2,-28(fp)
  8036ac:	10800104 	addi	r2,r2,4
  8036b0:	10800003 	ldbu	r2,0(r2)
  8036b4:	10803fcc 	andi	r2,r2,255
  8036b8:	10001b26 	beq	r2,zero,803728 <chk_mounted+0x268>
  8036bc:	e0bff917 	ldw	r2,-28(fp)
  8036c0:	108002c4 	addi	r2,r2,11
  8036c4:	10800003 	ldbu	r2,0(r2)
  8036c8:	10803fcc 	andi	r2,r2,255
  8036cc:	1006963a 	slli	r3,r2,24
  8036d0:	e0bff917 	ldw	r2,-28(fp)
  8036d4:	10800284 	addi	r2,r2,10
  8036d8:	10800003 	ldbu	r2,0(r2)
  8036dc:	10803fcc 	andi	r2,r2,255
  8036e0:	1004943a 	slli	r2,r2,16
  8036e4:	1884b03a 	or	r2,r3,r2
  8036e8:	e0fff917 	ldw	r3,-28(fp)
  8036ec:	18c00244 	addi	r3,r3,9
  8036f0:	18c00003 	ldbu	r3,0(r3)
  8036f4:	18c03fcc 	andi	r3,r3,255
  8036f8:	1806923a 	slli	r3,r3,8
  8036fc:	10c6b03a 	or	r3,r2,r3
  803700:	e0bff917 	ldw	r2,-28(fp)
  803704:	10800204 	addi	r2,r2,8
  803708:	10800003 	ldbu	r2,0(r2)
  80370c:	10803fcc 	andi	r2,r2,255
  803710:	1884b03a 	or	r2,r3,r2
  803714:	e0bff215 	stw	r2,-56(fp)
  803718:	e13ff717 	ldw	r4,-36(fp)
  80371c:	e17ff217 	ldw	r5,-56(fp)
  803720:	080334c0 	call	80334c <check_fs>
  803724:	e0bff005 	stb	r2,-64(fp)
  803728:	e0bff003 	ldbu	r2,-64(fp)
  80372c:	108000d8 	cmpnei	r2,r2,3
  803730:	1000021e 	bne	r2,zero,80373c <chk_mounted+0x27c>
  803734:	00800044 	movi	r2,1
  803738:	0001ab06 	br	803de8 <chk_mounted+0x928>
  80373c:	e0bff003 	ldbu	r2,-64(fp)
  803740:	10000226 	beq	r2,zero,80374c <chk_mounted+0x28c>
  803744:	00800344 	movi	r2,13
  803748:	0001a706 	br	803de8 <chk_mounted+0x928>
  80374c:	e0bff717 	ldw	r2,-36(fp)
  803750:	10800f03 	ldbu	r2,60(r2)
  803754:	10803fcc 	andi	r2,r2,255
  803758:	1004923a 	slli	r2,r2,8
  80375c:	1007883a 	mov	r3,r2
  803760:	e0bff717 	ldw	r2,-36(fp)
  803764:	10800ec3 	ldbu	r2,59(r2)
  803768:	10803fcc 	andi	r2,r2,255
  80376c:	1884b03a 	or	r2,r3,r2
  803770:	10bfffcc 	andi	r2,r2,65535
  803774:	10a0001c 	xori	r2,r2,32768
  803778:	10a00004 	addi	r2,r2,-32768
  80377c:	10808020 	cmpeqi	r2,r2,512
  803780:	1000021e 	bne	r2,zero,80378c <chk_mounted+0x2cc>
  803784:	00800344 	movi	r2,13
  803788:	00019706 	br	803de8 <chk_mounted+0x928>
  80378c:	e0bff717 	ldw	r2,-36(fp)
  803790:	108011c3 	ldbu	r2,71(r2)
  803794:	10803fcc 	andi	r2,r2,255
  803798:	1004923a 	slli	r2,r2,8
  80379c:	1007883a 	mov	r3,r2
  8037a0:	e0bff717 	ldw	r2,-36(fp)
  8037a4:	10801183 	ldbu	r2,70(r2)
  8037a8:	10803fcc 	andi	r2,r2,255
  8037ac:	1884b03a 	or	r2,r3,r2
  8037b0:	10bfffcc 	andi	r2,r2,65535
  8037b4:	e0bff315 	stw	r2,-52(fp)
  8037b8:	e0bff317 	ldw	r2,-52(fp)
  8037bc:	1000131e 	bne	r2,zero,80380c <chk_mounted+0x34c>
  8037c0:	e0bff717 	ldw	r2,-36(fp)
  8037c4:	108015c3 	ldbu	r2,87(r2)
  8037c8:	10803fcc 	andi	r2,r2,255
  8037cc:	1006963a 	slli	r3,r2,24
  8037d0:	e0bff717 	ldw	r2,-36(fp)
  8037d4:	10801583 	ldbu	r2,86(r2)
  8037d8:	10803fcc 	andi	r2,r2,255
  8037dc:	1004943a 	slli	r2,r2,16
  8037e0:	1884b03a 	or	r2,r3,r2
  8037e4:	e0fff717 	ldw	r3,-36(fp)
  8037e8:	18c01543 	ldbu	r3,85(r3)
  8037ec:	18c03fcc 	andi	r3,r3,255
  8037f0:	1806923a 	slli	r3,r3,8
  8037f4:	10c6b03a 	or	r3,r2,r3
  8037f8:	e0bff717 	ldw	r2,-36(fp)
  8037fc:	10801503 	ldbu	r2,84(r2)
  803800:	10803fcc 	andi	r2,r2,255
  803804:	1884b03a 	or	r2,r3,r2
  803808:	e0bff315 	stw	r2,-52(fp)
  80380c:	e0bff717 	ldw	r2,-36(fp)
  803810:	e0fff317 	ldw	r3,-52(fp)
  803814:	10c00715 	stw	r3,28(r2)
  803818:	e0bff717 	ldw	r2,-36(fp)
  80381c:	10801003 	ldbu	r2,64(r2)
  803820:	e0bffa05 	stb	r2,-24(fp)
  803824:	e0bff717 	ldw	r2,-36(fp)
  803828:	e0fffa03 	ldbu	r3,-24(fp)
  80382c:	10c000c5 	stb	r3,3(r2)
  803830:	e0bffa03 	ldbu	r2,-24(fp)
  803834:	10800060 	cmpeqi	r2,r2,1
  803838:	1000051e 	bne	r2,zero,803850 <chk_mounted+0x390>
  80383c:	e0bffa03 	ldbu	r2,-24(fp)
  803840:	108000a0 	cmpeqi	r2,r2,2
  803844:	1000021e 	bne	r2,zero,803850 <chk_mounted+0x390>
  803848:	00800344 	movi	r2,13
  80384c:	00016606 	br	803de8 <chk_mounted+0x928>
  803850:	e0bffa03 	ldbu	r2,-24(fp)
  803854:	e0fff317 	ldw	r3,-52(fp)
  803858:	1885383a 	mul	r2,r3,r2
  80385c:	e0bff315 	stw	r2,-52(fp)
  803860:	e0bff717 	ldw	r2,-36(fp)
  803864:	10800f43 	ldbu	r2,61(r2)
  803868:	e0bffa05 	stb	r2,-24(fp)
  80386c:	e0bff717 	ldw	r2,-36(fp)
  803870:	e0fffa03 	ldbu	r3,-24(fp)
  803874:	10c00085 	stb	r3,2(r2)
  803878:	e0bffa03 	ldbu	r2,-24(fp)
  80387c:	10000526 	beq	r2,zero,803894 <chk_mounted+0x3d4>
  803880:	e0fffa03 	ldbu	r3,-24(fp)
  803884:	e0bffa03 	ldbu	r2,-24(fp)
  803888:	10bfffc4 	addi	r2,r2,-1
  80388c:	1884703a 	and	r2,r3,r2
  803890:	10000226 	beq	r2,zero,80389c <chk_mounted+0x3dc>
  803894:	00800344 	movi	r2,13
  803898:	00015306 	br	803de8 <chk_mounted+0x928>
  80389c:	e0bff717 	ldw	r2,-36(fp)
  8038a0:	10801083 	ldbu	r2,66(r2)
  8038a4:	10803fcc 	andi	r2,r2,255
  8038a8:	1004923a 	slli	r2,r2,8
  8038ac:	1007883a 	mov	r3,r2
  8038b0:	e0bff717 	ldw	r2,-36(fp)
  8038b4:	10801043 	ldbu	r2,65(r2)
  8038b8:	10803fcc 	andi	r2,r2,255
  8038bc:	1884b03a 	or	r2,r3,r2
  8038c0:	1007883a 	mov	r3,r2
  8038c4:	e0bff717 	ldw	r2,-36(fp)
  8038c8:	10c0020d 	sth	r3,8(r2)
  8038cc:	e0bff717 	ldw	r2,-36(fp)
  8038d0:	1080020b 	ldhu	r2,8(r2)
  8038d4:	108003cc 	andi	r2,r2,15
  8038d8:	10bfffcc 	andi	r2,r2,65535
  8038dc:	10000226 	beq	r2,zero,8038e8 <chk_mounted+0x428>
  8038e0:	00800344 	movi	r2,13
  8038e4:	00014006 	br	803de8 <chk_mounted+0x928>
  8038e8:	e0bff717 	ldw	r2,-36(fp)
  8038ec:	10801103 	ldbu	r2,68(r2)
  8038f0:	10803fcc 	andi	r2,r2,255
  8038f4:	1004923a 	slli	r2,r2,8
  8038f8:	1007883a 	mov	r3,r2
  8038fc:	e0bff717 	ldw	r2,-36(fp)
  803900:	108010c3 	ldbu	r2,67(r2)
  803904:	10803fcc 	andi	r2,r2,255
  803908:	1884b03a 	or	r2,r3,r2
  80390c:	10bfffcc 	andi	r2,r2,65535
  803910:	e0bff415 	stw	r2,-48(fp)
  803914:	e0bff417 	ldw	r2,-48(fp)
  803918:	1000131e 	bne	r2,zero,803968 <chk_mounted+0x4a8>
  80391c:	e0bff717 	ldw	r2,-36(fp)
  803920:	108014c3 	ldbu	r2,83(r2)
  803924:	10803fcc 	andi	r2,r2,255
  803928:	1006963a 	slli	r3,r2,24
  80392c:	e0bff717 	ldw	r2,-36(fp)
  803930:	10801483 	ldbu	r2,82(r2)
  803934:	10803fcc 	andi	r2,r2,255
  803938:	1004943a 	slli	r2,r2,16
  80393c:	1884b03a 	or	r2,r3,r2
  803940:	e0fff717 	ldw	r3,-36(fp)
  803944:	18c01443 	ldbu	r3,81(r3)
  803948:	18c03fcc 	andi	r3,r3,255
  80394c:	1806923a 	slli	r3,r3,8
  803950:	10c6b03a 	or	r3,r2,r3
  803954:	e0bff717 	ldw	r2,-36(fp)
  803958:	10801403 	ldbu	r2,80(r2)
  80395c:	10803fcc 	andi	r2,r2,255
  803960:	1884b03a 	or	r2,r3,r2
  803964:	e0bff415 	stw	r2,-48(fp)
  803968:	e0bff717 	ldw	r2,-36(fp)
  80396c:	10800fc3 	ldbu	r2,63(r2)
  803970:	10803fcc 	andi	r2,r2,255
  803974:	1004923a 	slli	r2,r2,8
  803978:	1007883a 	mov	r3,r2
  80397c:	e0bff717 	ldw	r2,-36(fp)
  803980:	10800f83 	ldbu	r2,62(r2)
  803984:	10803fcc 	andi	r2,r2,255
  803988:	1884b03a 	or	r2,r3,r2
  80398c:	e0bffa8d 	sth	r2,-22(fp)
  803990:	e0bffa8b 	ldhu	r2,-22(fp)
  803994:	1000021e 	bne	r2,zero,8039a0 <chk_mounted+0x4e0>
  803998:	00800344 	movi	r2,13
  80399c:	00011206 	br	803de8 <chk_mounted+0x928>
  8039a0:	e0fffa8b 	ldhu	r3,-22(fp)
  8039a4:	e0bff317 	ldw	r2,-52(fp)
  8039a8:	1887883a 	add	r3,r3,r2
  8039ac:	e0bff717 	ldw	r2,-36(fp)
  8039b0:	1080020b 	ldhu	r2,8(r2)
  8039b4:	10bfffcc 	andi	r2,r2,65535
  8039b8:	1004d13a 	srli	r2,r2,4
  8039bc:	10bfffcc 	andi	r2,r2,65535
  8039c0:	1885883a 	add	r2,r3,r2
  8039c4:	e0bffb15 	stw	r2,-20(fp)
  8039c8:	e0fff417 	ldw	r3,-48(fp)
  8039cc:	e0bffb17 	ldw	r2,-20(fp)
  8039d0:	1880022e 	bgeu	r3,r2,8039dc <chk_mounted+0x51c>
  8039d4:	00800344 	movi	r2,13
  8039d8:	00010306 	br	803de8 <chk_mounted+0x928>
  8039dc:	e0fff417 	ldw	r3,-48(fp)
  8039e0:	e0bffb17 	ldw	r2,-20(fp)
  8039e4:	1887c83a 	sub	r3,r3,r2
  8039e8:	e0bff717 	ldw	r2,-36(fp)
  8039ec:	10800083 	ldbu	r2,2(r2)
  8039f0:	10803fcc 	andi	r2,r2,255
  8039f4:	1809883a 	mov	r4,r3
  8039f8:	100b883a 	mov	r5,r2
  8039fc:	0809abc0 	call	809abc <__udivsi3>
  803a00:	e0bffc15 	stw	r2,-16(fp)
  803a04:	e0bffc17 	ldw	r2,-16(fp)
  803a08:	1000021e 	bne	r2,zero,803a14 <chk_mounted+0x554>
  803a0c:	00800344 	movi	r2,13
  803a10:	0000f506 	br	803de8 <chk_mounted+0x928>
  803a14:	00800044 	movi	r2,1
  803a18:	e0bff005 	stb	r2,-64(fp)
  803a1c:	e0bffc17 	ldw	r2,-16(fp)
  803a20:	1083fdb0 	cmpltui	r2,r2,4086
  803a24:	1000021e 	bne	r2,zero,803a30 <chk_mounted+0x570>
  803a28:	00800084 	movi	r2,2
  803a2c:	e0bff005 	stb	r2,-64(fp)
  803a30:	e0bffc17 	ldw	r2,-16(fp)
  803a34:	10bffdb0 	cmpltui	r2,r2,65526
  803a38:	1000021e 	bne	r2,zero,803a44 <chk_mounted+0x584>
  803a3c:	008000c4 	movi	r2,3
  803a40:	e0bff005 	stb	r2,-64(fp)
  803a44:	e0bffc17 	ldw	r2,-16(fp)
  803a48:	10c00084 	addi	r3,r2,2
  803a4c:	e0bff717 	ldw	r2,-36(fp)
  803a50:	10c00615 	stw	r3,24(r2)
  803a54:	e0fff217 	ldw	r3,-56(fp)
  803a58:	e0bffb17 	ldw	r2,-20(fp)
  803a5c:	1887883a 	add	r3,r3,r2
  803a60:	e0bff717 	ldw	r2,-36(fp)
  803a64:	10c00a15 	stw	r3,40(r2)
  803a68:	e0fffa8b 	ldhu	r3,-22(fp)
  803a6c:	e0bff217 	ldw	r2,-56(fp)
  803a70:	1887883a 	add	r3,r3,r2
  803a74:	e0bff717 	ldw	r2,-36(fp)
  803a78:	10c00815 	stw	r3,32(r2)
  803a7c:	e0bff003 	ldbu	r2,-64(fp)
  803a80:	108000d8 	cmpnei	r2,r2,3
  803a84:	1000201e 	bne	r2,zero,803b08 <chk_mounted+0x648>
  803a88:	e0bff717 	ldw	r2,-36(fp)
  803a8c:	1080020b 	ldhu	r2,8(r2)
  803a90:	10bfffcc 	andi	r2,r2,65535
  803a94:	10000226 	beq	r2,zero,803aa0 <chk_mounted+0x5e0>
  803a98:	00800344 	movi	r2,13
  803a9c:	0000d206 	br	803de8 <chk_mounted+0x928>
  803aa0:	e0bff717 	ldw	r2,-36(fp)
  803aa4:	108017c3 	ldbu	r2,95(r2)
  803aa8:	10803fcc 	andi	r2,r2,255
  803aac:	1006963a 	slli	r3,r2,24
  803ab0:	e0bff717 	ldw	r2,-36(fp)
  803ab4:	10801783 	ldbu	r2,94(r2)
  803ab8:	10803fcc 	andi	r2,r2,255
  803abc:	1004943a 	slli	r2,r2,16
  803ac0:	1884b03a 	or	r2,r3,r2
  803ac4:	e0fff717 	ldw	r3,-36(fp)
  803ac8:	18c01743 	ldbu	r3,93(r3)
  803acc:	18c03fcc 	andi	r3,r3,255
  803ad0:	1806923a 	slli	r3,r3,8
  803ad4:	10c6b03a 	or	r3,r2,r3
  803ad8:	e0bff717 	ldw	r2,-36(fp)
  803adc:	10801703 	ldbu	r2,92(r2)
  803ae0:	10803fcc 	andi	r2,r2,255
  803ae4:	1886b03a 	or	r3,r3,r2
  803ae8:	e0bff717 	ldw	r2,-36(fp)
  803aec:	10c00915 	stw	r3,36(r2)
  803af0:	e0bff717 	ldw	r2,-36(fp)
  803af4:	10800617 	ldw	r2,24(r2)
  803af8:	1085883a 	add	r2,r2,r2
  803afc:	1085883a 	add	r2,r2,r2
  803b00:	e0bff515 	stw	r2,-44(fp)
  803b04:	00001e06 	br	803b80 <chk_mounted+0x6c0>
  803b08:	e0bff717 	ldw	r2,-36(fp)
  803b0c:	1080020b 	ldhu	r2,8(r2)
  803b10:	10bfffcc 	andi	r2,r2,65535
  803b14:	1000021e 	bne	r2,zero,803b20 <chk_mounted+0x660>
  803b18:	00800344 	movi	r2,13
  803b1c:	0000b206 	br	803de8 <chk_mounted+0x928>
  803b20:	e0bff717 	ldw	r2,-36(fp)
  803b24:	10c00817 	ldw	r3,32(r2)
  803b28:	e0bff317 	ldw	r2,-52(fp)
  803b2c:	1887883a 	add	r3,r3,r2
  803b30:	e0bff717 	ldw	r2,-36(fp)
  803b34:	10c00915 	stw	r3,36(r2)
  803b38:	e0bff003 	ldbu	r2,-64(fp)
  803b3c:	10800098 	cmpnei	r2,r2,2
  803b40:	1000041e 	bne	r2,zero,803b54 <chk_mounted+0x694>
  803b44:	e0bff717 	ldw	r2,-36(fp)
  803b48:	10800617 	ldw	r2,24(r2)
  803b4c:	1085883a 	add	r2,r2,r2
  803b50:	00000a06 	br	803b7c <chk_mounted+0x6bc>
  803b54:	e0bff717 	ldw	r2,-36(fp)
  803b58:	10c00617 	ldw	r3,24(r2)
  803b5c:	1805883a 	mov	r2,r3
  803b60:	1085883a 	add	r2,r2,r2
  803b64:	10c5883a 	add	r2,r2,r3
  803b68:	1006d07a 	srli	r3,r2,1
  803b6c:	e0bff717 	ldw	r2,-36(fp)
  803b70:	10800617 	ldw	r2,24(r2)
  803b74:	1080004c 	andi	r2,r2,1
  803b78:	1885883a 	add	r2,r3,r2
  803b7c:	e0bff515 	stw	r2,-44(fp)
  803b80:	e0bff717 	ldw	r2,-36(fp)
  803b84:	10c00717 	ldw	r3,28(r2)
  803b88:	e0bff517 	ldw	r2,-44(fp)
  803b8c:	10807fc4 	addi	r2,r2,511
  803b90:	1004d27a 	srli	r2,r2,9
  803b94:	1880022e 	bgeu	r3,r2,803ba0 <chk_mounted+0x6e0>
  803b98:	00800344 	movi	r2,13
  803b9c:	00009206 	br	803de8 <chk_mounted+0x928>
  803ba0:	e0bff717 	ldw	r2,-36(fp)
  803ba4:	00ffffc4 	movi	r3,-1
  803ba8:	10c00415 	stw	r3,16(r2)
  803bac:	e0bff717 	ldw	r2,-36(fp)
  803bb0:	10000315 	stw	zero,12(r2)
  803bb4:	e0bff003 	ldbu	r2,-64(fp)
  803bb8:	108000d8 	cmpnei	r2,r2,3
  803bbc:	10007c1e 	bne	r2,zero,803db0 <chk_mounted+0x8f0>
  803bc0:	e0bff717 	ldw	r2,-36(fp)
  803bc4:	10000145 	stb	zero,5(r2)
  803bc8:	e0bff717 	ldw	r2,-36(fp)
  803bcc:	10801843 	ldbu	r2,97(r2)
  803bd0:	10803fcc 	andi	r2,r2,255
  803bd4:	1004923a 	slli	r2,r2,8
  803bd8:	1007883a 	mov	r3,r2
  803bdc:	e0bff717 	ldw	r2,-36(fp)
  803be0:	10801803 	ldbu	r2,96(r2)
  803be4:	10803fcc 	andi	r2,r2,255
  803be8:	1884b03a 	or	r2,r3,r2
  803bec:	10ffffcc 	andi	r3,r2,65535
  803bf0:	e0bff217 	ldw	r2,-56(fp)
  803bf4:	1887883a 	add	r3,r3,r2
  803bf8:	e0bff717 	ldw	r2,-36(fp)
  803bfc:	10c00515 	stw	r3,20(r2)
  803c00:	e0bff717 	ldw	r2,-36(fp)
  803c04:	10800043 	ldbu	r2,1(r2)
  803c08:	11003fcc 	andi	r4,r2,255
  803c0c:	e0bff717 	ldw	r2,-36(fp)
  803c10:	10c00c04 	addi	r3,r2,48
  803c14:	e0bff717 	ldw	r2,-36(fp)
  803c18:	10800517 	ldw	r2,20(r2)
  803c1c:	180b883a 	mov	r5,r3
  803c20:	100d883a 	mov	r6,r2
  803c24:	01c00044 	movi	r7,1
  803c28:	0800dec0 	call	800dec <ffs_DiskIORead>
  803c2c:	1000601e 	bne	r2,zero,803db0 <chk_mounted+0x8f0>
  803c30:	e0bff717 	ldw	r2,-36(fp)
  803c34:	10808bc3 	ldbu	r2,559(r2)
  803c38:	10803fcc 	andi	r2,r2,255
  803c3c:	1004923a 	slli	r2,r2,8
  803c40:	1007883a 	mov	r3,r2
  803c44:	e0bff717 	ldw	r2,-36(fp)
  803c48:	10808b83 	ldbu	r2,558(r2)
  803c4c:	10803fcc 	andi	r2,r2,255
  803c50:	1884b03a 	or	r2,r3,r2
  803c54:	10bfffcc 	andi	r2,r2,65535
  803c58:	10a0001c 	xori	r2,r2,32768
  803c5c:	10a00004 	addi	r2,r2,-32768
  803c60:	10aa9558 	cmpnei	r2,r2,-21931
  803c64:	1000521e 	bne	r2,zero,803db0 <chk_mounted+0x8f0>
  803c68:	e0bff717 	ldw	r2,-36(fp)
  803c6c:	10800cc3 	ldbu	r2,51(r2)
  803c70:	10803fcc 	andi	r2,r2,255
  803c74:	1006963a 	slli	r3,r2,24
  803c78:	e0bff717 	ldw	r2,-36(fp)
  803c7c:	10800c83 	ldbu	r2,50(r2)
  803c80:	10803fcc 	andi	r2,r2,255
  803c84:	1004943a 	slli	r2,r2,16
  803c88:	1884b03a 	or	r2,r3,r2
  803c8c:	e0fff717 	ldw	r3,-36(fp)
  803c90:	18c00c43 	ldbu	r3,49(r3)
  803c94:	18c03fcc 	andi	r3,r3,255
  803c98:	1806923a 	slli	r3,r3,8
  803c9c:	10c6b03a 	or	r3,r2,r3
  803ca0:	e0bff717 	ldw	r2,-36(fp)
  803ca4:	10800c03 	ldbu	r2,48(r2)
  803ca8:	10803fcc 	andi	r2,r2,255
  803cac:	1886b03a 	or	r3,r3,r2
  803cb0:	00905874 	movhi	r2,16737
  803cb4:	10949484 	addi	r2,r2,21074
  803cb8:	18803d1e 	bne	r3,r2,803db0 <chk_mounted+0x8f0>
  803cbc:	e0bff717 	ldw	r2,-36(fp)
  803cc0:	108085c3 	ldbu	r2,535(r2)
  803cc4:	10803fcc 	andi	r2,r2,255
  803cc8:	1006963a 	slli	r3,r2,24
  803ccc:	e0bff717 	ldw	r2,-36(fp)
  803cd0:	10808583 	ldbu	r2,534(r2)
  803cd4:	10803fcc 	andi	r2,r2,255
  803cd8:	1004943a 	slli	r2,r2,16
  803cdc:	1884b03a 	or	r2,r3,r2
  803ce0:	e0fff717 	ldw	r3,-36(fp)
  803ce4:	18c08543 	ldbu	r3,533(r3)
  803ce8:	18c03fcc 	andi	r3,r3,255
  803cec:	1806923a 	slli	r3,r3,8
  803cf0:	10c6b03a 	or	r3,r2,r3
  803cf4:	e0bff717 	ldw	r2,-36(fp)
  803cf8:	10808503 	ldbu	r2,532(r2)
  803cfc:	10803fcc 	andi	r2,r2,255
  803d00:	1886b03a 	or	r3,r3,r2
  803d04:	00985074 	movhi	r2,24897
  803d08:	109c9c84 	addi	r2,r2,29298
  803d0c:	1880281e 	bne	r3,r2,803db0 <chk_mounted+0x8f0>
  803d10:	e0bff717 	ldw	r2,-36(fp)
  803d14:	108087c3 	ldbu	r2,543(r2)
  803d18:	10803fcc 	andi	r2,r2,255
  803d1c:	1006963a 	slli	r3,r2,24
  803d20:	e0bff717 	ldw	r2,-36(fp)
  803d24:	10808783 	ldbu	r2,542(r2)
  803d28:	10803fcc 	andi	r2,r2,255
  803d2c:	1004943a 	slli	r2,r2,16
  803d30:	1884b03a 	or	r2,r3,r2
  803d34:	e0fff717 	ldw	r3,-36(fp)
  803d38:	18c08743 	ldbu	r3,541(r3)
  803d3c:	18c03fcc 	andi	r3,r3,255
  803d40:	1806923a 	slli	r3,r3,8
  803d44:	10c6b03a 	or	r3,r2,r3
  803d48:	e0bff717 	ldw	r2,-36(fp)
  803d4c:	10808703 	ldbu	r2,540(r2)
  803d50:	10803fcc 	andi	r2,r2,255
  803d54:	1886b03a 	or	r3,r3,r2
  803d58:	e0bff717 	ldw	r2,-36(fp)
  803d5c:	10c00315 	stw	r3,12(r2)
  803d60:	e0bff717 	ldw	r2,-36(fp)
  803d64:	108086c3 	ldbu	r2,539(r2)
  803d68:	10803fcc 	andi	r2,r2,255
  803d6c:	1006963a 	slli	r3,r2,24
  803d70:	e0bff717 	ldw	r2,-36(fp)
  803d74:	10808683 	ldbu	r2,538(r2)
  803d78:	10803fcc 	andi	r2,r2,255
  803d7c:	1004943a 	slli	r2,r2,16
  803d80:	1884b03a 	or	r2,r3,r2
  803d84:	e0fff717 	ldw	r3,-36(fp)
  803d88:	18c08643 	ldbu	r3,537(r3)
  803d8c:	18c03fcc 	andi	r3,r3,255
  803d90:	1806923a 	slli	r3,r3,8
  803d94:	10c6b03a 	or	r3,r2,r3
  803d98:	e0bff717 	ldw	r2,-36(fp)
  803d9c:	10808603 	ldbu	r2,536(r2)
  803da0:	10803fcc 	andi	r2,r2,255
  803da4:	1886b03a 	or	r3,r3,r2
  803da8:	e0bff717 	ldw	r2,-36(fp)
  803dac:	10c00415 	stw	r3,16(r2)
  803db0:	e0bff717 	ldw	r2,-36(fp)
  803db4:	e0fff003 	ldbu	r3,-64(fp)
  803db8:	10c00005 	stb	r3,0(r2)
  803dbc:	d0a3640b 	ldhu	r2,-29296(gp)
  803dc0:	10800044 	addi	r2,r2,1
  803dc4:	d0a3640d 	sth	r2,-29296(gp)
  803dc8:	d0e3640b 	ldhu	r3,-29296(gp)
  803dcc:	e0bff717 	ldw	r2,-36(fp)
  803dd0:	10c0018d 	sth	r3,6(r2)
  803dd4:	e0bff717 	ldw	r2,-36(fp)
  803dd8:	10000b15 	stw	zero,44(r2)
  803ddc:	e0bff717 	ldw	r2,-36(fp)
  803de0:	10000105 	stb	zero,4(r2)
  803de4:	0005883a 	mov	r2,zero
  803de8:	e037883a 	mov	sp,fp
  803dec:	dfc00117 	ldw	ra,4(sp)
  803df0:	df000017 	ldw	fp,0(sp)
  803df4:	dec00204 	addi	sp,sp,8
  803df8:	f800283a 	ret

00803dfc <validate>:
  803dfc:	defffc04 	addi	sp,sp,-16
  803e00:	dfc00315 	stw	ra,12(sp)
  803e04:	df000215 	stw	fp,8(sp)
  803e08:	df000204 	addi	fp,sp,8
  803e0c:	e13ffe15 	stw	r4,-8(fp)
  803e10:	2805883a 	mov	r2,r5
  803e14:	e0bfff0d 	sth	r2,-4(fp)
  803e18:	e0bffe17 	ldw	r2,-8(fp)
  803e1c:	10000926 	beq	r2,zero,803e44 <validate+0x48>
  803e20:	e0bffe17 	ldw	r2,-8(fp)
  803e24:	10800003 	ldbu	r2,0(r2)
  803e28:	10803fcc 	andi	r2,r2,255
  803e2c:	10000526 	beq	r2,zero,803e44 <validate+0x48>
  803e30:	e0bffe17 	ldw	r2,-8(fp)
  803e34:	1080018b 	ldhu	r2,6(r2)
  803e38:	10ffffcc 	andi	r3,r2,65535
  803e3c:	e0bfff0b 	ldhu	r2,-4(fp)
  803e40:	18800226 	beq	r3,r2,803e4c <validate+0x50>
  803e44:	00800244 	movi	r2,9
  803e48:	00000b06 	br	803e78 <validate+0x7c>
  803e4c:	e0bffe17 	ldw	r2,-8(fp)
  803e50:	10800043 	ldbu	r2,1(r2)
  803e54:	10803fcc 	andi	r2,r2,255
  803e58:	1009883a 	mov	r4,r2
  803e5c:	0800dc40 	call	800dc4 <ffs_DiskIOStatus>
  803e60:	10803fcc 	andi	r2,r2,255
  803e64:	1080004c 	andi	r2,r2,1
  803e68:	10000226 	beq	r2,zero,803e74 <validate+0x78>
  803e6c:	008000c4 	movi	r2,3
  803e70:	00000106 	br	803e78 <validate+0x7c>
  803e74:	0005883a 	mov	r2,zero
  803e78:	e037883a 	mov	sp,fp
  803e7c:	dfc00117 	ldw	ra,4(sp)
  803e80:	df000017 	ldw	fp,0(sp)
  803e84:	dec00204 	addi	sp,sp,8
  803e88:	f800283a 	ret

00803e8c <f_mount>:
  803e8c:	defffc04 	addi	sp,sp,-16
  803e90:	df000315 	stw	fp,12(sp)
  803e94:	df000304 	addi	fp,sp,12
  803e98:	2005883a 	mov	r2,r4
  803e9c:	e17fff15 	stw	r5,-4(fp)
  803ea0:	e0bffe05 	stb	r2,-8(fp)
  803ea4:	e0bffe03 	ldbu	r2,-8(fp)
  803ea8:	10000226 	beq	r2,zero,803eb4 <f_mount+0x28>
  803eac:	008002c4 	movi	r2,11
  803eb0:	00001706 	br	803f10 <f_mount+0x84>
  803eb4:	e0bffe03 	ldbu	r2,-8(fp)
  803eb8:	1085883a 	add	r2,r2,r2
  803ebc:	1087883a 	add	r3,r2,r2
  803ec0:	d0a36304 	addi	r2,gp,-29300
  803ec4:	1885883a 	add	r2,r3,r2
  803ec8:	10800017 	ldw	r2,0(r2)
  803ecc:	e0bffd15 	stw	r2,-12(fp)
  803ed0:	e0bffd17 	ldw	r2,-12(fp)
  803ed4:	10000226 	beq	r2,zero,803ee0 <f_mount+0x54>
  803ed8:	e0bffd17 	ldw	r2,-12(fp)
  803edc:	10000005 	stb	zero,0(r2)
  803ee0:	e0bfff17 	ldw	r2,-4(fp)
  803ee4:	10000226 	beq	r2,zero,803ef0 <f_mount+0x64>
  803ee8:	e0bfff17 	ldw	r2,-4(fp)
  803eec:	10000005 	stb	zero,0(r2)
  803ef0:	e0bffe03 	ldbu	r2,-8(fp)
  803ef4:	1085883a 	add	r2,r2,r2
  803ef8:	1087883a 	add	r3,r2,r2
  803efc:	d0a36304 	addi	r2,gp,-29300
  803f00:	1885883a 	add	r2,r3,r2
  803f04:	e0ffff17 	ldw	r3,-4(fp)
  803f08:	10c00015 	stw	r3,0(r2)
  803f0c:	0005883a 	mov	r2,zero
  803f10:	e037883a 	mov	sp,fp
  803f14:	df000017 	ldw	fp,0(sp)
  803f18:	dec00104 	addi	sp,sp,4
  803f1c:	f800283a 	ret

00803f20 <f_open>:
  803f20:	deffed04 	addi	sp,sp,-76
  803f24:	dfc01215 	stw	ra,72(sp)
  803f28:	df001115 	stw	fp,68(sp)
  803f2c:	df001104 	addi	fp,sp,68
  803f30:	e13ffd15 	stw	r4,-12(fp)
  803f34:	e17ffe15 	stw	r5,-8(fp)
  803f38:	3005883a 	mov	r2,r6
  803f3c:	e0bfff05 	stb	r2,-4(fp)
  803f40:	e0bffd17 	ldw	r2,-12(fp)
  803f44:	10000015 	stw	zero,0(r2)
  803f48:	e0bfff03 	ldbu	r2,-4(fp)
  803f4c:	108007cc 	andi	r2,r2,31
  803f50:	e0bfff05 	stb	r2,-4(fp)
  803f54:	e0bfff03 	ldbu	r2,-4(fp)
  803f58:	10803f8c 	andi	r2,r2,254
  803f5c:	e13ffe04 	addi	r4,fp,-8
  803f60:	e0fff304 	addi	r3,fp,-52
  803f64:	180b883a 	mov	r5,r3
  803f68:	100d883a 	mov	r6,r2
  803f6c:	08034c00 	call	8034c0 <chk_mounted>
  803f70:	e0bfef15 	stw	r2,-68(fp)
  803f74:	e0bffa04 	addi	r2,fp,-24
  803f78:	e0bff915 	stw	r2,-28(fp)
  803f7c:	e0bfef17 	ldw	r2,-68(fp)
  803f80:	1000061e 	bne	r2,zero,803f9c <f_open+0x7c>
  803f84:	e0bffe17 	ldw	r2,-8(fp)
  803f88:	e0fff304 	addi	r3,fp,-52
  803f8c:	1809883a 	mov	r4,r3
  803f90:	100b883a 	mov	r5,r2
  803f94:	080317c0 	call	80317c <follow_path>
  803f98:	e0bfef15 	stw	r2,-68(fp)
  803f9c:	e0bff817 	ldw	r2,-32(fp)
  803fa0:	e0bff015 	stw	r2,-64(fp)
  803fa4:	e0bfef17 	ldw	r2,-68(fp)
  803fa8:	1000041e 	bne	r2,zero,803fbc <f_open+0x9c>
  803fac:	e0bff017 	ldw	r2,-64(fp)
  803fb0:	1000021e 	bne	r2,zero,803fbc <f_open+0x9c>
  803fb4:	00800184 	movi	r2,6
  803fb8:	e0bfef15 	stw	r2,-68(fp)
  803fbc:	e0bfff03 	ldbu	r2,-4(fp)
  803fc0:	1080070c 	andi	r2,r2,28
  803fc4:	10008826 	beq	r2,zero,8041e8 <f_open+0x2c8>
  803fc8:	e0bfef17 	ldw	r2,-68(fp)
  803fcc:	10000d26 	beq	r2,zero,804004 <f_open+0xe4>
  803fd0:	e0bfef17 	ldw	r2,-68(fp)
  803fd4:	10800118 	cmpnei	r2,r2,4
  803fd8:	1000041e 	bne	r2,zero,803fec <f_open+0xcc>
  803fdc:	e0bff304 	addi	r2,fp,-52
  803fe0:	1009883a 	mov	r4,r2
  803fe4:	0802aa80 	call	802aa8 <dir_register>
  803fe8:	e0bfef15 	stw	r2,-68(fp)
  803fec:	e0bfff03 	ldbu	r2,-4(fp)
  803ff0:	10800214 	ori	r2,r2,8
  803ff4:	e0bfff05 	stb	r2,-4(fp)
  803ff8:	e0bff817 	ldw	r2,-32(fp)
  803ffc:	e0bff015 	stw	r2,-64(fp)
  804000:	00000e06 	br	80403c <f_open+0x11c>
  804004:	e0bff017 	ldw	r2,-64(fp)
  804008:	108002c4 	addi	r2,r2,11
  80400c:	10800003 	ldbu	r2,0(r2)
  804010:	10803fcc 	andi	r2,r2,255
  804014:	1080044c 	andi	r2,r2,17
  804018:	10000326 	beq	r2,zero,804028 <f_open+0x108>
  80401c:	008001c4 	movi	r2,7
  804020:	e0bfef15 	stw	r2,-68(fp)
  804024:	00000506 	br	80403c <f_open+0x11c>
  804028:	e0bfff03 	ldbu	r2,-4(fp)
  80402c:	1080010c 	andi	r2,r2,4
  804030:	10000226 	beq	r2,zero,80403c <f_open+0x11c>
  804034:	00800204 	movi	r2,8
  804038:	e0bfef15 	stw	r2,-68(fp)
  80403c:	e0bfef17 	ldw	r2,-68(fp)
  804040:	1000681e 	bne	r2,zero,8041e4 <f_open+0x2c4>
  804044:	e0bfff03 	ldbu	r2,-4(fp)
  804048:	1080020c 	andi	r2,r2,8
  80404c:	10006526 	beq	r2,zero,8041e4 <f_open+0x2c4>
  804050:	080151c0 	call	80151c <get_fattime>
  804054:	e0bff115 	stw	r2,-60(fp)
  804058:	e0bff017 	ldw	r2,-64(fp)
  80405c:	10800384 	addi	r2,r2,14
  804060:	e0fff117 	ldw	r3,-60(fp)
  804064:	10c00005 	stb	r3,0(r2)
  804068:	e0bff017 	ldw	r2,-64(fp)
  80406c:	108003c4 	addi	r2,r2,15
  804070:	e0fff117 	ldw	r3,-60(fp)
  804074:	18ffffcc 	andi	r3,r3,65535
  804078:	1806d23a 	srli	r3,r3,8
  80407c:	10c00005 	stb	r3,0(r2)
  804080:	e0bff017 	ldw	r2,-64(fp)
  804084:	10800404 	addi	r2,r2,16
  804088:	e0fff117 	ldw	r3,-60(fp)
  80408c:	1806d43a 	srli	r3,r3,16
  804090:	10c00005 	stb	r3,0(r2)
  804094:	e0bff017 	ldw	r2,-64(fp)
  804098:	10800444 	addi	r2,r2,17
  80409c:	e0fff117 	ldw	r3,-60(fp)
  8040a0:	1806d63a 	srli	r3,r3,24
  8040a4:	10c00005 	stb	r3,0(r2)
  8040a8:	e0bff017 	ldw	r2,-64(fp)
  8040ac:	108002c4 	addi	r2,r2,11
  8040b0:	10000005 	stb	zero,0(r2)
  8040b4:	e0bff017 	ldw	r2,-64(fp)
  8040b8:	10800704 	addi	r2,r2,28
  8040bc:	10000005 	stb	zero,0(r2)
  8040c0:	e0bff017 	ldw	r2,-64(fp)
  8040c4:	10800744 	addi	r2,r2,29
  8040c8:	10000005 	stb	zero,0(r2)
  8040cc:	e0bff017 	ldw	r2,-64(fp)
  8040d0:	10800784 	addi	r2,r2,30
  8040d4:	10000005 	stb	zero,0(r2)
  8040d8:	e0bff017 	ldw	r2,-64(fp)
  8040dc:	108007c4 	addi	r2,r2,31
  8040e0:	10000005 	stb	zero,0(r2)
  8040e4:	e0bff017 	ldw	r2,-64(fp)
  8040e8:	10800544 	addi	r2,r2,21
  8040ec:	10800003 	ldbu	r2,0(r2)
  8040f0:	10803fcc 	andi	r2,r2,255
  8040f4:	1004923a 	slli	r2,r2,8
  8040f8:	1007883a 	mov	r3,r2
  8040fc:	e0bff017 	ldw	r2,-64(fp)
  804100:	10800504 	addi	r2,r2,20
  804104:	10800003 	ldbu	r2,0(r2)
  804108:	10803fcc 	andi	r2,r2,255
  80410c:	1884b03a 	or	r2,r3,r2
  804110:	10bfffcc 	andi	r2,r2,65535
  804114:	1006943a 	slli	r3,r2,16
  804118:	e0bff017 	ldw	r2,-64(fp)
  80411c:	108006c4 	addi	r2,r2,27
  804120:	10800003 	ldbu	r2,0(r2)
  804124:	10803fcc 	andi	r2,r2,255
  804128:	1004923a 	slli	r2,r2,8
  80412c:	1009883a 	mov	r4,r2
  804130:	e0bff017 	ldw	r2,-64(fp)
  804134:	10800684 	addi	r2,r2,26
  804138:	10800003 	ldbu	r2,0(r2)
  80413c:	10803fcc 	andi	r2,r2,255
  804140:	2084b03a 	or	r2,r4,r2
  804144:	10bfffcc 	andi	r2,r2,65535
  804148:	1884b03a 	or	r2,r3,r2
  80414c:	e0bff215 	stw	r2,-56(fp)
  804150:	e0bff017 	ldw	r2,-64(fp)
  804154:	10800684 	addi	r2,r2,26
  804158:	10000005 	stb	zero,0(r2)
  80415c:	e0bff017 	ldw	r2,-64(fp)
  804160:	108006c4 	addi	r2,r2,27
  804164:	10000005 	stb	zero,0(r2)
  804168:	e0bff017 	ldw	r2,-64(fp)
  80416c:	10800504 	addi	r2,r2,20
  804170:	10000005 	stb	zero,0(r2)
  804174:	e0bff017 	ldw	r2,-64(fp)
  804178:	10800544 	addi	r2,r2,21
  80417c:	10000005 	stb	zero,0(r2)
  804180:	e0bff317 	ldw	r2,-52(fp)
  804184:	00c00044 	movi	r3,1
  804188:	10c00105 	stb	r3,4(r2)
  80418c:	e0bff217 	ldw	r2,-56(fp)
  804190:	10001426 	beq	r2,zero,8041e4 <f_open+0x2c4>
  804194:	e0bff317 	ldw	r2,-52(fp)
  804198:	10800b17 	ldw	r2,44(r2)
  80419c:	e0bff115 	stw	r2,-60(fp)
  8041a0:	e0bff317 	ldw	r2,-52(fp)
  8041a4:	1009883a 	mov	r4,r2
  8041a8:	e17ff217 	ldw	r5,-56(fp)
  8041ac:	08020ec0 	call	8020ec <remove_chain>
  8041b0:	e0bfef15 	stw	r2,-68(fp)
  8041b4:	e0bfef17 	ldw	r2,-68(fp)
  8041b8:	10000a1e 	bne	r2,zero,8041e4 <f_open+0x2c4>
  8041bc:	e0bff317 	ldw	r2,-52(fp)
  8041c0:	e0fff217 	ldw	r3,-56(fp)
  8041c4:	18ffffc4 	addi	r3,r3,-1
  8041c8:	10c00315 	stw	r3,12(r2)
  8041cc:	e0bff317 	ldw	r2,-52(fp)
  8041d0:	1009883a 	mov	r4,r2
  8041d4:	e17ff117 	ldw	r5,-60(fp)
  8041d8:	08017140 	call	801714 <move_window>
  8041dc:	e0bfef15 	stw	r2,-68(fp)
  8041e0:	00001706 	br	804240 <f_open+0x320>
  8041e4:	00001606 	br	804240 <f_open+0x320>
  8041e8:	e0bfef17 	ldw	r2,-68(fp)
  8041ec:	1000141e 	bne	r2,zero,804240 <f_open+0x320>
  8041f0:	e0bff017 	ldw	r2,-64(fp)
  8041f4:	108002c4 	addi	r2,r2,11
  8041f8:	10800003 	ldbu	r2,0(r2)
  8041fc:	10803fcc 	andi	r2,r2,255
  804200:	1080040c 	andi	r2,r2,16
  804204:	10000326 	beq	r2,zero,804214 <f_open+0x2f4>
  804208:	00800104 	movi	r2,4
  80420c:	e0bfef15 	stw	r2,-68(fp)
  804210:	00000b06 	br	804240 <f_open+0x320>
  804214:	e0bfff03 	ldbu	r2,-4(fp)
  804218:	1080008c 	andi	r2,r2,2
  80421c:	10000826 	beq	r2,zero,804240 <f_open+0x320>
  804220:	e0bff017 	ldw	r2,-64(fp)
  804224:	108002c4 	addi	r2,r2,11
  804228:	10800003 	ldbu	r2,0(r2)
  80422c:	10803fcc 	andi	r2,r2,255
  804230:	1080004c 	andi	r2,r2,1
  804234:	10000226 	beq	r2,zero,804240 <f_open+0x320>
  804238:	008001c4 	movi	r2,7
  80423c:	e0bfef15 	stw	r2,-68(fp)
  804240:	e0bfef17 	ldw	r2,-68(fp)
  804244:	10000d1e 	bne	r2,zero,80427c <f_open+0x35c>
  804248:	e0bfff03 	ldbu	r2,-4(fp)
  80424c:	1080020c 	andi	r2,r2,8
  804250:	10000326 	beq	r2,zero,804260 <f_open+0x340>
  804254:	e0bfff03 	ldbu	r2,-4(fp)
  804258:	10800814 	ori	r2,r2,32
  80425c:	e0bfff05 	stb	r2,-4(fp)
  804260:	e0bff317 	ldw	r2,-52(fp)
  804264:	10c00b17 	ldw	r3,44(r2)
  804268:	e0bffd17 	ldw	r2,-12(fp)
  80426c:	10c00715 	stw	r3,28(r2)
  804270:	e0bffd17 	ldw	r2,-12(fp)
  804274:	e0fff017 	ldw	r3,-64(fp)
  804278:	10c00815 	stw	r3,32(r2)
  80427c:	e0bfef17 	ldw	r2,-68(fp)
  804280:	1000421e 	bne	r2,zero,80438c <f_open+0x46c>
  804284:	e0bffd17 	ldw	r2,-12(fp)
  804288:	e0ffff03 	ldbu	r3,-4(fp)
  80428c:	10c00185 	stb	r3,6(r2)
  804290:	e0bff017 	ldw	r2,-64(fp)
  804294:	10800544 	addi	r2,r2,21
  804298:	10800003 	ldbu	r2,0(r2)
  80429c:	10803fcc 	andi	r2,r2,255
  8042a0:	1004923a 	slli	r2,r2,8
  8042a4:	1007883a 	mov	r3,r2
  8042a8:	e0bff017 	ldw	r2,-64(fp)
  8042ac:	10800504 	addi	r2,r2,20
  8042b0:	10800003 	ldbu	r2,0(r2)
  8042b4:	10803fcc 	andi	r2,r2,255
  8042b8:	1884b03a 	or	r2,r3,r2
  8042bc:	10bfffcc 	andi	r2,r2,65535
  8042c0:	1006943a 	slli	r3,r2,16
  8042c4:	e0bff017 	ldw	r2,-64(fp)
  8042c8:	108006c4 	addi	r2,r2,27
  8042cc:	10800003 	ldbu	r2,0(r2)
  8042d0:	10803fcc 	andi	r2,r2,255
  8042d4:	1004923a 	slli	r2,r2,8
  8042d8:	1009883a 	mov	r4,r2
  8042dc:	e0bff017 	ldw	r2,-64(fp)
  8042e0:	10800684 	addi	r2,r2,26
  8042e4:	10800003 	ldbu	r2,0(r2)
  8042e8:	10803fcc 	andi	r2,r2,255
  8042ec:	2084b03a 	or	r2,r4,r2
  8042f0:	10bfffcc 	andi	r2,r2,65535
  8042f4:	1886b03a 	or	r3,r3,r2
  8042f8:	e0bffd17 	ldw	r2,-12(fp)
  8042fc:	10c00415 	stw	r3,16(r2)
  804300:	e0bff017 	ldw	r2,-64(fp)
  804304:	108007c4 	addi	r2,r2,31
  804308:	10800003 	ldbu	r2,0(r2)
  80430c:	10803fcc 	andi	r2,r2,255
  804310:	1006963a 	slli	r3,r2,24
  804314:	e0bff017 	ldw	r2,-64(fp)
  804318:	10800784 	addi	r2,r2,30
  80431c:	10800003 	ldbu	r2,0(r2)
  804320:	10803fcc 	andi	r2,r2,255
  804324:	1004943a 	slli	r2,r2,16
  804328:	1884b03a 	or	r2,r3,r2
  80432c:	e0fff017 	ldw	r3,-64(fp)
  804330:	18c00744 	addi	r3,r3,29
  804334:	18c00003 	ldbu	r3,0(r3)
  804338:	18c03fcc 	andi	r3,r3,255
  80433c:	1806923a 	slli	r3,r3,8
  804340:	10c6b03a 	or	r3,r2,r3
  804344:	e0bff017 	ldw	r2,-64(fp)
  804348:	10800704 	addi	r2,r2,28
  80434c:	10800003 	ldbu	r2,0(r2)
  804350:	10803fcc 	andi	r2,r2,255
  804354:	1886b03a 	or	r3,r3,r2
  804358:	e0bffd17 	ldw	r2,-12(fp)
  80435c:	10c00315 	stw	r3,12(r2)
  804360:	e0bffd17 	ldw	r2,-12(fp)
  804364:	10000215 	stw	zero,8(r2)
  804368:	e0bffd17 	ldw	r2,-12(fp)
  80436c:	10000615 	stw	zero,24(r2)
  804370:	e0fff317 	ldw	r3,-52(fp)
  804374:	e0bffd17 	ldw	r2,-12(fp)
  804378:	10c00015 	stw	r3,0(r2)
  80437c:	e0bff317 	ldw	r2,-52(fp)
  804380:	10c0018b 	ldhu	r3,6(r2)
  804384:	e0bffd17 	ldw	r2,-12(fp)
  804388:	10c0010d 	sth	r3,4(r2)
  80438c:	e0bfef17 	ldw	r2,-68(fp)
  804390:	e037883a 	mov	sp,fp
  804394:	dfc00117 	ldw	ra,4(sp)
  804398:	df000017 	ldw	fp,0(sp)
  80439c:	dec00204 	addi	sp,sp,8
  8043a0:	f800283a 	ret

008043a4 <f_read>:
  8043a4:	defff204 	addi	sp,sp,-56
  8043a8:	dfc00d15 	stw	ra,52(sp)
  8043ac:	df000c15 	stw	fp,48(sp)
  8043b0:	df000c04 	addi	fp,sp,48
  8043b4:	e13ffc15 	stw	r4,-16(fp)
  8043b8:	e17ffd15 	stw	r5,-12(fp)
  8043bc:	e1bffe15 	stw	r6,-8(fp)
  8043c0:	e1ffff15 	stw	r7,-4(fp)
  8043c4:	e0bffd17 	ldw	r2,-12(fp)
  8043c8:	e0bff715 	stw	r2,-36(fp)
  8043cc:	e0bfff17 	ldw	r2,-4(fp)
  8043d0:	10000015 	stw	zero,0(r2)
  8043d4:	e0bffc17 	ldw	r2,-16(fp)
  8043d8:	10c00017 	ldw	r3,0(r2)
  8043dc:	e0bffc17 	ldw	r2,-16(fp)
  8043e0:	1080010b 	ldhu	r2,4(r2)
  8043e4:	10bfffcc 	andi	r2,r2,65535
  8043e8:	1809883a 	mov	r4,r3
  8043ec:	100b883a 	mov	r5,r2
  8043f0:	0803dfc0 	call	803dfc <validate>
  8043f4:	e0bff815 	stw	r2,-32(fp)
  8043f8:	e0bff817 	ldw	r2,-32(fp)
  8043fc:	10000226 	beq	r2,zero,804408 <f_read+0x64>
  804400:	e0bff817 	ldw	r2,-32(fp)
  804404:	00011b06 	br	804874 <f_read+0x4d0>
  804408:	e0bffc17 	ldw	r2,-16(fp)
  80440c:	10800183 	ldbu	r2,6(r2)
  804410:	10803fcc 	andi	r2,r2,255
  804414:	1080201c 	xori	r2,r2,128
  804418:	10bfe004 	addi	r2,r2,-128
  80441c:	1000020e 	bge	r2,zero,804428 <f_read+0x84>
  804420:	00800084 	movi	r2,2
  804424:	00011306 	br	804874 <f_read+0x4d0>
  804428:	e0bffc17 	ldw	r2,-16(fp)
  80442c:	10800183 	ldbu	r2,6(r2)
  804430:	10803fcc 	andi	r2,r2,255
  804434:	1080004c 	andi	r2,r2,1
  804438:	1000021e 	bne	r2,zero,804444 <f_read+0xa0>
  80443c:	008001c4 	movi	r2,7
  804440:	00010c06 	br	804874 <f_read+0x4d0>
  804444:	e0bffc17 	ldw	r2,-16(fp)
  804448:	10c00317 	ldw	r3,12(r2)
  80444c:	e0bffc17 	ldw	r2,-16(fp)
  804450:	10800217 	ldw	r2,8(r2)
  804454:	1885c83a 	sub	r2,r3,r2
  804458:	e0bff915 	stw	r2,-28(fp)
  80445c:	e0bffe17 	ldw	r2,-8(fp)
  804460:	e0fff917 	ldw	r3,-28(fp)
  804464:	1880022e 	bgeu	r3,r2,804470 <f_read+0xcc>
  804468:	e0bff917 	ldw	r2,-28(fp)
  80446c:	e0bffe15 	stw	r2,-8(fp)
  804470:	0000fd06 	br	804868 <f_read+0x4c4>
  804474:	e0bffc17 	ldw	r2,-16(fp)
  804478:	10800217 	ldw	r2,8(r2)
  80447c:	10807fcc 	andi	r2,r2,511
  804480:	1000d01e 	bne	r2,zero,8047c4 <f_read+0x420>
  804484:	e0bffc17 	ldw	r2,-16(fp)
  804488:	10800217 	ldw	r2,8(r2)
  80448c:	1004d27a 	srli	r2,r2,9
  804490:	1007883a 	mov	r3,r2
  804494:	e0bffc17 	ldw	r2,-16(fp)
  804498:	10800017 	ldw	r2,0(r2)
  80449c:	10800083 	ldbu	r2,2(r2)
  8044a0:	10bfffc4 	addi	r2,r2,-1
  8044a4:	1884703a 	and	r2,r3,r2
  8044a8:	e0bffa05 	stb	r2,-24(fp)
  8044ac:	e0bffa03 	ldbu	r2,-24(fp)
  8044b0:	10002a1e 	bne	r2,zero,80455c <f_read+0x1b8>
  8044b4:	e0bffc17 	ldw	r2,-16(fp)
  8044b8:	10800217 	ldw	r2,8(r2)
  8044bc:	1000041e 	bne	r2,zero,8044d0 <f_read+0x12c>
  8044c0:	e0bffc17 	ldw	r2,-16(fp)
  8044c4:	10800417 	ldw	r2,16(r2)
  8044c8:	e0bff415 	stw	r2,-48(fp)
  8044cc:	00000806 	br	8044f0 <f_read+0x14c>
  8044d0:	e0bffc17 	ldw	r2,-16(fp)
  8044d4:	10c00017 	ldw	r3,0(r2)
  8044d8:	e0bffc17 	ldw	r2,-16(fp)
  8044dc:	10800517 	ldw	r2,20(r2)
  8044e0:	1809883a 	mov	r4,r3
  8044e4:	100b883a 	mov	r5,r2
  8044e8:	0801af80 	call	801af8 <get_fat>
  8044ec:	e0bff415 	stw	r2,-48(fp)
  8044f0:	e0bff417 	ldw	r2,-48(fp)
  8044f4:	108000a8 	cmpgeui	r2,r2,2
  8044f8:	1000091e 	bne	r2,zero,804520 <f_read+0x17c>
  8044fc:	e0bffc17 	ldw	r2,-16(fp)
  804500:	10c00183 	ldbu	r3,6(r2)
  804504:	00bfe004 	movi	r2,-128
  804508:	1884b03a 	or	r2,r3,r2
  80450c:	1007883a 	mov	r3,r2
  804510:	e0bffc17 	ldw	r2,-16(fp)
  804514:	10c00185 	stb	r3,6(r2)
  804518:	00800084 	movi	r2,2
  80451c:	0000d506 	br	804874 <f_read+0x4d0>
  804520:	e0bff417 	ldw	r2,-48(fp)
  804524:	10bfffd8 	cmpnei	r2,r2,-1
  804528:	1000091e 	bne	r2,zero,804550 <f_read+0x1ac>
  80452c:	e0bffc17 	ldw	r2,-16(fp)
  804530:	10c00183 	ldbu	r3,6(r2)
  804534:	00bfe004 	movi	r2,-128
  804538:	1884b03a 	or	r2,r3,r2
  80453c:	1007883a 	mov	r3,r2
  804540:	e0bffc17 	ldw	r2,-16(fp)
  804544:	10c00185 	stb	r3,6(r2)
  804548:	00800044 	movi	r2,1
  80454c:	0000c906 	br	804874 <f_read+0x4d0>
  804550:	e0bffc17 	ldw	r2,-16(fp)
  804554:	e0fff417 	ldw	r3,-48(fp)
  804558:	10c00515 	stw	r3,20(r2)
  80455c:	e0bffc17 	ldw	r2,-16(fp)
  804560:	10c00017 	ldw	r3,0(r2)
  804564:	e0bffc17 	ldw	r2,-16(fp)
  804568:	10800517 	ldw	r2,20(r2)
  80456c:	1809883a 	mov	r4,r3
  804570:	100b883a 	mov	r5,r2
  804574:	0801a8c0 	call	801a8c <clust2sect>
  804578:	e0bffb15 	stw	r2,-20(fp)
  80457c:	e0bffb17 	ldw	r2,-20(fp)
  804580:	1000091e 	bne	r2,zero,8045a8 <f_read+0x204>
  804584:	e0bffc17 	ldw	r2,-16(fp)
  804588:	10c00183 	ldbu	r3,6(r2)
  80458c:	00bfe004 	movi	r2,-128
  804590:	1884b03a 	or	r2,r3,r2
  804594:	1007883a 	mov	r3,r2
  804598:	e0bffc17 	ldw	r2,-16(fp)
  80459c:	10c00185 	stb	r3,6(r2)
  8045a0:	00800084 	movi	r2,2
  8045a4:	0000b306 	br	804874 <f_read+0x4d0>
  8045a8:	e0bffa03 	ldbu	r2,-24(fp)
  8045ac:	e0fffb17 	ldw	r3,-20(fp)
  8045b0:	1885883a 	add	r2,r3,r2
  8045b4:	e0bffb15 	stw	r2,-20(fp)
  8045b8:	e0bffe17 	ldw	r2,-8(fp)
  8045bc:	1004d27a 	srli	r2,r2,9
  8045c0:	e0bff615 	stw	r2,-40(fp)
  8045c4:	e0bff617 	ldw	r2,-40(fp)
  8045c8:	10004026 	beq	r2,zero,8046cc <f_read+0x328>
  8045cc:	e0fffa03 	ldbu	r3,-24(fp)
  8045d0:	e0bff617 	ldw	r2,-40(fp)
  8045d4:	1885883a 	add	r2,r3,r2
  8045d8:	e0fffc17 	ldw	r3,-16(fp)
  8045dc:	18c00017 	ldw	r3,0(r3)
  8045e0:	18c00083 	ldbu	r3,2(r3)
  8045e4:	18c03fcc 	andi	r3,r3,255
  8045e8:	1880072e 	bgeu	r3,r2,804608 <f_read+0x264>
  8045ec:	e0bffc17 	ldw	r2,-16(fp)
  8045f0:	10800017 	ldw	r2,0(r2)
  8045f4:	10800083 	ldbu	r2,2(r2)
  8045f8:	10c03fcc 	andi	r3,r2,255
  8045fc:	e0bffa03 	ldbu	r2,-24(fp)
  804600:	1885c83a 	sub	r2,r3,r2
  804604:	e0bff615 	stw	r2,-40(fp)
  804608:	e0bffc17 	ldw	r2,-16(fp)
  80460c:	10800017 	ldw	r2,0(r2)
  804610:	10800043 	ldbu	r2,1(r2)
  804614:	10c03fcc 	andi	r3,r2,255
  804618:	e0bff617 	ldw	r2,-40(fp)
  80461c:	10803fcc 	andi	r2,r2,255
  804620:	1809883a 	mov	r4,r3
  804624:	e17ff717 	ldw	r5,-36(fp)
  804628:	e1bffb17 	ldw	r6,-20(fp)
  80462c:	100f883a 	mov	r7,r2
  804630:	0800dec0 	call	800dec <ffs_DiskIORead>
  804634:	10000926 	beq	r2,zero,80465c <f_read+0x2b8>
  804638:	e0bffc17 	ldw	r2,-16(fp)
  80463c:	10c00183 	ldbu	r3,6(r2)
  804640:	00bfe004 	movi	r2,-128
  804644:	1884b03a 	or	r2,r3,r2
  804648:	1007883a 	mov	r3,r2
  80464c:	e0bffc17 	ldw	r2,-16(fp)
  804650:	10c00185 	stb	r3,6(r2)
  804654:	00800044 	movi	r2,1
  804658:	00008606 	br	804874 <f_read+0x4d0>
  80465c:	e0bffc17 	ldw	r2,-16(fp)
  804660:	10800183 	ldbu	r2,6(r2)
  804664:	10803fcc 	andi	r2,r2,255
  804668:	1080100c 	andi	r2,r2,64
  80466c:	10001326 	beq	r2,zero,8046bc <f_read+0x318>
  804670:	e0bffc17 	ldw	r2,-16(fp)
  804674:	10c00617 	ldw	r3,24(r2)
  804678:	e0bffb17 	ldw	r2,-20(fp)
  80467c:	1887c83a 	sub	r3,r3,r2
  804680:	e0bff617 	ldw	r2,-40(fp)
  804684:	18800d2e 	bgeu	r3,r2,8046bc <f_read+0x318>
  804688:	e0bffc17 	ldw	r2,-16(fp)
  80468c:	10c00617 	ldw	r3,24(r2)
  804690:	e0bffb17 	ldw	r2,-20(fp)
  804694:	1885c83a 	sub	r2,r3,r2
  804698:	1004927a 	slli	r2,r2,9
  80469c:	e0fff717 	ldw	r3,-36(fp)
  8046a0:	1887883a 	add	r3,r3,r2
  8046a4:	e0bffc17 	ldw	r2,-16(fp)
  8046a8:	10800904 	addi	r2,r2,36
  8046ac:	1809883a 	mov	r4,r3
  8046b0:	100b883a 	mov	r5,r2
  8046b4:	01808004 	movi	r6,512
  8046b8:	08015480 	call	801548 <mem_cpy>
  8046bc:	e0bff617 	ldw	r2,-40(fp)
  8046c0:	1004927a 	slli	r2,r2,9
  8046c4:	e0bff515 	stw	r2,-44(fp)
  8046c8:	00005306 	br	804818 <f_read+0x474>
  8046cc:	e0bffc17 	ldw	r2,-16(fp)
  8046d0:	10c00617 	ldw	r3,24(r2)
  8046d4:	e0bffb17 	ldw	r2,-20(fp)
  8046d8:	18803726 	beq	r3,r2,8047b8 <f_read+0x414>
  8046dc:	e0bffc17 	ldw	r2,-16(fp)
  8046e0:	10800183 	ldbu	r2,6(r2)
  8046e4:	10803fcc 	andi	r2,r2,255
  8046e8:	1080100c 	andi	r2,r2,64
  8046ec:	10001d26 	beq	r2,zero,804764 <f_read+0x3c0>
  8046f0:	e0bffc17 	ldw	r2,-16(fp)
  8046f4:	10800017 	ldw	r2,0(r2)
  8046f8:	10800043 	ldbu	r2,1(r2)
  8046fc:	11003fcc 	andi	r4,r2,255
  804700:	e0bffc17 	ldw	r2,-16(fp)
  804704:	10c00904 	addi	r3,r2,36
  804708:	e0bffc17 	ldw	r2,-16(fp)
  80470c:	10800617 	ldw	r2,24(r2)
  804710:	180b883a 	mov	r5,r3
  804714:	100d883a 	mov	r6,r2
  804718:	01c00044 	movi	r7,1
  80471c:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  804720:	10000926 	beq	r2,zero,804748 <f_read+0x3a4>
  804724:	e0bffc17 	ldw	r2,-16(fp)
  804728:	10c00183 	ldbu	r3,6(r2)
  80472c:	00bfe004 	movi	r2,-128
  804730:	1884b03a 	or	r2,r3,r2
  804734:	1007883a 	mov	r3,r2
  804738:	e0bffc17 	ldw	r2,-16(fp)
  80473c:	10c00185 	stb	r3,6(r2)
  804740:	00800044 	movi	r2,1
  804744:	00004b06 	br	804874 <f_read+0x4d0>
  804748:	e0bffc17 	ldw	r2,-16(fp)
  80474c:	10c00183 	ldbu	r3,6(r2)
  804750:	00bfefc4 	movi	r2,-65
  804754:	1884703a 	and	r2,r3,r2
  804758:	1007883a 	mov	r3,r2
  80475c:	e0bffc17 	ldw	r2,-16(fp)
  804760:	10c00185 	stb	r3,6(r2)
  804764:	e0bffc17 	ldw	r2,-16(fp)
  804768:	10800017 	ldw	r2,0(r2)
  80476c:	10800043 	ldbu	r2,1(r2)
  804770:	10c03fcc 	andi	r3,r2,255
  804774:	e0bffc17 	ldw	r2,-16(fp)
  804778:	10800904 	addi	r2,r2,36
  80477c:	1809883a 	mov	r4,r3
  804780:	100b883a 	mov	r5,r2
  804784:	e1bffb17 	ldw	r6,-20(fp)
  804788:	01c00044 	movi	r7,1
  80478c:	0800dec0 	call	800dec <ffs_DiskIORead>
  804790:	10000926 	beq	r2,zero,8047b8 <f_read+0x414>
  804794:	e0bffc17 	ldw	r2,-16(fp)
  804798:	10c00183 	ldbu	r3,6(r2)
  80479c:	00bfe004 	movi	r2,-128
  8047a0:	1884b03a 	or	r2,r3,r2
  8047a4:	1007883a 	mov	r3,r2
  8047a8:	e0bffc17 	ldw	r2,-16(fp)
  8047ac:	10c00185 	stb	r3,6(r2)
  8047b0:	00800044 	movi	r2,1
  8047b4:	00002f06 	br	804874 <f_read+0x4d0>
  8047b8:	e0bffc17 	ldw	r2,-16(fp)
  8047bc:	e0fffb17 	ldw	r3,-20(fp)
  8047c0:	10c00615 	stw	r3,24(r2)
  8047c4:	e0bffc17 	ldw	r2,-16(fp)
  8047c8:	10800217 	ldw	r2,8(r2)
  8047cc:	10807fcc 	andi	r2,r2,511
  8047d0:	00c08004 	movi	r3,512
  8047d4:	1885c83a 	sub	r2,r3,r2
  8047d8:	e0bff515 	stw	r2,-44(fp)
  8047dc:	e0bff517 	ldw	r2,-44(fp)
  8047e0:	e0fffe17 	ldw	r3,-8(fp)
  8047e4:	1880022e 	bgeu	r3,r2,8047f0 <f_read+0x44c>
  8047e8:	e0bffe17 	ldw	r2,-8(fp)
  8047ec:	e0bff515 	stw	r2,-44(fp)
  8047f0:	e0bffc17 	ldw	r2,-16(fp)
  8047f4:	10800217 	ldw	r2,8(r2)
  8047f8:	10807fcc 	andi	r2,r2,511
  8047fc:	10800904 	addi	r2,r2,36
  804800:	e0fffc17 	ldw	r3,-16(fp)
  804804:	1885883a 	add	r2,r3,r2
  804808:	e13ff717 	ldw	r4,-36(fp)
  80480c:	100b883a 	mov	r5,r2
  804810:	e1bff517 	ldw	r6,-44(fp)
  804814:	08015480 	call	801548 <mem_cpy>
  804818:	e0fff717 	ldw	r3,-36(fp)
  80481c:	e0bff517 	ldw	r2,-44(fp)
  804820:	1885883a 	add	r2,r3,r2
  804824:	e0bff715 	stw	r2,-36(fp)
  804828:	e0bffc17 	ldw	r2,-16(fp)
  80482c:	10c00217 	ldw	r3,8(r2)
  804830:	e0bff517 	ldw	r2,-44(fp)
  804834:	1887883a 	add	r3,r3,r2
  804838:	e0bffc17 	ldw	r2,-16(fp)
  80483c:	10c00215 	stw	r3,8(r2)
  804840:	e0bfff17 	ldw	r2,-4(fp)
  804844:	10c00017 	ldw	r3,0(r2)
  804848:	e0bff517 	ldw	r2,-44(fp)
  80484c:	1887883a 	add	r3,r3,r2
  804850:	e0bfff17 	ldw	r2,-4(fp)
  804854:	10c00015 	stw	r3,0(r2)
  804858:	e0fffe17 	ldw	r3,-8(fp)
  80485c:	e0bff517 	ldw	r2,-44(fp)
  804860:	1885c83a 	sub	r2,r3,r2
  804864:	e0bffe15 	stw	r2,-8(fp)
  804868:	e0bffe17 	ldw	r2,-8(fp)
  80486c:	103f011e 	bne	r2,zero,804474 <__alt_data_end+0xff804474>
  804870:	0005883a 	mov	r2,zero
  804874:	e037883a 	mov	sp,fp
  804878:	dfc00117 	ldw	ra,4(sp)
  80487c:	df000017 	ldw	fp,0(sp)
  804880:	dec00204 	addi	sp,sp,8
  804884:	f800283a 	ret

00804888 <f_write>:
  804888:	defff304 	addi	sp,sp,-52
  80488c:	dfc00c15 	stw	ra,48(sp)
  804890:	df000b15 	stw	fp,44(sp)
  804894:	df000b04 	addi	fp,sp,44
  804898:	e13ffc15 	stw	r4,-16(fp)
  80489c:	e17ffd15 	stw	r5,-12(fp)
  8048a0:	e1bffe15 	stw	r6,-8(fp)
  8048a4:	e1ffff15 	stw	r7,-4(fp)
  8048a8:	e0bffd17 	ldw	r2,-12(fp)
  8048ac:	e0bff815 	stw	r2,-32(fp)
  8048b0:	e0bfff17 	ldw	r2,-4(fp)
  8048b4:	10000015 	stw	zero,0(r2)
  8048b8:	e0bffc17 	ldw	r2,-16(fp)
  8048bc:	10c00017 	ldw	r3,0(r2)
  8048c0:	e0bffc17 	ldw	r2,-16(fp)
  8048c4:	1080010b 	ldhu	r2,4(r2)
  8048c8:	10bfffcc 	andi	r2,r2,65535
  8048cc:	1809883a 	mov	r4,r3
  8048d0:	100b883a 	mov	r5,r2
  8048d4:	0803dfc0 	call	803dfc <validate>
  8048d8:	e0bff915 	stw	r2,-28(fp)
  8048dc:	e0bff917 	ldw	r2,-28(fp)
  8048e0:	10000226 	beq	r2,zero,8048ec <f_write+0x64>
  8048e4:	e0bff917 	ldw	r2,-28(fp)
  8048e8:	00014106 	br	804df0 <f_write+0x568>
  8048ec:	e0bffc17 	ldw	r2,-16(fp)
  8048f0:	10800183 	ldbu	r2,6(r2)
  8048f4:	10803fcc 	andi	r2,r2,255
  8048f8:	1080201c 	xori	r2,r2,128
  8048fc:	10bfe004 	addi	r2,r2,-128
  804900:	1000020e 	bge	r2,zero,80490c <f_write+0x84>
  804904:	00800084 	movi	r2,2
  804908:	00013906 	br	804df0 <f_write+0x568>
  80490c:	e0bffc17 	ldw	r2,-16(fp)
  804910:	10800183 	ldbu	r2,6(r2)
  804914:	10803fcc 	andi	r2,r2,255
  804918:	1080008c 	andi	r2,r2,2
  80491c:	1000021e 	bne	r2,zero,804928 <f_write+0xa0>
  804920:	008001c4 	movi	r2,7
  804924:	00013206 	br	804df0 <f_write+0x568>
  804928:	e0bffc17 	ldw	r2,-16(fp)
  80492c:	10c00317 	ldw	r3,12(r2)
  804930:	e0bffe17 	ldw	r2,-8(fp)
  804934:	1887883a 	add	r3,r3,r2
  804938:	e0bffc17 	ldw	r2,-16(fp)
  80493c:	10800317 	ldw	r2,12(r2)
  804940:	1880012e 	bgeu	r3,r2,804948 <f_write+0xc0>
  804944:	e03ffe15 	stw	zero,-8(fp)
  804948:	00011706 	br	804da8 <f_write+0x520>
  80494c:	e0bffc17 	ldw	r2,-16(fp)
  804950:	10800217 	ldw	r2,8(r2)
  804954:	10807fcc 	andi	r2,r2,511
  804958:	1000e41e 	bne	r2,zero,804cec <f_write+0x464>
  80495c:	e0bffc17 	ldw	r2,-16(fp)
  804960:	10800217 	ldw	r2,8(r2)
  804964:	1004d27a 	srli	r2,r2,9
  804968:	1007883a 	mov	r3,r2
  80496c:	e0bffc17 	ldw	r2,-16(fp)
  804970:	10800017 	ldw	r2,0(r2)
  804974:	10800083 	ldbu	r2,2(r2)
  804978:	10bfffc4 	addi	r2,r2,-1
  80497c:	1884703a 	and	r2,r3,r2
  804980:	e0bffa05 	stb	r2,-24(fp)
  804984:	e0bffa03 	ldbu	r2,-24(fp)
  804988:	1000381e 	bne	r2,zero,804a6c <f_write+0x1e4>
  80498c:	e0bffc17 	ldw	r2,-16(fp)
  804990:	10800217 	ldw	r2,8(r2)
  804994:	10000f1e 	bne	r2,zero,8049d4 <f_write+0x14c>
  804998:	e0bffc17 	ldw	r2,-16(fp)
  80499c:	10800417 	ldw	r2,16(r2)
  8049a0:	e0bff515 	stw	r2,-44(fp)
  8049a4:	e0bff517 	ldw	r2,-44(fp)
  8049a8:	1000121e 	bne	r2,zero,8049f4 <f_write+0x16c>
  8049ac:	e0bffc17 	ldw	r2,-16(fp)
  8049b0:	10800017 	ldw	r2,0(r2)
  8049b4:	1009883a 	mov	r4,r2
  8049b8:	000b883a 	mov	r5,zero
  8049bc:	08022000 	call	802200 <create_chain>
  8049c0:	e0bff515 	stw	r2,-44(fp)
  8049c4:	e0bffc17 	ldw	r2,-16(fp)
  8049c8:	e0fff517 	ldw	r3,-44(fp)
  8049cc:	10c00415 	stw	r3,16(r2)
  8049d0:	00000806 	br	8049f4 <f_write+0x16c>
  8049d4:	e0bffc17 	ldw	r2,-16(fp)
  8049d8:	10c00017 	ldw	r3,0(r2)
  8049dc:	e0bffc17 	ldw	r2,-16(fp)
  8049e0:	10800517 	ldw	r2,20(r2)
  8049e4:	1809883a 	mov	r4,r3
  8049e8:	100b883a 	mov	r5,r2
  8049ec:	08022000 	call	802200 <create_chain>
  8049f0:	e0bff515 	stw	r2,-44(fp)
  8049f4:	e0bff517 	ldw	r2,-44(fp)
  8049f8:	1000011e 	bne	r2,zero,804a00 <f_write+0x178>
  8049fc:	0000ec06 	br	804db0 <f_write+0x528>
  804a00:	e0bff517 	ldw	r2,-44(fp)
  804a04:	10800058 	cmpnei	r2,r2,1
  804a08:	1000091e 	bne	r2,zero,804a30 <f_write+0x1a8>
  804a0c:	e0bffc17 	ldw	r2,-16(fp)
  804a10:	10c00183 	ldbu	r3,6(r2)
  804a14:	00bfe004 	movi	r2,-128
  804a18:	1884b03a 	or	r2,r3,r2
  804a1c:	1007883a 	mov	r3,r2
  804a20:	e0bffc17 	ldw	r2,-16(fp)
  804a24:	10c00185 	stb	r3,6(r2)
  804a28:	00800084 	movi	r2,2
  804a2c:	0000f006 	br	804df0 <f_write+0x568>
  804a30:	e0bff517 	ldw	r2,-44(fp)
  804a34:	10bfffd8 	cmpnei	r2,r2,-1
  804a38:	1000091e 	bne	r2,zero,804a60 <f_write+0x1d8>
  804a3c:	e0bffc17 	ldw	r2,-16(fp)
  804a40:	10c00183 	ldbu	r3,6(r2)
  804a44:	00bfe004 	movi	r2,-128
  804a48:	1884b03a 	or	r2,r3,r2
  804a4c:	1007883a 	mov	r3,r2
  804a50:	e0bffc17 	ldw	r2,-16(fp)
  804a54:	10c00185 	stb	r3,6(r2)
  804a58:	00800044 	movi	r2,1
  804a5c:	0000e406 	br	804df0 <f_write+0x568>
  804a60:	e0bffc17 	ldw	r2,-16(fp)
  804a64:	e0fff517 	ldw	r3,-44(fp)
  804a68:	10c00515 	stw	r3,20(r2)
  804a6c:	e0bffc17 	ldw	r2,-16(fp)
  804a70:	10800183 	ldbu	r2,6(r2)
  804a74:	10803fcc 	andi	r2,r2,255
  804a78:	1080100c 	andi	r2,r2,64
  804a7c:	10001d26 	beq	r2,zero,804af4 <f_write+0x26c>
  804a80:	e0bffc17 	ldw	r2,-16(fp)
  804a84:	10800017 	ldw	r2,0(r2)
  804a88:	10800043 	ldbu	r2,1(r2)
  804a8c:	11003fcc 	andi	r4,r2,255
  804a90:	e0bffc17 	ldw	r2,-16(fp)
  804a94:	10c00904 	addi	r3,r2,36
  804a98:	e0bffc17 	ldw	r2,-16(fp)
  804a9c:	10800617 	ldw	r2,24(r2)
  804aa0:	180b883a 	mov	r5,r3
  804aa4:	100d883a 	mov	r6,r2
  804aa8:	01c00044 	movi	r7,1
  804aac:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  804ab0:	10000926 	beq	r2,zero,804ad8 <f_write+0x250>
  804ab4:	e0bffc17 	ldw	r2,-16(fp)
  804ab8:	10c00183 	ldbu	r3,6(r2)
  804abc:	00bfe004 	movi	r2,-128
  804ac0:	1884b03a 	or	r2,r3,r2
  804ac4:	1007883a 	mov	r3,r2
  804ac8:	e0bffc17 	ldw	r2,-16(fp)
  804acc:	10c00185 	stb	r3,6(r2)
  804ad0:	00800044 	movi	r2,1
  804ad4:	0000c606 	br	804df0 <f_write+0x568>
  804ad8:	e0bffc17 	ldw	r2,-16(fp)
  804adc:	10c00183 	ldbu	r3,6(r2)
  804ae0:	00bfefc4 	movi	r2,-65
  804ae4:	1884703a 	and	r2,r3,r2
  804ae8:	1007883a 	mov	r3,r2
  804aec:	e0bffc17 	ldw	r2,-16(fp)
  804af0:	10c00185 	stb	r3,6(r2)
  804af4:	e0bffc17 	ldw	r2,-16(fp)
  804af8:	10c00017 	ldw	r3,0(r2)
  804afc:	e0bffc17 	ldw	r2,-16(fp)
  804b00:	10800517 	ldw	r2,20(r2)
  804b04:	1809883a 	mov	r4,r3
  804b08:	100b883a 	mov	r5,r2
  804b0c:	0801a8c0 	call	801a8c <clust2sect>
  804b10:	e0bffb15 	stw	r2,-20(fp)
  804b14:	e0bffb17 	ldw	r2,-20(fp)
  804b18:	1000091e 	bne	r2,zero,804b40 <f_write+0x2b8>
  804b1c:	e0bffc17 	ldw	r2,-16(fp)
  804b20:	10c00183 	ldbu	r3,6(r2)
  804b24:	00bfe004 	movi	r2,-128
  804b28:	1884b03a 	or	r2,r3,r2
  804b2c:	1007883a 	mov	r3,r2
  804b30:	e0bffc17 	ldw	r2,-16(fp)
  804b34:	10c00185 	stb	r3,6(r2)
  804b38:	00800084 	movi	r2,2
  804b3c:	0000ac06 	br	804df0 <f_write+0x568>
  804b40:	e0bffa03 	ldbu	r2,-24(fp)
  804b44:	e0fffb17 	ldw	r3,-20(fp)
  804b48:	1885883a 	add	r2,r3,r2
  804b4c:	e0bffb15 	stw	r2,-20(fp)
  804b50:	e0bffe17 	ldw	r2,-8(fp)
  804b54:	1004d27a 	srli	r2,r2,9
  804b58:	e0bff715 	stw	r2,-36(fp)
  804b5c:	e0bff717 	ldw	r2,-36(fp)
  804b60:	10004126 	beq	r2,zero,804c68 <f_write+0x3e0>
  804b64:	e0fffa03 	ldbu	r3,-24(fp)
  804b68:	e0bff717 	ldw	r2,-36(fp)
  804b6c:	1885883a 	add	r2,r3,r2
  804b70:	e0fffc17 	ldw	r3,-16(fp)
  804b74:	18c00017 	ldw	r3,0(r3)
  804b78:	18c00083 	ldbu	r3,2(r3)
  804b7c:	18c03fcc 	andi	r3,r3,255
  804b80:	1880072e 	bgeu	r3,r2,804ba0 <f_write+0x318>
  804b84:	e0bffc17 	ldw	r2,-16(fp)
  804b88:	10800017 	ldw	r2,0(r2)
  804b8c:	10800083 	ldbu	r2,2(r2)
  804b90:	10c03fcc 	andi	r3,r2,255
  804b94:	e0bffa03 	ldbu	r2,-24(fp)
  804b98:	1885c83a 	sub	r2,r3,r2
  804b9c:	e0bff715 	stw	r2,-36(fp)
  804ba0:	e0bffc17 	ldw	r2,-16(fp)
  804ba4:	10800017 	ldw	r2,0(r2)
  804ba8:	10800043 	ldbu	r2,1(r2)
  804bac:	10c03fcc 	andi	r3,r2,255
  804bb0:	e0bff717 	ldw	r2,-36(fp)
  804bb4:	10803fcc 	andi	r2,r2,255
  804bb8:	1809883a 	mov	r4,r3
  804bbc:	e17ff817 	ldw	r5,-32(fp)
  804bc0:	e1bffb17 	ldw	r6,-20(fp)
  804bc4:	100f883a 	mov	r7,r2
  804bc8:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  804bcc:	10000926 	beq	r2,zero,804bf4 <f_write+0x36c>
  804bd0:	e0bffc17 	ldw	r2,-16(fp)
  804bd4:	10c00183 	ldbu	r3,6(r2)
  804bd8:	00bfe004 	movi	r2,-128
  804bdc:	1884b03a 	or	r2,r3,r2
  804be0:	1007883a 	mov	r3,r2
  804be4:	e0bffc17 	ldw	r2,-16(fp)
  804be8:	10c00185 	stb	r3,6(r2)
  804bec:	00800044 	movi	r2,1
  804bf0:	00007f06 	br	804df0 <f_write+0x568>
  804bf4:	e0bffc17 	ldw	r2,-16(fp)
  804bf8:	10c00617 	ldw	r3,24(r2)
  804bfc:	e0bffb17 	ldw	r2,-20(fp)
  804c00:	1887c83a 	sub	r3,r3,r2
  804c04:	e0bff717 	ldw	r2,-36(fp)
  804c08:	1880132e 	bgeu	r3,r2,804c58 <f_write+0x3d0>
  804c0c:	e0bffc17 	ldw	r2,-16(fp)
  804c10:	11000904 	addi	r4,r2,36
  804c14:	e0bffc17 	ldw	r2,-16(fp)
  804c18:	10c00617 	ldw	r3,24(r2)
  804c1c:	e0bffb17 	ldw	r2,-20(fp)
  804c20:	1885c83a 	sub	r2,r3,r2
  804c24:	1004927a 	slli	r2,r2,9
  804c28:	e0fff817 	ldw	r3,-32(fp)
  804c2c:	1885883a 	add	r2,r3,r2
  804c30:	100b883a 	mov	r5,r2
  804c34:	01808004 	movi	r6,512
  804c38:	08015480 	call	801548 <mem_cpy>
  804c3c:	e0bffc17 	ldw	r2,-16(fp)
  804c40:	10c00183 	ldbu	r3,6(r2)
  804c44:	00bfefc4 	movi	r2,-65
  804c48:	1884703a 	and	r2,r3,r2
  804c4c:	1007883a 	mov	r3,r2
  804c50:	e0bffc17 	ldw	r2,-16(fp)
  804c54:	10c00185 	stb	r3,6(r2)
  804c58:	e0bff717 	ldw	r2,-36(fp)
  804c5c:	1004927a 	slli	r2,r2,9
  804c60:	e0bff615 	stw	r2,-40(fp)
  804c64:	00003c06 	br	804d58 <f_write+0x4d0>
  804c68:	e0bffc17 	ldw	r2,-16(fp)
  804c6c:	10c00617 	ldw	r3,24(r2)
  804c70:	e0bffb17 	ldw	r2,-20(fp)
  804c74:	18801a26 	beq	r3,r2,804ce0 <f_write+0x458>
  804c78:	e0bffc17 	ldw	r2,-16(fp)
  804c7c:	10c00217 	ldw	r3,8(r2)
  804c80:	e0bffc17 	ldw	r2,-16(fp)
  804c84:	10800317 	ldw	r2,12(r2)
  804c88:	1880152e 	bgeu	r3,r2,804ce0 <f_write+0x458>
  804c8c:	e0bffc17 	ldw	r2,-16(fp)
  804c90:	10800017 	ldw	r2,0(r2)
  804c94:	10800043 	ldbu	r2,1(r2)
  804c98:	10c03fcc 	andi	r3,r2,255
  804c9c:	e0bffc17 	ldw	r2,-16(fp)
  804ca0:	10800904 	addi	r2,r2,36
  804ca4:	1809883a 	mov	r4,r3
  804ca8:	100b883a 	mov	r5,r2
  804cac:	e1bffb17 	ldw	r6,-20(fp)
  804cb0:	01c00044 	movi	r7,1
  804cb4:	0800dec0 	call	800dec <ffs_DiskIORead>
  804cb8:	10000926 	beq	r2,zero,804ce0 <f_write+0x458>
  804cbc:	e0bffc17 	ldw	r2,-16(fp)
  804cc0:	10c00183 	ldbu	r3,6(r2)
  804cc4:	00bfe004 	movi	r2,-128
  804cc8:	1884b03a 	or	r2,r3,r2
  804ccc:	1007883a 	mov	r3,r2
  804cd0:	e0bffc17 	ldw	r2,-16(fp)
  804cd4:	10c00185 	stb	r3,6(r2)
  804cd8:	00800044 	movi	r2,1
  804cdc:	00004406 	br	804df0 <f_write+0x568>
  804ce0:	e0bffc17 	ldw	r2,-16(fp)
  804ce4:	e0fffb17 	ldw	r3,-20(fp)
  804ce8:	10c00615 	stw	r3,24(r2)
  804cec:	e0bffc17 	ldw	r2,-16(fp)
  804cf0:	10800217 	ldw	r2,8(r2)
  804cf4:	10807fcc 	andi	r2,r2,511
  804cf8:	00c08004 	movi	r3,512
  804cfc:	1885c83a 	sub	r2,r3,r2
  804d00:	e0bff615 	stw	r2,-40(fp)
  804d04:	e0bff617 	ldw	r2,-40(fp)
  804d08:	e0fffe17 	ldw	r3,-8(fp)
  804d0c:	1880022e 	bgeu	r3,r2,804d18 <f_write+0x490>
  804d10:	e0bffe17 	ldw	r2,-8(fp)
  804d14:	e0bff615 	stw	r2,-40(fp)
  804d18:	e0bffc17 	ldw	r2,-16(fp)
  804d1c:	10800217 	ldw	r2,8(r2)
  804d20:	10807fcc 	andi	r2,r2,511
  804d24:	10800904 	addi	r2,r2,36
  804d28:	e0fffc17 	ldw	r3,-16(fp)
  804d2c:	1885883a 	add	r2,r3,r2
  804d30:	1009883a 	mov	r4,r2
  804d34:	e17ff817 	ldw	r5,-32(fp)
  804d38:	e1bff617 	ldw	r6,-40(fp)
  804d3c:	08015480 	call	801548 <mem_cpy>
  804d40:	e0bffc17 	ldw	r2,-16(fp)
  804d44:	10800183 	ldbu	r2,6(r2)
  804d48:	10801014 	ori	r2,r2,64
  804d4c:	1007883a 	mov	r3,r2
  804d50:	e0bffc17 	ldw	r2,-16(fp)
  804d54:	10c00185 	stb	r3,6(r2)
  804d58:	e0fff817 	ldw	r3,-32(fp)
  804d5c:	e0bff617 	ldw	r2,-40(fp)
  804d60:	1885883a 	add	r2,r3,r2
  804d64:	e0bff815 	stw	r2,-32(fp)
  804d68:	e0bffc17 	ldw	r2,-16(fp)
  804d6c:	10c00217 	ldw	r3,8(r2)
  804d70:	e0bff617 	ldw	r2,-40(fp)
  804d74:	1887883a 	add	r3,r3,r2
  804d78:	e0bffc17 	ldw	r2,-16(fp)
  804d7c:	10c00215 	stw	r3,8(r2)
  804d80:	e0bfff17 	ldw	r2,-4(fp)
  804d84:	10c00017 	ldw	r3,0(r2)
  804d88:	e0bff617 	ldw	r2,-40(fp)
  804d8c:	1887883a 	add	r3,r3,r2
  804d90:	e0bfff17 	ldw	r2,-4(fp)
  804d94:	10c00015 	stw	r3,0(r2)
  804d98:	e0fffe17 	ldw	r3,-8(fp)
  804d9c:	e0bff617 	ldw	r2,-40(fp)
  804da0:	1885c83a 	sub	r2,r3,r2
  804da4:	e0bffe15 	stw	r2,-8(fp)
  804da8:	e0bffe17 	ldw	r2,-8(fp)
  804dac:	103ee71e 	bne	r2,zero,80494c <__alt_data_end+0xff80494c>
  804db0:	e0bffc17 	ldw	r2,-16(fp)
  804db4:	10800217 	ldw	r2,8(r2)
  804db8:	e0fffc17 	ldw	r3,-16(fp)
  804dbc:	18c00317 	ldw	r3,12(r3)
  804dc0:	1880042e 	bgeu	r3,r2,804dd4 <f_write+0x54c>
  804dc4:	e0bffc17 	ldw	r2,-16(fp)
  804dc8:	10c00217 	ldw	r3,8(r2)
  804dcc:	e0bffc17 	ldw	r2,-16(fp)
  804dd0:	10c00315 	stw	r3,12(r2)
  804dd4:	e0bffc17 	ldw	r2,-16(fp)
  804dd8:	10800183 	ldbu	r2,6(r2)
  804ddc:	10800814 	ori	r2,r2,32
  804de0:	1007883a 	mov	r3,r2
  804de4:	e0bffc17 	ldw	r2,-16(fp)
  804de8:	10c00185 	stb	r3,6(r2)
  804dec:	0005883a 	mov	r2,zero
  804df0:	e037883a 	mov	sp,fp
  804df4:	dfc00117 	ldw	ra,4(sp)
  804df8:	df000017 	ldw	fp,0(sp)
  804dfc:	dec00204 	addi	sp,sp,8
  804e00:	f800283a 	ret

00804e04 <f_sync>:
  804e04:	defffa04 	addi	sp,sp,-24
  804e08:	dfc00515 	stw	ra,20(sp)
  804e0c:	df000415 	stw	fp,16(sp)
  804e10:	df000404 	addi	fp,sp,16
  804e14:	e13fff15 	stw	r4,-4(fp)
  804e18:	e0bfff17 	ldw	r2,-4(fp)
  804e1c:	10c00017 	ldw	r3,0(r2)
  804e20:	e0bfff17 	ldw	r2,-4(fp)
  804e24:	1080010b 	ldhu	r2,4(r2)
  804e28:	10bfffcc 	andi	r2,r2,65535
  804e2c:	1809883a 	mov	r4,r3
  804e30:	100b883a 	mov	r5,r2
  804e34:	0803dfc0 	call	803dfc <validate>
  804e38:	e0bffc15 	stw	r2,-16(fp)
  804e3c:	e0bffc17 	ldw	r2,-16(fp)
  804e40:	10008c1e 	bne	r2,zero,805074 <f_sync+0x270>
  804e44:	e0bfff17 	ldw	r2,-4(fp)
  804e48:	10800183 	ldbu	r2,6(r2)
  804e4c:	10803fcc 	andi	r2,r2,255
  804e50:	1080080c 	andi	r2,r2,32
  804e54:	10008726 	beq	r2,zero,805074 <f_sync+0x270>
  804e58:	e0bfff17 	ldw	r2,-4(fp)
  804e5c:	10800183 	ldbu	r2,6(r2)
  804e60:	10803fcc 	andi	r2,r2,255
  804e64:	1080100c 	andi	r2,r2,64
  804e68:	10001626 	beq	r2,zero,804ec4 <f_sync+0xc0>
  804e6c:	e0bfff17 	ldw	r2,-4(fp)
  804e70:	10800017 	ldw	r2,0(r2)
  804e74:	10800043 	ldbu	r2,1(r2)
  804e78:	11003fcc 	andi	r4,r2,255
  804e7c:	e0bfff17 	ldw	r2,-4(fp)
  804e80:	10c00904 	addi	r3,r2,36
  804e84:	e0bfff17 	ldw	r2,-4(fp)
  804e88:	10800617 	ldw	r2,24(r2)
  804e8c:	180b883a 	mov	r5,r3
  804e90:	100d883a 	mov	r6,r2
  804e94:	01c00044 	movi	r7,1
  804e98:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  804e9c:	10000226 	beq	r2,zero,804ea8 <f_sync+0xa4>
  804ea0:	00800044 	movi	r2,1
  804ea4:	00007406 	br	805078 <f_sync+0x274>
  804ea8:	e0bfff17 	ldw	r2,-4(fp)
  804eac:	10c00183 	ldbu	r3,6(r2)
  804eb0:	00bfefc4 	movi	r2,-65
  804eb4:	1884703a 	and	r2,r3,r2
  804eb8:	1007883a 	mov	r3,r2
  804ebc:	e0bfff17 	ldw	r2,-4(fp)
  804ec0:	10c00185 	stb	r3,6(r2)
  804ec4:	e0bfff17 	ldw	r2,-4(fp)
  804ec8:	10c00017 	ldw	r3,0(r2)
  804ecc:	e0bfff17 	ldw	r2,-4(fp)
  804ed0:	10800717 	ldw	r2,28(r2)
  804ed4:	1809883a 	mov	r4,r3
  804ed8:	100b883a 	mov	r5,r2
  804edc:	08017140 	call	801714 <move_window>
  804ee0:	e0bffc15 	stw	r2,-16(fp)
  804ee4:	e0bffc17 	ldw	r2,-16(fp)
  804ee8:	1000621e 	bne	r2,zero,805074 <f_sync+0x270>
  804eec:	e0bfff17 	ldw	r2,-4(fp)
  804ef0:	10800817 	ldw	r2,32(r2)
  804ef4:	e0bffd15 	stw	r2,-12(fp)
  804ef8:	e0bffd17 	ldw	r2,-12(fp)
  804efc:	108002c4 	addi	r2,r2,11
  804f00:	e0fffd17 	ldw	r3,-12(fp)
  804f04:	18c002c4 	addi	r3,r3,11
  804f08:	18c00003 	ldbu	r3,0(r3)
  804f0c:	18c00814 	ori	r3,r3,32
  804f10:	10c00005 	stb	r3,0(r2)
  804f14:	e0bffd17 	ldw	r2,-12(fp)
  804f18:	10800704 	addi	r2,r2,28
  804f1c:	e0ffff17 	ldw	r3,-4(fp)
  804f20:	18c00317 	ldw	r3,12(r3)
  804f24:	10c00005 	stb	r3,0(r2)
  804f28:	e0bffd17 	ldw	r2,-12(fp)
  804f2c:	10800744 	addi	r2,r2,29
  804f30:	e0ffff17 	ldw	r3,-4(fp)
  804f34:	18c00317 	ldw	r3,12(r3)
  804f38:	18ffffcc 	andi	r3,r3,65535
  804f3c:	1806d23a 	srli	r3,r3,8
  804f40:	10c00005 	stb	r3,0(r2)
  804f44:	e0bffd17 	ldw	r2,-12(fp)
  804f48:	10800784 	addi	r2,r2,30
  804f4c:	e0ffff17 	ldw	r3,-4(fp)
  804f50:	18c00317 	ldw	r3,12(r3)
  804f54:	1806d43a 	srli	r3,r3,16
  804f58:	10c00005 	stb	r3,0(r2)
  804f5c:	e0bffd17 	ldw	r2,-12(fp)
  804f60:	108007c4 	addi	r2,r2,31
  804f64:	e0ffff17 	ldw	r3,-4(fp)
  804f68:	18c00317 	ldw	r3,12(r3)
  804f6c:	1806d63a 	srli	r3,r3,24
  804f70:	10c00005 	stb	r3,0(r2)
  804f74:	e0bffd17 	ldw	r2,-12(fp)
  804f78:	10800684 	addi	r2,r2,26
  804f7c:	e0ffff17 	ldw	r3,-4(fp)
  804f80:	18c00417 	ldw	r3,16(r3)
  804f84:	10c00005 	stb	r3,0(r2)
  804f88:	e0bffd17 	ldw	r2,-12(fp)
  804f8c:	108006c4 	addi	r2,r2,27
  804f90:	e0ffff17 	ldw	r3,-4(fp)
  804f94:	18c00417 	ldw	r3,16(r3)
  804f98:	18ffffcc 	andi	r3,r3,65535
  804f9c:	1806d23a 	srli	r3,r3,8
  804fa0:	10c00005 	stb	r3,0(r2)
  804fa4:	e0bffd17 	ldw	r2,-12(fp)
  804fa8:	10800504 	addi	r2,r2,20
  804fac:	e0ffff17 	ldw	r3,-4(fp)
  804fb0:	18c00417 	ldw	r3,16(r3)
  804fb4:	1806d43a 	srli	r3,r3,16
  804fb8:	10c00005 	stb	r3,0(r2)
  804fbc:	e0bffd17 	ldw	r2,-12(fp)
  804fc0:	10800544 	addi	r2,r2,21
  804fc4:	e0ffff17 	ldw	r3,-4(fp)
  804fc8:	18c00417 	ldw	r3,16(r3)
  804fcc:	1806d43a 	srli	r3,r3,16
  804fd0:	18ffffcc 	andi	r3,r3,65535
  804fd4:	1806d23a 	srli	r3,r3,8
  804fd8:	10c00005 	stb	r3,0(r2)
  804fdc:	080151c0 	call	80151c <get_fattime>
  804fe0:	e0bffe15 	stw	r2,-8(fp)
  804fe4:	e0bffd17 	ldw	r2,-12(fp)
  804fe8:	10800584 	addi	r2,r2,22
  804fec:	e0fffe17 	ldw	r3,-8(fp)
  804ff0:	10c00005 	stb	r3,0(r2)
  804ff4:	e0bffd17 	ldw	r2,-12(fp)
  804ff8:	108005c4 	addi	r2,r2,23
  804ffc:	e0fffe17 	ldw	r3,-8(fp)
  805000:	18ffffcc 	andi	r3,r3,65535
  805004:	1806d23a 	srli	r3,r3,8
  805008:	10c00005 	stb	r3,0(r2)
  80500c:	e0bffd17 	ldw	r2,-12(fp)
  805010:	10800604 	addi	r2,r2,24
  805014:	e0fffe17 	ldw	r3,-8(fp)
  805018:	1806d43a 	srli	r3,r3,16
  80501c:	10c00005 	stb	r3,0(r2)
  805020:	e0bffd17 	ldw	r2,-12(fp)
  805024:	10800644 	addi	r2,r2,25
  805028:	e0fffe17 	ldw	r3,-8(fp)
  80502c:	1806d63a 	srli	r3,r3,24
  805030:	10c00005 	stb	r3,0(r2)
  805034:	e0bfff17 	ldw	r2,-4(fp)
  805038:	10c00183 	ldbu	r3,6(r2)
  80503c:	00bff7c4 	movi	r2,-33
  805040:	1884703a 	and	r2,r3,r2
  805044:	1007883a 	mov	r3,r2
  805048:	e0bfff17 	ldw	r2,-4(fp)
  80504c:	10c00185 	stb	r3,6(r2)
  805050:	e0bfff17 	ldw	r2,-4(fp)
  805054:	10800017 	ldw	r2,0(r2)
  805058:	00c00044 	movi	r3,1
  80505c:	10c00105 	stb	r3,4(r2)
  805060:	e0bfff17 	ldw	r2,-4(fp)
  805064:	10800017 	ldw	r2,0(r2)
  805068:	1009883a 	mov	r4,r2
  80506c:	08018700 	call	801870 <sync>
  805070:	e0bffc15 	stw	r2,-16(fp)
  805074:	e0bffc17 	ldw	r2,-16(fp)
  805078:	e037883a 	mov	sp,fp
  80507c:	dfc00117 	ldw	ra,4(sp)
  805080:	df000017 	ldw	fp,0(sp)
  805084:	dec00204 	addi	sp,sp,8
  805088:	f800283a 	ret

0080508c <f_close>:
  80508c:	defffc04 	addi	sp,sp,-16
  805090:	dfc00315 	stw	ra,12(sp)
  805094:	df000215 	stw	fp,8(sp)
  805098:	df000204 	addi	fp,sp,8
  80509c:	e13fff15 	stw	r4,-4(fp)
  8050a0:	e13fff17 	ldw	r4,-4(fp)
  8050a4:	0804e040 	call	804e04 <f_sync>
  8050a8:	e0bffe15 	stw	r2,-8(fp)
  8050ac:	e0bffe17 	ldw	r2,-8(fp)
  8050b0:	1000021e 	bne	r2,zero,8050bc <f_close+0x30>
  8050b4:	e0bfff17 	ldw	r2,-4(fp)
  8050b8:	10000015 	stw	zero,0(r2)
  8050bc:	e0bffe17 	ldw	r2,-8(fp)
  8050c0:	e037883a 	mov	sp,fp
  8050c4:	dfc00117 	ldw	ra,4(sp)
  8050c8:	df000017 	ldw	fp,0(sp)
  8050cc:	dec00204 	addi	sp,sp,8
  8050d0:	f800283a 	ret

008050d4 <f_lseek>:
  8050d4:	defff604 	addi	sp,sp,-40
  8050d8:	dfc00915 	stw	ra,36(sp)
  8050dc:	df000815 	stw	fp,32(sp)
  8050e0:	dc000715 	stw	r16,28(sp)
  8050e4:	df000804 	addi	fp,sp,32
  8050e8:	e13ffd15 	stw	r4,-12(fp)
  8050ec:	e17ffe15 	stw	r5,-8(fp)
  8050f0:	e0bffd17 	ldw	r2,-12(fp)
  8050f4:	10c00017 	ldw	r3,0(r2)
  8050f8:	e0bffd17 	ldw	r2,-12(fp)
  8050fc:	1080010b 	ldhu	r2,4(r2)
  805100:	10bfffcc 	andi	r2,r2,65535
  805104:	1809883a 	mov	r4,r3
  805108:	100b883a 	mov	r5,r2
  80510c:	0803dfc0 	call	803dfc <validate>
  805110:	e0bffa15 	stw	r2,-24(fp)
  805114:	e0bffa17 	ldw	r2,-24(fp)
  805118:	10000226 	beq	r2,zero,805124 <f_lseek+0x50>
  80511c:	e0bffa17 	ldw	r2,-24(fp)
  805120:	00012106 	br	8055a8 <f_lseek+0x4d4>
  805124:	e0bffd17 	ldw	r2,-12(fp)
  805128:	10800183 	ldbu	r2,6(r2)
  80512c:	10803fcc 	andi	r2,r2,255
  805130:	1080201c 	xori	r2,r2,128
  805134:	10bfe004 	addi	r2,r2,-128
  805138:	1000020e 	bge	r2,zero,805144 <f_lseek+0x70>
  80513c:	00800084 	movi	r2,2
  805140:	00011906 	br	8055a8 <f_lseek+0x4d4>
  805144:	e0bffd17 	ldw	r2,-12(fp)
  805148:	10c00317 	ldw	r3,12(r2)
  80514c:	e0bffe17 	ldw	r2,-8(fp)
  805150:	1880082e 	bgeu	r3,r2,805174 <f_lseek+0xa0>
  805154:	e0bffd17 	ldw	r2,-12(fp)
  805158:	10800183 	ldbu	r2,6(r2)
  80515c:	10803fcc 	andi	r2,r2,255
  805160:	1080008c 	andi	r2,r2,2
  805164:	1000031e 	bne	r2,zero,805174 <f_lseek+0xa0>
  805168:	e0bffd17 	ldw	r2,-12(fp)
  80516c:	10800317 	ldw	r2,12(r2)
  805170:	e0bffe15 	stw	r2,-8(fp)
  805174:	e0bffd17 	ldw	r2,-12(fp)
  805178:	10800217 	ldw	r2,8(r2)
  80517c:	e0bffb15 	stw	r2,-20(fp)
  805180:	e03ff915 	stw	zero,-28(fp)
  805184:	e0bffd17 	ldw	r2,-12(fp)
  805188:	e0fff917 	ldw	r3,-28(fp)
  80518c:	10c00215 	stw	r3,8(r2)
  805190:	e0bffe17 	ldw	r2,-8(fp)
  805194:	1000b226 	beq	r2,zero,805460 <f_lseek+0x38c>
  805198:	e0bffd17 	ldw	r2,-12(fp)
  80519c:	10800017 	ldw	r2,0(r2)
  8051a0:	10800083 	ldbu	r2,2(r2)
  8051a4:	10803fcc 	andi	r2,r2,255
  8051a8:	1004927a 	slli	r2,r2,9
  8051ac:	e0bffc15 	stw	r2,-16(fp)
  8051b0:	e0bffb17 	ldw	r2,-20(fp)
  8051b4:	10001c26 	beq	r2,zero,805228 <f_lseek+0x154>
  8051b8:	e0bffe17 	ldw	r2,-8(fp)
  8051bc:	10bfffc4 	addi	r2,r2,-1
  8051c0:	1009883a 	mov	r4,r2
  8051c4:	e17ffc17 	ldw	r5,-16(fp)
  8051c8:	0809abc0 	call	809abc <__udivsi3>
  8051cc:	1021883a 	mov	r16,r2
  8051d0:	e0bffb17 	ldw	r2,-20(fp)
  8051d4:	10bfffc4 	addi	r2,r2,-1
  8051d8:	1009883a 	mov	r4,r2
  8051dc:	e17ffc17 	ldw	r5,-16(fp)
  8051e0:	0809abc0 	call	809abc <__udivsi3>
  8051e4:	80801036 	bltu	r16,r2,805228 <f_lseek+0x154>
  8051e8:	e0bffb17 	ldw	r2,-20(fp)
  8051ec:	10ffffc4 	addi	r3,r2,-1
  8051f0:	e0bffc17 	ldw	r2,-16(fp)
  8051f4:	0085c83a 	sub	r2,zero,r2
  8051f8:	1886703a 	and	r3,r3,r2
  8051fc:	e0bffd17 	ldw	r2,-12(fp)
  805200:	10c00215 	stw	r3,8(r2)
  805204:	e0bffd17 	ldw	r2,-12(fp)
  805208:	10800217 	ldw	r2,8(r2)
  80520c:	e0fffe17 	ldw	r3,-8(fp)
  805210:	1885c83a 	sub	r2,r3,r2
  805214:	e0bffe15 	stw	r2,-8(fp)
  805218:	e0bffd17 	ldw	r2,-12(fp)
  80521c:	10800517 	ldw	r2,20(r2)
  805220:	e0bff815 	stw	r2,-32(fp)
  805224:	00002906 	br	8052cc <f_lseek+0x1f8>
  805228:	e0bffd17 	ldw	r2,-12(fp)
  80522c:	10800417 	ldw	r2,16(r2)
  805230:	e0bff815 	stw	r2,-32(fp)
  805234:	e0bff817 	ldw	r2,-32(fp)
  805238:	1000211e 	bne	r2,zero,8052c0 <f_lseek+0x1ec>
  80523c:	e0bffd17 	ldw	r2,-12(fp)
  805240:	10800017 	ldw	r2,0(r2)
  805244:	1009883a 	mov	r4,r2
  805248:	000b883a 	mov	r5,zero
  80524c:	08022000 	call	802200 <create_chain>
  805250:	e0bff815 	stw	r2,-32(fp)
  805254:	e0bff817 	ldw	r2,-32(fp)
  805258:	10800058 	cmpnei	r2,r2,1
  80525c:	1000091e 	bne	r2,zero,805284 <f_lseek+0x1b0>
  805260:	e0bffd17 	ldw	r2,-12(fp)
  805264:	10c00183 	ldbu	r3,6(r2)
  805268:	00bfe004 	movi	r2,-128
  80526c:	1884b03a 	or	r2,r3,r2
  805270:	1007883a 	mov	r3,r2
  805274:	e0bffd17 	ldw	r2,-12(fp)
  805278:	10c00185 	stb	r3,6(r2)
  80527c:	00800084 	movi	r2,2
  805280:	0000c906 	br	8055a8 <f_lseek+0x4d4>
  805284:	e0bff817 	ldw	r2,-32(fp)
  805288:	10bfffd8 	cmpnei	r2,r2,-1
  80528c:	1000091e 	bne	r2,zero,8052b4 <f_lseek+0x1e0>
  805290:	e0bffd17 	ldw	r2,-12(fp)
  805294:	10c00183 	ldbu	r3,6(r2)
  805298:	00bfe004 	movi	r2,-128
  80529c:	1884b03a 	or	r2,r3,r2
  8052a0:	1007883a 	mov	r3,r2
  8052a4:	e0bffd17 	ldw	r2,-12(fp)
  8052a8:	10c00185 	stb	r3,6(r2)
  8052ac:	00800044 	movi	r2,1
  8052b0:	0000bd06 	br	8055a8 <f_lseek+0x4d4>
  8052b4:	e0bffd17 	ldw	r2,-12(fp)
  8052b8:	e0fff817 	ldw	r3,-32(fp)
  8052bc:	10c00415 	stw	r3,16(r2)
  8052c0:	e0bffd17 	ldw	r2,-12(fp)
  8052c4:	e0fff817 	ldw	r3,-32(fp)
  8052c8:	10c00515 	stw	r3,20(r2)
  8052cc:	e0bff817 	ldw	r2,-32(fp)
  8052d0:	10006326 	beq	r2,zero,805460 <f_lseek+0x38c>
  8052d4:	00004006 	br	8053d8 <f_lseek+0x304>
  8052d8:	e0bffd17 	ldw	r2,-12(fp)
  8052dc:	10800183 	ldbu	r2,6(r2)
  8052e0:	10803fcc 	andi	r2,r2,255
  8052e4:	1080008c 	andi	r2,r2,2
  8052e8:	10000b26 	beq	r2,zero,805318 <f_lseek+0x244>
  8052ec:	e0bffd17 	ldw	r2,-12(fp)
  8052f0:	10800017 	ldw	r2,0(r2)
  8052f4:	1009883a 	mov	r4,r2
  8052f8:	e17ff817 	ldw	r5,-32(fp)
  8052fc:	08022000 	call	802200 <create_chain>
  805300:	e0bff815 	stw	r2,-32(fp)
  805304:	e0bff817 	ldw	r2,-32(fp)
  805308:	1000091e 	bne	r2,zero,805330 <f_lseek+0x25c>
  80530c:	e0bffc17 	ldw	r2,-16(fp)
  805310:	e0bffe15 	stw	r2,-8(fp)
  805314:	00003306 	br	8053e4 <f_lseek+0x310>
  805318:	e0bffd17 	ldw	r2,-12(fp)
  80531c:	10800017 	ldw	r2,0(r2)
  805320:	1009883a 	mov	r4,r2
  805324:	e17ff817 	ldw	r5,-32(fp)
  805328:	0801af80 	call	801af8 <get_fat>
  80532c:	e0bff815 	stw	r2,-32(fp)
  805330:	e0bff817 	ldw	r2,-32(fp)
  805334:	10bfffd8 	cmpnei	r2,r2,-1
  805338:	1000091e 	bne	r2,zero,805360 <f_lseek+0x28c>
  80533c:	e0bffd17 	ldw	r2,-12(fp)
  805340:	10c00183 	ldbu	r3,6(r2)
  805344:	00bfe004 	movi	r2,-128
  805348:	1884b03a 	or	r2,r3,r2
  80534c:	1007883a 	mov	r3,r2
  805350:	e0bffd17 	ldw	r2,-12(fp)
  805354:	10c00185 	stb	r3,6(r2)
  805358:	00800044 	movi	r2,1
  80535c:	00009206 	br	8055a8 <f_lseek+0x4d4>
  805360:	e0bff817 	ldw	r2,-32(fp)
  805364:	108000b0 	cmpltui	r2,r2,2
  805368:	1000051e 	bne	r2,zero,805380 <f_lseek+0x2ac>
  80536c:	e0bffd17 	ldw	r2,-12(fp)
  805370:	10800017 	ldw	r2,0(r2)
  805374:	10800617 	ldw	r2,24(r2)
  805378:	e0fff817 	ldw	r3,-32(fp)
  80537c:	18800936 	bltu	r3,r2,8053a4 <f_lseek+0x2d0>
  805380:	e0bffd17 	ldw	r2,-12(fp)
  805384:	10c00183 	ldbu	r3,6(r2)
  805388:	00bfe004 	movi	r2,-128
  80538c:	1884b03a 	or	r2,r3,r2
  805390:	1007883a 	mov	r3,r2
  805394:	e0bffd17 	ldw	r2,-12(fp)
  805398:	10c00185 	stb	r3,6(r2)
  80539c:	00800084 	movi	r2,2
  8053a0:	00008106 	br	8055a8 <f_lseek+0x4d4>
  8053a4:	e0bffd17 	ldw	r2,-12(fp)
  8053a8:	e0fff817 	ldw	r3,-32(fp)
  8053ac:	10c00515 	stw	r3,20(r2)
  8053b0:	e0bffd17 	ldw	r2,-12(fp)
  8053b4:	10c00217 	ldw	r3,8(r2)
  8053b8:	e0bffc17 	ldw	r2,-16(fp)
  8053bc:	1887883a 	add	r3,r3,r2
  8053c0:	e0bffd17 	ldw	r2,-12(fp)
  8053c4:	10c00215 	stw	r3,8(r2)
  8053c8:	e0fffe17 	ldw	r3,-8(fp)
  8053cc:	e0bffc17 	ldw	r2,-16(fp)
  8053d0:	1885c83a 	sub	r2,r3,r2
  8053d4:	e0bffe15 	stw	r2,-8(fp)
  8053d8:	e0bffe17 	ldw	r2,-8(fp)
  8053dc:	e0fffc17 	ldw	r3,-16(fp)
  8053e0:	18bfbd36 	bltu	r3,r2,8052d8 <__alt_data_end+0xff8052d8>
  8053e4:	e0bffd17 	ldw	r2,-12(fp)
  8053e8:	10c00217 	ldw	r3,8(r2)
  8053ec:	e0bffe17 	ldw	r2,-8(fp)
  8053f0:	1887883a 	add	r3,r3,r2
  8053f4:	e0bffd17 	ldw	r2,-12(fp)
  8053f8:	10c00215 	stw	r3,8(r2)
  8053fc:	e0bffe17 	ldw	r2,-8(fp)
  805400:	10807fcc 	andi	r2,r2,511
  805404:	10001626 	beq	r2,zero,805460 <f_lseek+0x38c>
  805408:	e0bffd17 	ldw	r2,-12(fp)
  80540c:	10800017 	ldw	r2,0(r2)
  805410:	1009883a 	mov	r4,r2
  805414:	e17ff817 	ldw	r5,-32(fp)
  805418:	0801a8c0 	call	801a8c <clust2sect>
  80541c:	e0bff915 	stw	r2,-28(fp)
  805420:	e0bff917 	ldw	r2,-28(fp)
  805424:	1000091e 	bne	r2,zero,80544c <f_lseek+0x378>
  805428:	e0bffd17 	ldw	r2,-12(fp)
  80542c:	10c00183 	ldbu	r3,6(r2)
  805430:	00bfe004 	movi	r2,-128
  805434:	1884b03a 	or	r2,r3,r2
  805438:	1007883a 	mov	r3,r2
  80543c:	e0bffd17 	ldw	r2,-12(fp)
  805440:	10c00185 	stb	r3,6(r2)
  805444:	00800084 	movi	r2,2
  805448:	00005706 	br	8055a8 <f_lseek+0x4d4>
  80544c:	e0bffe17 	ldw	r2,-8(fp)
  805450:	1004d27a 	srli	r2,r2,9
  805454:	e0fff917 	ldw	r3,-28(fp)
  805458:	1885883a 	add	r2,r3,r2
  80545c:	e0bff915 	stw	r2,-28(fp)
  805460:	e0bffd17 	ldw	r2,-12(fp)
  805464:	10800217 	ldw	r2,8(r2)
  805468:	10807fcc 	andi	r2,r2,511
  80546c:	10003e26 	beq	r2,zero,805568 <f_lseek+0x494>
  805470:	e0bffd17 	ldw	r2,-12(fp)
  805474:	10c00617 	ldw	r3,24(r2)
  805478:	e0bff917 	ldw	r2,-28(fp)
  80547c:	18803a26 	beq	r3,r2,805568 <f_lseek+0x494>
  805480:	e0bffd17 	ldw	r2,-12(fp)
  805484:	10800183 	ldbu	r2,6(r2)
  805488:	10803fcc 	andi	r2,r2,255
  80548c:	1080100c 	andi	r2,r2,64
  805490:	10001d26 	beq	r2,zero,805508 <f_lseek+0x434>
  805494:	e0bffd17 	ldw	r2,-12(fp)
  805498:	10800017 	ldw	r2,0(r2)
  80549c:	10800043 	ldbu	r2,1(r2)
  8054a0:	11003fcc 	andi	r4,r2,255
  8054a4:	e0bffd17 	ldw	r2,-12(fp)
  8054a8:	10c00904 	addi	r3,r2,36
  8054ac:	e0bffd17 	ldw	r2,-12(fp)
  8054b0:	10800617 	ldw	r2,24(r2)
  8054b4:	180b883a 	mov	r5,r3
  8054b8:	100d883a 	mov	r6,r2
  8054bc:	01c00044 	movi	r7,1
  8054c0:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  8054c4:	10000926 	beq	r2,zero,8054ec <f_lseek+0x418>
  8054c8:	e0bffd17 	ldw	r2,-12(fp)
  8054cc:	10c00183 	ldbu	r3,6(r2)
  8054d0:	00bfe004 	movi	r2,-128
  8054d4:	1884b03a 	or	r2,r3,r2
  8054d8:	1007883a 	mov	r3,r2
  8054dc:	e0bffd17 	ldw	r2,-12(fp)
  8054e0:	10c00185 	stb	r3,6(r2)
  8054e4:	00800044 	movi	r2,1
  8054e8:	00002f06 	br	8055a8 <f_lseek+0x4d4>
  8054ec:	e0bffd17 	ldw	r2,-12(fp)
  8054f0:	10c00183 	ldbu	r3,6(r2)
  8054f4:	00bfefc4 	movi	r2,-65
  8054f8:	1884703a 	and	r2,r3,r2
  8054fc:	1007883a 	mov	r3,r2
  805500:	e0bffd17 	ldw	r2,-12(fp)
  805504:	10c00185 	stb	r3,6(r2)
  805508:	e0bffd17 	ldw	r2,-12(fp)
  80550c:	10800017 	ldw	r2,0(r2)
  805510:	10800043 	ldbu	r2,1(r2)
  805514:	10c03fcc 	andi	r3,r2,255
  805518:	e0bffd17 	ldw	r2,-12(fp)
  80551c:	10800904 	addi	r2,r2,36
  805520:	1809883a 	mov	r4,r3
  805524:	100b883a 	mov	r5,r2
  805528:	e1bff917 	ldw	r6,-28(fp)
  80552c:	01c00044 	movi	r7,1
  805530:	0800dec0 	call	800dec <ffs_DiskIORead>
  805534:	10000926 	beq	r2,zero,80555c <f_lseek+0x488>
  805538:	e0bffd17 	ldw	r2,-12(fp)
  80553c:	10c00183 	ldbu	r3,6(r2)
  805540:	00bfe004 	movi	r2,-128
  805544:	1884b03a 	or	r2,r3,r2
  805548:	1007883a 	mov	r3,r2
  80554c:	e0bffd17 	ldw	r2,-12(fp)
  805550:	10c00185 	stb	r3,6(r2)
  805554:	00800044 	movi	r2,1
  805558:	00001306 	br	8055a8 <f_lseek+0x4d4>
  80555c:	e0bffd17 	ldw	r2,-12(fp)
  805560:	e0fff917 	ldw	r3,-28(fp)
  805564:	10c00615 	stw	r3,24(r2)
  805568:	e0bffd17 	ldw	r2,-12(fp)
  80556c:	10800217 	ldw	r2,8(r2)
  805570:	e0fffd17 	ldw	r3,-12(fp)
  805574:	18c00317 	ldw	r3,12(r3)
  805578:	18800a2e 	bgeu	r3,r2,8055a4 <f_lseek+0x4d0>
  80557c:	e0bffd17 	ldw	r2,-12(fp)
  805580:	10c00217 	ldw	r3,8(r2)
  805584:	e0bffd17 	ldw	r2,-12(fp)
  805588:	10c00315 	stw	r3,12(r2)
  80558c:	e0bffd17 	ldw	r2,-12(fp)
  805590:	10800183 	ldbu	r2,6(r2)
  805594:	10800814 	ori	r2,r2,32
  805598:	1007883a 	mov	r3,r2
  80559c:	e0bffd17 	ldw	r2,-12(fp)
  8055a0:	10c00185 	stb	r3,6(r2)
  8055a4:	e0bffa17 	ldw	r2,-24(fp)
  8055a8:	e6ffff04 	addi	sp,fp,-4
  8055ac:	dfc00217 	ldw	ra,8(sp)
  8055b0:	df000117 	ldw	fp,4(sp)
  8055b4:	dc000017 	ldw	r16,0(sp)
  8055b8:	dec00304 	addi	sp,sp,12
  8055bc:	f800283a 	ret

008055c0 <f_opendir>:
  8055c0:	defff804 	addi	sp,sp,-32
  8055c4:	dfc00715 	stw	ra,28(sp)
  8055c8:	df000615 	stw	fp,24(sp)
  8055cc:	df000604 	addi	fp,sp,24
  8055d0:	e13ffe15 	stw	r4,-8(fp)
  8055d4:	e17fff15 	stw	r5,-4(fp)
  8055d8:	e0bffe17 	ldw	r2,-8(fp)
  8055dc:	e0ffff04 	addi	r3,fp,-4
  8055e0:	1809883a 	mov	r4,r3
  8055e4:	100b883a 	mov	r5,r2
  8055e8:	000d883a 	mov	r6,zero
  8055ec:	08034c00 	call	8034c0 <chk_mounted>
  8055f0:	e0bffa15 	stw	r2,-24(fp)
  8055f4:	e0bffa17 	ldw	r2,-24(fp)
  8055f8:	1000471e 	bne	r2,zero,805718 <f_opendir+0x158>
  8055fc:	e0bffe17 	ldw	r2,-8(fp)
  805600:	e0fffb04 	addi	r3,fp,-20
  805604:	10c00615 	stw	r3,24(r2)
  805608:	e0bfff17 	ldw	r2,-4(fp)
  80560c:	e13ffe17 	ldw	r4,-8(fp)
  805610:	100b883a 	mov	r5,r2
  805614:	080317c0 	call	80317c <follow_path>
  805618:	e0bffa15 	stw	r2,-24(fp)
  80561c:	e0bffa17 	ldw	r2,-24(fp)
  805620:	1000381e 	bne	r2,zero,805704 <f_opendir+0x144>
  805624:	e0bffe17 	ldw	r2,-8(fp)
  805628:	10800517 	ldw	r2,20(r2)
  80562c:	10002a26 	beq	r2,zero,8056d8 <f_opendir+0x118>
  805630:	e0bffe17 	ldw	r2,-8(fp)
  805634:	10800517 	ldw	r2,20(r2)
  805638:	108002c4 	addi	r2,r2,11
  80563c:	10800003 	ldbu	r2,0(r2)
  805640:	10803fcc 	andi	r2,r2,255
  805644:	1080040c 	andi	r2,r2,16
  805648:	10002126 	beq	r2,zero,8056d0 <f_opendir+0x110>
  80564c:	e0bffe17 	ldw	r2,-8(fp)
  805650:	10800517 	ldw	r2,20(r2)
  805654:	10800544 	addi	r2,r2,21
  805658:	10800003 	ldbu	r2,0(r2)
  80565c:	10803fcc 	andi	r2,r2,255
  805660:	1004923a 	slli	r2,r2,8
  805664:	1007883a 	mov	r3,r2
  805668:	e0bffe17 	ldw	r2,-8(fp)
  80566c:	10800517 	ldw	r2,20(r2)
  805670:	10800504 	addi	r2,r2,20
  805674:	10800003 	ldbu	r2,0(r2)
  805678:	10803fcc 	andi	r2,r2,255
  80567c:	1884b03a 	or	r2,r3,r2
  805680:	10bfffcc 	andi	r2,r2,65535
  805684:	1006943a 	slli	r3,r2,16
  805688:	e0bffe17 	ldw	r2,-8(fp)
  80568c:	10800517 	ldw	r2,20(r2)
  805690:	108006c4 	addi	r2,r2,27
  805694:	10800003 	ldbu	r2,0(r2)
  805698:	10803fcc 	andi	r2,r2,255
  80569c:	1004923a 	slli	r2,r2,8
  8056a0:	1009883a 	mov	r4,r2
  8056a4:	e0bffe17 	ldw	r2,-8(fp)
  8056a8:	10800517 	ldw	r2,20(r2)
  8056ac:	10800684 	addi	r2,r2,26
  8056b0:	10800003 	ldbu	r2,0(r2)
  8056b4:	10803fcc 	andi	r2,r2,255
  8056b8:	2084b03a 	or	r2,r4,r2
  8056bc:	10bfffcc 	andi	r2,r2,65535
  8056c0:	1886b03a 	or	r3,r3,r2
  8056c4:	e0bffe17 	ldw	r2,-8(fp)
  8056c8:	10c00215 	stw	r3,8(r2)
  8056cc:	00000206 	br	8056d8 <f_opendir+0x118>
  8056d0:	00800144 	movi	r2,5
  8056d4:	e0bffa15 	stw	r2,-24(fp)
  8056d8:	e0bffa17 	ldw	r2,-24(fp)
  8056dc:	1000091e 	bne	r2,zero,805704 <f_opendir+0x144>
  8056e0:	e0bffe17 	ldw	r2,-8(fp)
  8056e4:	10800017 	ldw	r2,0(r2)
  8056e8:	10c0018b 	ldhu	r3,6(r2)
  8056ec:	e0bffe17 	ldw	r2,-8(fp)
  8056f0:	10c0010d 	sth	r3,4(r2)
  8056f4:	e13ffe17 	ldw	r4,-8(fp)
  8056f8:	000b883a 	mov	r5,zero
  8056fc:	08023e40 	call	8023e4 <dir_sdi>
  805700:	e0bffa15 	stw	r2,-24(fp)
  805704:	e0bffa17 	ldw	r2,-24(fp)
  805708:	10800118 	cmpnei	r2,r2,4
  80570c:	1000021e 	bne	r2,zero,805718 <f_opendir+0x158>
  805710:	00800144 	movi	r2,5
  805714:	e0bffa15 	stw	r2,-24(fp)
  805718:	e0bffa17 	ldw	r2,-24(fp)
  80571c:	e037883a 	mov	sp,fp
  805720:	dfc00117 	ldw	ra,4(sp)
  805724:	df000017 	ldw	fp,0(sp)
  805728:	dec00204 	addi	sp,sp,8
  80572c:	f800283a 	ret

00805730 <f_readdir>:
  805730:	defff804 	addi	sp,sp,-32
  805734:	dfc00715 	stw	ra,28(sp)
  805738:	df000615 	stw	fp,24(sp)
  80573c:	df000604 	addi	fp,sp,24
  805740:	e13ffe15 	stw	r4,-8(fp)
  805744:	e17fff15 	stw	r5,-4(fp)
  805748:	e0bffe17 	ldw	r2,-8(fp)
  80574c:	10c00017 	ldw	r3,0(r2)
  805750:	e0bffe17 	ldw	r2,-8(fp)
  805754:	1080010b 	ldhu	r2,4(r2)
  805758:	10bfffcc 	andi	r2,r2,65535
  80575c:	1809883a 	mov	r4,r3
  805760:	100b883a 	mov	r5,r2
  805764:	0803dfc0 	call	803dfc <validate>
  805768:	e0bffa15 	stw	r2,-24(fp)
  80576c:	e0bffa17 	ldw	r2,-24(fp)
  805770:	1000221e 	bne	r2,zero,8057fc <f_readdir+0xcc>
  805774:	e0bfff17 	ldw	r2,-4(fp)
  805778:	1000051e 	bne	r2,zero,805790 <f_readdir+0x60>
  80577c:	e13ffe17 	ldw	r4,-8(fp)
  805780:	000b883a 	mov	r5,zero
  805784:	08023e40 	call	8023e4 <dir_sdi>
  805788:	e0bffa15 	stw	r2,-24(fp)
  80578c:	00001b06 	br	8057fc <f_readdir+0xcc>
  805790:	e0bffe17 	ldw	r2,-8(fp)
  805794:	e0fffb04 	addi	r3,fp,-20
  805798:	10c00615 	stw	r3,24(r2)
  80579c:	e13ffe17 	ldw	r4,-8(fp)
  8057a0:	08029ac0 	call	8029ac <dir_read>
  8057a4:	e0bffa15 	stw	r2,-24(fp)
  8057a8:	e0bffa17 	ldw	r2,-24(fp)
  8057ac:	10800118 	cmpnei	r2,r2,4
  8057b0:	1000031e 	bne	r2,zero,8057c0 <f_readdir+0x90>
  8057b4:	e0bffe17 	ldw	r2,-8(fp)
  8057b8:	10000415 	stw	zero,16(r2)
  8057bc:	e03ffa15 	stw	zero,-24(fp)
  8057c0:	e0bffa17 	ldw	r2,-24(fp)
  8057c4:	10000d1e 	bne	r2,zero,8057fc <f_readdir+0xcc>
  8057c8:	e13ffe17 	ldw	r4,-8(fp)
  8057cc:	e17fff17 	ldw	r5,-4(fp)
  8057d0:	0802f4c0 	call	802f4c <get_fileinfo>
  8057d4:	e13ffe17 	ldw	r4,-8(fp)
  8057d8:	000b883a 	mov	r5,zero
  8057dc:	08025d00 	call	8025d0 <dir_next>
  8057e0:	e0bffa15 	stw	r2,-24(fp)
  8057e4:	e0bffa17 	ldw	r2,-24(fp)
  8057e8:	10800118 	cmpnei	r2,r2,4
  8057ec:	1000031e 	bne	r2,zero,8057fc <f_readdir+0xcc>
  8057f0:	e0bffe17 	ldw	r2,-8(fp)
  8057f4:	10000415 	stw	zero,16(r2)
  8057f8:	e03ffa15 	stw	zero,-24(fp)
  8057fc:	e0bffa17 	ldw	r2,-24(fp)
  805800:	e037883a 	mov	sp,fp
  805804:	dfc00117 	ldw	ra,4(sp)
  805808:	df000017 	ldw	fp,0(sp)
  80580c:	dec00204 	addi	sp,sp,8
  805810:	f800283a 	ret

00805814 <f_stat>:
  805814:	defff104 	addi	sp,sp,-60
  805818:	dfc00e15 	stw	ra,56(sp)
  80581c:	df000d15 	stw	fp,52(sp)
  805820:	df000d04 	addi	fp,sp,52
  805824:	e13ffe15 	stw	r4,-8(fp)
  805828:	e17fff15 	stw	r5,-4(fp)
  80582c:	e0fffe04 	addi	r3,fp,-8
  805830:	e0bff404 	addi	r2,fp,-48
  805834:	1809883a 	mov	r4,r3
  805838:	100b883a 	mov	r5,r2
  80583c:	000d883a 	mov	r6,zero
  805840:	08034c00 	call	8034c0 <chk_mounted>
  805844:	e0bff315 	stw	r2,-52(fp)
  805848:	e0bff317 	ldw	r2,-52(fp)
  80584c:	1000131e 	bne	r2,zero,80589c <f_stat+0x88>
  805850:	e0bffb04 	addi	r2,fp,-20
  805854:	e0bffa15 	stw	r2,-24(fp)
  805858:	e0bffe17 	ldw	r2,-8(fp)
  80585c:	e0fff404 	addi	r3,fp,-48
  805860:	1809883a 	mov	r4,r3
  805864:	100b883a 	mov	r5,r2
  805868:	080317c0 	call	80317c <follow_path>
  80586c:	e0bff315 	stw	r2,-52(fp)
  805870:	e0bff317 	ldw	r2,-52(fp)
  805874:	1000091e 	bne	r2,zero,80589c <f_stat+0x88>
  805878:	e0bff917 	ldw	r2,-28(fp)
  80587c:	10000526 	beq	r2,zero,805894 <f_stat+0x80>
  805880:	e0bff404 	addi	r2,fp,-48
  805884:	1009883a 	mov	r4,r2
  805888:	e17fff17 	ldw	r5,-4(fp)
  80588c:	0802f4c0 	call	802f4c <get_fileinfo>
  805890:	00000206 	br	80589c <f_stat+0x88>
  805894:	00800184 	movi	r2,6
  805898:	e0bff315 	stw	r2,-52(fp)
  80589c:	e0bff317 	ldw	r2,-52(fp)
  8058a0:	e037883a 	mov	sp,fp
  8058a4:	dfc00117 	ldw	ra,4(sp)
  8058a8:	df000017 	ldw	fp,0(sp)
  8058ac:	dec00204 	addi	sp,sp,8
  8058b0:	f800283a 	ret

008058b4 <f_getfree>:
  8058b4:	defff304 	addi	sp,sp,-52
  8058b8:	dfc00c15 	stw	ra,48(sp)
  8058bc:	df000b15 	stw	fp,44(sp)
  8058c0:	df000b04 	addi	fp,sp,44
  8058c4:	e13ffd15 	stw	r4,-12(fp)
  8058c8:	e17ffe15 	stw	r5,-8(fp)
  8058cc:	e1bfff15 	stw	r6,-4(fp)
  8058d0:	e0bffd04 	addi	r2,fp,-12
  8058d4:	1009883a 	mov	r4,r2
  8058d8:	e17fff17 	ldw	r5,-4(fp)
  8058dc:	000d883a 	mov	r6,zero
  8058e0:	08034c00 	call	8034c0 <chk_mounted>
  8058e4:	e0bff515 	stw	r2,-44(fp)
  8058e8:	e0bff517 	ldw	r2,-44(fp)
  8058ec:	1000a61e 	bne	r2,zero,805b88 <f_getfree+0x2d4>
  8058f0:	e0bfff17 	ldw	r2,-4(fp)
  8058f4:	10800017 	ldw	r2,0(r2)
  8058f8:	10800417 	ldw	r2,16(r2)
  8058fc:	e0ffff17 	ldw	r3,-4(fp)
  805900:	18c00017 	ldw	r3,0(r3)
  805904:	18c00617 	ldw	r3,24(r3)
  805908:	18ffff84 	addi	r3,r3,-2
  80590c:	18800636 	bltu	r3,r2,805928 <f_getfree+0x74>
  805910:	e0bfff17 	ldw	r2,-4(fp)
  805914:	10800017 	ldw	r2,0(r2)
  805918:	10c00417 	ldw	r3,16(r2)
  80591c:	e0bffe17 	ldw	r2,-8(fp)
  805920:	10c00015 	stw	r3,0(r2)
  805924:	00009806 	br	805b88 <f_getfree+0x2d4>
  805928:	e0bfff17 	ldw	r2,-4(fp)
  80592c:	10800017 	ldw	r2,0(r2)
  805930:	10800003 	ldbu	r2,0(r2)
  805934:	e0bffb05 	stb	r2,-20(fp)
  805938:	e03ff615 	stw	zero,-40(fp)
  80593c:	e0bffb03 	ldbu	r2,-20(fp)
  805940:	10800058 	cmpnei	r2,r2,1
  805944:	1000231e 	bne	r2,zero,8059d4 <f_getfree+0x120>
  805948:	00800084 	movi	r2,2
  80594c:	e0bff715 	stw	r2,-36(fp)
  805950:	e0bfff17 	ldw	r2,-4(fp)
  805954:	10800017 	ldw	r2,0(r2)
  805958:	1009883a 	mov	r4,r2
  80595c:	e17ff717 	ldw	r5,-36(fp)
  805960:	0801af80 	call	801af8 <get_fat>
  805964:	e0bffc15 	stw	r2,-16(fp)
  805968:	e0bffc17 	ldw	r2,-16(fp)
  80596c:	10bfffd8 	cmpnei	r2,r2,-1
  805970:	1000031e 	bne	r2,zero,805980 <f_getfree+0xcc>
  805974:	00800044 	movi	r2,1
  805978:	e0bff515 	stw	r2,-44(fp)
  80597c:	00001406 	br	8059d0 <f_getfree+0x11c>
  805980:	e0bffc17 	ldw	r2,-16(fp)
  805984:	10800058 	cmpnei	r2,r2,1
  805988:	1000031e 	bne	r2,zero,805998 <f_getfree+0xe4>
  80598c:	00800084 	movi	r2,2
  805990:	e0bff515 	stw	r2,-44(fp)
  805994:	00000e06 	br	8059d0 <f_getfree+0x11c>
  805998:	e0bffc17 	ldw	r2,-16(fp)
  80599c:	1000031e 	bne	r2,zero,8059ac <f_getfree+0xf8>
  8059a0:	e0bff617 	ldw	r2,-40(fp)
  8059a4:	10800044 	addi	r2,r2,1
  8059a8:	e0bff615 	stw	r2,-40(fp)
  8059ac:	e0bff717 	ldw	r2,-36(fp)
  8059b0:	10800044 	addi	r2,r2,1
  8059b4:	e0bff715 	stw	r2,-36(fp)
  8059b8:	e0bfff17 	ldw	r2,-4(fp)
  8059bc:	10800017 	ldw	r2,0(r2)
  8059c0:	10800617 	ldw	r2,24(r2)
  8059c4:	e0fff717 	ldw	r3,-36(fp)
  8059c8:	18bfe136 	bltu	r3,r2,805950 <__alt_data_end+0xff805950>
  8059cc:	00006006 	br	805b50 <f_getfree+0x29c>
  8059d0:	00005f06 	br	805b50 <f_getfree+0x29c>
  8059d4:	e0bfff17 	ldw	r2,-4(fp)
  8059d8:	10800017 	ldw	r2,0(r2)
  8059dc:	10800617 	ldw	r2,24(r2)
  8059e0:	e0bff715 	stw	r2,-36(fp)
  8059e4:	e0bfff17 	ldw	r2,-4(fp)
  8059e8:	10800017 	ldw	r2,0(r2)
  8059ec:	10800817 	ldw	r2,32(r2)
  8059f0:	e0bff815 	stw	r2,-32(fp)
  8059f4:	e03ff915 	stw	zero,-28(fp)
  8059f8:	e03ffa15 	stw	zero,-24(fp)
  8059fc:	e0bff917 	ldw	r2,-28(fp)
  805a00:	1000111e 	bne	r2,zero,805a48 <f_getfree+0x194>
  805a04:	e0bfff17 	ldw	r2,-4(fp)
  805a08:	11000017 	ldw	r4,0(r2)
  805a0c:	e0bff817 	ldw	r2,-32(fp)
  805a10:	10c00044 	addi	r3,r2,1
  805a14:	e0fff815 	stw	r3,-32(fp)
  805a18:	100b883a 	mov	r5,r2
  805a1c:	08017140 	call	801714 <move_window>
  805a20:	e0bff515 	stw	r2,-44(fp)
  805a24:	e0bff517 	ldw	r2,-44(fp)
  805a28:	10000126 	beq	r2,zero,805a30 <f_getfree+0x17c>
  805a2c:	00004806 	br	805b50 <f_getfree+0x29c>
  805a30:	e0bfff17 	ldw	r2,-4(fp)
  805a34:	10800017 	ldw	r2,0(r2)
  805a38:	10800c04 	addi	r2,r2,48
  805a3c:	e0bffa15 	stw	r2,-24(fp)
  805a40:	00808004 	movi	r2,512
  805a44:	e0bff915 	stw	r2,-28(fp)
  805a48:	e0bffb03 	ldbu	r2,-20(fp)
  805a4c:	10800098 	cmpnei	r2,r2,2
  805a50:	1000181e 	bne	r2,zero,805ab4 <f_getfree+0x200>
  805a54:	e0bffa17 	ldw	r2,-24(fp)
  805a58:	10800044 	addi	r2,r2,1
  805a5c:	10800003 	ldbu	r2,0(r2)
  805a60:	10803fcc 	andi	r2,r2,255
  805a64:	1004923a 	slli	r2,r2,8
  805a68:	1007883a 	mov	r3,r2
  805a6c:	e0bffa17 	ldw	r2,-24(fp)
  805a70:	10800003 	ldbu	r2,0(r2)
  805a74:	10803fcc 	andi	r2,r2,255
  805a78:	1884b03a 	or	r2,r3,r2
  805a7c:	10bfffcc 	andi	r2,r2,65535
  805a80:	10a0001c 	xori	r2,r2,32768
  805a84:	10a00004 	addi	r2,r2,-32768
  805a88:	1000031e 	bne	r2,zero,805a98 <f_getfree+0x1e4>
  805a8c:	e0bff617 	ldw	r2,-40(fp)
  805a90:	10800044 	addi	r2,r2,1
  805a94:	e0bff615 	stw	r2,-40(fp)
  805a98:	e0bffa17 	ldw	r2,-24(fp)
  805a9c:	10800084 	addi	r2,r2,2
  805aa0:	e0bffa15 	stw	r2,-24(fp)
  805aa4:	e0bff917 	ldw	r2,-28(fp)
  805aa8:	10bfff84 	addi	r2,r2,-2
  805aac:	e0bff915 	stw	r2,-28(fp)
  805ab0:	00002206 	br	805b3c <f_getfree+0x288>
  805ab4:	e0bffa17 	ldw	r2,-24(fp)
  805ab8:	108000c4 	addi	r2,r2,3
  805abc:	10800003 	ldbu	r2,0(r2)
  805ac0:	10803fcc 	andi	r2,r2,255
  805ac4:	1006963a 	slli	r3,r2,24
  805ac8:	e0bffa17 	ldw	r2,-24(fp)
  805acc:	10800084 	addi	r2,r2,2
  805ad0:	10800003 	ldbu	r2,0(r2)
  805ad4:	10803fcc 	andi	r2,r2,255
  805ad8:	1004943a 	slli	r2,r2,16
  805adc:	1884b03a 	or	r2,r3,r2
  805ae0:	e0fffa17 	ldw	r3,-24(fp)
  805ae4:	18c00044 	addi	r3,r3,1
  805ae8:	18c00003 	ldbu	r3,0(r3)
  805aec:	18c03fcc 	andi	r3,r3,255
  805af0:	1806923a 	slli	r3,r3,8
  805af4:	10c6b03a 	or	r3,r2,r3
  805af8:	e0bffa17 	ldw	r2,-24(fp)
  805afc:	10800003 	ldbu	r2,0(r2)
  805b00:	10803fcc 	andi	r2,r2,255
  805b04:	1886b03a 	or	r3,r3,r2
  805b08:	00840034 	movhi	r2,4096
  805b0c:	10bfffc4 	addi	r2,r2,-1
  805b10:	1884703a 	and	r2,r3,r2
  805b14:	1000031e 	bne	r2,zero,805b24 <f_getfree+0x270>
  805b18:	e0bff617 	ldw	r2,-40(fp)
  805b1c:	10800044 	addi	r2,r2,1
  805b20:	e0bff615 	stw	r2,-40(fp)
  805b24:	e0bffa17 	ldw	r2,-24(fp)
  805b28:	10800104 	addi	r2,r2,4
  805b2c:	e0bffa15 	stw	r2,-24(fp)
  805b30:	e0bff917 	ldw	r2,-28(fp)
  805b34:	10bfff04 	addi	r2,r2,-4
  805b38:	e0bff915 	stw	r2,-28(fp)
  805b3c:	e0bff717 	ldw	r2,-36(fp)
  805b40:	10bfffc4 	addi	r2,r2,-1
  805b44:	e0bff715 	stw	r2,-36(fp)
  805b48:	e0bff717 	ldw	r2,-36(fp)
  805b4c:	103fab1e 	bne	r2,zero,8059fc <__alt_data_end+0xff8059fc>
  805b50:	e0bfff17 	ldw	r2,-4(fp)
  805b54:	10800017 	ldw	r2,0(r2)
  805b58:	e0fff617 	ldw	r3,-40(fp)
  805b5c:	10c00415 	stw	r3,16(r2)
  805b60:	e0bffb03 	ldbu	r2,-20(fp)
  805b64:	108000d8 	cmpnei	r2,r2,3
  805b68:	1000041e 	bne	r2,zero,805b7c <f_getfree+0x2c8>
  805b6c:	e0bfff17 	ldw	r2,-4(fp)
  805b70:	10800017 	ldw	r2,0(r2)
  805b74:	00c00044 	movi	r3,1
  805b78:	10c00145 	stb	r3,5(r2)
  805b7c:	e0bffe17 	ldw	r2,-8(fp)
  805b80:	e0fff617 	ldw	r3,-40(fp)
  805b84:	10c00015 	stw	r3,0(r2)
  805b88:	e0bff517 	ldw	r2,-44(fp)
  805b8c:	e037883a 	mov	sp,fp
  805b90:	dfc00117 	ldw	ra,4(sp)
  805b94:	df000017 	ldw	fp,0(sp)
  805b98:	dec00204 	addi	sp,sp,8
  805b9c:	f800283a 	ret

00805ba0 <f_truncate>:
  805ba0:	defffb04 	addi	sp,sp,-20
  805ba4:	dfc00415 	stw	ra,16(sp)
  805ba8:	df000315 	stw	fp,12(sp)
  805bac:	df000304 	addi	fp,sp,12
  805bb0:	e13fff15 	stw	r4,-4(fp)
  805bb4:	e0bfff17 	ldw	r2,-4(fp)
  805bb8:	10c00017 	ldw	r3,0(r2)
  805bbc:	e0bfff17 	ldw	r2,-4(fp)
  805bc0:	1080010b 	ldhu	r2,4(r2)
  805bc4:	10bfffcc 	andi	r2,r2,65535
  805bc8:	1809883a 	mov	r4,r3
  805bcc:	100b883a 	mov	r5,r2
  805bd0:	0803dfc0 	call	803dfc <validate>
  805bd4:	e0bffd15 	stw	r2,-12(fp)
  805bd8:	e0bffd17 	ldw	r2,-12(fp)
  805bdc:	1000101e 	bne	r2,zero,805c20 <f_truncate+0x80>
  805be0:	e0bfff17 	ldw	r2,-4(fp)
  805be4:	10800183 	ldbu	r2,6(r2)
  805be8:	10803fcc 	andi	r2,r2,255
  805bec:	1080201c 	xori	r2,r2,128
  805bf0:	10bfe004 	addi	r2,r2,-128
  805bf4:	1000030e 	bge	r2,zero,805c04 <f_truncate+0x64>
  805bf8:	00800084 	movi	r2,2
  805bfc:	e0bffd15 	stw	r2,-12(fp)
  805c00:	00000706 	br	805c20 <f_truncate+0x80>
  805c04:	e0bfff17 	ldw	r2,-4(fp)
  805c08:	10800183 	ldbu	r2,6(r2)
  805c0c:	10803fcc 	andi	r2,r2,255
  805c10:	1080008c 	andi	r2,r2,2
  805c14:	1000021e 	bne	r2,zero,805c20 <f_truncate+0x80>
  805c18:	008001c4 	movi	r2,7
  805c1c:	e0bffd15 	stw	r2,-12(fp)
  805c20:	e0bffd17 	ldw	r2,-12(fp)
  805c24:	1000521e 	bne	r2,zero,805d70 <f_truncate+0x1d0>
  805c28:	e0bfff17 	ldw	r2,-4(fp)
  805c2c:	10800317 	ldw	r2,12(r2)
  805c30:	e0ffff17 	ldw	r3,-4(fp)
  805c34:	18c00217 	ldw	r3,8(r3)
  805c38:	1880442e 	bgeu	r3,r2,805d4c <f_truncate+0x1ac>
  805c3c:	e0bfff17 	ldw	r2,-4(fp)
  805c40:	10c00217 	ldw	r3,8(r2)
  805c44:	e0bfff17 	ldw	r2,-4(fp)
  805c48:	10c00315 	stw	r3,12(r2)
  805c4c:	e0bfff17 	ldw	r2,-4(fp)
  805c50:	10800183 	ldbu	r2,6(r2)
  805c54:	10800814 	ori	r2,r2,32
  805c58:	1007883a 	mov	r3,r2
  805c5c:	e0bfff17 	ldw	r2,-4(fp)
  805c60:	10c00185 	stb	r3,6(r2)
  805c64:	e0bfff17 	ldw	r2,-4(fp)
  805c68:	10800217 	ldw	r2,8(r2)
  805c6c:	10000b1e 	bne	r2,zero,805c9c <f_truncate+0xfc>
  805c70:	e0bfff17 	ldw	r2,-4(fp)
  805c74:	10c00017 	ldw	r3,0(r2)
  805c78:	e0bfff17 	ldw	r2,-4(fp)
  805c7c:	10800417 	ldw	r2,16(r2)
  805c80:	1809883a 	mov	r4,r3
  805c84:	100b883a 	mov	r5,r2
  805c88:	08020ec0 	call	8020ec <remove_chain>
  805c8c:	e0bffd15 	stw	r2,-12(fp)
  805c90:	e0bfff17 	ldw	r2,-4(fp)
  805c94:	10000415 	stw	zero,16(r2)
  805c98:	00002c06 	br	805d4c <f_truncate+0x1ac>
  805c9c:	e0bfff17 	ldw	r2,-4(fp)
  805ca0:	10c00017 	ldw	r3,0(r2)
  805ca4:	e0bfff17 	ldw	r2,-4(fp)
  805ca8:	10800517 	ldw	r2,20(r2)
  805cac:	1809883a 	mov	r4,r3
  805cb0:	100b883a 	mov	r5,r2
  805cb4:	0801af80 	call	801af8 <get_fat>
  805cb8:	e0bffe15 	stw	r2,-8(fp)
  805cbc:	e03ffd15 	stw	zero,-12(fp)
  805cc0:	e0bffe17 	ldw	r2,-8(fp)
  805cc4:	10bfffd8 	cmpnei	r2,r2,-1
  805cc8:	1000021e 	bne	r2,zero,805cd4 <f_truncate+0x134>
  805ccc:	00800044 	movi	r2,1
  805cd0:	e0bffd15 	stw	r2,-12(fp)
  805cd4:	e0bffe17 	ldw	r2,-8(fp)
  805cd8:	10800058 	cmpnei	r2,r2,1
  805cdc:	1000021e 	bne	r2,zero,805ce8 <f_truncate+0x148>
  805ce0:	00800084 	movi	r2,2
  805ce4:	e0bffd15 	stw	r2,-12(fp)
  805ce8:	e0bffd17 	ldw	r2,-12(fp)
  805cec:	1000171e 	bne	r2,zero,805d4c <f_truncate+0x1ac>
  805cf0:	e0bfff17 	ldw	r2,-4(fp)
  805cf4:	10800017 	ldw	r2,0(r2)
  805cf8:	10800617 	ldw	r2,24(r2)
  805cfc:	e0fffe17 	ldw	r3,-8(fp)
  805d00:	1880122e 	bgeu	r3,r2,805d4c <f_truncate+0x1ac>
  805d04:	e0bfff17 	ldw	r2,-4(fp)
  805d08:	10c00017 	ldw	r3,0(r2)
  805d0c:	e0bfff17 	ldw	r2,-4(fp)
  805d10:	10800517 	ldw	r2,20(r2)
  805d14:	1809883a 	mov	r4,r3
  805d18:	100b883a 	mov	r5,r2
  805d1c:	01840034 	movhi	r6,4096
  805d20:	31bfffc4 	addi	r6,r6,-1
  805d24:	0801d7c0 	call	801d7c <put_fat>
  805d28:	e0bffd15 	stw	r2,-12(fp)
  805d2c:	e0bffd17 	ldw	r2,-12(fp)
  805d30:	1000061e 	bne	r2,zero,805d4c <f_truncate+0x1ac>
  805d34:	e0bfff17 	ldw	r2,-4(fp)
  805d38:	10800017 	ldw	r2,0(r2)
  805d3c:	1009883a 	mov	r4,r2
  805d40:	e17ffe17 	ldw	r5,-8(fp)
  805d44:	08020ec0 	call	8020ec <remove_chain>
  805d48:	e0bffd15 	stw	r2,-12(fp)
  805d4c:	e0bffd17 	ldw	r2,-12(fp)
  805d50:	10000726 	beq	r2,zero,805d70 <f_truncate+0x1d0>
  805d54:	e0bfff17 	ldw	r2,-4(fp)
  805d58:	10c00183 	ldbu	r3,6(r2)
  805d5c:	00bfe004 	movi	r2,-128
  805d60:	1884b03a 	or	r2,r3,r2
  805d64:	1007883a 	mov	r3,r2
  805d68:	e0bfff17 	ldw	r2,-4(fp)
  805d6c:	10c00185 	stb	r3,6(r2)
  805d70:	e0bffd17 	ldw	r2,-12(fp)
  805d74:	e037883a 	mov	sp,fp
  805d78:	dfc00117 	ldw	ra,4(sp)
  805d7c:	df000017 	ldw	fp,0(sp)
  805d80:	dec00204 	addi	sp,sp,8
  805d84:	f800283a 	ret

00805d88 <f_unlink>:
  805d88:	deffe904 	addi	sp,sp,-92
  805d8c:	dfc01615 	stw	ra,88(sp)
  805d90:	df001515 	stw	fp,84(sp)
  805d94:	df001504 	addi	fp,sp,84
  805d98:	e13fff15 	stw	r4,-4(fp)
  805d9c:	e0ffff04 	addi	r3,fp,-4
  805da0:	e0bfee04 	addi	r2,fp,-72
  805da4:	1809883a 	mov	r4,r3
  805da8:	100b883a 	mov	r5,r2
  805dac:	01800044 	movi	r6,1
  805db0:	08034c00 	call	8034c0 <chk_mounted>
  805db4:	e0bfeb15 	stw	r2,-84(fp)
  805db8:	e0bfeb17 	ldw	r2,-84(fp)
  805dbc:	1000721e 	bne	r2,zero,805f88 <f_unlink+0x200>
  805dc0:	e0bffc04 	addi	r2,fp,-16
  805dc4:	e0bff415 	stw	r2,-48(fp)
  805dc8:	e0bfff17 	ldw	r2,-4(fp)
  805dcc:	e0ffee04 	addi	r3,fp,-72
  805dd0:	1809883a 	mov	r4,r3
  805dd4:	100b883a 	mov	r5,r2
  805dd8:	080317c0 	call	80317c <follow_path>
  805ddc:	e0bfeb15 	stw	r2,-84(fp)
  805de0:	e0bfeb17 	ldw	r2,-84(fp)
  805de4:	1000681e 	bne	r2,zero,805f88 <f_unlink+0x200>
  805de8:	e0bff317 	ldw	r2,-52(fp)
  805dec:	e0bfec15 	stw	r2,-80(fp)
  805df0:	e0bfec17 	ldw	r2,-80(fp)
  805df4:	1000031e 	bne	r2,zero,805e04 <f_unlink+0x7c>
  805df8:	00800184 	movi	r2,6
  805dfc:	e0bfeb15 	stw	r2,-84(fp)
  805e00:	00000806 	br	805e24 <f_unlink+0x9c>
  805e04:	e0bfec17 	ldw	r2,-80(fp)
  805e08:	108002c4 	addi	r2,r2,11
  805e0c:	10800003 	ldbu	r2,0(r2)
  805e10:	10803fcc 	andi	r2,r2,255
  805e14:	1080004c 	andi	r2,r2,1
  805e18:	10000226 	beq	r2,zero,805e24 <f_unlink+0x9c>
  805e1c:	008001c4 	movi	r2,7
  805e20:	e0bfeb15 	stw	r2,-84(fp)
  805e24:	e0bfec17 	ldw	r2,-80(fp)
  805e28:	10800544 	addi	r2,r2,21
  805e2c:	10800003 	ldbu	r2,0(r2)
  805e30:	10803fcc 	andi	r2,r2,255
  805e34:	1004923a 	slli	r2,r2,8
  805e38:	1007883a 	mov	r3,r2
  805e3c:	e0bfec17 	ldw	r2,-80(fp)
  805e40:	10800504 	addi	r2,r2,20
  805e44:	10800003 	ldbu	r2,0(r2)
  805e48:	10803fcc 	andi	r2,r2,255
  805e4c:	1884b03a 	or	r2,r3,r2
  805e50:	10bfffcc 	andi	r2,r2,65535
  805e54:	1006943a 	slli	r3,r2,16
  805e58:	e0bfec17 	ldw	r2,-80(fp)
  805e5c:	108006c4 	addi	r2,r2,27
  805e60:	10800003 	ldbu	r2,0(r2)
  805e64:	10803fcc 	andi	r2,r2,255
  805e68:	1004923a 	slli	r2,r2,8
  805e6c:	1009883a 	mov	r4,r2
  805e70:	e0bfec17 	ldw	r2,-80(fp)
  805e74:	10800684 	addi	r2,r2,26
  805e78:	10800003 	ldbu	r2,0(r2)
  805e7c:	10803fcc 	andi	r2,r2,255
  805e80:	2084b03a 	or	r2,r4,r2
  805e84:	10bfffcc 	andi	r2,r2,65535
  805e88:	1884b03a 	or	r2,r3,r2
  805e8c:	e0bfed15 	stw	r2,-76(fp)
  805e90:	e0bfeb17 	ldw	r2,-84(fp)
  805e94:	1000271e 	bne	r2,zero,805f34 <f_unlink+0x1ac>
  805e98:	e0bfec17 	ldw	r2,-80(fp)
  805e9c:	108002c4 	addi	r2,r2,11
  805ea0:	10800003 	ldbu	r2,0(r2)
  805ea4:	10803fcc 	andi	r2,r2,255
  805ea8:	1080040c 	andi	r2,r2,16
  805eac:	10002126 	beq	r2,zero,805f34 <f_unlink+0x1ac>
  805eb0:	e0bfed17 	ldw	r2,-76(fp)
  805eb4:	108000a8 	cmpgeui	r2,r2,2
  805eb8:	1000031e 	bne	r2,zero,805ec8 <f_unlink+0x140>
  805ebc:	00800084 	movi	r2,2
  805ec0:	e0bfeb15 	stw	r2,-84(fp)
  805ec4:	00001b06 	br	805f34 <f_unlink+0x1ac>
  805ec8:	e0fff504 	addi	r3,fp,-44
  805ecc:	e0bfee04 	addi	r2,fp,-72
  805ed0:	1809883a 	mov	r4,r3
  805ed4:	100b883a 	mov	r5,r2
  805ed8:	01800704 	movi	r6,28
  805edc:	08015480 	call	801548 <mem_cpy>
  805ee0:	e0bfed17 	ldw	r2,-76(fp)
  805ee4:	e0bff715 	stw	r2,-36(fp)
  805ee8:	e0bff504 	addi	r2,fp,-44
  805eec:	1009883a 	mov	r4,r2
  805ef0:	01400084 	movi	r5,2
  805ef4:	08023e40 	call	8023e4 <dir_sdi>
  805ef8:	e0bfeb15 	stw	r2,-84(fp)
  805efc:	e0bfeb17 	ldw	r2,-84(fp)
  805f00:	10000c1e 	bne	r2,zero,805f34 <f_unlink+0x1ac>
  805f04:	e0bff504 	addi	r2,fp,-44
  805f08:	1009883a 	mov	r4,r2
  805f0c:	08029ac0 	call	8029ac <dir_read>
  805f10:	e0bfeb15 	stw	r2,-84(fp)
  805f14:	e0bfeb17 	ldw	r2,-84(fp)
  805f18:	1000021e 	bne	r2,zero,805f24 <f_unlink+0x19c>
  805f1c:	008001c4 	movi	r2,7
  805f20:	e0bfeb15 	stw	r2,-84(fp)
  805f24:	e0bfeb17 	ldw	r2,-84(fp)
  805f28:	10800118 	cmpnei	r2,r2,4
  805f2c:	1000011e 	bne	r2,zero,805f34 <f_unlink+0x1ac>
  805f30:	e03feb15 	stw	zero,-84(fp)
  805f34:	e0bfeb17 	ldw	r2,-84(fp)
  805f38:	1000131e 	bne	r2,zero,805f88 <f_unlink+0x200>
  805f3c:	e0bfee04 	addi	r2,fp,-72
  805f40:	1009883a 	mov	r4,r2
  805f44:	0802bc80 	call	802bc8 <dir_remove>
  805f48:	e0bfeb15 	stw	r2,-84(fp)
  805f4c:	e0bfeb17 	ldw	r2,-84(fp)
  805f50:	10000d1e 	bne	r2,zero,805f88 <f_unlink+0x200>
  805f54:	e0bfed17 	ldw	r2,-76(fp)
  805f58:	10000526 	beq	r2,zero,805f70 <f_unlink+0x1e8>
  805f5c:	e0bfee17 	ldw	r2,-72(fp)
  805f60:	1009883a 	mov	r4,r2
  805f64:	e17fed17 	ldw	r5,-76(fp)
  805f68:	08020ec0 	call	8020ec <remove_chain>
  805f6c:	e0bfeb15 	stw	r2,-84(fp)
  805f70:	e0bfeb17 	ldw	r2,-84(fp)
  805f74:	1000041e 	bne	r2,zero,805f88 <f_unlink+0x200>
  805f78:	e0bfee17 	ldw	r2,-72(fp)
  805f7c:	1009883a 	mov	r4,r2
  805f80:	08018700 	call	801870 <sync>
  805f84:	e0bfeb15 	stw	r2,-84(fp)
  805f88:	e0bfeb17 	ldw	r2,-84(fp)
  805f8c:	e037883a 	mov	sp,fp
  805f90:	dfc00117 	ldw	ra,4(sp)
  805f94:	df000017 	ldw	fp,0(sp)
  805f98:	dec00204 	addi	sp,sp,8
  805f9c:	f800283a 	ret

00805fa0 <f_mkdir>:
  805fa0:	deffec04 	addi	sp,sp,-80
  805fa4:	dfc01315 	stw	ra,76(sp)
  805fa8:	df001215 	stw	fp,72(sp)
  805fac:	df001204 	addi	fp,sp,72
  805fb0:	e13fff15 	stw	r4,-4(fp)
  805fb4:	080151c0 	call	80151c <get_fattime>
  805fb8:	e0bff215 	stw	r2,-56(fp)
  805fbc:	e0ffff04 	addi	r3,fp,-4
  805fc0:	e0bff504 	addi	r2,fp,-44
  805fc4:	1809883a 	mov	r4,r3
  805fc8:	100b883a 	mov	r5,r2
  805fcc:	01800044 	movi	r6,1
  805fd0:	08034c00 	call	8034c0 <chk_mounted>
  805fd4:	e0bfee15 	stw	r2,-72(fp)
  805fd8:	e0bfee17 	ldw	r2,-72(fp)
  805fdc:	1000fa1e 	bne	r2,zero,8063c8 <f_mkdir+0x428>
  805fe0:	e0bffc04 	addi	r2,fp,-16
  805fe4:	e0bffb15 	stw	r2,-20(fp)
  805fe8:	e0bfff17 	ldw	r2,-4(fp)
  805fec:	e0fff504 	addi	r3,fp,-44
  805ff0:	1809883a 	mov	r4,r3
  805ff4:	100b883a 	mov	r5,r2
  805ff8:	080317c0 	call	80317c <follow_path>
  805ffc:	e0bfee15 	stw	r2,-72(fp)
  806000:	e0bfee17 	ldw	r2,-72(fp)
  806004:	1000021e 	bne	r2,zero,806010 <f_mkdir+0x70>
  806008:	00800204 	movi	r2,8
  80600c:	e0bfee15 	stw	r2,-72(fp)
  806010:	e0bfee17 	ldw	r2,-72(fp)
  806014:	10800118 	cmpnei	r2,r2,4
  806018:	1000eb1e 	bne	r2,zero,8063c8 <f_mkdir+0x428>
  80601c:	e0bff517 	ldw	r2,-44(fp)
  806020:	1009883a 	mov	r4,r2
  806024:	000b883a 	mov	r5,zero
  806028:	08022000 	call	802200 <create_chain>
  80602c:	e0bff315 	stw	r2,-52(fp)
  806030:	e03fee15 	stw	zero,-72(fp)
  806034:	e0bff317 	ldw	r2,-52(fp)
  806038:	1000021e 	bne	r2,zero,806044 <f_mkdir+0xa4>
  80603c:	008001c4 	movi	r2,7
  806040:	e0bfee15 	stw	r2,-72(fp)
  806044:	e0bff317 	ldw	r2,-52(fp)
  806048:	10800058 	cmpnei	r2,r2,1
  80604c:	1000021e 	bne	r2,zero,806058 <f_mkdir+0xb8>
  806050:	00800084 	movi	r2,2
  806054:	e0bfee15 	stw	r2,-72(fp)
  806058:	e0bff317 	ldw	r2,-52(fp)
  80605c:	10bfffd8 	cmpnei	r2,r2,-1
  806060:	1000021e 	bne	r2,zero,80606c <f_mkdir+0xcc>
  806064:	00800044 	movi	r2,1
  806068:	e0bfee15 	stw	r2,-72(fp)
  80606c:	e0bfee17 	ldw	r2,-72(fp)
  806070:	1000051e 	bne	r2,zero,806088 <f_mkdir+0xe8>
  806074:	e0bff517 	ldw	r2,-44(fp)
  806078:	1009883a 	mov	r4,r2
  80607c:	000b883a 	mov	r5,zero
  806080:	08017140 	call	801714 <move_window>
  806084:	e0bfee15 	stw	r2,-72(fp)
  806088:	e0bfee17 	ldw	r2,-72(fp)
  80608c:	10008a1e 	bne	r2,zero,8062b8 <f_mkdir+0x318>
  806090:	e0bff517 	ldw	r2,-44(fp)
  806094:	1009883a 	mov	r4,r2
  806098:	e17ff317 	ldw	r5,-52(fp)
  80609c:	0801a8c0 	call	801a8c <clust2sect>
  8060a0:	e0bff015 	stw	r2,-64(fp)
  8060a4:	e0bff517 	ldw	r2,-44(fp)
  8060a8:	10800c04 	addi	r2,r2,48
  8060ac:	e0bff415 	stw	r2,-48(fp)
  8060b0:	e13ff417 	ldw	r4,-48(fp)
  8060b4:	000b883a 	mov	r5,zero
  8060b8:	01808004 	movi	r6,512
  8060bc:	08015b40 	call	8015b4 <mem_set>
  8060c0:	e13ff417 	ldw	r4,-48(fp)
  8060c4:	01400804 	movi	r5,32
  8060c8:	018002c4 	movi	r6,11
  8060cc:	08015b40 	call	8015b4 <mem_set>
  8060d0:	e0bff417 	ldw	r2,-48(fp)
  8060d4:	00c00b84 	movi	r3,46
  8060d8:	10c00005 	stb	r3,0(r2)
  8060dc:	e0bff417 	ldw	r2,-48(fp)
  8060e0:	108002c4 	addi	r2,r2,11
  8060e4:	00c00404 	movi	r3,16
  8060e8:	10c00005 	stb	r3,0(r2)
  8060ec:	e0bff417 	ldw	r2,-48(fp)
  8060f0:	10800584 	addi	r2,r2,22
  8060f4:	e0fff217 	ldw	r3,-56(fp)
  8060f8:	10c00005 	stb	r3,0(r2)
  8060fc:	e0bff417 	ldw	r2,-48(fp)
  806100:	108005c4 	addi	r2,r2,23
  806104:	e0fff217 	ldw	r3,-56(fp)
  806108:	18ffffcc 	andi	r3,r3,65535
  80610c:	1806d23a 	srli	r3,r3,8
  806110:	10c00005 	stb	r3,0(r2)
  806114:	e0bff417 	ldw	r2,-48(fp)
  806118:	10800604 	addi	r2,r2,24
  80611c:	e0fff217 	ldw	r3,-56(fp)
  806120:	1806d43a 	srli	r3,r3,16
  806124:	10c00005 	stb	r3,0(r2)
  806128:	e0bff417 	ldw	r2,-48(fp)
  80612c:	10800644 	addi	r2,r2,25
  806130:	e0fff217 	ldw	r3,-56(fp)
  806134:	1806d63a 	srli	r3,r3,24
  806138:	10c00005 	stb	r3,0(r2)
  80613c:	e0bff417 	ldw	r2,-48(fp)
  806140:	10800684 	addi	r2,r2,26
  806144:	e0fff317 	ldw	r3,-52(fp)
  806148:	10c00005 	stb	r3,0(r2)
  80614c:	e0bff417 	ldw	r2,-48(fp)
  806150:	108006c4 	addi	r2,r2,27
  806154:	e0fff317 	ldw	r3,-52(fp)
  806158:	18ffffcc 	andi	r3,r3,65535
  80615c:	1806d23a 	srli	r3,r3,8
  806160:	10c00005 	stb	r3,0(r2)
  806164:	e0bff417 	ldw	r2,-48(fp)
  806168:	10800504 	addi	r2,r2,20
  80616c:	e0fff317 	ldw	r3,-52(fp)
  806170:	1806d43a 	srli	r3,r3,16
  806174:	10c00005 	stb	r3,0(r2)
  806178:	e0bff417 	ldw	r2,-48(fp)
  80617c:	10800544 	addi	r2,r2,21
  806180:	e0fff317 	ldw	r3,-52(fp)
  806184:	1806d43a 	srli	r3,r3,16
  806188:	18ffffcc 	andi	r3,r3,65535
  80618c:	1806d23a 	srli	r3,r3,8
  806190:	10c00005 	stb	r3,0(r2)
  806194:	e0bff417 	ldw	r2,-48(fp)
  806198:	10800804 	addi	r2,r2,32
  80619c:	1009883a 	mov	r4,r2
  8061a0:	e17ff417 	ldw	r5,-48(fp)
  8061a4:	01800804 	movi	r6,32
  8061a8:	08015480 	call	801548 <mem_cpy>
  8061ac:	e0bff417 	ldw	r2,-48(fp)
  8061b0:	10800844 	addi	r2,r2,33
  8061b4:	00c00b84 	movi	r3,46
  8061b8:	10c00005 	stb	r3,0(r2)
  8061bc:	e0bff717 	ldw	r2,-36(fp)
  8061c0:	e0bff115 	stw	r2,-60(fp)
  8061c4:	e0bff517 	ldw	r2,-44(fp)
  8061c8:	10800003 	ldbu	r2,0(r2)
  8061cc:	10803fcc 	andi	r2,r2,255
  8061d0:	108000d8 	cmpnei	r2,r2,3
  8061d4:	1000051e 	bne	r2,zero,8061ec <f_mkdir+0x24c>
  8061d8:	e0bff517 	ldw	r2,-44(fp)
  8061dc:	10c00917 	ldw	r3,36(r2)
  8061e0:	e0bff117 	ldw	r2,-60(fp)
  8061e4:	1880011e 	bne	r3,r2,8061ec <f_mkdir+0x24c>
  8061e8:	e03ff115 	stw	zero,-60(fp)
  8061ec:	e0bff417 	ldw	r2,-48(fp)
  8061f0:	10800e84 	addi	r2,r2,58
  8061f4:	e0fff117 	ldw	r3,-60(fp)
  8061f8:	10c00005 	stb	r3,0(r2)
  8061fc:	e0bff417 	ldw	r2,-48(fp)
  806200:	10800ec4 	addi	r2,r2,59
  806204:	e0fff117 	ldw	r3,-60(fp)
  806208:	18ffffcc 	andi	r3,r3,65535
  80620c:	1806d23a 	srli	r3,r3,8
  806210:	10c00005 	stb	r3,0(r2)
  806214:	e0bff417 	ldw	r2,-48(fp)
  806218:	10800d04 	addi	r2,r2,52
  80621c:	e0fff117 	ldw	r3,-60(fp)
  806220:	1806d43a 	srli	r3,r3,16
  806224:	10c00005 	stb	r3,0(r2)
  806228:	e0bff417 	ldw	r2,-48(fp)
  80622c:	10800d44 	addi	r2,r2,53
  806230:	e0fff117 	ldw	r3,-60(fp)
  806234:	1806d43a 	srli	r3,r3,16
  806238:	18ffffcc 	andi	r3,r3,65535
  80623c:	1806d23a 	srli	r3,r3,8
  806240:	10c00005 	stb	r3,0(r2)
  806244:	e0bff517 	ldw	r2,-44(fp)
  806248:	10800083 	ldbu	r2,2(r2)
  80624c:	e0bfef05 	stb	r2,-68(fp)
  806250:	00001706 	br	8062b0 <f_mkdir+0x310>
  806254:	e0fff517 	ldw	r3,-44(fp)
  806258:	e0bff017 	ldw	r2,-64(fp)
  80625c:	11000044 	addi	r4,r2,1
  806260:	e13ff015 	stw	r4,-64(fp)
  806264:	18800b15 	stw	r2,44(r3)
  806268:	e0bff517 	ldw	r2,-44(fp)
  80626c:	00c00044 	movi	r3,1
  806270:	10c00105 	stb	r3,4(r2)
  806274:	e0bff517 	ldw	r2,-44(fp)
  806278:	1009883a 	mov	r4,r2
  80627c:	000b883a 	mov	r5,zero
  806280:	08017140 	call	801714 <move_window>
  806284:	e0bfee15 	stw	r2,-72(fp)
  806288:	e0bfee17 	ldw	r2,-72(fp)
  80628c:	10000126 	beq	r2,zero,806294 <f_mkdir+0x2f4>
  806290:	00000906 	br	8062b8 <f_mkdir+0x318>
  806294:	e13ff417 	ldw	r4,-48(fp)
  806298:	000b883a 	mov	r5,zero
  80629c:	01808004 	movi	r6,512
  8062a0:	08015b40 	call	8015b4 <mem_set>
  8062a4:	e0bfef03 	ldbu	r2,-68(fp)
  8062a8:	10bfffc4 	addi	r2,r2,-1
  8062ac:	e0bfef05 	stb	r2,-68(fp)
  8062b0:	e0bfef03 	ldbu	r2,-68(fp)
  8062b4:	103fe71e 	bne	r2,zero,806254 <__alt_data_end+0xff806254>
  8062b8:	e0bfee17 	ldw	r2,-72(fp)
  8062bc:	1000041e 	bne	r2,zero,8062d0 <f_mkdir+0x330>
  8062c0:	e0bff504 	addi	r2,fp,-44
  8062c4:	1009883a 	mov	r4,r2
  8062c8:	0802aa80 	call	802aa8 <dir_register>
  8062cc:	e0bfee15 	stw	r2,-72(fp)
  8062d0:	e0bfee17 	ldw	r2,-72(fp)
  8062d4:	10000526 	beq	r2,zero,8062ec <f_mkdir+0x34c>
  8062d8:	e0bff517 	ldw	r2,-44(fp)
  8062dc:	1009883a 	mov	r4,r2
  8062e0:	e17ff317 	ldw	r5,-52(fp)
  8062e4:	08020ec0 	call	8020ec <remove_chain>
  8062e8:	00003706 	br	8063c8 <f_mkdir+0x428>
  8062ec:	e0bffa17 	ldw	r2,-24(fp)
  8062f0:	e0bff415 	stw	r2,-48(fp)
  8062f4:	e0bff417 	ldw	r2,-48(fp)
  8062f8:	108002c4 	addi	r2,r2,11
  8062fc:	00c00404 	movi	r3,16
  806300:	10c00005 	stb	r3,0(r2)
  806304:	e0bff417 	ldw	r2,-48(fp)
  806308:	10800584 	addi	r2,r2,22
  80630c:	e0fff217 	ldw	r3,-56(fp)
  806310:	10c00005 	stb	r3,0(r2)
  806314:	e0bff417 	ldw	r2,-48(fp)
  806318:	108005c4 	addi	r2,r2,23
  80631c:	e0fff217 	ldw	r3,-56(fp)
  806320:	18ffffcc 	andi	r3,r3,65535
  806324:	1806d23a 	srli	r3,r3,8
  806328:	10c00005 	stb	r3,0(r2)
  80632c:	e0bff417 	ldw	r2,-48(fp)
  806330:	10800604 	addi	r2,r2,24
  806334:	e0fff217 	ldw	r3,-56(fp)
  806338:	1806d43a 	srli	r3,r3,16
  80633c:	10c00005 	stb	r3,0(r2)
  806340:	e0bff417 	ldw	r2,-48(fp)
  806344:	10800644 	addi	r2,r2,25
  806348:	e0fff217 	ldw	r3,-56(fp)
  80634c:	1806d63a 	srli	r3,r3,24
  806350:	10c00005 	stb	r3,0(r2)
  806354:	e0bff417 	ldw	r2,-48(fp)
  806358:	10800684 	addi	r2,r2,26
  80635c:	e0fff317 	ldw	r3,-52(fp)
  806360:	10c00005 	stb	r3,0(r2)
  806364:	e0bff417 	ldw	r2,-48(fp)
  806368:	108006c4 	addi	r2,r2,27
  80636c:	e0fff317 	ldw	r3,-52(fp)
  806370:	18ffffcc 	andi	r3,r3,65535
  806374:	1806d23a 	srli	r3,r3,8
  806378:	10c00005 	stb	r3,0(r2)
  80637c:	e0bff417 	ldw	r2,-48(fp)
  806380:	10800504 	addi	r2,r2,20
  806384:	e0fff317 	ldw	r3,-52(fp)
  806388:	1806d43a 	srli	r3,r3,16
  80638c:	10c00005 	stb	r3,0(r2)
  806390:	e0bff417 	ldw	r2,-48(fp)
  806394:	10800544 	addi	r2,r2,21
  806398:	e0fff317 	ldw	r3,-52(fp)
  80639c:	1806d43a 	srli	r3,r3,16
  8063a0:	18ffffcc 	andi	r3,r3,65535
  8063a4:	1806d23a 	srli	r3,r3,8
  8063a8:	10c00005 	stb	r3,0(r2)
  8063ac:	e0bff517 	ldw	r2,-44(fp)
  8063b0:	00c00044 	movi	r3,1
  8063b4:	10c00105 	stb	r3,4(r2)
  8063b8:	e0bff517 	ldw	r2,-44(fp)
  8063bc:	1009883a 	mov	r4,r2
  8063c0:	08018700 	call	801870 <sync>
  8063c4:	e0bfee15 	stw	r2,-72(fp)
  8063c8:	e0bfee17 	ldw	r2,-72(fp)
  8063cc:	e037883a 	mov	sp,fp
  8063d0:	dfc00117 	ldw	ra,4(sp)
  8063d4:	df000017 	ldw	fp,0(sp)
  8063d8:	dec00204 	addi	sp,sp,8
  8063dc:	f800283a 	ret

008063e0 <f_chmod>:
  8063e0:	deffef04 	addi	sp,sp,-68
  8063e4:	dfc01015 	stw	ra,64(sp)
  8063e8:	df000f15 	stw	fp,60(sp)
  8063ec:	df000f04 	addi	fp,sp,60
  8063f0:	e13ffd15 	stw	r4,-12(fp)
  8063f4:	2807883a 	mov	r3,r5
  8063f8:	3005883a 	mov	r2,r6
  8063fc:	e0fffe05 	stb	r3,-8(fp)
  806400:	e0bfff05 	stb	r2,-4(fp)
  806404:	e0fffd04 	addi	r3,fp,-12
  806408:	e0bff304 	addi	r2,fp,-52
  80640c:	1809883a 	mov	r4,r3
  806410:	100b883a 	mov	r5,r2
  806414:	01800044 	movi	r6,1
  806418:	08034c00 	call	8034c0 <chk_mounted>
  80641c:	e0bff115 	stw	r2,-60(fp)
  806420:	e0bff117 	ldw	r2,-60(fp)
  806424:	1000291e 	bne	r2,zero,8064cc <f_chmod+0xec>
  806428:	e0bffa04 	addi	r2,fp,-24
  80642c:	e0bff915 	stw	r2,-28(fp)
  806430:	e0bffd17 	ldw	r2,-12(fp)
  806434:	e0fff304 	addi	r3,fp,-52
  806438:	1809883a 	mov	r4,r3
  80643c:	100b883a 	mov	r5,r2
  806440:	080317c0 	call	80317c <follow_path>
  806444:	e0bff115 	stw	r2,-60(fp)
  806448:	e0bff117 	ldw	r2,-60(fp)
  80644c:	10001f1e 	bne	r2,zero,8064cc <f_chmod+0xec>
  806450:	e0bff817 	ldw	r2,-32(fp)
  806454:	e0bff215 	stw	r2,-56(fp)
  806458:	e0bff217 	ldw	r2,-56(fp)
  80645c:	1000031e 	bne	r2,zero,80646c <f_chmod+0x8c>
  806460:	00800184 	movi	r2,6
  806464:	e0bff115 	stw	r2,-60(fp)
  806468:	00001806 	br	8064cc <f_chmod+0xec>
  80646c:	e0bfff03 	ldbu	r2,-4(fp)
  806470:	108009cc 	andi	r2,r2,39
  806474:	e0bfff05 	stb	r2,-4(fp)
  806478:	e0bff217 	ldw	r2,-56(fp)
  80647c:	108002c4 	addi	r2,r2,11
  806480:	e13ffe03 	ldbu	r4,-8(fp)
  806484:	e0ffff03 	ldbu	r3,-4(fp)
  806488:	20c6703a 	and	r3,r4,r3
  80648c:	180b883a 	mov	r5,r3
  806490:	e0fff217 	ldw	r3,-56(fp)
  806494:	18c002c4 	addi	r3,r3,11
  806498:	18c00003 	ldbu	r3,0(r3)
  80649c:	e13fff03 	ldbu	r4,-4(fp)
  8064a0:	0108303a 	nor	r4,zero,r4
  8064a4:	1906703a 	and	r3,r3,r4
  8064a8:	28c6b03a 	or	r3,r5,r3
  8064ac:	10c00005 	stb	r3,0(r2)
  8064b0:	e0bff317 	ldw	r2,-52(fp)
  8064b4:	00c00044 	movi	r3,1
  8064b8:	10c00105 	stb	r3,4(r2)
  8064bc:	e0bff317 	ldw	r2,-52(fp)
  8064c0:	1009883a 	mov	r4,r2
  8064c4:	08018700 	call	801870 <sync>
  8064c8:	e0bff115 	stw	r2,-60(fp)
  8064cc:	e0bff117 	ldw	r2,-60(fp)
  8064d0:	e037883a 	mov	sp,fp
  8064d4:	dfc00117 	ldw	ra,4(sp)
  8064d8:	df000017 	ldw	fp,0(sp)
  8064dc:	dec00204 	addi	sp,sp,8
  8064e0:	f800283a 	ret

008064e4 <f_utime>:
  8064e4:	defff004 	addi	sp,sp,-64
  8064e8:	dfc00f15 	stw	ra,60(sp)
  8064ec:	df000e15 	stw	fp,56(sp)
  8064f0:	df000e04 	addi	fp,sp,56
  8064f4:	e13ffe15 	stw	r4,-8(fp)
  8064f8:	e17fff15 	stw	r5,-4(fp)
  8064fc:	e0fffe04 	addi	r3,fp,-8
  806500:	e0bff404 	addi	r2,fp,-48
  806504:	1809883a 	mov	r4,r3
  806508:	100b883a 	mov	r5,r2
  80650c:	01800044 	movi	r6,1
  806510:	08034c00 	call	8034c0 <chk_mounted>
  806514:	e0bff215 	stw	r2,-56(fp)
  806518:	e0bff217 	ldw	r2,-56(fp)
  80651c:	1000301e 	bne	r2,zero,8065e0 <f_utime+0xfc>
  806520:	e0bffb04 	addi	r2,fp,-20
  806524:	e0bffa15 	stw	r2,-24(fp)
  806528:	e0bffe17 	ldw	r2,-8(fp)
  80652c:	e0fff404 	addi	r3,fp,-48
  806530:	1809883a 	mov	r4,r3
  806534:	100b883a 	mov	r5,r2
  806538:	080317c0 	call	80317c <follow_path>
  80653c:	e0bff215 	stw	r2,-56(fp)
  806540:	e0bff217 	ldw	r2,-56(fp)
  806544:	1000261e 	bne	r2,zero,8065e0 <f_utime+0xfc>
  806548:	e0bff917 	ldw	r2,-28(fp)
  80654c:	e0bff315 	stw	r2,-52(fp)
  806550:	e0bff317 	ldw	r2,-52(fp)
  806554:	1000031e 	bne	r2,zero,806564 <f_utime+0x80>
  806558:	00800184 	movi	r2,6
  80655c:	e0bff215 	stw	r2,-56(fp)
  806560:	00001f06 	br	8065e0 <f_utime+0xfc>
  806564:	e0bff317 	ldw	r2,-52(fp)
  806568:	10800584 	addi	r2,r2,22
  80656c:	e0ffff17 	ldw	r3,-4(fp)
  806570:	18c0018b 	ldhu	r3,6(r3)
  806574:	10c00005 	stb	r3,0(r2)
  806578:	e0bff317 	ldw	r2,-52(fp)
  80657c:	108005c4 	addi	r2,r2,23
  806580:	e0ffff17 	ldw	r3,-4(fp)
  806584:	18c0018b 	ldhu	r3,6(r3)
  806588:	18ffffcc 	andi	r3,r3,65535
  80658c:	1806d23a 	srli	r3,r3,8
  806590:	10c00005 	stb	r3,0(r2)
  806594:	e0bff317 	ldw	r2,-52(fp)
  806598:	10800604 	addi	r2,r2,24
  80659c:	e0ffff17 	ldw	r3,-4(fp)
  8065a0:	18c0010b 	ldhu	r3,4(r3)
  8065a4:	10c00005 	stb	r3,0(r2)
  8065a8:	e0bff317 	ldw	r2,-52(fp)
  8065ac:	10800644 	addi	r2,r2,25
  8065b0:	e0ffff17 	ldw	r3,-4(fp)
  8065b4:	18c0010b 	ldhu	r3,4(r3)
  8065b8:	18ffffcc 	andi	r3,r3,65535
  8065bc:	1806d23a 	srli	r3,r3,8
  8065c0:	10c00005 	stb	r3,0(r2)
  8065c4:	e0bff417 	ldw	r2,-48(fp)
  8065c8:	00c00044 	movi	r3,1
  8065cc:	10c00105 	stb	r3,4(r2)
  8065d0:	e0bff417 	ldw	r2,-48(fp)
  8065d4:	1009883a 	mov	r4,r2
  8065d8:	08018700 	call	801870 <sync>
  8065dc:	e0bff215 	stw	r2,-56(fp)
  8065e0:	e0bff217 	ldw	r2,-56(fp)
  8065e4:	e037883a 	mov	sp,fp
  8065e8:	dfc00117 	ldw	ra,4(sp)
  8065ec:	df000017 	ldw	fp,0(sp)
  8065f0:	dec00204 	addi	sp,sp,8
  8065f4:	f800283a 	ret

008065f8 <f_rename>:
  8065f8:	deffe204 	addi	sp,sp,-120
  8065fc:	dfc01d15 	stw	ra,116(sp)
  806600:	df001c15 	stw	fp,112(sp)
  806604:	df001c04 	addi	fp,sp,112
  806608:	e13ffe15 	stw	r4,-8(fp)
  80660c:	e17fff15 	stw	r5,-4(fp)
  806610:	e0fffe04 	addi	r3,fp,-8
  806614:	e0bfe704 	addi	r2,fp,-100
  806618:	1809883a 	mov	r4,r3
  80661c:	100b883a 	mov	r5,r2
  806620:	01800044 	movi	r6,1
  806624:	08034c00 	call	8034c0 <chk_mounted>
  806628:	e0bfe415 	stw	r2,-112(fp)
  80662c:	e0bfe417 	ldw	r2,-112(fp)
  806630:	1000b01e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  806634:	e0bfe717 	ldw	r2,-100(fp)
  806638:	e0bfee15 	stw	r2,-72(fp)
  80663c:	e0bffa44 	addi	r2,fp,-23
  806640:	e0bfed15 	stw	r2,-76(fp)
  806644:	e0bffe17 	ldw	r2,-8(fp)
  806648:	e0ffe704 	addi	r3,fp,-100
  80664c:	1809883a 	mov	r4,r3
  806650:	100b883a 	mov	r5,r2
  806654:	080317c0 	call	80317c <follow_path>
  806658:	e0bfe415 	stw	r2,-112(fp)
  80665c:	e0bfe417 	ldw	r2,-112(fp)
  806660:	1000a41e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  806664:	e0bfec17 	ldw	r2,-80(fp)
  806668:	1000031e 	bne	r2,zero,806678 <f_rename+0x80>
  80666c:	00800104 	movi	r2,4
  806670:	e0bfe415 	stw	r2,-112(fp)
  806674:	00009f06 	br	8068f4 <f_rename+0x2fc>
  806678:	e0bfec17 	ldw	r2,-80(fp)
  80667c:	108002c4 	addi	r2,r2,11
  806680:	e0fff504 	addi	r3,fp,-44
  806684:	1809883a 	mov	r4,r3
  806688:	100b883a 	mov	r5,r2
  80668c:	01800544 	movi	r6,21
  806690:	08015480 	call	801548 <mem_cpy>
  806694:	e0ffee04 	addi	r3,fp,-72
  806698:	e0bfe704 	addi	r2,fp,-100
  80669c:	1809883a 	mov	r4,r3
  8066a0:	100b883a 	mov	r5,r2
  8066a4:	01800704 	movi	r6,28
  8066a8:	08015480 	call	801548 <mem_cpy>
  8066ac:	e0bfee04 	addi	r2,fp,-72
  8066b0:	1009883a 	mov	r4,r2
  8066b4:	e17fff17 	ldw	r5,-4(fp)
  8066b8:	080317c0 	call	80317c <follow_path>
  8066bc:	e0bfe415 	stw	r2,-112(fp)
  8066c0:	e0bfe417 	ldw	r2,-112(fp)
  8066c4:	1000021e 	bne	r2,zero,8066d0 <f_rename+0xd8>
  8066c8:	00800204 	movi	r2,8
  8066cc:	e0bfe415 	stw	r2,-112(fp)
  8066d0:	e0bfe417 	ldw	r2,-112(fp)
  8066d4:	10800118 	cmpnei	r2,r2,4
  8066d8:	1000861e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  8066dc:	e0bfee04 	addi	r2,fp,-72
  8066e0:	1009883a 	mov	r4,r2
  8066e4:	0802aa80 	call	802aa8 <dir_register>
  8066e8:	e0bfe415 	stw	r2,-112(fp)
  8066ec:	e0bfe417 	ldw	r2,-112(fp)
  8066f0:	1000801e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  8066f4:	e0bff317 	ldw	r2,-52(fp)
  8066f8:	e0bfe515 	stw	r2,-108(fp)
  8066fc:	e0bfe517 	ldw	r2,-108(fp)
  806700:	10c00344 	addi	r3,r2,13
  806704:	e0bff504 	addi	r2,fp,-44
  806708:	10800084 	addi	r2,r2,2
  80670c:	1809883a 	mov	r4,r3
  806710:	100b883a 	mov	r5,r2
  806714:	018004c4 	movi	r6,19
  806718:	08015480 	call	801548 <mem_cpy>
  80671c:	e0bfe517 	ldw	r2,-108(fp)
  806720:	108002c4 	addi	r2,r2,11
  806724:	e0fff503 	ldbu	r3,-44(fp)
  806728:	18c00814 	ori	r3,r3,32
  80672c:	10c00005 	stb	r3,0(r2)
  806730:	e0bfe717 	ldw	r2,-100(fp)
  806734:	00c00044 	movi	r3,1
  806738:	10c00105 	stb	r3,4(r2)
  80673c:	e0ffe917 	ldw	r3,-92(fp)
  806740:	e0bff017 	ldw	r2,-64(fp)
  806744:	18805f26 	beq	r3,r2,8068c4 <f_rename+0x2cc>
  806748:	e0bfe517 	ldw	r2,-108(fp)
  80674c:	108002c4 	addi	r2,r2,11
  806750:	10800003 	ldbu	r2,0(r2)
  806754:	10803fcc 	andi	r2,r2,255
  806758:	1080040c 	andi	r2,r2,16
  80675c:	10005926 	beq	r2,zero,8068c4 <f_rename+0x2cc>
  806760:	e13fee17 	ldw	r4,-72(fp)
  806764:	e0bfe517 	ldw	r2,-108(fp)
  806768:	10800544 	addi	r2,r2,21
  80676c:	10800003 	ldbu	r2,0(r2)
  806770:	10803fcc 	andi	r2,r2,255
  806774:	1004923a 	slli	r2,r2,8
  806778:	1007883a 	mov	r3,r2
  80677c:	e0bfe517 	ldw	r2,-108(fp)
  806780:	10800504 	addi	r2,r2,20
  806784:	10800003 	ldbu	r2,0(r2)
  806788:	10803fcc 	andi	r2,r2,255
  80678c:	1884b03a 	or	r2,r3,r2
  806790:	10bfffcc 	andi	r2,r2,65535
  806794:	1006943a 	slli	r3,r2,16
  806798:	e0bfe517 	ldw	r2,-108(fp)
  80679c:	108006c4 	addi	r2,r2,27
  8067a0:	10800003 	ldbu	r2,0(r2)
  8067a4:	10803fcc 	andi	r2,r2,255
  8067a8:	1004923a 	slli	r2,r2,8
  8067ac:	100b883a 	mov	r5,r2
  8067b0:	e0bfe517 	ldw	r2,-108(fp)
  8067b4:	10800684 	addi	r2,r2,26
  8067b8:	10800003 	ldbu	r2,0(r2)
  8067bc:	10803fcc 	andi	r2,r2,255
  8067c0:	2884b03a 	or	r2,r5,r2
  8067c4:	10bfffcc 	andi	r2,r2,65535
  8067c8:	1884b03a 	or	r2,r3,r2
  8067cc:	100b883a 	mov	r5,r2
  8067d0:	0801a8c0 	call	801a8c <clust2sect>
  8067d4:	e0bfe615 	stw	r2,-104(fp)
  8067d8:	e0bfe617 	ldw	r2,-104(fp)
  8067dc:	1000031e 	bne	r2,zero,8067ec <f_rename+0x1f4>
  8067e0:	00800084 	movi	r2,2
  8067e4:	e0bfe415 	stw	r2,-112(fp)
  8067e8:	00003606 	br	8068c4 <f_rename+0x2cc>
  8067ec:	e0bfee17 	ldw	r2,-72(fp)
  8067f0:	1009883a 	mov	r4,r2
  8067f4:	e17fe617 	ldw	r5,-104(fp)
  8067f8:	08017140 	call	801714 <move_window>
  8067fc:	e0bfe415 	stw	r2,-112(fp)
  806800:	e0bfee17 	ldw	r2,-72(fp)
  806804:	10801404 	addi	r2,r2,80
  806808:	e0bfe515 	stw	r2,-108(fp)
  80680c:	e0bfe417 	ldw	r2,-112(fp)
  806810:	10002c1e 	bne	r2,zero,8068c4 <f_rename+0x2cc>
  806814:	e0bfe517 	ldw	r2,-108(fp)
  806818:	10800044 	addi	r2,r2,1
  80681c:	10800003 	ldbu	r2,0(r2)
  806820:	10803fcc 	andi	r2,r2,255
  806824:	10800b98 	cmpnei	r2,r2,46
  806828:	1000261e 	bne	r2,zero,8068c4 <f_rename+0x2cc>
  80682c:	e0bfee17 	ldw	r2,-72(fp)
  806830:	10800003 	ldbu	r2,0(r2)
  806834:	10803fcc 	andi	r2,r2,255
  806838:	108000d8 	cmpnei	r2,r2,3
  80683c:	1000041e 	bne	r2,zero,806850 <f_rename+0x258>
  806840:	e0fff017 	ldw	r3,-64(fp)
  806844:	e0bfee17 	ldw	r2,-72(fp)
  806848:	10800917 	ldw	r2,36(r2)
  80684c:	18800226 	beq	r3,r2,806858 <f_rename+0x260>
  806850:	e0bff017 	ldw	r2,-64(fp)
  806854:	00000106 	br	80685c <f_rename+0x264>
  806858:	0005883a 	mov	r2,zero
  80685c:	e0bfe615 	stw	r2,-104(fp)
  806860:	e0bfe517 	ldw	r2,-108(fp)
  806864:	10800684 	addi	r2,r2,26
  806868:	e0ffe617 	ldw	r3,-104(fp)
  80686c:	10c00005 	stb	r3,0(r2)
  806870:	e0bfe517 	ldw	r2,-108(fp)
  806874:	108006c4 	addi	r2,r2,27
  806878:	e0ffe617 	ldw	r3,-104(fp)
  80687c:	18ffffcc 	andi	r3,r3,65535
  806880:	1806d23a 	srli	r3,r3,8
  806884:	10c00005 	stb	r3,0(r2)
  806888:	e0bfe517 	ldw	r2,-108(fp)
  80688c:	10800504 	addi	r2,r2,20
  806890:	e0ffe617 	ldw	r3,-104(fp)
  806894:	1806d43a 	srli	r3,r3,16
  806898:	10c00005 	stb	r3,0(r2)
  80689c:	e0bfe517 	ldw	r2,-108(fp)
  8068a0:	10800544 	addi	r2,r2,21
  8068a4:	e0ffe617 	ldw	r3,-104(fp)
  8068a8:	1806d43a 	srli	r3,r3,16
  8068ac:	18ffffcc 	andi	r3,r3,65535
  8068b0:	1806d23a 	srli	r3,r3,8
  8068b4:	10c00005 	stb	r3,0(r2)
  8068b8:	e0bfee17 	ldw	r2,-72(fp)
  8068bc:	00c00044 	movi	r3,1
  8068c0:	10c00105 	stb	r3,4(r2)
  8068c4:	e0bfe417 	ldw	r2,-112(fp)
  8068c8:	10000a1e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  8068cc:	e0bfe704 	addi	r2,fp,-100
  8068d0:	1009883a 	mov	r4,r2
  8068d4:	0802bc80 	call	802bc8 <dir_remove>
  8068d8:	e0bfe415 	stw	r2,-112(fp)
  8068dc:	e0bfe417 	ldw	r2,-112(fp)
  8068e0:	1000041e 	bne	r2,zero,8068f4 <f_rename+0x2fc>
  8068e4:	e0bfe717 	ldw	r2,-100(fp)
  8068e8:	1009883a 	mov	r4,r2
  8068ec:	08018700 	call	801870 <sync>
  8068f0:	e0bfe415 	stw	r2,-112(fp)
  8068f4:	e0bfe417 	ldw	r2,-112(fp)
  8068f8:	e037883a 	mov	sp,fp
  8068fc:	dfc00117 	ldw	ra,4(sp)
  806900:	df000017 	ldw	fp,0(sp)
  806904:	dec00204 	addi	sp,sp,8
  806908:	f800283a 	ret

0080690c <f_mkfs>:
  80690c:	deffea04 	addi	sp,sp,-88
  806910:	dfc01515 	stw	ra,84(sp)
  806914:	df001415 	stw	fp,80(sp)
  806918:	df001404 	addi	fp,sp,80
  80691c:	2007883a 	mov	r3,r4
  806920:	2805883a 	mov	r2,r5
  806924:	e1bfff15 	stw	r6,-4(fp)
  806928:	e0fffd05 	stb	r3,-12(fp)
  80692c:	e0bffe05 	stb	r2,-8(fp)
  806930:	e0bffd03 	ldbu	r2,-12(fp)
  806934:	10000226 	beq	r2,zero,806940 <f_mkfs+0x34>
  806938:	008002c4 	movi	r2,11
  80693c:	00039d06 	br	8077b4 <f_mkfs+0xea8>
  806940:	e0bffe03 	ldbu	r2,-8(fp)
  806944:	108000b0 	cmpltui	r2,r2,2
  806948:	1000021e 	bne	r2,zero,806954 <f_mkfs+0x48>
  80694c:	008004c4 	movi	r2,19
  806950:	00039806 	br	8077b4 <f_mkfs+0xea8>
  806954:	e0bfff17 	ldw	r2,-4(fp)
  806958:	10ffffc4 	addi	r3,r2,-1
  80695c:	e0bfff17 	ldw	r2,-4(fp)
  806960:	1884703a 	and	r2,r3,r2
  806964:	10000226 	beq	r2,zero,806970 <f_mkfs+0x64>
  806968:	008004c4 	movi	r2,19
  80696c:	00039106 	br	8077b4 <f_mkfs+0xea8>
  806970:	e0bffd03 	ldbu	r2,-12(fp)
  806974:	1085883a 	add	r2,r2,r2
  806978:	1087883a 	add	r3,r2,r2
  80697c:	d0a36304 	addi	r2,gp,-29300
  806980:	1885883a 	add	r2,r3,r2
  806984:	10800017 	ldw	r2,0(r2)
  806988:	e0bff315 	stw	r2,-52(fp)
  80698c:	e0bff317 	ldw	r2,-52(fp)
  806990:	1000021e 	bne	r2,zero,80699c <f_mkfs+0x90>
  806994:	00800304 	movi	r2,12
  806998:	00038606 	br	8077b4 <f_mkfs+0xea8>
  80699c:	e0bff317 	ldw	r2,-52(fp)
  8069a0:	10000005 	stb	zero,0(r2)
  8069a4:	e0bffd03 	ldbu	r2,-12(fp)
  8069a8:	e0bff405 	stb	r2,-48(fp)
  8069ac:	e03ff445 	stb	zero,-47(fp)
  8069b0:	e0bff403 	ldbu	r2,-48(fp)
  8069b4:	1009883a 	mov	r4,r2
  8069b8:	0800b680 	call	800b68 <ffs_DiskIOInitialize>
  8069bc:	e0bff485 	stb	r2,-46(fp)
  8069c0:	e0bff483 	ldbu	r2,-46(fp)
  8069c4:	1080004c 	andi	r2,r2,1
  8069c8:	10000226 	beq	r2,zero,8069d4 <f_mkfs+0xc8>
  8069cc:	008000c4 	movi	r2,3
  8069d0:	00037806 	br	8077b4 <f_mkfs+0xea8>
  8069d4:	e0bff483 	ldbu	r2,-46(fp)
  8069d8:	1080010c 	andi	r2,r2,4
  8069dc:	10000226 	beq	r2,zero,8069e8 <f_mkfs+0xdc>
  8069e0:	00800284 	movi	r2,10
  8069e4:	00037306 	br	8077b4 <f_mkfs+0xea8>
  8069e8:	e0fff403 	ldbu	r3,-48(fp)
  8069ec:	e0bffc04 	addi	r2,fp,-16
  8069f0:	1809883a 	mov	r4,r3
  8069f4:	01400044 	movi	r5,1
  8069f8:	100d883a 	mov	r6,r2
  8069fc:	08010740 	call	801074 <ffs_DiskIOIoctl>
  806a00:	1000031e 	bne	r2,zero,806a10 <f_mkfs+0x104>
  806a04:	e0bffc17 	ldw	r2,-16(fp)
  806a08:	10802028 	cmpgeui	r2,r2,128
  806a0c:	1000021e 	bne	r2,zero,806a18 <f_mkfs+0x10c>
  806a10:	00800044 	movi	r2,1
  806a14:	00036706 	br	8077b4 <f_mkfs+0xea8>
  806a18:	e0bffe03 	ldbu	r2,-8(fp)
  806a1c:	10000226 	beq	r2,zero,806a28 <f_mkfs+0x11c>
  806a20:	0005883a 	mov	r2,zero
  806a24:	00000106 	br	806a2c <f_mkfs+0x120>
  806a28:	00800fc4 	movi	r2,63
  806a2c:	e0bff515 	stw	r2,-44(fp)
  806a30:	e0fffc17 	ldw	r3,-16(fp)
  806a34:	e0bff517 	ldw	r2,-44(fp)
  806a38:	1885c83a 	sub	r2,r3,r2
  806a3c:	e0bffc15 	stw	r2,-16(fp)
  806a40:	e0bfff17 	ldw	r2,-4(fp)
  806a44:	10001b1e 	bne	r2,zero,806ab4 <f_mkfs+0x1a8>
  806a48:	e0bffc17 	ldw	r2,-16(fp)
  806a4c:	1009883a 	mov	r4,r2
  806a50:	0141f404 	movi	r5,2000
  806a54:	0809abc0 	call	809abc <__udivsi3>
  806a58:	e0bff615 	stw	r2,-40(fp)
  806a5c:	e03fee15 	stw	zero,-72(fp)
  806a60:	00000306 	br	806a70 <f_mkfs+0x164>
  806a64:	e0bfee17 	ldw	r2,-72(fp)
  806a68:	10800044 	addi	r2,r2,1
  806a6c:	e0bfee15 	stw	r2,-72(fp)
  806a70:	008020b4 	movhi	r2,130
  806a74:	10b7a904 	addi	r2,r2,-8540
  806a78:	e0ffee17 	ldw	r3,-72(fp)
  806a7c:	18c7883a 	add	r3,r3,r3
  806a80:	10c5883a 	add	r2,r2,r3
  806a84:	1080000b 	ldhu	r2,0(r2)
  806a88:	10bfffcc 	andi	r2,r2,65535
  806a8c:	e0fff617 	ldw	r3,-40(fp)
  806a90:	18bff436 	bltu	r3,r2,806a64 <__alt_data_end+0xff806a64>
  806a94:	008020b4 	movhi	r2,130
  806a98:	10b7ae84 	addi	r2,r2,-8518
  806a9c:	e0ffee17 	ldw	r3,-72(fp)
  806aa0:	18c7883a 	add	r3,r3,r3
  806aa4:	10c5883a 	add	r2,r2,r3
  806aa8:	1080000b 	ldhu	r2,0(r2)
  806aac:	10bfffcc 	andi	r2,r2,65535
  806ab0:	e0bfff15 	stw	r2,-4(fp)
  806ab4:	e0bfff17 	ldw	r2,-4(fp)
  806ab8:	1004d27a 	srli	r2,r2,9
  806abc:	e0bfff15 	stw	r2,-4(fp)
  806ac0:	e0bfff17 	ldw	r2,-4(fp)
  806ac4:	1000021e 	bne	r2,zero,806ad0 <f_mkfs+0x1c4>
  806ac8:	00800044 	movi	r2,1
  806acc:	e0bfff15 	stw	r2,-4(fp)
  806ad0:	e0bfff17 	ldw	r2,-4(fp)
  806ad4:	10802070 	cmpltui	r2,r2,129
  806ad8:	1000021e 	bne	r2,zero,806ae4 <f_mkfs+0x1d8>
  806adc:	00802004 	movi	r2,128
  806ae0:	e0bfff15 	stw	r2,-4(fp)
  806ae4:	e0bffc17 	ldw	r2,-16(fp)
  806ae8:	1009883a 	mov	r4,r2
  806aec:	e17fff17 	ldw	r5,-4(fp)
  806af0:	0809abc0 	call	809abc <__udivsi3>
  806af4:	e0bff715 	stw	r2,-36(fp)
  806af8:	00800044 	movi	r2,1
  806afc:	e0bfec05 	stb	r2,-80(fp)
  806b00:	e0bff717 	ldw	r2,-36(fp)
  806b04:	1083fdb0 	cmpltui	r2,r2,4086
  806b08:	1000021e 	bne	r2,zero,806b14 <f_mkfs+0x208>
  806b0c:	00800084 	movi	r2,2
  806b10:	e0bfec05 	stb	r2,-80(fp)
  806b14:	e0bff717 	ldw	r2,-36(fp)
  806b18:	10bffdb0 	cmpltui	r2,r2,65526
  806b1c:	1000021e 	bne	r2,zero,806b28 <f_mkfs+0x21c>
  806b20:	008000c4 	movi	r2,3
  806b24:	e0bfec05 	stb	r2,-80(fp)
  806b28:	e0bfec03 	ldbu	r2,-80(fp)
  806b2c:	108000d8 	cmpnei	r2,r2,3
  806b30:	10000b1e 	bne	r2,zero,806b60 <f_mkfs+0x254>
  806b34:	e0bff717 	ldw	r2,-36(fp)
  806b38:	10802084 	addi	r2,r2,130
  806b3c:	1085883a 	add	r2,r2,r2
  806b40:	1085883a 	add	r2,r2,r2
  806b44:	10bfffc4 	addi	r2,r2,-1
  806b48:	1004d27a 	srli	r2,r2,9
  806b4c:	e0bff115 	stw	r2,-60(fp)
  806b50:	00800804 	movi	r2,32
  806b54:	e0bff015 	stw	r2,-64(fp)
  806b58:	e03ff215 	stw	zero,-56(fp)
  806b5c:	00001706 	br	806bbc <f_mkfs+0x2b0>
  806b60:	e0bfec03 	ldbu	r2,-80(fp)
  806b64:	10800058 	cmpnei	r2,r2,1
  806b68:	1000081e 	bne	r2,zero,806b8c <f_mkfs+0x280>
  806b6c:	e0fff717 	ldw	r3,-36(fp)
  806b70:	1805883a 	mov	r2,r3
  806b74:	1085883a 	add	r2,r2,r2
  806b78:	10c5883a 	add	r2,r2,r3
  806b7c:	10800044 	addi	r2,r2,1
  806b80:	1004d07a 	srli	r2,r2,1
  806b84:	108000c4 	addi	r2,r2,3
  806b88:	00000306 	br	806b98 <f_mkfs+0x28c>
  806b8c:	e0bff717 	ldw	r2,-36(fp)
  806b90:	10800084 	addi	r2,r2,2
  806b94:	1085883a 	add	r2,r2,r2
  806b98:	e0bff115 	stw	r2,-60(fp)
  806b9c:	e0bff117 	ldw	r2,-60(fp)
  806ba0:	10807fc4 	addi	r2,r2,511
  806ba4:	1004d27a 	srli	r2,r2,9
  806ba8:	e0bff115 	stw	r2,-60(fp)
  806bac:	00800044 	movi	r2,1
  806bb0:	e0bff015 	stw	r2,-64(fp)
  806bb4:	00800804 	movi	r2,32
  806bb8:	e0bff215 	stw	r2,-56(fp)
  806bbc:	e0fff517 	ldw	r3,-44(fp)
  806bc0:	e0bff017 	ldw	r2,-64(fp)
  806bc4:	1885883a 	add	r2,r3,r2
  806bc8:	e0bfef15 	stw	r2,-68(fp)
  806bcc:	e0ffef17 	ldw	r3,-68(fp)
  806bd0:	e0bff117 	ldw	r2,-60(fp)
  806bd4:	1885883a 	add	r2,r3,r2
  806bd8:	e0bff815 	stw	r2,-32(fp)
  806bdc:	e0fff817 	ldw	r3,-32(fp)
  806be0:	e0bff217 	ldw	r2,-56(fp)
  806be4:	1885883a 	add	r2,r3,r2
  806be8:	e0bff915 	stw	r2,-28(fp)
  806bec:	e0fff917 	ldw	r3,-28(fp)
  806bf0:	e0bfff17 	ldw	r2,-4(fp)
  806bf4:	1887883a 	add	r3,r3,r2
  806bf8:	e0bff517 	ldw	r2,-44(fp)
  806bfc:	1885c83a 	sub	r2,r3,r2
  806c00:	e0fffc17 	ldw	r3,-16(fp)
  806c04:	1880022e 	bgeu	r3,r2,806c10 <f_mkfs+0x304>
  806c08:	00800384 	movi	r2,14
  806c0c:	0002e906 	br	8077b4 <f_mkfs+0xea8>
  806c10:	e0fff403 	ldbu	r3,-48(fp)
  806c14:	e0bffb04 	addi	r2,fp,-20
  806c18:	1809883a 	mov	r4,r3
  806c1c:	014000c4 	movi	r5,3
  806c20:	100d883a 	mov	r6,r2
  806c24:	08010740 	call	801074 <ffs_DiskIOIoctl>
  806c28:	1000051e 	bne	r2,zero,806c40 <f_mkfs+0x334>
  806c2c:	e0bffb17 	ldw	r2,-20(fp)
  806c30:	10000326 	beq	r2,zero,806c40 <f_mkfs+0x334>
  806c34:	e0bffb17 	ldw	r2,-20(fp)
  806c38:	10a00070 	cmpltui	r2,r2,32769
  806c3c:	1000021e 	bne	r2,zero,806c48 <f_mkfs+0x33c>
  806c40:	00800044 	movi	r2,1
  806c44:	e0bffb15 	stw	r2,-20(fp)
  806c48:	e0fffb17 	ldw	r3,-20(fp)
  806c4c:	e0bff917 	ldw	r2,-28(fp)
  806c50:	1885883a 	add	r2,r3,r2
  806c54:	10ffffc4 	addi	r3,r2,-1
  806c58:	e0bffb17 	ldw	r2,-20(fp)
  806c5c:	0085c83a 	sub	r2,zero,r2
  806c60:	1884703a 	and	r2,r3,r2
  806c64:	e0bffb15 	stw	r2,-20(fp)
  806c68:	e0fffb17 	ldw	r3,-20(fp)
  806c6c:	e0bff917 	ldw	r2,-28(fp)
  806c70:	1885c83a 	sub	r2,r3,r2
  806c74:	e0bffb15 	stw	r2,-20(fp)
  806c78:	e0bfec03 	ldbu	r2,-80(fp)
  806c7c:	108000d8 	cmpnei	r2,r2,3
  806c80:	1000091e 	bne	r2,zero,806ca8 <f_mkfs+0x39c>
  806c84:	e0bffb17 	ldw	r2,-20(fp)
  806c88:	e0fff017 	ldw	r3,-64(fp)
  806c8c:	1885883a 	add	r2,r3,r2
  806c90:	e0bff015 	stw	r2,-64(fp)
  806c94:	e0bffb17 	ldw	r2,-20(fp)
  806c98:	e0ffef17 	ldw	r3,-68(fp)
  806c9c:	1885883a 	add	r2,r3,r2
  806ca0:	e0bfef15 	stw	r2,-68(fp)
  806ca4:	00000406 	br	806cb8 <f_mkfs+0x3ac>
  806ca8:	e0bffb17 	ldw	r2,-20(fp)
  806cac:	e0fff117 	ldw	r3,-60(fp)
  806cb0:	1885883a 	add	r2,r3,r2
  806cb4:	e0bff115 	stw	r2,-60(fp)
  806cb8:	e0fffc17 	ldw	r3,-16(fp)
  806cbc:	e0bff017 	ldw	r2,-64(fp)
  806cc0:	1887c83a 	sub	r3,r3,r2
  806cc4:	e0bff117 	ldw	r2,-60(fp)
  806cc8:	1887c83a 	sub	r3,r3,r2
  806ccc:	e0bff217 	ldw	r2,-56(fp)
  806cd0:	1885c83a 	sub	r2,r3,r2
  806cd4:	1009883a 	mov	r4,r2
  806cd8:	e17fff17 	ldw	r5,-4(fp)
  806cdc:	0809abc0 	call	809abc <__udivsi3>
  806ce0:	e0bff715 	stw	r2,-36(fp)
  806ce4:	e0bfec03 	ldbu	r2,-80(fp)
  806ce8:	10800098 	cmpnei	r2,r2,2
  806cec:	1000031e 	bne	r2,zero,806cfc <f_mkfs+0x3f0>
  806cf0:	e0bff717 	ldw	r2,-36(fp)
  806cf4:	1083fdb0 	cmpltui	r2,r2,4086
  806cf8:	1000061e 	bne	r2,zero,806d14 <f_mkfs+0x408>
  806cfc:	e0bfec03 	ldbu	r2,-80(fp)
  806d00:	108000d8 	cmpnei	r2,r2,3
  806d04:	1000051e 	bne	r2,zero,806d1c <f_mkfs+0x410>
  806d08:	e0bff717 	ldw	r2,-36(fp)
  806d0c:	10bffda8 	cmpgeui	r2,r2,65526
  806d10:	1000021e 	bne	r2,zero,806d1c <f_mkfs+0x410>
  806d14:	00800384 	movi	r2,14
  806d18:	0002a606 	br	8077b4 <f_mkfs+0xea8>
  806d1c:	e0bfec03 	ldbu	r2,-80(fp)
  806d20:	10c00060 	cmpeqi	r3,r2,1
  806d24:	1800031e 	bne	r3,zero,806d34 <f_mkfs+0x428>
  806d28:	108000a0 	cmpeqi	r2,r2,2
  806d2c:	1000041e 	bne	r2,zero,806d40 <f_mkfs+0x434>
  806d30:	00000b06 	br	806d60 <f_mkfs+0x454>
  806d34:	00800044 	movi	r2,1
  806d38:	e0bfec85 	stb	r2,-78(fp)
  806d3c:	00000a06 	br	806d68 <f_mkfs+0x45c>
  806d40:	e0bffc17 	ldw	r2,-16(fp)
  806d44:	00ffffd4 	movui	r3,65535
  806d48:	18800236 	bltu	r3,r2,806d54 <f_mkfs+0x448>
  806d4c:	00800104 	movi	r2,4
  806d50:	00000106 	br	806d58 <f_mkfs+0x44c>
  806d54:	00800184 	movi	r2,6
  806d58:	e0bfec85 	stb	r2,-78(fp)
  806d5c:	00000206 	br	806d68 <f_mkfs+0x45c>
  806d60:	00800304 	movi	r2,12
  806d64:	e0bfec85 	stb	r2,-78(fp)
  806d68:	e0bffe03 	ldbu	r2,-8(fp)
  806d6c:	10000326 	beq	r2,zero,806d7c <f_mkfs+0x470>
  806d70:	00bffc04 	movi	r2,-16
  806d74:	e0bfec45 	stb	r2,-79(fp)
  806d78:	00006106 	br	806f00 <f_mkfs+0x5f4>
  806d7c:	e0bff317 	ldw	r2,-52(fp)
  806d80:	10800c04 	addi	r2,r2,48
  806d84:	1009883a 	mov	r4,r2
  806d88:	000b883a 	mov	r5,zero
  806d8c:	01808004 	movi	r6,512
  806d90:	08015b40 	call	8015b4 <mem_set>
  806d94:	e0bff317 	ldw	r2,-52(fp)
  806d98:	10807b84 	addi	r2,r2,494
  806d9c:	e0bffa15 	stw	r2,-24(fp)
  806da0:	e0bffa17 	ldw	r2,-24(fp)
  806da4:	10800044 	addi	r2,r2,1
  806da8:	00c00044 	movi	r3,1
  806dac:	10c00005 	stb	r3,0(r2)
  806db0:	e0bffa17 	ldw	r2,-24(fp)
  806db4:	10800084 	addi	r2,r2,2
  806db8:	00c00044 	movi	r3,1
  806dbc:	10c00005 	stb	r3,0(r2)
  806dc0:	e0bffa17 	ldw	r2,-24(fp)
  806dc4:	108000c4 	addi	r2,r2,3
  806dc8:	10000005 	stb	zero,0(r2)
  806dcc:	e0bffa17 	ldw	r2,-24(fp)
  806dd0:	10800104 	addi	r2,r2,4
  806dd4:	e0ffec83 	ldbu	r3,-78(fp)
  806dd8:	10c00005 	stb	r3,0(r2)
  806ddc:	e0bffa17 	ldw	r2,-24(fp)
  806de0:	10800144 	addi	r2,r2,5
  806de4:	00ffff84 	movi	r3,-2
  806de8:	10c00005 	stb	r3,0(r2)
  806dec:	e0fffc17 	ldw	r3,-16(fp)
  806df0:	e0bff517 	ldw	r2,-44(fp)
  806df4:	1885883a 	add	r2,r3,r2
  806df8:	1009883a 	mov	r4,r2
  806dfc:	014fb044 	movi	r5,16065
  806e00:	0809abc0 	call	809abc <__udivsi3>
  806e04:	e0bffb15 	stw	r2,-20(fp)
  806e08:	e0bffa17 	ldw	r2,-24(fp)
  806e0c:	10800184 	addi	r2,r2,6
  806e10:	e0fffb17 	ldw	r3,-20(fp)
  806e14:	1806d0ba 	srli	r3,r3,2
  806e18:	18c00fd4 	ori	r3,r3,63
  806e1c:	10c00005 	stb	r3,0(r2)
  806e20:	e0bffa17 	ldw	r2,-24(fp)
  806e24:	108001c4 	addi	r2,r2,7
  806e28:	e0fffb17 	ldw	r3,-20(fp)
  806e2c:	10c00005 	stb	r3,0(r2)
  806e30:	e0bffa17 	ldw	r2,-24(fp)
  806e34:	10800204 	addi	r2,r2,8
  806e38:	00c00fc4 	movi	r3,63
  806e3c:	10c00005 	stb	r3,0(r2)
  806e40:	e0bffa17 	ldw	r2,-24(fp)
  806e44:	10800244 	addi	r2,r2,9
  806e48:	10000005 	stb	zero,0(r2)
  806e4c:	e0bffa17 	ldw	r2,-24(fp)
  806e50:	10800284 	addi	r2,r2,10
  806e54:	10000005 	stb	zero,0(r2)
  806e58:	e0bffa17 	ldw	r2,-24(fp)
  806e5c:	108002c4 	addi	r2,r2,11
  806e60:	10000005 	stb	zero,0(r2)
  806e64:	e0bffa17 	ldw	r2,-24(fp)
  806e68:	10800304 	addi	r2,r2,12
  806e6c:	e0fffc17 	ldw	r3,-16(fp)
  806e70:	10c00005 	stb	r3,0(r2)
  806e74:	e0bffa17 	ldw	r2,-24(fp)
  806e78:	10800344 	addi	r2,r2,13
  806e7c:	e0fffc17 	ldw	r3,-16(fp)
  806e80:	18ffffcc 	andi	r3,r3,65535
  806e84:	1806d23a 	srli	r3,r3,8
  806e88:	10c00005 	stb	r3,0(r2)
  806e8c:	e0bffa17 	ldw	r2,-24(fp)
  806e90:	10800384 	addi	r2,r2,14
  806e94:	e0fffc17 	ldw	r3,-16(fp)
  806e98:	1806d43a 	srli	r3,r3,16
  806e9c:	10c00005 	stb	r3,0(r2)
  806ea0:	e0bffa17 	ldw	r2,-24(fp)
  806ea4:	108003c4 	addi	r2,r2,15
  806ea8:	e0fffc17 	ldw	r3,-16(fp)
  806eac:	1806d63a 	srli	r3,r3,24
  806eb0:	10c00005 	stb	r3,0(r2)
  806eb4:	e0bff317 	ldw	r2,-52(fp)
  806eb8:	00c01544 	movi	r3,85
  806ebc:	10c08b85 	stb	r3,558(r2)
  806ec0:	e0bff317 	ldw	r2,-52(fp)
  806ec4:	00ffea84 	movi	r3,-86
  806ec8:	10c08bc5 	stb	r3,559(r2)
  806ecc:	e0fff403 	ldbu	r3,-48(fp)
  806ed0:	e0bff317 	ldw	r2,-52(fp)
  806ed4:	10800c04 	addi	r2,r2,48
  806ed8:	1809883a 	mov	r4,r3
  806edc:	100b883a 	mov	r5,r2
  806ee0:	000d883a 	mov	r6,zero
  806ee4:	01c00044 	movi	r7,1
  806ee8:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  806eec:	10000226 	beq	r2,zero,806ef8 <f_mkfs+0x5ec>
  806ef0:	00800044 	movi	r2,1
  806ef4:	00022f06 	br	8077b4 <f_mkfs+0xea8>
  806ef8:	00bffe04 	movi	r2,-8
  806efc:	e0bfec45 	stb	r2,-79(fp)
  806f00:	e0bff317 	ldw	r2,-52(fp)
  806f04:	10800c04 	addi	r2,r2,48
  806f08:	e0bffa15 	stw	r2,-24(fp)
  806f0c:	e13ffa17 	ldw	r4,-24(fp)
  806f10:	000b883a 	mov	r5,zero
  806f14:	01808004 	movi	r6,512
  806f18:	08015b40 	call	8015b4 <mem_set>
  806f1c:	e13ffa17 	ldw	r4,-24(fp)
  806f20:	014020b4 	movhi	r5,130
  806f24:	29777c04 	addi	r5,r5,-8720
  806f28:	018002c4 	movi	r6,11
  806f2c:	08015480 	call	801548 <mem_cpy>
  806f30:	00808004 	movi	r2,512
  806f34:	e0bfee15 	stw	r2,-72(fp)
  806f38:	e0bffa17 	ldw	r2,-24(fp)
  806f3c:	108002c4 	addi	r2,r2,11
  806f40:	e0ffee17 	ldw	r3,-72(fp)
  806f44:	10c00005 	stb	r3,0(r2)
  806f48:	e0bffa17 	ldw	r2,-24(fp)
  806f4c:	10800304 	addi	r2,r2,12
  806f50:	e0ffee17 	ldw	r3,-72(fp)
  806f54:	18ffffcc 	andi	r3,r3,65535
  806f58:	1806d23a 	srli	r3,r3,8
  806f5c:	10c00005 	stb	r3,0(r2)
  806f60:	e0bffa17 	ldw	r2,-24(fp)
  806f64:	10800344 	addi	r2,r2,13
  806f68:	e0ffff17 	ldw	r3,-4(fp)
  806f6c:	10c00005 	stb	r3,0(r2)
  806f70:	e0bffa17 	ldw	r2,-24(fp)
  806f74:	10800384 	addi	r2,r2,14
  806f78:	e0fff017 	ldw	r3,-64(fp)
  806f7c:	10c00005 	stb	r3,0(r2)
  806f80:	e0bffa17 	ldw	r2,-24(fp)
  806f84:	108003c4 	addi	r2,r2,15
  806f88:	e0fff017 	ldw	r3,-64(fp)
  806f8c:	18ffffcc 	andi	r3,r3,65535
  806f90:	1806d23a 	srli	r3,r3,8
  806f94:	10c00005 	stb	r3,0(r2)
  806f98:	e0bffa17 	ldw	r2,-24(fp)
  806f9c:	10800404 	addi	r2,r2,16
  806fa0:	00c00044 	movi	r3,1
  806fa4:	10c00005 	stb	r3,0(r2)
  806fa8:	e0bfec03 	ldbu	r2,-80(fp)
  806fac:	108000d8 	cmpnei	r2,r2,3
  806fb0:	1000021e 	bne	r2,zero,806fbc <f_mkfs+0x6b0>
  806fb4:	0005883a 	mov	r2,zero
  806fb8:	00000106 	br	806fc0 <f_mkfs+0x6b4>
  806fbc:	00808004 	movi	r2,512
  806fc0:	e0bfee15 	stw	r2,-72(fp)
  806fc4:	e0bffa17 	ldw	r2,-24(fp)
  806fc8:	10800444 	addi	r2,r2,17
  806fcc:	e0ffee17 	ldw	r3,-72(fp)
  806fd0:	10c00005 	stb	r3,0(r2)
  806fd4:	e0bffa17 	ldw	r2,-24(fp)
  806fd8:	10800484 	addi	r2,r2,18
  806fdc:	e0ffee17 	ldw	r3,-72(fp)
  806fe0:	18ffffcc 	andi	r3,r3,65535
  806fe4:	1806d23a 	srli	r3,r3,8
  806fe8:	10c00005 	stb	r3,0(r2)
  806fec:	e0bffc17 	ldw	r2,-16(fp)
  806ff0:	00ffffd4 	movui	r3,65535
  806ff4:	18800b36 	bltu	r3,r2,807024 <f_mkfs+0x718>
  806ff8:	e0bffa17 	ldw	r2,-24(fp)
  806ffc:	108004c4 	addi	r2,r2,19
  807000:	e0fffc17 	ldw	r3,-16(fp)
  807004:	10c00005 	stb	r3,0(r2)
  807008:	e0bffa17 	ldw	r2,-24(fp)
  80700c:	10800504 	addi	r2,r2,20
  807010:	e0fffc17 	ldw	r3,-16(fp)
  807014:	18ffffcc 	andi	r3,r3,65535
  807018:	1806d23a 	srli	r3,r3,8
  80701c:	10c00005 	stb	r3,0(r2)
  807020:	00001406 	br	807074 <f_mkfs+0x768>
  807024:	e0bffa17 	ldw	r2,-24(fp)
  807028:	10800804 	addi	r2,r2,32
  80702c:	e0fffc17 	ldw	r3,-16(fp)
  807030:	10c00005 	stb	r3,0(r2)
  807034:	e0bffa17 	ldw	r2,-24(fp)
  807038:	10800844 	addi	r2,r2,33
  80703c:	e0fffc17 	ldw	r3,-16(fp)
  807040:	18ffffcc 	andi	r3,r3,65535
  807044:	1806d23a 	srli	r3,r3,8
  807048:	10c00005 	stb	r3,0(r2)
  80704c:	e0bffa17 	ldw	r2,-24(fp)
  807050:	10800884 	addi	r2,r2,34
  807054:	e0fffc17 	ldw	r3,-16(fp)
  807058:	1806d43a 	srli	r3,r3,16
  80705c:	10c00005 	stb	r3,0(r2)
  807060:	e0bffa17 	ldw	r2,-24(fp)
  807064:	108008c4 	addi	r2,r2,35
  807068:	e0fffc17 	ldw	r3,-16(fp)
  80706c:	1806d63a 	srli	r3,r3,24
  807070:	10c00005 	stb	r3,0(r2)
  807074:	e0bffa17 	ldw	r2,-24(fp)
  807078:	10800544 	addi	r2,r2,21
  80707c:	e0ffec43 	ldbu	r3,-79(fp)
  807080:	10c00005 	stb	r3,0(r2)
  807084:	e0bffa17 	ldw	r2,-24(fp)
  807088:	10800604 	addi	r2,r2,24
  80708c:	00c00fc4 	movi	r3,63
  807090:	10c00005 	stb	r3,0(r2)
  807094:	e0bffa17 	ldw	r2,-24(fp)
  807098:	10800644 	addi	r2,r2,25
  80709c:	10000005 	stb	zero,0(r2)
  8070a0:	e0bffa17 	ldw	r2,-24(fp)
  8070a4:	10800684 	addi	r2,r2,26
  8070a8:	00ffffc4 	movi	r3,-1
  8070ac:	10c00005 	stb	r3,0(r2)
  8070b0:	e0bffa17 	ldw	r2,-24(fp)
  8070b4:	108006c4 	addi	r2,r2,27
  8070b8:	10000005 	stb	zero,0(r2)
  8070bc:	e0bffa17 	ldw	r2,-24(fp)
  8070c0:	10800704 	addi	r2,r2,28
  8070c4:	e0fff517 	ldw	r3,-44(fp)
  8070c8:	10c00005 	stb	r3,0(r2)
  8070cc:	e0bffa17 	ldw	r2,-24(fp)
  8070d0:	10800744 	addi	r2,r2,29
  8070d4:	e0fff517 	ldw	r3,-44(fp)
  8070d8:	18ffffcc 	andi	r3,r3,65535
  8070dc:	1806d23a 	srli	r3,r3,8
  8070e0:	10c00005 	stb	r3,0(r2)
  8070e4:	e0bffa17 	ldw	r2,-24(fp)
  8070e8:	10800784 	addi	r2,r2,30
  8070ec:	e0fff517 	ldw	r3,-44(fp)
  8070f0:	1806d43a 	srli	r3,r3,16
  8070f4:	10c00005 	stb	r3,0(r2)
  8070f8:	e0bffa17 	ldw	r2,-24(fp)
  8070fc:	108007c4 	addi	r2,r2,31
  807100:	e0fff517 	ldw	r3,-44(fp)
  807104:	1806d63a 	srli	r3,r3,24
  807108:	10c00005 	stb	r3,0(r2)
  80710c:	080151c0 	call	80151c <get_fattime>
  807110:	e0bffb15 	stw	r2,-20(fp)
  807114:	e0bfec03 	ldbu	r2,-80(fp)
  807118:	108000d8 	cmpnei	r2,r2,3
  80711c:	1000531e 	bne	r2,zero,80726c <f_mkfs+0x960>
  807120:	e0bffa17 	ldw	r2,-24(fp)
  807124:	108010c4 	addi	r2,r2,67
  807128:	e0fffb17 	ldw	r3,-20(fp)
  80712c:	10c00005 	stb	r3,0(r2)
  807130:	e0bffa17 	ldw	r2,-24(fp)
  807134:	10801104 	addi	r2,r2,68
  807138:	e0fffb17 	ldw	r3,-20(fp)
  80713c:	18ffffcc 	andi	r3,r3,65535
  807140:	1806d23a 	srli	r3,r3,8
  807144:	10c00005 	stb	r3,0(r2)
  807148:	e0bffa17 	ldw	r2,-24(fp)
  80714c:	10801144 	addi	r2,r2,69
  807150:	e0fffb17 	ldw	r3,-20(fp)
  807154:	1806d43a 	srli	r3,r3,16
  807158:	10c00005 	stb	r3,0(r2)
  80715c:	e0bffa17 	ldw	r2,-24(fp)
  807160:	10801184 	addi	r2,r2,70
  807164:	e0fffb17 	ldw	r3,-20(fp)
  807168:	1806d63a 	srli	r3,r3,24
  80716c:	10c00005 	stb	r3,0(r2)
  807170:	e0bffa17 	ldw	r2,-24(fp)
  807174:	10800904 	addi	r2,r2,36
  807178:	e0fff117 	ldw	r3,-60(fp)
  80717c:	10c00005 	stb	r3,0(r2)
  807180:	e0bffa17 	ldw	r2,-24(fp)
  807184:	10800944 	addi	r2,r2,37
  807188:	e0fff117 	ldw	r3,-60(fp)
  80718c:	18ffffcc 	andi	r3,r3,65535
  807190:	1806d23a 	srli	r3,r3,8
  807194:	10c00005 	stb	r3,0(r2)
  807198:	e0bffa17 	ldw	r2,-24(fp)
  80719c:	10800984 	addi	r2,r2,38
  8071a0:	e0fff117 	ldw	r3,-60(fp)
  8071a4:	1806d43a 	srli	r3,r3,16
  8071a8:	10c00005 	stb	r3,0(r2)
  8071ac:	e0bffa17 	ldw	r2,-24(fp)
  8071b0:	108009c4 	addi	r2,r2,39
  8071b4:	e0fff117 	ldw	r3,-60(fp)
  8071b8:	1806d63a 	srli	r3,r3,24
  8071bc:	10c00005 	stb	r3,0(r2)
  8071c0:	e0bffa17 	ldw	r2,-24(fp)
  8071c4:	10800b04 	addi	r2,r2,44
  8071c8:	00c00084 	movi	r3,2
  8071cc:	10c00005 	stb	r3,0(r2)
  8071d0:	e0bffa17 	ldw	r2,-24(fp)
  8071d4:	10800b44 	addi	r2,r2,45
  8071d8:	10000005 	stb	zero,0(r2)
  8071dc:	e0bffa17 	ldw	r2,-24(fp)
  8071e0:	10800b84 	addi	r2,r2,46
  8071e4:	10000005 	stb	zero,0(r2)
  8071e8:	e0bffa17 	ldw	r2,-24(fp)
  8071ec:	10800bc4 	addi	r2,r2,47
  8071f0:	10000005 	stb	zero,0(r2)
  8071f4:	e0bffa17 	ldw	r2,-24(fp)
  8071f8:	10800c04 	addi	r2,r2,48
  8071fc:	00c00044 	movi	r3,1
  807200:	10c00005 	stb	r3,0(r2)
  807204:	e0bffa17 	ldw	r2,-24(fp)
  807208:	10800c44 	addi	r2,r2,49
  80720c:	10000005 	stb	zero,0(r2)
  807210:	e0bffa17 	ldw	r2,-24(fp)
  807214:	10800c84 	addi	r2,r2,50
  807218:	00c00184 	movi	r3,6
  80721c:	10c00005 	stb	r3,0(r2)
  807220:	e0bffa17 	ldw	r2,-24(fp)
  807224:	10800cc4 	addi	r2,r2,51
  807228:	10000005 	stb	zero,0(r2)
  80722c:	e0bffa17 	ldw	r2,-24(fp)
  807230:	10801004 	addi	r2,r2,64
  807234:	00ffe004 	movi	r3,-128
  807238:	10c00005 	stb	r3,0(r2)
  80723c:	e0bffa17 	ldw	r2,-24(fp)
  807240:	10801084 	addi	r2,r2,66
  807244:	00c00a44 	movi	r3,41
  807248:	10c00005 	stb	r3,0(r2)
  80724c:	e0bffa17 	ldw	r2,-24(fp)
  807250:	108011c4 	addi	r2,r2,71
  807254:	1009883a 	mov	r4,r2
  807258:	014020b4 	movhi	r5,130
  80725c:	29777f04 	addi	r5,r5,-8708
  807260:	018004c4 	movi	r6,19
  807264:	08015480 	call	801548 <mem_cpy>
  807268:	00002d06 	br	807320 <f_mkfs+0xa14>
  80726c:	e0bffa17 	ldw	r2,-24(fp)
  807270:	108009c4 	addi	r2,r2,39
  807274:	e0fffb17 	ldw	r3,-20(fp)
  807278:	10c00005 	stb	r3,0(r2)
  80727c:	e0bffa17 	ldw	r2,-24(fp)
  807280:	10800a04 	addi	r2,r2,40
  807284:	e0fffb17 	ldw	r3,-20(fp)
  807288:	18ffffcc 	andi	r3,r3,65535
  80728c:	1806d23a 	srli	r3,r3,8
  807290:	10c00005 	stb	r3,0(r2)
  807294:	e0bffa17 	ldw	r2,-24(fp)
  807298:	10800a44 	addi	r2,r2,41
  80729c:	e0fffb17 	ldw	r3,-20(fp)
  8072a0:	1806d43a 	srli	r3,r3,16
  8072a4:	10c00005 	stb	r3,0(r2)
  8072a8:	e0bffa17 	ldw	r2,-24(fp)
  8072ac:	10800a84 	addi	r2,r2,42
  8072b0:	e0fffb17 	ldw	r3,-20(fp)
  8072b4:	1806d63a 	srli	r3,r3,24
  8072b8:	10c00005 	stb	r3,0(r2)
  8072bc:	e0bffa17 	ldw	r2,-24(fp)
  8072c0:	10800584 	addi	r2,r2,22
  8072c4:	e0fff117 	ldw	r3,-60(fp)
  8072c8:	10c00005 	stb	r3,0(r2)
  8072cc:	e0bffa17 	ldw	r2,-24(fp)
  8072d0:	108005c4 	addi	r2,r2,23
  8072d4:	e0fff117 	ldw	r3,-60(fp)
  8072d8:	18ffffcc 	andi	r3,r3,65535
  8072dc:	1806d23a 	srli	r3,r3,8
  8072e0:	10c00005 	stb	r3,0(r2)
  8072e4:	e0bffa17 	ldw	r2,-24(fp)
  8072e8:	10800904 	addi	r2,r2,36
  8072ec:	00ffe004 	movi	r3,-128
  8072f0:	10c00005 	stb	r3,0(r2)
  8072f4:	e0bffa17 	ldw	r2,-24(fp)
  8072f8:	10800984 	addi	r2,r2,38
  8072fc:	00c00a44 	movi	r3,41
  807300:	10c00005 	stb	r3,0(r2)
  807304:	e0bffa17 	ldw	r2,-24(fp)
  807308:	10800ac4 	addi	r2,r2,43
  80730c:	1009883a 	mov	r4,r2
  807310:	014020b4 	movhi	r5,130
  807314:	29778404 	addi	r5,r5,-8688
  807318:	018004c4 	movi	r6,19
  80731c:	08015480 	call	801548 <mem_cpy>
  807320:	e0bffa17 	ldw	r2,-24(fp)
  807324:	10807f84 	addi	r2,r2,510
  807328:	00c01544 	movi	r3,85
  80732c:	10c00005 	stb	r3,0(r2)
  807330:	e0bffa17 	ldw	r2,-24(fp)
  807334:	10807fc4 	addi	r2,r2,511
  807338:	00ffea84 	movi	r3,-86
  80733c:	10c00005 	stb	r3,0(r2)
  807340:	e0bff403 	ldbu	r2,-48(fp)
  807344:	1009883a 	mov	r4,r2
  807348:	e17ffa17 	ldw	r5,-24(fp)
  80734c:	e1bff517 	ldw	r6,-44(fp)
  807350:	01c00044 	movi	r7,1
  807354:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807358:	10000226 	beq	r2,zero,807364 <f_mkfs+0xa58>
  80735c:	00800044 	movi	r2,1
  807360:	00011406 	br	8077b4 <f_mkfs+0xea8>
  807364:	e0bfec03 	ldbu	r2,-80(fp)
  807368:	108000d8 	cmpnei	r2,r2,3
  80736c:	1000081e 	bne	r2,zero,807390 <f_mkfs+0xa84>
  807370:	e0fff403 	ldbu	r3,-48(fp)
  807374:	e0bff517 	ldw	r2,-44(fp)
  807378:	10800184 	addi	r2,r2,6
  80737c:	1809883a 	mov	r4,r3
  807380:	e17ffa17 	ldw	r5,-24(fp)
  807384:	100d883a 	mov	r6,r2
  807388:	01c00044 	movi	r7,1
  80738c:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807390:	e0bfef17 	ldw	r2,-68(fp)
  807394:	e0bfed15 	stw	r2,-76(fp)
  807398:	e03fee15 	stw	zero,-72(fp)
  80739c:	00008606 	br	8075b8 <f_mkfs+0xcac>
  8073a0:	e13ffa17 	ldw	r4,-24(fp)
  8073a4:	000b883a 	mov	r5,zero
  8073a8:	01808004 	movi	r6,512
  8073ac:	08015b40 	call	8015b4 <mem_set>
  8073b0:	e0bfec43 	ldbu	r2,-79(fp)
  8073b4:	e0bffb15 	stw	r2,-20(fp)
  8073b8:	e0bfec03 	ldbu	r2,-80(fp)
  8073bc:	108000e0 	cmpeqi	r2,r2,3
  8073c0:	10001f1e 	bne	r2,zero,807440 <f_mkfs+0xb34>
  8073c4:	e0bfec03 	ldbu	r2,-80(fp)
  8073c8:	10800058 	cmpnei	r2,r2,1
  8073cc:	1000031e 	bne	r2,zero,8073dc <f_mkfs+0xad0>
  8073d0:	00804034 	movhi	r2,256
  8073d4:	10bfc004 	addi	r2,r2,-256
  8073d8:	00000106 	br	8073e0 <f_mkfs+0xad4>
  8073dc:	00bfc004 	movi	r2,-256
  8073e0:	e0fffb17 	ldw	r3,-20(fp)
  8073e4:	10c4b03a 	or	r2,r2,r3
  8073e8:	e0bffb15 	stw	r2,-20(fp)
  8073ec:	e0bffb17 	ldw	r2,-20(fp)
  8073f0:	1007883a 	mov	r3,r2
  8073f4:	e0bffa17 	ldw	r2,-24(fp)
  8073f8:	10c00005 	stb	r3,0(r2)
  8073fc:	e0bffa17 	ldw	r2,-24(fp)
  807400:	10800044 	addi	r2,r2,1
  807404:	e0fffb17 	ldw	r3,-20(fp)
  807408:	18ffffcc 	andi	r3,r3,65535
  80740c:	1806d23a 	srli	r3,r3,8
  807410:	10c00005 	stb	r3,0(r2)
  807414:	e0bffa17 	ldw	r2,-24(fp)
  807418:	10800084 	addi	r2,r2,2
  80741c:	e0fffb17 	ldw	r3,-20(fp)
  807420:	1806d43a 	srli	r3,r3,16
  807424:	10c00005 	stb	r3,0(r2)
  807428:	e0bffa17 	ldw	r2,-24(fp)
  80742c:	108000c4 	addi	r2,r2,3
  807430:	e0fffb17 	ldw	r3,-20(fp)
  807434:	1806d63a 	srli	r3,r3,24
  807438:	10c00005 	stb	r3,0(r2)
  80743c:	00003806 	br	807520 <f_mkfs+0xc14>
  807440:	e0fffb17 	ldw	r3,-20(fp)
  807444:	00bfc004 	movi	r2,-256
  807448:	1884b03a 	or	r2,r3,r2
  80744c:	e0bffb15 	stw	r2,-20(fp)
  807450:	e0bffb17 	ldw	r2,-20(fp)
  807454:	1007883a 	mov	r3,r2
  807458:	e0bffa17 	ldw	r2,-24(fp)
  80745c:	10c00005 	stb	r3,0(r2)
  807460:	e0bffa17 	ldw	r2,-24(fp)
  807464:	10800044 	addi	r2,r2,1
  807468:	e0fffb17 	ldw	r3,-20(fp)
  80746c:	18ffffcc 	andi	r3,r3,65535
  807470:	1806d23a 	srli	r3,r3,8
  807474:	10c00005 	stb	r3,0(r2)
  807478:	e0bffa17 	ldw	r2,-24(fp)
  80747c:	10800084 	addi	r2,r2,2
  807480:	e0fffb17 	ldw	r3,-20(fp)
  807484:	1806d43a 	srli	r3,r3,16
  807488:	10c00005 	stb	r3,0(r2)
  80748c:	e0bffa17 	ldw	r2,-24(fp)
  807490:	108000c4 	addi	r2,r2,3
  807494:	e0fffb17 	ldw	r3,-20(fp)
  807498:	1806d63a 	srli	r3,r3,24
  80749c:	10c00005 	stb	r3,0(r2)
  8074a0:	e0bffa17 	ldw	r2,-24(fp)
  8074a4:	10800104 	addi	r2,r2,4
  8074a8:	00ffffc4 	movi	r3,-1
  8074ac:	10c00005 	stb	r3,0(r2)
  8074b0:	e0bffa17 	ldw	r2,-24(fp)
  8074b4:	10800144 	addi	r2,r2,5
  8074b8:	00ffffc4 	movi	r3,-1
  8074bc:	10c00005 	stb	r3,0(r2)
  8074c0:	e0bffa17 	ldw	r2,-24(fp)
  8074c4:	10800184 	addi	r2,r2,6
  8074c8:	00ffffc4 	movi	r3,-1
  8074cc:	10c00005 	stb	r3,0(r2)
  8074d0:	e0bffa17 	ldw	r2,-24(fp)
  8074d4:	108001c4 	addi	r2,r2,7
  8074d8:	00ffffc4 	movi	r3,-1
  8074dc:	10c00005 	stb	r3,0(r2)
  8074e0:	e0bffa17 	ldw	r2,-24(fp)
  8074e4:	10800204 	addi	r2,r2,8
  8074e8:	00ffffc4 	movi	r3,-1
  8074ec:	10c00005 	stb	r3,0(r2)
  8074f0:	e0bffa17 	ldw	r2,-24(fp)
  8074f4:	10800244 	addi	r2,r2,9
  8074f8:	00ffffc4 	movi	r3,-1
  8074fc:	10c00005 	stb	r3,0(r2)
  807500:	e0bffa17 	ldw	r2,-24(fp)
  807504:	10800284 	addi	r2,r2,10
  807508:	00ffffc4 	movi	r3,-1
  80750c:	10c00005 	stb	r3,0(r2)
  807510:	e0bffa17 	ldw	r2,-24(fp)
  807514:	108002c4 	addi	r2,r2,11
  807518:	00c003c4 	movi	r3,15
  80751c:	10c00005 	stb	r3,0(r2)
  807520:	e13ff403 	ldbu	r4,-48(fp)
  807524:	e0bfed17 	ldw	r2,-76(fp)
  807528:	10c00044 	addi	r3,r2,1
  80752c:	e0ffed15 	stw	r3,-76(fp)
  807530:	e17ffa17 	ldw	r5,-24(fp)
  807534:	100d883a 	mov	r6,r2
  807538:	01c00044 	movi	r7,1
  80753c:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807540:	10000226 	beq	r2,zero,80754c <f_mkfs+0xc40>
  807544:	00800044 	movi	r2,1
  807548:	00009a06 	br	8077b4 <f_mkfs+0xea8>
  80754c:	e13ffa17 	ldw	r4,-24(fp)
  807550:	000b883a 	mov	r5,zero
  807554:	01808004 	movi	r6,512
  807558:	08015b40 	call	8015b4 <mem_set>
  80755c:	00800044 	movi	r2,1
  807560:	e0bffb15 	stw	r2,-20(fp)
  807564:	00000e06 	br	8075a0 <f_mkfs+0xc94>
  807568:	e13ff403 	ldbu	r4,-48(fp)
  80756c:	e0bfed17 	ldw	r2,-76(fp)
  807570:	10c00044 	addi	r3,r2,1
  807574:	e0ffed15 	stw	r3,-76(fp)
  807578:	e17ffa17 	ldw	r5,-24(fp)
  80757c:	100d883a 	mov	r6,r2
  807580:	01c00044 	movi	r7,1
  807584:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807588:	10000226 	beq	r2,zero,807594 <f_mkfs+0xc88>
  80758c:	00800044 	movi	r2,1
  807590:	00008806 	br	8077b4 <f_mkfs+0xea8>
  807594:	e0bffb17 	ldw	r2,-20(fp)
  807598:	10800044 	addi	r2,r2,1
  80759c:	e0bffb15 	stw	r2,-20(fp)
  8075a0:	e0fffb17 	ldw	r3,-20(fp)
  8075a4:	e0bff117 	ldw	r2,-60(fp)
  8075a8:	18bfef36 	bltu	r3,r2,807568 <__alt_data_end+0xff807568>
  8075ac:	e0bfee17 	ldw	r2,-72(fp)
  8075b0:	10800044 	addi	r2,r2,1
  8075b4:	e0bfee15 	stw	r2,-72(fp)
  8075b8:	e0bfee17 	ldw	r2,-72(fp)
  8075bc:	103f7826 	beq	r2,zero,8073a0 <__alt_data_end+0xff8073a0>
  8075c0:	e0bfec03 	ldbu	r2,-80(fp)
  8075c4:	108000d8 	cmpnei	r2,r2,3
  8075c8:	1000021e 	bne	r2,zero,8075d4 <f_mkfs+0xcc8>
  8075cc:	e0bfff17 	ldw	r2,-4(fp)
  8075d0:	00000106 	br	8075d8 <f_mkfs+0xccc>
  8075d4:	e0bff217 	ldw	r2,-56(fp)
  8075d8:	e0bfee15 	stw	r2,-72(fp)
  8075dc:	e13ff403 	ldbu	r4,-48(fp)
  8075e0:	e0bfed17 	ldw	r2,-76(fp)
  8075e4:	10c00044 	addi	r3,r2,1
  8075e8:	e0ffed15 	stw	r3,-76(fp)
  8075ec:	e17ffa17 	ldw	r5,-24(fp)
  8075f0:	100d883a 	mov	r6,r2
  8075f4:	01c00044 	movi	r7,1
  8075f8:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  8075fc:	10000226 	beq	r2,zero,807608 <f_mkfs+0xcfc>
  807600:	00800044 	movi	r2,1
  807604:	00006b06 	br	8077b4 <f_mkfs+0xea8>
  807608:	e0bfee17 	ldw	r2,-72(fp)
  80760c:	10bfffc4 	addi	r2,r2,-1
  807610:	e0bfee15 	stw	r2,-72(fp)
  807614:	e0bfee17 	ldw	r2,-72(fp)
  807618:	103ff01e 	bne	r2,zero,8075dc <__alt_data_end+0xff8075dc>
  80761c:	e0bfec03 	ldbu	r2,-80(fp)
  807620:	108000d8 	cmpnei	r2,r2,3
  807624:	10005c1e 	bne	r2,zero,807798 <f_mkfs+0xe8c>
  807628:	e0bffa17 	ldw	r2,-24(fp)
  80762c:	00c01484 	movi	r3,82
  807630:	10c00005 	stb	r3,0(r2)
  807634:	e0bffa17 	ldw	r2,-24(fp)
  807638:	10800044 	addi	r2,r2,1
  80763c:	00c01484 	movi	r3,82
  807640:	10c00005 	stb	r3,0(r2)
  807644:	e0bffa17 	ldw	r2,-24(fp)
  807648:	10800084 	addi	r2,r2,2
  80764c:	00c01844 	movi	r3,97
  807650:	10c00005 	stb	r3,0(r2)
  807654:	e0bffa17 	ldw	r2,-24(fp)
  807658:	108000c4 	addi	r2,r2,3
  80765c:	00c01044 	movi	r3,65
  807660:	10c00005 	stb	r3,0(r2)
  807664:	e0bffa17 	ldw	r2,-24(fp)
  807668:	10807904 	addi	r2,r2,484
  80766c:	00c01c84 	movi	r3,114
  807670:	10c00005 	stb	r3,0(r2)
  807674:	e0bffa17 	ldw	r2,-24(fp)
  807678:	10807944 	addi	r2,r2,485
  80767c:	00c01c84 	movi	r3,114
  807680:	10c00005 	stb	r3,0(r2)
  807684:	e0bffa17 	ldw	r2,-24(fp)
  807688:	10807984 	addi	r2,r2,486
  80768c:	00c01044 	movi	r3,65
  807690:	10c00005 	stb	r3,0(r2)
  807694:	e0bffa17 	ldw	r2,-24(fp)
  807698:	108079c4 	addi	r2,r2,487
  80769c:	00c01844 	movi	r3,97
  8076a0:	10c00005 	stb	r3,0(r2)
  8076a4:	e0bffa17 	ldw	r2,-24(fp)
  8076a8:	10807a04 	addi	r2,r2,488
  8076ac:	e0fff717 	ldw	r3,-36(fp)
  8076b0:	18ffffc4 	addi	r3,r3,-1
  8076b4:	10c00005 	stb	r3,0(r2)
  8076b8:	e0bffa17 	ldw	r2,-24(fp)
  8076bc:	10807a44 	addi	r2,r2,489
  8076c0:	e0fff717 	ldw	r3,-36(fp)
  8076c4:	18ffffc4 	addi	r3,r3,-1
  8076c8:	18ffffcc 	andi	r3,r3,65535
  8076cc:	1806d23a 	srli	r3,r3,8
  8076d0:	10c00005 	stb	r3,0(r2)
  8076d4:	e0bffa17 	ldw	r2,-24(fp)
  8076d8:	10807a84 	addi	r2,r2,490
  8076dc:	e0fff717 	ldw	r3,-36(fp)
  8076e0:	18ffffc4 	addi	r3,r3,-1
  8076e4:	1806d43a 	srli	r3,r3,16
  8076e8:	10c00005 	stb	r3,0(r2)
  8076ec:	e0bffa17 	ldw	r2,-24(fp)
  8076f0:	10807ac4 	addi	r2,r2,491
  8076f4:	e0fff717 	ldw	r3,-36(fp)
  8076f8:	18ffffc4 	addi	r3,r3,-1
  8076fc:	1806d63a 	srli	r3,r3,24
  807700:	10c00005 	stb	r3,0(r2)
  807704:	e0bffa17 	ldw	r2,-24(fp)
  807708:	10807b04 	addi	r2,r2,492
  80770c:	00c00084 	movi	r3,2
  807710:	10c00005 	stb	r3,0(r2)
  807714:	e0bffa17 	ldw	r2,-24(fp)
  807718:	10807b44 	addi	r2,r2,493
  80771c:	10000005 	stb	zero,0(r2)
  807720:	e0bffa17 	ldw	r2,-24(fp)
  807724:	10807b84 	addi	r2,r2,494
  807728:	10000005 	stb	zero,0(r2)
  80772c:	e0bffa17 	ldw	r2,-24(fp)
  807730:	10807bc4 	addi	r2,r2,495
  807734:	10000005 	stb	zero,0(r2)
  807738:	e0bffa17 	ldw	r2,-24(fp)
  80773c:	10807f84 	addi	r2,r2,510
  807740:	00c01544 	movi	r3,85
  807744:	10c00005 	stb	r3,0(r2)
  807748:	e0bffa17 	ldw	r2,-24(fp)
  80774c:	10807fc4 	addi	r2,r2,511
  807750:	00ffea84 	movi	r3,-86
  807754:	10c00005 	stb	r3,0(r2)
  807758:	e0fff403 	ldbu	r3,-48(fp)
  80775c:	e0bff517 	ldw	r2,-44(fp)
  807760:	10800044 	addi	r2,r2,1
  807764:	1809883a 	mov	r4,r3
  807768:	e17ffa17 	ldw	r5,-24(fp)
  80776c:	100d883a 	mov	r6,r2
  807770:	01c00044 	movi	r7,1
  807774:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807778:	e0fff403 	ldbu	r3,-48(fp)
  80777c:	e0bff517 	ldw	r2,-44(fp)
  807780:	108001c4 	addi	r2,r2,7
  807784:	1809883a 	mov	r4,r3
  807788:	e17ffa17 	ldw	r5,-24(fp)
  80778c:	100d883a 	mov	r6,r2
  807790:	01c00044 	movi	r7,1
  807794:	0800f080 	call	800f08 <ffs_DiskIOWrite>
  807798:	e0bff403 	ldbu	r2,-48(fp)
  80779c:	1009883a 	mov	r4,r2
  8077a0:	000b883a 	mov	r5,zero
  8077a4:	000d883a 	mov	r6,zero
  8077a8:	08010740 	call	801074 <ffs_DiskIOIoctl>
  8077ac:	1004c03a 	cmpne	r2,r2,zero
  8077b0:	10803fcc 	andi	r2,r2,255
  8077b4:	e037883a 	mov	sp,fp
  8077b8:	dfc00117 	ldw	ra,4(sp)
  8077bc:	df000017 	ldw	fp,0(sp)
  8077c0:	dec00204 	addi	sp,sp,8
  8077c4:	f800283a 	ret

008077c8 <f_gets>:
  8077c8:	defff704 	addi	sp,sp,-36
  8077cc:	dfc00815 	stw	ra,32(sp)
  8077d0:	df000715 	stw	fp,28(sp)
  8077d4:	df000704 	addi	fp,sp,28
  8077d8:	e13ffd15 	stw	r4,-12(fp)
  8077dc:	e17ffe15 	stw	r5,-8(fp)
  8077e0:	e1bfff15 	stw	r6,-4(fp)
  8077e4:	e03ff915 	stw	zero,-28(fp)
  8077e8:	e0bffd17 	ldw	r2,-12(fp)
  8077ec:	e0bffa15 	stw	r2,-24(fp)
  8077f0:	00001906 	br	807858 <f_gets+0x90>
  8077f4:	e0fffb44 	addi	r3,fp,-19
  8077f8:	e0bffc04 	addi	r2,fp,-16
  8077fc:	e13fff17 	ldw	r4,-4(fp)
  807800:	180b883a 	mov	r5,r3
  807804:	01800044 	movi	r6,1
  807808:	100f883a 	mov	r7,r2
  80780c:	08043a40 	call	8043a4 <f_read>
  807810:	e0bffc17 	ldw	r2,-16(fp)
  807814:	10800060 	cmpeqi	r2,r2,1
  807818:	1000011e 	bne	r2,zero,807820 <f_gets+0x58>
  80781c:	00001206 	br	807868 <f_gets+0xa0>
  807820:	e0bffb43 	ldbu	r2,-19(fp)
  807824:	e0bffb05 	stb	r2,-20(fp)
  807828:	e0bffa17 	ldw	r2,-24(fp)
  80782c:	10c00044 	addi	r3,r2,1
  807830:	e0fffa15 	stw	r3,-24(fp)
  807834:	e0fffb03 	ldbu	r3,-20(fp)
  807838:	10c00005 	stb	r3,0(r2)
  80783c:	e0bff917 	ldw	r2,-28(fp)
  807840:	10800044 	addi	r2,r2,1
  807844:	e0bff915 	stw	r2,-28(fp)
  807848:	e0bffb07 	ldb	r2,-20(fp)
  80784c:	10800298 	cmpnei	r2,r2,10
  807850:	1000011e 	bne	r2,zero,807858 <f_gets+0x90>
  807854:	00000406 	br	807868 <f_gets+0xa0>
  807858:	e0bffe17 	ldw	r2,-8(fp)
  80785c:	10bfffc4 	addi	r2,r2,-1
  807860:	e0fff917 	ldw	r3,-28(fp)
  807864:	18bfe316 	blt	r3,r2,8077f4 <__alt_data_end+0xff8077f4>
  807868:	e0bffa17 	ldw	r2,-24(fp)
  80786c:	10000005 	stb	zero,0(r2)
  807870:	e0bff917 	ldw	r2,-28(fp)
  807874:	10000226 	beq	r2,zero,807880 <f_gets+0xb8>
  807878:	e0bffd17 	ldw	r2,-12(fp)
  80787c:	00000106 	br	807884 <f_gets+0xbc>
  807880:	0005883a 	mov	r2,zero
  807884:	e037883a 	mov	sp,fp
  807888:	dfc00117 	ldw	ra,4(sp)
  80788c:	df000017 	ldw	fp,0(sp)
  807890:	dec00204 	addi	sp,sp,8
  807894:	f800283a 	ret

00807898 <f_putc>:
  807898:	defff904 	addi	sp,sp,-28
  80789c:	dfc00615 	stw	ra,24(sp)
  8078a0:	df000515 	stw	fp,20(sp)
  8078a4:	df000504 	addi	fp,sp,20
  8078a8:	2005883a 	mov	r2,r4
  8078ac:	e17fff15 	stw	r5,-4(fp)
  8078b0:	e0bffe05 	stb	r2,-8(fp)
  8078b4:	e0bffe03 	ldbu	r2,-8(fp)
  8078b8:	e0bffd05 	stb	r2,-12(fp)
  8078bc:	00800044 	movi	r2,1
  8078c0:	e0bffb15 	stw	r2,-20(fp)
  8078c4:	e0fffd04 	addi	r3,fp,-12
  8078c8:	e0bffc04 	addi	r2,fp,-16
  8078cc:	e13fff17 	ldw	r4,-4(fp)
  8078d0:	180b883a 	mov	r5,r3
  8078d4:	e1bffb17 	ldw	r6,-20(fp)
  8078d8:	100f883a 	mov	r7,r2
  8078dc:	08048880 	call	804888 <f_write>
  8078e0:	e0fffc17 	ldw	r3,-16(fp)
  8078e4:	e0bffb17 	ldw	r2,-20(fp)
  8078e8:	1880021e 	bne	r3,r2,8078f4 <f_putc+0x5c>
  8078ec:	00800044 	movi	r2,1
  8078f0:	00000106 	br	8078f8 <f_putc+0x60>
  8078f4:	00bfffc4 	movi	r2,-1
  8078f8:	e037883a 	mov	sp,fp
  8078fc:	dfc00117 	ldw	ra,4(sp)
  807900:	df000017 	ldw	fp,0(sp)
  807904:	dec00204 	addi	sp,sp,8
  807908:	f800283a 	ret

0080790c <f_puts>:
  80790c:	defffb04 	addi	sp,sp,-20
  807910:	dfc00415 	stw	ra,16(sp)
  807914:	df000315 	stw	fp,12(sp)
  807918:	df000304 	addi	fp,sp,12
  80791c:	e13ffe15 	stw	r4,-8(fp)
  807920:	e17fff15 	stw	r5,-4(fp)
  807924:	e03ffd15 	stw	zero,-12(fp)
  807928:	00001206 	br	807974 <f_puts+0x68>
  80792c:	e0bffe17 	ldw	r2,-8(fp)
  807930:	10800003 	ldbu	r2,0(r2)
  807934:	10803fcc 	andi	r2,r2,255
  807938:	1080201c 	xori	r2,r2,128
  80793c:	10bfe004 	addi	r2,r2,-128
  807940:	1009883a 	mov	r4,r2
  807944:	e17fff17 	ldw	r5,-4(fp)
  807948:	08078980 	call	807898 <f_putc>
  80794c:	10bfffd8 	cmpnei	r2,r2,-1
  807950:	1000021e 	bne	r2,zero,80795c <f_puts+0x50>
  807954:	00bfffc4 	movi	r2,-1
  807958:	00000d06 	br	807990 <f_puts+0x84>
  80795c:	e0bffe17 	ldw	r2,-8(fp)
  807960:	10800044 	addi	r2,r2,1
  807964:	e0bffe15 	stw	r2,-8(fp)
  807968:	e0bffd17 	ldw	r2,-12(fp)
  80796c:	10800044 	addi	r2,r2,1
  807970:	e0bffd15 	stw	r2,-12(fp)
  807974:	e0bffe17 	ldw	r2,-8(fp)
  807978:	10800003 	ldbu	r2,0(r2)
  80797c:	10803fcc 	andi	r2,r2,255
  807980:	1080201c 	xori	r2,r2,128
  807984:	10bfe004 	addi	r2,r2,-128
  807988:	103fe81e 	bne	r2,zero,80792c <__alt_data_end+0xff80792c>
  80798c:	e0bffd17 	ldw	r2,-12(fp)
  807990:	e037883a 	mov	sp,fp
  807994:	dfc00117 	ldw	ra,4(sp)
  807998:	df000017 	ldw	fp,0(sp)
  80799c:	dec00204 	addi	sp,sp,8
  8079a0:	f800283a 	ret

008079a4 <f_printf>:
  8079a4:	deffeb04 	addi	sp,sp,-84
  8079a8:	dfc01215 	stw	ra,72(sp)
  8079ac:	df001115 	stw	fp,68(sp)
  8079b0:	df001104 	addi	fp,sp,68
  8079b4:	e13ffe15 	stw	r4,-8(fp)
  8079b8:	e1800215 	stw	r6,8(fp)
  8079bc:	e1c00315 	stw	r7,12(fp)
  8079c0:	e17fff15 	stw	r5,-4(fp)
  8079c4:	e0800204 	addi	r2,fp,8
  8079c8:	e0bff915 	stw	r2,-28(fp)
  8079cc:	e03ff515 	stw	zero,-44(fp)
  8079d0:	e0bff517 	ldw	r2,-44(fp)
  8079d4:	e0bff715 	stw	r2,-36(fp)
  8079d8:	00017806 	br	807fbc <f_printf+0x618>
  8079dc:	e0bfff17 	ldw	r2,-4(fp)
  8079e0:	10c00044 	addi	r3,r2,1
  8079e4:	e0ffff15 	stw	r3,-4(fp)
  8079e8:	10800003 	ldbu	r2,0(r2)
  8079ec:	e0bff405 	stb	r2,-48(fp)
  8079f0:	e0bff407 	ldb	r2,-48(fp)
  8079f4:	1000011e 	bne	r2,zero,8079fc <f_printf+0x58>
  8079f8:	00017306 	br	807fc8 <f_printf+0x624>
  8079fc:	e0bff407 	ldb	r2,-48(fp)
  807a00:	10800960 	cmpeqi	r2,r2,37
  807a04:	10000c1e 	bne	r2,zero,807a38 <f_printf+0x94>
  807a08:	e0bff407 	ldb	r2,-48(fp)
  807a0c:	1009883a 	mov	r4,r2
  807a10:	e17ffe17 	ldw	r5,-8(fp)
  807a14:	08078980 	call	807898 <f_putc>
  807a18:	e0bff715 	stw	r2,-36(fp)
  807a1c:	e0bff717 	ldw	r2,-36(fp)
  807a20:	10bfffe0 	cmpeqi	r2,r2,-1
  807a24:	1000031e 	bne	r2,zero,807a34 <f_printf+0x90>
  807a28:	00800044 	movi	r2,1
  807a2c:	e0bff715 	stw	r2,-36(fp)
  807a30:	00015e06 	br	807fac <f_printf+0x608>
  807a34:	00015d06 	br	807fac <f_printf+0x608>
  807a38:	e03fef05 	stb	zero,-68(fp)
  807a3c:	e03ff215 	stw	zero,-56(fp)
  807a40:	e0bfff17 	ldw	r2,-4(fp)
  807a44:	10c00044 	addi	r3,r2,1
  807a48:	e0ffff15 	stw	r3,-4(fp)
  807a4c:	10800003 	ldbu	r2,0(r2)
  807a50:	e0bff405 	stb	r2,-48(fp)
  807a54:	e0bff407 	ldb	r2,-48(fp)
  807a58:	10800c18 	cmpnei	r2,r2,48
  807a5c:	1000081e 	bne	r2,zero,807a80 <f_printf+0xdc>
  807a60:	00800044 	movi	r2,1
  807a64:	e0bfef05 	stb	r2,-68(fp)
  807a68:	e0bfff17 	ldw	r2,-4(fp)
  807a6c:	10c00044 	addi	r3,r2,1
  807a70:	e0ffff15 	stw	r3,-4(fp)
  807a74:	10800003 	ldbu	r2,0(r2)
  807a78:	e0bff405 	stb	r2,-48(fp)
  807a7c:	00000a06 	br	807aa8 <f_printf+0x104>
  807a80:	e0bff407 	ldb	r2,-48(fp)
  807a84:	10800b58 	cmpnei	r2,r2,45
  807a88:	1000071e 	bne	r2,zero,807aa8 <f_printf+0x104>
  807a8c:	00800084 	movi	r2,2
  807a90:	e0bfef05 	stb	r2,-68(fp)
  807a94:	e0bfff17 	ldw	r2,-4(fp)
  807a98:	10c00044 	addi	r3,r2,1
  807a9c:	e0ffff15 	stw	r3,-4(fp)
  807aa0:	10800003 	ldbu	r2,0(r2)
  807aa4:	e0bff405 	stb	r2,-48(fp)
  807aa8:	00000b06 	br	807ad8 <f_printf+0x134>
  807aac:	e0bff217 	ldw	r2,-56(fp)
  807ab0:	10c002a4 	muli	r3,r2,10
  807ab4:	e0bff407 	ldb	r2,-48(fp)
  807ab8:	1885883a 	add	r2,r3,r2
  807abc:	10bff404 	addi	r2,r2,-48
  807ac0:	e0bff215 	stw	r2,-56(fp)
  807ac4:	e0bfff17 	ldw	r2,-4(fp)
  807ac8:	10c00044 	addi	r3,r2,1
  807acc:	e0ffff15 	stw	r3,-4(fp)
  807ad0:	10800003 	ldbu	r2,0(r2)
  807ad4:	e0bff405 	stb	r2,-48(fp)
  807ad8:	e0bff407 	ldb	r2,-48(fp)
  807adc:	10800c10 	cmplti	r2,r2,48
  807ae0:	1000031e 	bne	r2,zero,807af0 <f_printf+0x14c>
  807ae4:	e0bff407 	ldb	r2,-48(fp)
  807ae8:	10800e90 	cmplti	r2,r2,58
  807aec:	103fef1e 	bne	r2,zero,807aac <__alt_data_end+0xff807aac>
  807af0:	e0bff407 	ldb	r2,-48(fp)
  807af4:	10801b20 	cmpeqi	r2,r2,108
  807af8:	1000031e 	bne	r2,zero,807b08 <f_printf+0x164>
  807afc:	e0bff407 	ldb	r2,-48(fp)
  807b00:	10801318 	cmpnei	r2,r2,76
  807b04:	1000081e 	bne	r2,zero,807b28 <f_printf+0x184>
  807b08:	e0bfef03 	ldbu	r2,-68(fp)
  807b0c:	10800114 	ori	r2,r2,4
  807b10:	e0bfef05 	stb	r2,-68(fp)
  807b14:	e0bfff17 	ldw	r2,-4(fp)
  807b18:	10c00044 	addi	r3,r2,1
  807b1c:	e0ffff15 	stw	r3,-4(fp)
  807b20:	10800003 	ldbu	r2,0(r2)
  807b24:	e0bff405 	stb	r2,-48(fp)
  807b28:	e0bff407 	ldb	r2,-48(fp)
  807b2c:	1000011e 	bne	r2,zero,807b34 <f_printf+0x190>
  807b30:	00012506 	br	807fc8 <f_printf+0x624>
  807b34:	e0bff403 	ldbu	r2,-48(fp)
  807b38:	e0bff445 	stb	r2,-47(fp)
  807b3c:	e0bff447 	ldb	r2,-47(fp)
  807b40:	10801850 	cmplti	r2,r2,97
  807b44:	1000061e 	bne	r2,zero,807b60 <f_printf+0x1bc>
  807b48:	e0bff447 	ldb	r2,-47(fp)
  807b4c:	10801ec8 	cmpgei	r2,r2,123
  807b50:	1000031e 	bne	r2,zero,807b60 <f_printf+0x1bc>
  807b54:	e0bff443 	ldbu	r2,-47(fp)
  807b58:	10bff804 	addi	r2,r2,-32
  807b5c:	e0bff445 	stb	r2,-47(fp)
  807b60:	e0bff447 	ldb	r2,-47(fp)
  807b64:	10bfef84 	addi	r2,r2,-66
  807b68:	10c005e8 	cmpgeui	r3,r2,23
  807b6c:	1800761e 	bne	r3,zero,807d48 <f_printf+0x3a4>
  807b70:	100690ba 	slli	r3,r2,2
  807b74:	00802034 	movhi	r2,128
  807b78:	109ee204 	addi	r2,r2,31624
  807b7c:	1885883a 	add	r2,r3,r2
  807b80:	10800017 	ldw	r2,0(r2)
  807b84:	1000683a 	jmp	r2
  807b88:	00807d18 	cmpnei	r2,zero,500
  807b8c:	00807ce8 	cmpgeui	r2,zero,499
  807b90:	00807d30 	cmpltui	r2,zero,500
  807b94:	00807d48 	cmpgei	r2,zero,501
  807b98:	00807d48 	cmpgei	r2,zero,501
  807b9c:	00807d48 	cmpgei	r2,zero,501
  807ba0:	00807d48 	cmpgei	r2,zero,501
  807ba4:	00807d48 	cmpgei	r2,zero,501
  807ba8:	00807d48 	cmpgei	r2,zero,501
  807bac:	00807d48 	cmpgei	r2,zero,501
  807bb0:	00807d48 	cmpgei	r2,zero,501
  807bb4:	00807d48 	cmpgei	r2,zero,501
  807bb8:	00807d48 	cmpgei	r2,zero,501
  807bbc:	00807d24 	muli	r2,zero,500
  807bc0:	00807d48 	cmpgei	r2,zero,501
  807bc4:	00807d48 	cmpgei	r2,zero,501
  807bc8:	00807d48 	cmpgei	r2,zero,501
  807bcc:	00807be4 	muli	r2,zero,495
  807bd0:	00807d48 	cmpgei	r2,zero,501
  807bd4:	00807d30 	cmpltui	r2,zero,500
  807bd8:	00807d48 	cmpgei	r2,zero,501
  807bdc:	00807d48 	cmpgei	r2,zero,501
  807be0:	00807d3c 	xorhi	r2,zero,500
  807be4:	e0bff917 	ldw	r2,-28(fp)
  807be8:	10c00104 	addi	r3,r2,4
  807bec:	e0fff915 	stw	r3,-28(fp)
  807bf0:	10800017 	ldw	r2,0(r2)
  807bf4:	e0bff815 	stw	r2,-32(fp)
  807bf8:	e03ff115 	stw	zero,-60(fp)
  807bfc:	00000306 	br	807c0c <f_printf+0x268>
  807c00:	e0bff117 	ldw	r2,-60(fp)
  807c04:	10800044 	addi	r2,r2,1
  807c08:	e0bff115 	stw	r2,-60(fp)
  807c0c:	e0fff817 	ldw	r3,-32(fp)
  807c10:	e0bff117 	ldw	r2,-60(fp)
  807c14:	1885883a 	add	r2,r3,r2
  807c18:	10800003 	ldbu	r2,0(r2)
  807c1c:	10803fcc 	andi	r2,r2,255
  807c20:	1080201c 	xori	r2,r2,128
  807c24:	10bfe004 	addi	r2,r2,-128
  807c28:	103ff51e 	bne	r2,zero,807c00 <__alt_data_end+0xff807c00>
  807c2c:	e03ff615 	stw	zero,-40(fp)
  807c30:	e0bfef03 	ldbu	r2,-68(fp)
  807c34:	1080008c 	andi	r2,r2,2
  807c38:	10000e1e 	bne	r2,zero,807c74 <f_printf+0x2d0>
  807c3c:	00000806 	br	807c60 <f_printf+0x2bc>
  807c40:	01000804 	movi	r4,32
  807c44:	e17ffe17 	ldw	r5,-8(fp)
  807c48:	08078980 	call	807898 <f_putc>
  807c4c:	e0bff715 	stw	r2,-36(fp)
  807c50:	e0bff717 	ldw	r2,-36(fp)
  807c54:	e0fff617 	ldw	r3,-40(fp)
  807c58:	1885883a 	add	r2,r3,r2
  807c5c:	e0bff615 	stw	r2,-40(fp)
  807c60:	e0bff117 	ldw	r2,-60(fp)
  807c64:	10c00044 	addi	r3,r2,1
  807c68:	e0fff115 	stw	r3,-60(fp)
  807c6c:	e0fff217 	ldw	r3,-56(fp)
  807c70:	10fff336 	bltu	r2,r3,807c40 <__alt_data_end+0xff807c40>
  807c74:	e13ff817 	ldw	r4,-32(fp)
  807c78:	e17ffe17 	ldw	r5,-8(fp)
  807c7c:	080790c0 	call	80790c <f_puts>
  807c80:	e0bff715 	stw	r2,-36(fp)
  807c84:	e0bff717 	ldw	r2,-36(fp)
  807c88:	e0fff617 	ldw	r3,-40(fp)
  807c8c:	1885883a 	add	r2,r3,r2
  807c90:	e0bff615 	stw	r2,-40(fp)
  807c94:	00000806 	br	807cb8 <f_printf+0x314>
  807c98:	01000804 	movi	r4,32
  807c9c:	e17ffe17 	ldw	r5,-8(fp)
  807ca0:	08078980 	call	807898 <f_putc>
  807ca4:	e0bff715 	stw	r2,-36(fp)
  807ca8:	e0bff717 	ldw	r2,-36(fp)
  807cac:	e0fff617 	ldw	r3,-40(fp)
  807cb0:	1885883a 	add	r2,r3,r2
  807cb4:	e0bff615 	stw	r2,-40(fp)
  807cb8:	e0bff117 	ldw	r2,-60(fp)
  807cbc:	10c00044 	addi	r3,r2,1
  807cc0:	e0fff115 	stw	r3,-60(fp)
  807cc4:	e0fff217 	ldw	r3,-56(fp)
  807cc8:	10fff336 	bltu	r2,r3,807c98 <__alt_data_end+0xff807c98>
  807ccc:	e0bff717 	ldw	r2,-36(fp)
  807cd0:	10bfffe0 	cmpeqi	r2,r2,-1
  807cd4:	1000031e 	bne	r2,zero,807ce4 <f_printf+0x340>
  807cd8:	e0bff617 	ldw	r2,-40(fp)
  807cdc:	e0bff715 	stw	r2,-36(fp)
  807ce0:	0000b206 	br	807fac <f_printf+0x608>
  807ce4:	0000b106 	br	807fac <f_printf+0x608>
  807ce8:	e0bff917 	ldw	r2,-28(fp)
  807cec:	10c00104 	addi	r3,r2,4
  807cf0:	e0fff915 	stw	r3,-28(fp)
  807cf4:	10800017 	ldw	r2,0(r2)
  807cf8:	10803fcc 	andi	r2,r2,255
  807cfc:	1080201c 	xori	r2,r2,128
  807d00:	10bfe004 	addi	r2,r2,-128
  807d04:	1009883a 	mov	r4,r2
  807d08:	e17ffe17 	ldw	r5,-8(fp)
  807d0c:	08078980 	call	807898 <f_putc>
  807d10:	e0bff715 	stw	r2,-36(fp)
  807d14:	0000a506 	br	807fac <f_printf+0x608>
  807d18:	00800084 	movi	r2,2
  807d1c:	e0bfef45 	stb	r2,-67(fp)
  807d20:	00000f06 	br	807d60 <f_printf+0x3bc>
  807d24:	00800204 	movi	r2,8
  807d28:	e0bfef45 	stb	r2,-67(fp)
  807d2c:	00000c06 	br	807d60 <f_printf+0x3bc>
  807d30:	00800284 	movi	r2,10
  807d34:	e0bfef45 	stb	r2,-67(fp)
  807d38:	00000906 	br	807d60 <f_printf+0x3bc>
  807d3c:	00800404 	movi	r2,16
  807d40:	e0bfef45 	stb	r2,-67(fp)
  807d44:	00000606 	br	807d60 <f_printf+0x3bc>
  807d48:	e0bff407 	ldb	r2,-48(fp)
  807d4c:	1009883a 	mov	r4,r2
  807d50:	e17ffe17 	ldw	r5,-8(fp)
  807d54:	08078980 	call	807898 <f_putc>
  807d58:	e0bff715 	stw	r2,-36(fp)
  807d5c:	00009306 	br	807fac <f_printf+0x608>
  807d60:	e0bfef03 	ldbu	r2,-68(fp)
  807d64:	1080010c 	andi	r2,r2,4
  807d68:	10000526 	beq	r2,zero,807d80 <f_printf+0x3dc>
  807d6c:	e0bff917 	ldw	r2,-28(fp)
  807d70:	10c00104 	addi	r3,r2,4
  807d74:	e0fff915 	stw	r3,-28(fp)
  807d78:	10800017 	ldw	r2,0(r2)
  807d7c:	00000c06 	br	807db0 <f_printf+0x40c>
  807d80:	e0bff447 	ldb	r2,-47(fp)
  807d84:	10801118 	cmpnei	r2,r2,68
  807d88:	1000051e 	bne	r2,zero,807da0 <f_printf+0x3fc>
  807d8c:	e0bff917 	ldw	r2,-28(fp)
  807d90:	10c00104 	addi	r3,r2,4
  807d94:	e0fff915 	stw	r3,-28(fp)
  807d98:	10800017 	ldw	r2,0(r2)
  807d9c:	00000406 	br	807db0 <f_printf+0x40c>
  807da0:	e0bff917 	ldw	r2,-28(fp)
  807da4:	10c00104 	addi	r3,r2,4
  807da8:	e0fff915 	stw	r3,-28(fp)
  807dac:	10800017 	ldw	r2,0(r2)
  807db0:	e0bff315 	stw	r2,-52(fp)
  807db4:	e0bff447 	ldb	r2,-47(fp)
  807db8:	10801118 	cmpnei	r2,r2,68
  807dbc:	1000081e 	bne	r2,zero,807de0 <f_printf+0x43c>
  807dc0:	e0bff317 	ldw	r2,-52(fp)
  807dc4:	1000060e 	bge	r2,zero,807de0 <f_printf+0x43c>
  807dc8:	e0bff317 	ldw	r2,-52(fp)
  807dcc:	0085c83a 	sub	r2,zero,r2
  807dd0:	e0bff315 	stw	r2,-52(fp)
  807dd4:	e0bfef03 	ldbu	r2,-68(fp)
  807dd8:	10800214 	ori	r2,r2,8
  807ddc:	e0bfef05 	stb	r2,-68(fp)
  807de0:	e03ff015 	stw	zero,-64(fp)
  807de4:	e0bfef43 	ldbu	r2,-67(fp)
  807de8:	e0fff317 	ldw	r3,-52(fp)
  807dec:	1809883a 	mov	r4,r3
  807df0:	100b883a 	mov	r5,r2
  807df4:	0809ac40 	call	809ac4 <__umodsi3>
  807df8:	e0bff445 	stb	r2,-47(fp)
  807dfc:	e0bfef43 	ldbu	r2,-67(fp)
  807e00:	e13ff317 	ldw	r4,-52(fp)
  807e04:	100b883a 	mov	r5,r2
  807e08:	0809abc0 	call	809abc <__udivsi3>
  807e0c:	e0bff315 	stw	r2,-52(fp)
  807e10:	e0bff447 	ldb	r2,-47(fp)
  807e14:	10800290 	cmplti	r2,r2,10
  807e18:	1000091e 	bne	r2,zero,807e40 <f_printf+0x49c>
  807e1c:	e0bff407 	ldb	r2,-48(fp)
  807e20:	10801e18 	cmpnei	r2,r2,120
  807e24:	1000021e 	bne	r2,zero,807e30 <f_printf+0x48c>
  807e28:	008009c4 	movi	r2,39
  807e2c:	00000106 	br	807e34 <f_printf+0x490>
  807e30:	008001c4 	movi	r2,7
  807e34:	e0fff443 	ldbu	r3,-47(fp)
  807e38:	10c5883a 	add	r2,r2,r3
  807e3c:	e0bff445 	stb	r2,-47(fp)
  807e40:	e0bff017 	ldw	r2,-64(fp)
  807e44:	10c00044 	addi	r3,r2,1
  807e48:	e0fff015 	stw	r3,-64(fp)
  807e4c:	e0fff443 	ldbu	r3,-47(fp)
  807e50:	18c00c04 	addi	r3,r3,48
  807e54:	1809883a 	mov	r4,r3
  807e58:	e0fffa04 	addi	r3,fp,-24
  807e5c:	1885883a 	add	r2,r3,r2
  807e60:	11000005 	stb	r4,0(r2)
  807e64:	e0bff317 	ldw	r2,-52(fp)
  807e68:	10000326 	beq	r2,zero,807e78 <f_printf+0x4d4>
  807e6c:	e0bff017 	ldw	r2,-64(fp)
  807e70:	10800430 	cmpltui	r2,r2,16
  807e74:	103fdb1e 	bne	r2,zero,807de4 <__alt_data_end+0xff807de4>
  807e78:	e0bfef03 	ldbu	r2,-68(fp)
  807e7c:	1080020c 	andi	r2,r2,8
  807e80:	10000726 	beq	r2,zero,807ea0 <f_printf+0x4fc>
  807e84:	e0bff017 	ldw	r2,-64(fp)
  807e88:	10c00044 	addi	r3,r2,1
  807e8c:	e0fff015 	stw	r3,-64(fp)
  807e90:	e0fffa04 	addi	r3,fp,-24
  807e94:	1885883a 	add	r2,r3,r2
  807e98:	00c00b44 	movi	r3,45
  807e9c:	10c00005 	stb	r3,0(r2)
  807ea0:	e0bff017 	ldw	r2,-64(fp)
  807ea4:	e0bff115 	stw	r2,-60(fp)
  807ea8:	e0bfef03 	ldbu	r2,-68(fp)
  807eac:	1080004c 	andi	r2,r2,1
  807eb0:	10000226 	beq	r2,zero,807ebc <f_printf+0x518>
  807eb4:	00800c04 	movi	r2,48
  807eb8:	00000106 	br	807ec0 <f_printf+0x51c>
  807ebc:	00800804 	movi	r2,32
  807ec0:	e0bff445 	stb	r2,-47(fp)
  807ec4:	e03ff515 	stw	zero,-44(fp)
  807ec8:	00000906 	br	807ef0 <f_printf+0x54c>
  807ecc:	e0bff447 	ldb	r2,-47(fp)
  807ed0:	1009883a 	mov	r4,r2
  807ed4:	e17ffe17 	ldw	r5,-8(fp)
  807ed8:	08078980 	call	807898 <f_putc>
  807edc:	e0bff715 	stw	r2,-36(fp)
  807ee0:	e0bff717 	ldw	r2,-36(fp)
  807ee4:	e0fff517 	ldw	r3,-44(fp)
  807ee8:	1885883a 	add	r2,r3,r2
  807eec:	e0bff515 	stw	r2,-44(fp)
  807ef0:	e0bfef03 	ldbu	r2,-68(fp)
  807ef4:	1080008c 	andi	r2,r2,2
  807ef8:	1000051e 	bne	r2,zero,807f10 <f_printf+0x56c>
  807efc:	e0bff117 	ldw	r2,-60(fp)
  807f00:	10c00044 	addi	r3,r2,1
  807f04:	e0fff115 	stw	r3,-60(fp)
  807f08:	e0fff217 	ldw	r3,-56(fp)
  807f0c:	10ffef36 	bltu	r2,r3,807ecc <__alt_data_end+0xff807ecc>
  807f10:	e0bff017 	ldw	r2,-64(fp)
  807f14:	10bfffc4 	addi	r2,r2,-1
  807f18:	e0bff015 	stw	r2,-64(fp)
  807f1c:	e0fffa04 	addi	r3,fp,-24
  807f20:	e0bff017 	ldw	r2,-64(fp)
  807f24:	1885883a 	add	r2,r3,r2
  807f28:	10800003 	ldbu	r2,0(r2)
  807f2c:	10803fcc 	andi	r2,r2,255
  807f30:	1080201c 	xori	r2,r2,128
  807f34:	10bfe004 	addi	r2,r2,-128
  807f38:	1009883a 	mov	r4,r2
  807f3c:	e17ffe17 	ldw	r5,-8(fp)
  807f40:	08078980 	call	807898 <f_putc>
  807f44:	e0bff715 	stw	r2,-36(fp)
  807f48:	e0bff717 	ldw	r2,-36(fp)
  807f4c:	e0fff517 	ldw	r3,-44(fp)
  807f50:	1885883a 	add	r2,r3,r2
  807f54:	e0bff515 	stw	r2,-44(fp)
  807f58:	e0bff017 	ldw	r2,-64(fp)
  807f5c:	103fec1e 	bne	r2,zero,807f10 <__alt_data_end+0xff807f10>
  807f60:	00000806 	br	807f84 <f_printf+0x5e0>
  807f64:	01000804 	movi	r4,32
  807f68:	e17ffe17 	ldw	r5,-8(fp)
  807f6c:	08078980 	call	807898 <f_putc>
  807f70:	e0bff715 	stw	r2,-36(fp)
  807f74:	e0bff717 	ldw	r2,-36(fp)
  807f78:	e0fff517 	ldw	r3,-44(fp)
  807f7c:	1885883a 	add	r2,r3,r2
  807f80:	e0bff515 	stw	r2,-44(fp)
  807f84:	e0bff117 	ldw	r2,-60(fp)
  807f88:	10c00044 	addi	r3,r2,1
  807f8c:	e0fff115 	stw	r3,-60(fp)
  807f90:	e0fff217 	ldw	r3,-56(fp)
  807f94:	10fff336 	bltu	r2,r3,807f64 <__alt_data_end+0xff807f64>
  807f98:	e0bff717 	ldw	r2,-36(fp)
  807f9c:	10bfffe0 	cmpeqi	r2,r2,-1
  807fa0:	1000021e 	bne	r2,zero,807fac <f_printf+0x608>
  807fa4:	e0bff517 	ldw	r2,-44(fp)
  807fa8:	e0bff715 	stw	r2,-36(fp)
  807fac:	e0fff517 	ldw	r3,-44(fp)
  807fb0:	e0bff717 	ldw	r2,-36(fp)
  807fb4:	1885883a 	add	r2,r3,r2
  807fb8:	e0bff515 	stw	r2,-44(fp)
  807fbc:	e0bff717 	ldw	r2,-36(fp)
  807fc0:	10bfffd8 	cmpnei	r2,r2,-1
  807fc4:	103e851e 	bne	r2,zero,8079dc <__alt_data_end+0xff8079dc>
  807fc8:	e0bff717 	ldw	r2,-36(fp)
  807fcc:	10bfffd8 	cmpnei	r2,r2,-1
  807fd0:	1000021e 	bne	r2,zero,807fdc <f_printf+0x638>
  807fd4:	e0bff717 	ldw	r2,-36(fp)
  807fd8:	00000106 	br	807fe0 <f_printf+0x63c>
  807fdc:	e0bff517 	ldw	r2,-44(fp)
  807fe0:	e037883a 	mov	sp,fp
  807fe4:	dfc00117 	ldw	ra,4(sp)
  807fe8:	df000017 	ldw	fp,0(sp)
  807fec:	dec00404 	addi	sp,sp,16
  807ff0:	f800283a 	ret

00807ff4 <isWav>:

#define TRUE 1
#define FALSE 0


int isWav(char* fileName) {
  807ff4:	defffc04 	addi	sp,sp,-16
  807ff8:	df000315 	stw	fp,12(sp)
  807ffc:	df000304 	addi	fp,sp,12
  808000:	e13fff15 	stw	r4,-4(fp)
	char* c = fileName;
  808004:	e0bfff17 	ldw	r2,-4(fp)
  808008:	e0bffd15 	stw	r2,-12(fp)
	int stringLength = 0;
  80800c:	e03ffe15 	stw	zero,-8(fp)
	//printf("isWav: %s\n", fileName);
	while (*c != '\0') { // Don't forget to deference!
  808010:	00000606 	br	80802c <isWav+0x38>
		c++;
  808014:	e0bffd17 	ldw	r2,-12(fp)
  808018:	10800044 	addi	r2,r2,1
  80801c:	e0bffd15 	stw	r2,-12(fp)
		stringLength++;
  808020:	e0bffe17 	ldw	r2,-8(fp)
  808024:	10800044 	addi	r2,r2,1
  808028:	e0bffe15 	stw	r2,-8(fp)

int isWav(char* fileName) {
	char* c = fileName;
	int stringLength = 0;
	//printf("isWav: %s\n", fileName);
	while (*c != '\0') { // Don't forget to deference!
  80802c:	e0bffd17 	ldw	r2,-12(fp)
  808030:	10800003 	ldbu	r2,0(r2)
  808034:	10803fcc 	andi	r2,r2,255
  808038:	1080201c 	xori	r2,r2,128
  80803c:	10bfe004 	addi	r2,r2,-128
  808040:	103ff41e 	bne	r2,zero,808014 <__alt_data_end+0xff808014>
		c++;
		stringLength++;
	}
	// Just check the last char
	if (fileName[stringLength-1] == 'V' || fileName[stringLength-1] == 'v') {
  808044:	e0bffe17 	ldw	r2,-8(fp)
  808048:	10bfffc4 	addi	r2,r2,-1
  80804c:	e0ffff17 	ldw	r3,-4(fp)
  808050:	1885883a 	add	r2,r3,r2
  808054:	10800003 	ldbu	r2,0(r2)
  808058:	10803fcc 	andi	r2,r2,255
  80805c:	1080201c 	xori	r2,r2,128
  808060:	10bfe004 	addi	r2,r2,-128
  808064:	108015a0 	cmpeqi	r2,r2,86
  808068:	10000a1e 	bne	r2,zero,808094 <isWav+0xa0>
  80806c:	e0bffe17 	ldw	r2,-8(fp)
  808070:	10bfffc4 	addi	r2,r2,-1
  808074:	e0ffff17 	ldw	r3,-4(fp)
  808078:	1885883a 	add	r2,r3,r2
  80807c:	10800003 	ldbu	r2,0(r2)
  808080:	10803fcc 	andi	r2,r2,255
  808084:	1080201c 	xori	r2,r2,128
  808088:	10bfe004 	addi	r2,r2,-128
  80808c:	10801d98 	cmpnei	r2,r2,118
  808090:	1000021e 	bne	r2,zero,80809c <isWav+0xa8>
		//printf("isWav: True\n");
		return TRUE;
  808094:	00800044 	movi	r2,1
  808098:	00000106 	br	8080a0 <isWav+0xac>
	} else {
		//printf("isWav: False\n");
		return FALSE;
  80809c:	0005883a 	mov	r2,zero
	}
}
  8080a0:	e037883a 	mov	sp,fp
  8080a4:	df000017 	ldw	fp,0(sp)
  8080a8:	dec00104 	addi	sp,sp,4
  8080ac:	f800283a 	ret

008080b0 <TimerFunction>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static alt_u32 TimerFunction (void *context)
{
  8080b0:	defffd04 	addi	sp,sp,-12
  8080b4:	dfc00215 	stw	ra,8(sp)
  8080b8:	df000115 	stw	fp,4(sp)
  8080bc:	df000104 	addi	fp,sp,4
  8080c0:	e13fff15 	stw	r4,-4(fp)
   static unsigned short wTimer10ms = 0;

   (void)context;

   Systick++;
  8080c4:	d0a36517 	ldw	r2,-29292(gp)
  8080c8:	10800044 	addi	r2,r2,1
  8080cc:	d0a36515 	stw	r2,-29292(gp)
   wTimer10ms++;
  8080d0:	d0a36d0b 	ldhu	r2,-29260(gp)
  8080d4:	10800044 	addi	r2,r2,1
  8080d8:	d0a36d0d 	sth	r2,-29260(gp)
   Timer++; /* Performance counter for this module */
  8080dc:	d0a3660b 	ldhu	r2,-29288(gp)
  8080e0:	10800044 	addi	r2,r2,1
  8080e4:	d0a3660d 	sth	r2,-29288(gp)

   if (wTimer10ms == 10)
  8080e8:	d0a36d0b 	ldhu	r2,-29260(gp)
  8080ec:	10bfffcc 	andi	r2,r2,65535
  8080f0:	10800298 	cmpnei	r2,r2,10
  8080f4:	1000021e 	bne	r2,zero,808100 <TimerFunction+0x50>
   {
      wTimer10ms = 0;
  8080f8:	d0236d0d 	sth	zero,-29260(gp)
      ffs_DiskIOTimerproc();  /* Drive timer procedure of low level disk I/O module */
  8080fc:	0800a600 	call	800a60 <ffs_DiskIOTimerproc>
   }

   return(1);
  808100:	00800044 	movi	r2,1
} /* TimerFunction */
  808104:	e037883a 	mov	sp,fp
  808108:	dfc00117 	ldw	ra,4(sp)
  80810c:	df000017 	ldw	fp,0(sp)
  808110:	dec00204 	addi	sp,sp,8
  808114:	f800283a 	ret

00808118 <IoInit>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
static void IoInit(void)
{
  808118:	defffe04 	addi	sp,sp,-8
  80811c:	dfc00115 	stw	ra,4(sp)
  808120:	df000015 	stw	fp,0(sp)
  808124:	d839883a 	mov	fp,sp
   uart0_init(115200);
  808128:	010000b4 	movhi	r4,2
  80812c:	21308004 	addi	r4,r4,-15872
  808130:	08098f00 	call	8098f0 <uart0_init>

   /* Init diskio interface */
   ffs_DiskIOInit();
  808134:	0800a340 	call	800a34 <ffs_DiskIOInit>

   //SetHighSpeed();

   /* Init timer system */
   alt_alarm_start(&alarm, 1, &TimerFunction, NULL);
  808138:	010020b4 	movhi	r4,130
  80813c:	21012c04 	addi	r4,r4,1200
  808140:	01400044 	movi	r5,1
  808144:	01802074 	movhi	r6,129
  808148:	31a02c04 	addi	r6,r6,-32592
  80814c:	000f883a 	mov	r7,zero
  808150:	0819c340 	call	819c34 <alt_alarm_start>

} /* IoInit */
  808154:	e037883a 	mov	sp,fp
  808158:	dfc00117 	ldw	ra,4(sp)
  80815c:	df000017 	ldw	fp,0(sp)
  808160:	dec00204 	addi	sp,sp,8
  808164:	f800283a 	ret

00808168 <scan_files>:
Make buttons more robust..
*/

static
FRESULT scan_files(char *path)
{
  808168:	defff304 	addi	sp,sp,-52
  80816c:	dfc00c15 	stw	ra,48(sp)
  808170:	df000b15 	stw	fp,44(sp)
  808174:	df000b04 	addi	fp,sp,44
  808178:	e13fff15 	stw	r4,-4(fp)
    DIR dirs;
    FRESULT res;
    uint8_t i;
    char *fn;

    if ((res = f_opendir(&dirs, path)) == FR_OK) {
  80817c:	e0bff804 	addi	r2,fp,-32
  808180:	1009883a 	mov	r4,r2
  808184:	e17fff17 	ldw	r5,-4(fp)
  808188:	08055c00 	call	8055c0 <f_opendir>
  80818c:	e0bff515 	stw	r2,-44(fp)
  808190:	e0bff517 	ldw	r2,-44(fp)
  808194:	10003e1e 	bne	r2,zero,808290 <scan_files+0x128>
        i = (uint8_t)strlen(path);
  808198:	e13fff17 	ldw	r4,-4(fp)
  80819c:	080c0580 	call	80c058 <strlen>
  8081a0:	e0bff605 	stb	r2,-40(fp)
        while (((res = f_readdir(&dirs, &Finfo)) == FR_OK) && Finfo.fname[0]) {
  8081a4:	00002b06 	br	808254 <scan_files+0xec>
            if (_FS_RPATH && Finfo.fname[0] == '.')
                continue;
#if _USE_LFN
            fn = *Finfo.lfname ? Finfo.lfname : Finfo.fname;
#else
            fn = Finfo.fname;
  8081a8:	008020b4 	movhi	r2,130
  8081ac:	10825344 	addi	r2,r2,2381
  8081b0:	e0bff715 	stw	r2,-36(fp)
#endif
            if (Finfo.fattrib & AM_DIR) {
  8081b4:	008020b4 	movhi	r2,130
  8081b8:	10825104 	addi	r2,r2,2372
  8081bc:	10800203 	ldbu	r2,8(r2)
  8081c0:	10803fcc 	andi	r2,r2,255
  8081c4:	1080040c 	andi	r2,r2,16
  8081c8:	10001926 	beq	r2,zero,808230 <scan_files+0xc8>
                acc_dirs++;
  8081cc:	d0a3700b 	ldhu	r2,-29248(gp)
  8081d0:	10800044 	addi	r2,r2,1
  8081d4:	d0a3700d 	sth	r2,-29248(gp)
                *(path + i) = '/';
  8081d8:	e0bff603 	ldbu	r2,-40(fp)
  8081dc:	e0ffff17 	ldw	r3,-4(fp)
  8081e0:	1885883a 	add	r2,r3,r2
  8081e4:	00c00bc4 	movi	r3,47
  8081e8:	10c00005 	stb	r3,0(r2)
                strcpy(path + i + 1, fn);
  8081ec:	e0bff603 	ldbu	r2,-40(fp)
  8081f0:	10800044 	addi	r2,r2,1
  8081f4:	e0ffff17 	ldw	r3,-4(fp)
  8081f8:	1885883a 	add	r2,r3,r2
  8081fc:	1009883a 	mov	r4,r2
  808200:	e17ff717 	ldw	r5,-36(fp)
  808204:	080bfc80 	call	80bfc8 <strcpy>
                res = scan_files(path);
  808208:	e13fff17 	ldw	r4,-4(fp)
  80820c:	08081680 	call	808168 <scan_files>
  808210:	e0bff515 	stw	r2,-44(fp)
                *(path + i) = '\0';
  808214:	e0bff603 	ldbu	r2,-40(fp)
  808218:	e0ffff17 	ldw	r3,-4(fp)
  80821c:	1885883a 	add	r2,r3,r2
  808220:	10000005 	stb	zero,0(r2)
                if (res != FR_OK)
  808224:	e0bff517 	ldw	r2,-44(fp)
  808228:	10000a26 	beq	r2,zero,808254 <scan_files+0xec>
                    break;
  80822c:	00001806 	br	808290 <scan_files+0x128>
            } else {
                //      xprintf("%s/%s\n", path, fn);
                acc_files++;
  808230:	d0a3720b 	ldhu	r2,-29240(gp)
  808234:	10800044 	addi	r2,r2,1
  808238:	d0a3720d 	sth	r2,-29240(gp)
                acc_size += Finfo.fsize;
  80823c:	008020b4 	movhi	r2,130
  808240:	10825104 	addi	r2,r2,2372
  808244:	10c00017 	ldw	r3,0(r2)
  808248:	d0a37317 	ldw	r2,-29236(gp)
  80824c:	1885883a 	add	r2,r3,r2
  808250:	d0a37315 	stw	r2,-29236(gp)
    uint8_t i;
    char *fn;

    if ((res = f_opendir(&dirs, path)) == FR_OK) {
        i = (uint8_t)strlen(path);
        while (((res = f_readdir(&dirs, &Finfo)) == FR_OK) && Finfo.fname[0]) {
  808254:	e0bff804 	addi	r2,fp,-32
  808258:	1009883a 	mov	r4,r2
  80825c:	014020b4 	movhi	r5,130
  808260:	29425104 	addi	r5,r5,2372
  808264:	08057300 	call	805730 <f_readdir>
  808268:	e0bff515 	stw	r2,-44(fp)
  80826c:	e0bff517 	ldw	r2,-44(fp)
  808270:	1000071e 	bne	r2,zero,808290 <scan_files+0x128>
  808274:	008020b4 	movhi	r2,130
  808278:	10825104 	addi	r2,r2,2372
  80827c:	10800243 	ldbu	r2,9(r2)
  808280:	10803fcc 	andi	r2,r2,255
  808284:	1080201c 	xori	r2,r2,128
  808288:	10bfe004 	addi	r2,r2,-128
  80828c:	103fc61e 	bne	r2,zero,8081a8 <__alt_data_end+0xff8081a8>
                acc_size += Finfo.fsize;
            }
        }
    }

    return res;
  808290:	e0bff517 	ldw	r2,-44(fp)
}
  808294:	e037883a 	mov	sp,fp
  808298:	dfc00117 	ldw	ra,4(sp)
  80829c:	df000017 	ldw	fp,0(sp)
  8082a0:	dec00204 	addi	sp,sp,8
  8082a4:	f800283a 	ret

008082a8 <put_rc>:


static
void put_rc(FRESULT rc)
{
  8082a8:	defffb04 	addi	sp,sp,-20
  8082ac:	dfc00415 	stw	ra,16(sp)
  8082b0:	df000315 	stw	fp,12(sp)
  8082b4:	df000304 	addi	fp,sp,12
  8082b8:	e13fff15 	stw	r4,-4(fp)
    const char *str =
  8082bc:	008020b4 	movhi	r2,130
  8082c0:	10b7b404 	addi	r2,r2,-8496
  8082c4:	e0bffd15 	stw	r2,-12(fp)
        "INVALID_NAME\0" "DENIED\0" "EXIST\0" "INVALID_OBJECT\0" "WRITE_PROTECTED\0"
        "INVALID_DRIVE\0" "NOT_ENABLED\0" "NO_FILE_SYSTEM\0" "MKFS_ABORTED\0" "TIMEOUT\0"
        "LOCKED\0" "NOT_ENOUGH_CORE\0" "TOO_MANY_OPEN_FILES\0";
    FRESULT i;

    for (i = 0; i != rc && *str; i++) {
  8082c8:	e03ffe15 	stw	zero,-8(fp)
  8082cc:	00000c06 	br	808300 <put_rc+0x58>
        while (*str++);
  8082d0:	0001883a 	nop
  8082d4:	e0bffd17 	ldw	r2,-12(fp)
  8082d8:	10c00044 	addi	r3,r2,1
  8082dc:	e0fffd15 	stw	r3,-12(fp)
  8082e0:	10800003 	ldbu	r2,0(r2)
  8082e4:	10803fcc 	andi	r2,r2,255
  8082e8:	1080201c 	xori	r2,r2,128
  8082ec:	10bfe004 	addi	r2,r2,-128
  8082f0:	103ff81e 	bne	r2,zero,8082d4 <__alt_data_end+0xff8082d4>
        "INVALID_NAME\0" "DENIED\0" "EXIST\0" "INVALID_OBJECT\0" "WRITE_PROTECTED\0"
        "INVALID_DRIVE\0" "NOT_ENABLED\0" "NO_FILE_SYSTEM\0" "MKFS_ABORTED\0" "TIMEOUT\0"
        "LOCKED\0" "NOT_ENOUGH_CORE\0" "TOO_MANY_OPEN_FILES\0";
    FRESULT i;

    for (i = 0; i != rc && *str; i++) {
  8082f4:	e0bffe17 	ldw	r2,-8(fp)
  8082f8:	10800044 	addi	r2,r2,1
  8082fc:	e0bffe15 	stw	r2,-8(fp)
  808300:	e0fffe17 	ldw	r3,-8(fp)
  808304:	e0bfff17 	ldw	r2,-4(fp)
  808308:	18800626 	beq	r3,r2,808324 <put_rc+0x7c>
  80830c:	e0bffd17 	ldw	r2,-12(fp)
  808310:	10800003 	ldbu	r2,0(r2)
  808314:	10803fcc 	andi	r2,r2,255
  808318:	1080201c 	xori	r2,r2,128
  80831c:	10bfe004 	addi	r2,r2,-128
  808320:	103feb1e 	bne	r2,zero,8082d0 <__alt_data_end+0xff8082d0>
        while (*str++);
    }
    xprintf("rc=%u FR_%s\n", (uint32_t) rc, str);
  808324:	010020b4 	movhi	r4,130
  808328:	2137e904 	addi	r4,r4,-8284
  80832c:	e17fff17 	ldw	r5,-4(fp)
  808330:	e1bffd17 	ldw	r6,-12(fp)
  808334:	080946c0 	call	80946c <xprintf>
}
  808338:	e037883a 	mov	sp,fp
  80833c:	dfc00117 	ldw	ra,4(sp)
  808340:	df000017 	ldw	fp,0(sp)
  808344:	dec00204 	addi	sp,sp,8
  808348:	f800283a 	ret

0080834c <display_help>:

static
void display_help(void)
{
  80834c:	defffe04 	addi	sp,sp,-8
  808350:	dfc00115 	stw	ra,4(sp)
  808354:	df000015 	stw	fp,0(sp)
  808358:	d839883a 	mov	fp,sp
    xputs("dd <phy_drv#> [<sector>] - Dump sector\n"
  80835c:	010020b4 	movhi	r4,130
  808360:	2137ed04 	addi	r4,r4,-8268
  808364:	080924c0 	call	80924c <xputs>
          "fz [<len>] - Get/Set transfer unit for fr command\n"
#if 0
          "t [<year> <mon> <mday> <hour> <min> <sec>] Time read/set\n"
#endif
          "h view help (this)\n");
}
  808368:	e037883a 	mov	sp,fp
  80836c:	dfc00117 	ldw	ra,4(sp)
  808370:	df000017 	ldw	fp,0(sp)
  808374:	dec00204 	addi	sp,sp,8
  808378:	f800283a 	ret

0080837c <songIndex>:

void songIndex() {
  80837c:	defff804 	addi	sp,sp,-32
  808380:	dfc00715 	stw	ra,28(sp)
  808384:	df000615 	stw	fp,24(sp)
  808388:	df000604 	addi	fp,sp,24
	long p1;
	uint32_t s1, s2;
	int count = 0;
  80838c:	e03ffd15 	stw	zero,-12(fp)
	int res;
	char * ptr;
	*ptr = '\n';
  808390:	e0bffe17 	ldw	r2,-8(fp)
  808394:	00c00284 	movi	r3,10
  808398:	10c00005 	stb	r3,0(r2)

	res = f_opendir(&Dir, ptr);
  80839c:	010020b4 	movhi	r4,130
  8083a0:	210b2e04 	addi	r4,r4,11448
  8083a4:	e17ffe17 	ldw	r5,-8(fp)
  8083a8:	08055c00 	call	8055c0 <f_opendir>
  8083ac:	e0bfff15 	stw	r2,-4(fp)
	if (res) {
  8083b0:	e0bfff17 	ldw	r2,-4(fp)
  8083b4:	10000426 	beq	r2,zero,8083c8 <songIndex+0x4c>
		put_rc(res);
  8083b8:	e0bfff17 	ldw	r2,-4(fp)
  8083bc:	1009883a 	mov	r4,r2
  8083c0:	08082a80 	call	8082a8 <put_rc>
		return;
  8083c4:	00005306 	br	808514 <songIndex+0x198>
	}
	p1 = s1 = s2 = 0;
  8083c8:	e03ffc15 	stw	zero,-16(fp)
  8083cc:	e0bffc17 	ldw	r2,-16(fp)
  8083d0:	e0bffb15 	stw	r2,-20(fp)
  8083d4:	e0bffb17 	ldw	r2,-20(fp)
  8083d8:	e0bffa15 	stw	r2,-24(fp)
	for (;;) {
		res = f_readdir(&Dir, &Finfo);
  8083dc:	010020b4 	movhi	r4,130
  8083e0:	210b2e04 	addi	r4,r4,11448
  8083e4:	014020b4 	movhi	r5,130
  8083e8:	29425104 	addi	r5,r5,2372
  8083ec:	08057300 	call	805730 <f_readdir>
  8083f0:	e0bfff15 	stw	r2,-4(fp)
		if ((res != FR_OK) || !Finfo.fname[0])
  8083f4:	e0bfff17 	ldw	r2,-4(fp)
  8083f8:	1000461e 	bne	r2,zero,808514 <songIndex+0x198>
  8083fc:	008020b4 	movhi	r2,130
  808400:	10825104 	addi	r2,r2,2372
  808404:	10800243 	ldbu	r2,9(r2)
  808408:	10803fcc 	andi	r2,r2,255
  80840c:	1080201c 	xori	r2,r2,128
  808410:	10bfe004 	addi	r2,r2,-128
  808414:	10003f26 	beq	r2,zero,808514 <songIndex+0x198>
			break;
		if (Finfo.fattrib & AM_DIR) {
  808418:	008020b4 	movhi	r2,130
  80841c:	10825104 	addi	r2,r2,2372
  808420:	10800203 	ldbu	r2,8(r2)
  808424:	10803fcc 	andi	r2,r2,255
  808428:	1080040c 	andi	r2,r2,16
  80842c:	10000426 	beq	r2,zero,808440 <songIndex+0xc4>
			s2++;
  808430:	e0bffc17 	ldw	r2,-16(fp)
  808434:	10800044 	addi	r2,r2,1
  808438:	e0bffc15 	stw	r2,-16(fp)
  80843c:	00000906 	br	808464 <songIndex+0xe8>
		} else {
			s1++;
  808440:	e0bffb17 	ldw	r2,-20(fp)
  808444:	10800044 	addi	r2,r2,1
  808448:	e0bffb15 	stw	r2,-20(fp)
			p1 += Finfo.fsize;
  80844c:	008020b4 	movhi	r2,130
  808450:	10825104 	addi	r2,r2,2372
  808454:	10c00017 	ldw	r3,0(r2)
  808458:	e0bffa17 	ldw	r2,-24(fp)
  80845c:	1885883a 	add	r2,r3,r2
  808460:	e0bffa15 	stw	r2,-24(fp)
		}
		if ( isWav( &(Finfo.fname[0]) ) ) {
  808464:	010020b4 	movhi	r4,130
  808468:	21025344 	addi	r4,r4,2381
  80846c:	0807ff40 	call	807ff4 <isWav>
  808470:	10002726 	beq	r2,zero,808510 <songIndex+0x194>
			strcpy(&fileName[count],&(Finfo.fname[0]));
  808474:	e0bffd17 	ldw	r2,-12(fp)
  808478:	10c00524 	muli	r3,r2,20
  80847c:	008020b4 	movhi	r2,130
  808480:	10825704 	addi	r2,r2,2396
  808484:	1885883a 	add	r2,r3,r2
  808488:	1009883a 	mov	r4,r2
  80848c:	014020b4 	movhi	r5,130
  808490:	29425344 	addi	r5,r5,2381
  808494:	080bfc80 	call	80bfc8 <strcpy>
			fileSize[count] = Finfo.fsize;
  808498:	008020b4 	movhi	r2,130
  80849c:	10825104 	addi	r2,r2,2372
  8084a0:	11000017 	ldw	r4,0(r2)
  8084a4:	008020b4 	movhi	r2,130
  8084a8:	10829804 	addi	r2,r2,2656
  8084ac:	e0fffd17 	ldw	r3,-12(fp)
  8084b0:	18c7883a 	add	r3,r3,r3
  8084b4:	18c7883a 	add	r3,r3,r3
  8084b8:	10c5883a 	add	r2,r2,r3
  8084bc:	11000015 	stw	r4,0(r2)
			xprintf("count %d, %s, %d\n", count, &fileName[count], fileSize[count]);
  8084c0:	e0bffd17 	ldw	r2,-12(fp)
  8084c4:	10c00524 	muli	r3,r2,20
  8084c8:	008020b4 	movhi	r2,130
  8084cc:	10825704 	addi	r2,r2,2396
  8084d0:	188d883a 	add	r6,r3,r2
  8084d4:	008020b4 	movhi	r2,130
  8084d8:	10829804 	addi	r2,r2,2656
  8084dc:	e0fffd17 	ldw	r3,-12(fp)
  8084e0:	18c7883a 	add	r3,r3,r3
  8084e4:	18c7883a 	add	r3,r3,r3
  8084e8:	10c5883a 	add	r2,r2,r3
  8084ec:	10800017 	ldw	r2,0(r2)
  8084f0:	010020b4 	movhi	r4,130
  8084f4:	21389204 	addi	r4,r4,-7608
  8084f8:	e17ffd17 	ldw	r5,-12(fp)
  8084fc:	100f883a 	mov	r7,r2
  808500:	080946c0 	call	80946c <xprintf>
			count++;
  808504:	e0bffd17 	ldw	r2,-12(fp)
  808508:	10800044 	addi	r2,r2,1
  80850c:	e0bffd15 	stw	r2,-12(fp)
		}

	}
  808510:	003fb206 	br	8083dc <__alt_data_end+0xff8083dc>
}
  808514:	e037883a 	mov	sp,fp
  808518:	dfc00117 	ldw	ra,4(sp)
  80851c:	df000017 	ldw	fp,0(sp)
  808520:	dec00204 	addi	sp,sp,8
  808524:	f800283a 	ret

00808528 <displayLCD>:

void displayLCD(char* string) {
  808528:	defffc04 	addi	sp,sp,-16
  80852c:	dfc00315 	stw	ra,12(sp)
  808530:	df000215 	stw	fp,8(sp)
  808534:	df000204 	addi	fp,sp,8
  808538:	e13fff15 	stw	r4,-4(fp)
  FILE *lcd;
  lcd = fopen("/dev/lcd_display", "w");
  80853c:	010020b4 	movhi	r4,130
  808540:	21389704 	addi	r4,r4,-7588
  808544:	014020b4 	movhi	r5,130
  808548:	29789c04 	addi	r5,r5,-7568
  80854c:	080a2f40 	call	80a2f4 <fopen>
  808550:	e0bffe15 	stw	r2,-8(fp)
  if (lcd != NULL ) {
  808554:	e0bffe17 	ldw	r2,-8(fp)
  808558:	10000a26 	beq	r2,zero,808584 <displayLCD+0x5c>
    fprintf(lcd, "%c%s", ESC, CLEAR_LCD_STRING);
  80855c:	e13ffe17 	ldw	r4,-8(fp)
  808560:	014020b4 	movhi	r5,130
  808564:	29789d04 	addi	r5,r5,-7564
  808568:	018006c4 	movi	r6,27
  80856c:	01c020b4 	movhi	r7,130
  808570:	39f89f04 	addi	r7,r7,-7556
  808574:	080a3380 	call	80a338 <fprintf>
	fprintf(lcd, string);
  808578:	e13ffe17 	ldw	r4,-8(fp)
  80857c:	e17fff17 	ldw	r5,-4(fp)
  808580:	080a3380 	call	80a338 <fprintf>
  }
  fclose( lcd );
  808584:	e13ffe17 	ldw	r4,-8(fp)
  808588:	0809bbc0 	call	809bbc <fclose>
  return;
  80858c:	0001883a 	nop
}
  808590:	e037883a 	mov	sp,fp
  808594:	dfc00117 	ldw	ra,4(sp)
  808598:	df000017 	ldw	fp,0(sp)
  80859c:	dec00204 	addi	sp,sp,8
  8085a0:	f800283a 	ret

008085a4 <handle_button_interrupts>:

#if 1
static void handle_button_interrupts(void* context, alt_u32 id) {
  8085a4:	defff604 	addi	sp,sp,-40
  8085a8:	dfc00915 	stw	ra,36(sp)
  8085ac:	df000815 	stw	fp,32(sp)
  8085b0:	df000804 	addi	fp,sp,32
  8085b4:	e13ffe15 	stw	r4,-8(fp)
  8085b8:	e17fff15 	stw	r5,-4(fp)
	// We just want the ISR stuff for the interrupt feature
	// Not using the edge register..use data reg instead lemao
	uint8_t res = 0;
  8085bc:	e03ffb05 	stb	zero,-20(fp)

	// Not sure if required
	usleep(100000);
  8085c0:	010000b4 	movhi	r4,2
  8085c4:	2121a804 	addi	r4,r4,-31072
  8085c8:	081adfc0 	call	81adfc <usleep>

	// Since the switch block will not be entered when Button 0 is released, toggle here.
	if (doubleSpeed == 1) {
  8085cc:	d0a36917 	ldw	r2,-29276(gp)
  8085d0:	10800058 	cmpnei	r2,r2,1
  8085d4:	1000011e 	bne	r2,zero,8085dc <handle_button_interrupts+0x38>
		doubleSpeed = 0;
  8085d8:	d0236915 	stw	zero,-29276(gp)
	}

	// This switch block will not be entered on rising edges (button release)
	switch(IORD(BUTTON_PIO_BASE,0)) {
  8085dc:	00804034 	movhi	r2,256
  8085e0:	10844804 	addi	r2,r2,4384
  8085e4:	10800037 	ldwio	r2,0(r2)
  8085e8:	10c002e0 	cmpeqi	r3,r2,11
  8085ec:	1800f31e 	bne	r3,zero,8089bc <handle_button_interrupts+0x418>
  8085f0:	10c00308 	cmpgei	r3,r2,12
  8085f4:	1800031e 	bne	r3,zero,808604 <handle_button_interrupts+0x60>
  8085f8:	108001e0 	cmpeqi	r2,r2,7
  8085fc:	1000061e 	bne	r2,zero,808618 <handle_button_interrupts+0x74>
				// getting lucky with race conditions tbh
//				while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
		default:
			break;
  808600:	00015406 	br	808b54 <handle_button_interrupts+0x5b0>
	if (doubleSpeed == 1) {
		doubleSpeed = 0;
	}

	// This switch block will not be entered on rising edges (button release)
	switch(IORD(BUTTON_PIO_BASE,0)) {
  808604:	10c00360 	cmpeqi	r3,r2,13
  808608:	1801081e 	bne	r3,zero,808a2c <handle_button_interrupts+0x488>
  80860c:	108003a0 	cmpeqi	r2,r2,14
  808610:	10011b1e 	bne	r2,zero,808a80 <handle_button_interrupts+0x4dc>
				// getting lucky with race conditions tbh
//				while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
		default:
			break;
  808614:	00014f06 	br	808b54 <handle_button_interrupts+0x5b0>

	// This switch block will not be entered on rising edges (button release)
	switch(IORD(BUTTON_PIO_BASE,0)) {
		case 0x7: // backwards

			if (isPlaying) { // back seek
  808618:	d0a36817 	ldw	r2,-29280(gp)
  80861c:	1000ba26 	beq	r2,zero,808908 <handle_button_interrupts+0x364>
				printf("Backseek button pressed\n");
  808620:	010020b4 	movhi	r4,130
  808624:	2138a004 	addi	r4,r4,-7552
  808628:	080bae80 	call	80bae8 <puts>
				while (IORD(BUTTON_PIO_BASE,0) != 0xf) { // break when all buttons are released
  80862c:	0000b006 	br	8088f0 <handle_button_interrupts+0x34c>

					int byteCounter = forwardStepSize;
  808630:	00820004 	movi	r2,2048
  808634:	e0bff815 	stw	r2,-32(fp)

					uint8_t ret;
					int32_t bytePtr = f_tell(&File1) - backStepSize;
  808638:	008020b4 	movhi	r2,130
  80863c:	1081c804 	addi	r2,r2,1824
  808640:	10800217 	ldw	r2,8(r2)
  808644:	00c40004 	movi	r3,4096
  808648:	10c5c83a 	sub	r2,r2,r3
  80864c:	e0bff915 	stw	r2,-28(fp)
					if (bytePtr < 0) {
  808650:	e0bff917 	ldw	r2,-28(fp)
  808654:	1000040e 	bge	r2,zero,808668 <handle_button_interrupts+0xc4>
						bytePtr = 0;
  808658:	e03ff915 	stw	zero,-28(fp)
						printf("yeeeeeeeeee\n");
  80865c:	010020b4 	movhi	r4,130
  808660:	2138a604 	addi	r4,r4,-7528
  808664:	080bae80 	call	80bae8 <puts>
					}
					ret = f_lseek(&File1, bytePtr);
  808668:	e0bff917 	ldw	r2,-28(fp)
  80866c:	010020b4 	movhi	r4,130
  808670:	2101c804 	addi	r4,r4,1824
  808674:	100b883a 	mov	r5,r2
  808678:	08050d40 	call	8050d4 <f_lseek>
  80867c:	e0bffb45 	stb	r2,-19(fp)
					if (ret != FR_OK) {
  808680:	e0bffb43 	ldbu	r2,-19(fp)
  808684:	10002726 	beq	r2,zero,808724 <handle_button_interrupts+0x180>
						printf("This is ret = %d",ret);
  808688:	e0bffb43 	ldbu	r2,-19(fp)
  80868c:	010020b4 	movhi	r4,130
  808690:	2138a904 	addi	r4,r4,-7516
  808694:	100b883a 	mov	r5,r2
  808698:	080b9e40 	call	80b9e4 <printf>
						printf("Error with f_lseek(), bytePtr: %d\n", bytePtr);
  80869c:	010020b4 	movhi	r4,130
  8086a0:	2138ae04 	addi	r4,r4,-7496
  8086a4:	e17ff917 	ldw	r5,-28(fp)
  8086a8:	080b9e40 	call	80b9e4 <printf>
						put_rc(ret); // error occurrence
  8086ac:	e0bffb43 	ldbu	r2,-19(fp)
  8086b0:	1009883a 	mov	r4,r2
  8086b4:	08082a80 	call	8082a8 <put_rc>

						// hacky scrap because we were getting
						// errors for backtracking too much?????+
						// handle the error here
						// wait for buttons to be released
						while(IORD(BUTTON_PIO_BASE,0) != 0xf);
  8086b8:	0001883a 	nop
  8086bc:	00804034 	movhi	r2,256
  8086c0:	10844804 	addi	r2,r2,4384
  8086c4:	10800037 	ldwio	r2,0(r2)
  8086c8:	108003d8 	cmpnei	r2,r2,15
  8086cc:	103ffb1e 	bne	r2,zero,8086bc <__alt_data_end+0xff8086bc>
						ret = f_open(&File1, fileName[songPointer], 1); // always 1
  8086d0:	d0a36717 	ldw	r2,-29284(gp)
  8086d4:	10c00524 	muli	r3,r2,20
  8086d8:	008020b4 	movhi	r2,130
  8086dc:	10825704 	addi	r2,r2,2396
  8086e0:	1885883a 	add	r2,r3,r2
  8086e4:	010020b4 	movhi	r4,130
  8086e8:	2101c804 	addi	r4,r4,1824
  8086ec:	100b883a 	mov	r5,r2
  8086f0:	01800044 	movi	r6,1
  8086f4:	0803f200 	call	803f20 <f_open>
  8086f8:	e0bffb45 	stb	r2,-19(fp)
						songByteCount = fileSize[songPointer];
  8086fc:	d0e36717 	ldw	r3,-29284(gp)
  808700:	008020b4 	movhi	r2,130
  808704:	10829804 	addi	r2,r2,2656
  808708:	18c7883a 	add	r3,r3,r3
  80870c:	18c7883a 	add	r3,r3,r3
  808710:	10c5883a 	add	r2,r2,r3
  808714:	10800017 	ldw	r2,0(r2)
  808718:	d0a36c15 	stw	r2,-29264(gp)
						break;
  80871c:	0001883a 	nop
  808720:	0000a506 	br	8089b8 <handle_button_interrupts+0x414>
					}

					while ( byteCounter > 0) {
  808724:	00006e06 	br	8088e0 <handle_button_interrupts+0x33c>
						if ((uint32_t) byteCounter >= bytesPerLoop) {
  808728:	e0bff817 	ldw	r2,-32(fp)
  80872c:	00c10004 	movi	r3,1024
  808730:	10c00536 	bltu	r2,r3,808748 <handle_button_interrupts+0x1a4>
							byteCounter -= bytesPerLoop;
  808734:	00810004 	movi	r2,1024
  808738:	e0fff817 	ldw	r3,-32(fp)
  80873c:	1885c83a 	sub	r2,r3,r2
  808740:	e0bff815 	stw	r2,-32(fp)
  808744:	00000106 	br	80874c <handle_button_interrupts+0x1a8>
						} else {
							byteCounter = 0;
  808748:	e03ff815 	stw	zero,-32(fp)
						}
						// play shit
						ret = f_read(&File1, &Buff, bytesPerLoop, &bytesPerLoop); // size in bytes to be read
  80874c:	00810004 	movi	r2,1024
  808750:	010020b4 	movhi	r4,130
  808754:	2101c804 	addi	r4,r4,1824
  808758:	014020b4 	movhi	r5,130
  80875c:	2942a504 	addi	r5,r5,2708
  808760:	100d883a 	mov	r6,r2
  808764:	d1e00104 	addi	r7,gp,-32764
  808768:	08043a40 	call	8043a4 <f_read>
  80876c:	e0bffb45 	stb	r2,-19(fp)
						if (res != FR_OK) {
  808770:	e0bffb03 	ldbu	r2,-20(fp)
  808774:	10000726 	beq	r2,zero,808794 <handle_button_interrupts+0x1f0>
							printf("Error with f_read()\n");
  808778:	010020b4 	movhi	r4,130
  80877c:	2138b704 	addi	r4,r4,-7460
  808780:	080bae80 	call	80bae8 <puts>
							put_rc(res); // error occurrence
  808784:	e0bffb03 	ldbu	r2,-20(fp)
  808788:	1009883a 	mov	r4,r2
  80878c:	08082a80 	call	8082a8 <put_rc>
							break;
  808790:	00005506 	br	8088e8 <handle_button_interrupts+0x344>
						}
						songByteCount -= bytesPerLoop;
  808794:	d0a36c17 	ldw	r2,-29264(gp)
  808798:	00c10004 	movi	r3,1024
  80879c:	10c5c83a 	sub	r2,r2,r3
  8087a0:	d0a36c15 	stw	r2,-29264(gp)

						int i = 0;
  8087a4:	e03ffa15 	stw	zero,-24(fp)
						for (i = 0; i < bytesPerLoop; i+= 4) {
  8087a8:	e03ffa15 	stw	zero,-24(fp)
  8087ac:	00004906 	br	8088d4 <handle_button_interrupts+0x330>
							uint32_t leftWord = 0;
  8087b0:	e03ffc15 	stw	zero,-16(fp)
							uint32_t rightWord = 0;
  8087b4:	e03ffd15 	stw	zero,-12(fp)

							leftWord |= Buff[i+1];
  8087b8:	e0bffa17 	ldw	r2,-24(fp)
  8087bc:	10c00044 	addi	r3,r2,1
  8087c0:	008020b4 	movhi	r2,130
  8087c4:	1082a504 	addi	r2,r2,2708
  8087c8:	10c5883a 	add	r2,r2,r3
  8087cc:	10800003 	ldbu	r2,0(r2)
  8087d0:	10c03fcc 	andi	r3,r2,255
  8087d4:	e0bffc17 	ldw	r2,-16(fp)
  8087d8:	1884b03a 	or	r2,r3,r2
  8087dc:	e0bffc15 	stw	r2,-16(fp)
							leftWord <<= 8;
  8087e0:	e0bffc17 	ldw	r2,-16(fp)
  8087e4:	1004923a 	slli	r2,r2,8
  8087e8:	e0bffc15 	stw	r2,-16(fp)
							leftWord |= Buff[i+0];
  8087ec:	008020b4 	movhi	r2,130
  8087f0:	1082a504 	addi	r2,r2,2708
  8087f4:	e0fffa17 	ldw	r3,-24(fp)
  8087f8:	10c5883a 	add	r2,r2,r3
  8087fc:	10800003 	ldbu	r2,0(r2)
  808800:	10c03fcc 	andi	r3,r2,255
  808804:	e0bffc17 	ldw	r2,-16(fp)
  808808:	1884b03a 	or	r2,r3,r2
  80880c:	e0bffc15 	stw	r2,-16(fp)

							rightWord |= Buff[i+3];
  808810:	e0bffa17 	ldw	r2,-24(fp)
  808814:	10c000c4 	addi	r3,r2,3
  808818:	008020b4 	movhi	r2,130
  80881c:	1082a504 	addi	r2,r2,2708
  808820:	10c5883a 	add	r2,r2,r3
  808824:	10800003 	ldbu	r2,0(r2)
  808828:	10c03fcc 	andi	r3,r2,255
  80882c:	e0bffd17 	ldw	r2,-12(fp)
  808830:	1884b03a 	or	r2,r3,r2
  808834:	e0bffd15 	stw	r2,-12(fp)
							rightWord <<= 8;
  808838:	e0bffd17 	ldw	r2,-12(fp)
  80883c:	1004923a 	slli	r2,r2,8
  808840:	e0bffd15 	stw	r2,-12(fp)
							rightWord |= Buff[i+2];
  808844:	e0bffa17 	ldw	r2,-24(fp)
  808848:	10c00084 	addi	r3,r2,2
  80884c:	008020b4 	movhi	r2,130
  808850:	1082a504 	addi	r2,r2,2708
  808854:	10c5883a 	add	r2,r2,r3
  808858:	10800003 	ldbu	r2,0(r2)
  80885c:	10c03fcc 	andi	r3,r2,255
  808860:	e0bffd17 	ldw	r2,-12(fp)
  808864:	1884b03a 	or	r2,r3,r2
  808868:	e0bffd15 	stw	r2,-12(fp)

							// play shit
							while (alt_up_audio_write_fifo_space(audio_dev, ALT_UP_AUDIO_RIGHT) < 1); // returns in units of words
  80886c:	0001883a 	nop
  808870:	d0a37117 	ldw	r2,-29244(gp)
  808874:	1009883a 	mov	r4,r2
  808878:	01400044 	movi	r5,1
  80887c:	081ce200 	call	81ce20 <alt_up_audio_write_fifo_space>
  808880:	103ffb26 	beq	r2,zero,808870 <__alt_data_end+0xff808870>
							while(isPlaying == 0);
  808884:	0001883a 	nop
  808888:	d0a36817 	ldw	r2,-29280(gp)
  80888c:	103ffe26 	beq	r2,zero,808888 <__alt_data_end+0xff808888>
							// musicWordCounter++;
							alt_up_audio_write_fifo (audio_dev, &leftWord, 1, ALT_UP_AUDIO_LEFT);
  808890:	d0e37117 	ldw	r3,-29244(gp)
  808894:	e0bffc04 	addi	r2,fp,-16
  808898:	1809883a 	mov	r4,r3
  80889c:	100b883a 	mov	r5,r2
  8088a0:	01800044 	movi	r6,1
  8088a4:	000f883a 	mov	r7,zero
  8088a8:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
							alt_up_audio_write_fifo (audio_dev, &rightWord, 1, ALT_UP_AUDIO_RIGHT);
  8088ac:	d0e37117 	ldw	r3,-29244(gp)
  8088b0:	e0bffd04 	addi	r2,fp,-12
  8088b4:	1809883a 	mov	r4,r3
  8088b8:	100b883a 	mov	r5,r2
  8088bc:	01800044 	movi	r6,1
  8088c0:	01c00044 	movi	r7,1
  8088c4:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
							break;
						}
						songByteCount -= bytesPerLoop;

						int i = 0;
						for (i = 0; i < bytesPerLoop; i+= 4) {
  8088c8:	e0bffa17 	ldw	r2,-24(fp)
  8088cc:	10800104 	addi	r2,r2,4
  8088d0:	e0bffa15 	stw	r2,-24(fp)
  8088d4:	00810004 	movi	r2,1024
  8088d8:	e0fffa17 	ldw	r3,-24(fp)
  8088dc:	18bfb416 	blt	r3,r2,8087b0 <__alt_data_end+0xff8087b0>
						ret = f_open(&File1, fileName[songPointer], 1); // always 1
						songByteCount = fileSize[songPointer];
						break;
					}

					while ( byteCounter > 0) {
  8088e0:	e0bff817 	ldw	r2,-32(fp)
  8088e4:	00bf9016 	blt	zero,r2,808728 <__alt_data_end+0xff808728>
							alt_up_audio_write_fifo (audio_dev, &leftWord, 1, ALT_UP_AUDIO_LEFT);
							alt_up_audio_write_fifo (audio_dev, &rightWord, 1, ALT_UP_AUDIO_RIGHT);
						} // end of for

					} // end of playing loop
					usleep(10000); // 10 ms
  8088e8:	0109c404 	movi	r4,10000
  8088ec:	081adfc0 	call	81adfc <usleep>
	switch(IORD(BUTTON_PIO_BASE,0)) {
		case 0x7: // backwards

			if (isPlaying) { // back seek
				printf("Backseek button pressed\n");
				while (IORD(BUTTON_PIO_BASE,0) != 0xf) { // break when all buttons are released
  8088f0:	00804034 	movhi	r2,256
  8088f4:	10844804 	addi	r2,r2,4384
  8088f8:	10800037 	ldwio	r2,0(r2)
  8088fc:	108003d8 	cmpnei	r2,r2,15
  808900:	103f4b1e 	bne	r2,zero,808630 <__alt_data_end+0xff808630>
  808904:	00002c06 	br	8089b8 <handle_button_interrupts+0x414>
					} // end of playing loop
					usleep(10000); // 10 ms
				} // end of button poll while

			} else {
				songPointer--;
  808908:	d0a36717 	ldw	r2,-29284(gp)
  80890c:	10bfffc4 	addi	r2,r2,-1
  808910:	d0a36715 	stw	r2,-29284(gp)
				if(songPointer == -1){
  808914:	d0a36717 	ldw	r2,-29284(gp)
  808918:	10bfffd8 	cmpnei	r2,r2,-1
  80891c:	1000021e 	bne	r2,zero,808928 <handle_button_interrupts+0x384>
					songPointer = numSongs-1;
  808920:	00800304 	movi	r2,12
  808924:	d0a36715 	stw	r2,-29284(gp)
				}
				//printf("songPointer: %d\n",songPointer);
				put_rc(f_open(&File1, fileName[songPointer], 1)); // always 1
  808928:	d0a36717 	ldw	r2,-29284(gp)
  80892c:	10c00524 	muli	r3,r2,20
  808930:	008020b4 	movhi	r2,130
  808934:	10825704 	addi	r2,r2,2396
  808938:	1885883a 	add	r2,r3,r2
  80893c:	010020b4 	movhi	r4,130
  808940:	2101c804 	addi	r4,r4,1824
  808944:	100b883a 	mov	r5,r2
  808948:	01800044 	movi	r6,1
  80894c:	0803f200 	call	803f20 <f_open>
  808950:	1009883a 	mov	r4,r2
  808954:	08082a80 	call	8082a8 <put_rc>
				songByteCount = fileSize[songPointer];
  808958:	d0e36717 	ldw	r3,-29284(gp)
  80895c:	008020b4 	movhi	r2,130
  808960:	10829804 	addi	r2,r2,2656
  808964:	18c7883a 	add	r3,r3,r3
  808968:	18c7883a 	add	r3,r3,r3
  80896c:	10c5883a 	add	r2,r2,r3
  808970:	10800017 	ldw	r2,0(r2)
  808974:	d0a36c15 	stw	r2,-29264(gp)
				sprintf(lcdString, "%d: %s\n", songPointer, fileName[songPointer]);
  808978:	d1a36717 	ldw	r6,-29284(gp)
  80897c:	d0a36717 	ldw	r2,-29284(gp)
  808980:	10c00524 	muli	r3,r2,20
  808984:	008020b4 	movhi	r2,130
  808988:	10825704 	addi	r2,r2,2396
  80898c:	1885883a 	add	r2,r3,r2
  808990:	010020b4 	movhi	r4,130
  808994:	210b3504 	addi	r4,r4,11476
  808998:	014020b4 	movhi	r5,130
  80899c:	2978bc04 	addi	r5,r5,-7440
  8089a0:	100f883a 	mov	r7,r2
  8089a4:	080be200 	call	80be20 <sprintf>
				displayLCD(lcdString);
  8089a8:	010020b4 	movhi	r4,130
  8089ac:	210b3504 	addi	r4,r4,11476
  8089b0:	08085280 	call	808528 <displayLCD>

				// not sure if this wait is still required...
				// while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
  8089b4:	00006706 	br	808b54 <handle_button_interrupts+0x5b0>
  8089b8:	00006606 	br	808b54 <handle_button_interrupts+0x5b0>
		case 0xb: // stop
			printf("stop\n");
  8089bc:	010020b4 	movhi	r4,130
  8089c0:	2138be04 	addi	r4,r4,-7432
  8089c4:	080bae80 	call	80bae8 <puts>
			put_rc(f_open(&File1, fileName[songPointer], 1)); // always 1
  8089c8:	d0a36717 	ldw	r2,-29284(gp)
  8089cc:	10c00524 	muli	r3,r2,20
  8089d0:	008020b4 	movhi	r2,130
  8089d4:	10825704 	addi	r2,r2,2396
  8089d8:	1885883a 	add	r2,r3,r2
  8089dc:	010020b4 	movhi	r4,130
  8089e0:	2101c804 	addi	r4,r4,1824
  8089e4:	100b883a 	mov	r5,r2
  8089e8:	01800044 	movi	r6,1
  8089ec:	0803f200 	call	803f20 <f_open>
  8089f0:	1009883a 	mov	r4,r2
  8089f4:	08082a80 	call	8082a8 <put_rc>
			songByteCount = fileSize[songPointer];
  8089f8:	d0e36717 	ldw	r3,-29284(gp)
  8089fc:	008020b4 	movhi	r2,130
  808a00:	10829804 	addi	r2,r2,2656
  808a04:	18c7883a 	add	r3,r3,r3
  808a08:	18c7883a 	add	r3,r3,r3
  808a0c:	10c5883a 	add	r2,r2,r3
  808a10:	10800017 	ldw	r2,0(r2)
  808a14:	d0a36c15 	stw	r2,-29264(gp)
			if (isPlaying) { // if playing, then pause it
  808a18:	d0a36817 	ldw	r2,-29280(gp)
  808a1c:	10000226 	beq	r2,zero,808a28 <handle_button_interrupts+0x484>
				isPlaying = 0;
  808a20:	d0236815 	stw	zero,-29280(gp)
			} //
			break;
  808a24:	00004b06 	br	808b54 <handle_button_interrupts+0x5b0>
  808a28:	00004a06 	br	808b54 <handle_button_interrupts+0x5b0>
		case 0xd: // play/pause
			usleep(100);
  808a2c:	01001904 	movi	r4,100
  808a30:	081adfc0 	call	81adfc <usleep>
			if (IORD(BUTTON_PIO_BASE,0) == 0xf) { // no trigger on release
  808a34:	00804034 	movhi	r2,256
  808a38:	10844804 	addi	r2,r2,4384
  808a3c:	10800037 	ldwio	r2,0(r2)
  808a40:	108003d8 	cmpnei	r2,r2,15
  808a44:	1000011e 	bne	r2,zero,808a4c <handle_button_interrupts+0x4a8>
				break;
  808a48:	00004206 	br	808b54 <handle_button_interrupts+0x5b0>
			}
			if (isPlaying == 0) { // pressed play
  808a4c:	d0a36817 	ldw	r2,-29280(gp)
  808a50:	1000061e 	bne	r2,zero,808a6c <handle_button_interrupts+0x4c8>
				printf("Pressed play\n");
  808a54:	010020b4 	movhi	r4,130
  808a58:	2138c004 	addi	r4,r4,-7424
  808a5c:	080bae80 	call	80bae8 <puts>
				isPlaying = 1;
  808a60:	00800044 	movi	r2,1
  808a64:	d0a36815 	stw	r2,-29280(gp)
				printf("Pressed pause\n");
				isPlaying = 0;
				//previousClust = File1.clust;
			}
			// wait for the button to be released before breaking
			break;
  808a68:	00003a06 	br	808b54 <handle_button_interrupts+0x5b0>
			if (isPlaying == 0) { // pressed play
				printf("Pressed play\n");
				isPlaying = 1;
				//File1.clust = previousClust;
			} else { // pressed pause
				printf("Pressed pause\n");
  808a6c:	010020b4 	movhi	r4,130
  808a70:	2138c404 	addi	r4,r4,-7408
  808a74:	080bae80 	call	80bae8 <puts>
				isPlaying = 0;
  808a78:	d0236815 	stw	zero,-29280(gp)
				//previousClust = File1.clust;
			}
			// wait for the button to be released before breaking
			break;
  808a7c:	00003506 	br	808b54 <handle_button_interrupts+0x5b0>
		case 0xe: // forwards
			//printf("isPlaying :%d\n", isPlaying);
			if (isPlaying) {
  808a80:	d0a36817 	ldw	r2,-29280(gp)
  808a84:	10000826 	beq	r2,zero,808aa8 <handle_button_interrupts+0x504>
				// toggle doubleSpeed
				if (doubleSpeed == 1) {
  808a88:	d0a36917 	ldw	r2,-29276(gp)
  808a8c:	10800058 	cmpnei	r2,r2,1
  808a90:	1000021e 	bne	r2,zero,808a9c <handle_button_interrupts+0x4f8>
					doubleSpeed = 0;
  808a94:	d0236915 	stw	zero,-29276(gp)
				sprintf(lcdString, "%d: %s\n", songPointer, fileName[songPointer]);
				displayLCD(lcdString);
				// getting lucky with race conditions tbh
//				while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
  808a98:	00002d06 	br	808b50 <handle_button_interrupts+0x5ac>
			if (isPlaying) {
				// toggle doubleSpeed
				if (doubleSpeed == 1) {
					doubleSpeed = 0;
				} else {
					doubleSpeed = 1;
  808a9c:	00800044 	movi	r2,1
  808aa0:	d0a36915 	stw	r2,-29276(gp)
				sprintf(lcdString, "%d: %s\n", songPointer, fileName[songPointer]);
				displayLCD(lcdString);
				// getting lucky with race conditions tbh
//				while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
  808aa4:	00002a06 	br	808b50 <handle_button_interrupts+0x5ac>
					doubleSpeed = 0;
				} else {
					doubleSpeed = 1;
				}
			} else { // not playing
				songPointer++;
  808aa8:	d0a36717 	ldw	r2,-29284(gp)
  808aac:	10800044 	addi	r2,r2,1
  808ab0:	d0a36715 	stw	r2,-29284(gp)
				if(songPointer == numSongs){
  808ab4:	d0a36717 	ldw	r2,-29284(gp)
  808ab8:	10800358 	cmpnei	r2,r2,13
  808abc:	1000011e 	bne	r2,zero,808ac4 <handle_button_interrupts+0x520>
					songPointer = 0;
  808ac0:	d0236715 	stw	zero,-29284(gp)
				}
				put_rc(f_open(&File1, fileName[songPointer], 1)); // always 1
  808ac4:	d0a36717 	ldw	r2,-29284(gp)
  808ac8:	10c00524 	muli	r3,r2,20
  808acc:	008020b4 	movhi	r2,130
  808ad0:	10825704 	addi	r2,r2,2396
  808ad4:	1885883a 	add	r2,r3,r2
  808ad8:	010020b4 	movhi	r4,130
  808adc:	2101c804 	addi	r4,r4,1824
  808ae0:	100b883a 	mov	r5,r2
  808ae4:	01800044 	movi	r6,1
  808ae8:	0803f200 	call	803f20 <f_open>
  808aec:	1009883a 	mov	r4,r2
  808af0:	08082a80 	call	8082a8 <put_rc>
				songByteCount = fileSize[songPointer];
  808af4:	d0e36717 	ldw	r3,-29284(gp)
  808af8:	008020b4 	movhi	r2,130
  808afc:	10829804 	addi	r2,r2,2656
  808b00:	18c7883a 	add	r3,r3,r3
  808b04:	18c7883a 	add	r3,r3,r3
  808b08:	10c5883a 	add	r2,r2,r3
  808b0c:	10800017 	ldw	r2,0(r2)
  808b10:	d0a36c15 	stw	r2,-29264(gp)
				sprintf(lcdString, "%d: %s\n", songPointer, fileName[songPointer]);
  808b14:	d1a36717 	ldw	r6,-29284(gp)
  808b18:	d0a36717 	ldw	r2,-29284(gp)
  808b1c:	10c00524 	muli	r3,r2,20
  808b20:	008020b4 	movhi	r2,130
  808b24:	10825704 	addi	r2,r2,2396
  808b28:	1885883a 	add	r2,r3,r2
  808b2c:	010020b4 	movhi	r4,130
  808b30:	210b3504 	addi	r4,r4,11476
  808b34:	014020b4 	movhi	r5,130
  808b38:	2978bc04 	addi	r5,r5,-7440
  808b3c:	100f883a 	mov	r7,r2
  808b40:	080be200 	call	80be20 <sprintf>
				displayLCD(lcdString);
  808b44:	010020b4 	movhi	r4,130
  808b48:	210b3504 	addi	r4,r4,11476
  808b4c:	08085280 	call	808528 <displayLCD>
				// getting lucky with race conditions tbh
//				while(IORD(BUTTON_PIO_BASE,0) != 0xf);
			}
			break;
  808b50:	0001883a 	nop
		default:
			break;
	}
	//Reset the Button's edge capture register.
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0);
  808b54:	0007883a 	mov	r3,zero
  808b58:	00804034 	movhi	r2,256
  808b5c:	10844b04 	addi	r2,r2,4396
  808b60:	10c00035 	stwio	r3,0(r2)
}
  808b64:	e037883a 	mov	sp,fp
  808b68:	dfc00117 	ldw	ra,4(sp)
  808b6c:	df000017 	ldw	fp,0(sp)
  808b70:	dec00204 	addi	sp,sp,8
  808b74:	f800283a 	ret

00808b78 <init_button_pio>:


static void init_button_pio() {
  808b78:	defffe04 	addi	sp,sp,-8
  808b7c:	dfc00115 	stw	ra,4(sp)
  808b80:	df000015 	stw	fp,0(sp)
  808b84:	d839883a 	mov	fp,sp
  // Enable all 4 button interrupts
  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_PIO_BASE, 0xf);
  808b88:	00c003c4 	movi	r3,15
  808b8c:	00804034 	movhi	r2,256
  808b90:	10844a04 	addi	r2,r2,4392
  808b94:	10c00035 	stwio	r3,0(r2)
  // Reset the edge capture register
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0x0);
  808b98:	0007883a 	mov	r3,zero
  808b9c:	00804034 	movhi	r2,256
  808ba0:	10844b04 	addi	r2,r2,4396
  808ba4:	10c00035 	stwio	r3,0(r2)
  // Register ISR
  alt_irq_register( BUTTON_PIO_IRQ, (void*) &edge_capture, handle_button_interrupts);
  808ba8:	01000044 	movi	r4,1
  808bac:	d1636f04 	addi	r5,gp,-29252
  808bb0:	01802074 	movhi	r6,129
  808bb4:	31a16904 	addi	r6,r6,-31324
  808bb8:	0819fc00 	call	819fc0 <alt_irq_register>
}
  808bbc:	e037883a 	mov	sp,fp
  808bc0:	dfc00117 	ldw	ra,4(sp)
  808bc4:	df000017 	ldw	fp,0(sp)
  808bc8:	dec00204 	addi	sp,sp,8
  808bcc:	f800283a 	ret

00808bd0 <main>:
#endif
/***************************************************************************/
/*  main                                                                   */
/***************************************************************************/
int main(void)
{
  808bd0:	defff204 	addi	sp,sp,-56
  808bd4:	dfc00d15 	stw	ra,52(sp)
  808bd8:	df000c15 	stw	fp,48(sp)
  808bdc:	df000c04 	addi	fp,sp,48
	// tests
	char* test = "test.wav";
  808be0:	008020b4 	movhi	r2,130
  808be4:	10b8c804 	addi	r2,r2,-7392
  808be8:	e0bff515 	stw	r2,-44(fp)
	printf("test isWav(): %d\n", isWav(test));
  808bec:	e13ff517 	ldw	r4,-44(fp)
  808bf0:	0807ff40 	call	807ff4 <isWav>
  808bf4:	010020b4 	movhi	r4,130
  808bf8:	2138cb04 	addi	r4,r4,-7380
  808bfc:	100b883a 	mov	r5,r2
  808c00:	080b9e40 	call	80b9e4 <printf>
	// end of tests

	// our shit
	int i = 0;
  808c04:	e03ff415 	stw	zero,-48(fp)
	unsigned int leftWord = 0;
  808c08:	e03ffc15 	stw	zero,-16(fp)
	unsigned int rightWord = 0;
  808c0c:	e03ffd15 	stw	zero,-12(fp)
	unsigned int buttonData = 0;
  808c10:	e03ff615 	stw	zero,-40(fp)
	// end of our shit

	int fifospace;
    char *ptr, *ptr2;
    long p1, p2, p3;
    uint8_t res, b1, drv = 0;
  808c14:	e03ff705 	stb	zero,-36(fp)
    uint16_t w1;
    uint32_t s1, s2, cnt, blen = sizeof(Buff);
  808c18:	00880004 	movi	r2,8192
  808c1c:	e0bff815 	stw	r2,-32(fp)
    static const uint8_t ft[] = { 0, 12, 16, 32 };
    uint32_t ofs = 0, sect = 0, blk[2];
  808c20:	e03ff915 	stw	zero,-28(fp)
  808c24:	e03ffa15 	stw	zero,-24(fp)


    /* used for audio record/playback */

    // open the Audio port
    audio_dev = alt_up_audio_open_dev ("/dev/Audio");
  808c28:	010020b4 	movhi	r4,130
  808c2c:	2138d004 	addi	r4,r4,-7360
  808c30:	081ca580 	call	81ca58 <alt_up_audio_open_dev>
  808c34:	d0a37115 	stw	r2,-29244(gp)
    if ( audio_dev == NULL)
  808c38:	d0a37117 	ldw	r2,-29244(gp)
  808c3c:	1000041e 	bne	r2,zero,808c50 <main+0x80>
    alt_printf ("Error: could not open audio device \n");
  808c40:	010020b4 	movhi	r4,130
  808c44:	2138d304 	addi	r4,r4,-7348
  808c48:	081a7980 	call	81a798 <alt_printf>
  808c4c:	00000306 	br	808c5c <main+0x8c>
    else
    alt_printf ("Opened audio device \n");
  808c50:	010020b4 	movhi	r4,130
  808c54:	2138dd04 	addi	r4,r4,-7308
  808c58:	081a7980 	call	81a798 <alt_printf>

    IoInit();
  808c5c:	08081180 	call	808118 <IoInit>

    //IOWR(SEVEN_SEG_PIO_BASE,0,0xFF07);

    xputs(PSTR("FatFs module test monitor\n"));
  808c60:	010020b4 	movhi	r4,130
  808c64:	2138e304 	addi	r4,r4,-7284
  808c68:	080924c0 	call	80924c <xputs>
    xputs(_USE_LFN ? "LFN Enabled" : "LFN Disabled");
  808c6c:	010020b4 	movhi	r4,130
  808c70:	2138ea04 	addi	r4,r4,-7256
  808c74:	080924c0 	call	80924c <xputs>
    xprintf(", Code page: %u\n", _CODE_PAGE);
  808c78:	010020b4 	movhi	r4,130
  808c7c:	2138ee04 	addi	r4,r4,-7240
  808c80:	01413884 	movi	r5,1250
  808c84:	080946c0 	call	80946c <xprintf>

    display_help();
  808c88:	080834c0 	call	80834c <display_help>

    // Our Initialization shit

    // di 0
    xprintf("rc=%d\n", (uint16_t) disk_initialize((uint8_t) 0));
  808c8c:	0009883a 	mov	r4,zero
  808c90:	0800b680 	call	800b68 <ffs_DiskIOInitialize>
  808c94:	10803fcc 	andi	r2,r2,255
  808c98:	010020b4 	movhi	r4,130
  808c9c:	2138f304 	addi	r4,r4,-7220
  808ca0:	100b883a 	mov	r5,r2
  808ca4:	080946c0 	call	80946c <xprintf>
    // fi 0
    put_rc(f_mount((uint8_t) 0, &Fatfs[0]));
  808ca8:	0009883a 	mov	r4,zero
  808cac:	014020b4 	movhi	r5,130
  808cb0:	29413c04 	addi	r5,r5,1264
  808cb4:	0803e8c0 	call	803e8c <f_mount>
  808cb8:	1009883a 	mov	r4,r2
  808cbc:	08082a80 	call	8082a8 <put_rc>

    // must happen before displaying lcd
	songIndex();
  808cc0:	080837c0 	call	80837c <songIndex>
	sprintf(lcdString, "%d: %s\n", songPointer, fileName[songPointer]);
  808cc4:	d1a36717 	ldw	r6,-29284(gp)
  808cc8:	d0a36717 	ldw	r2,-29284(gp)
  808ccc:	10c00524 	muli	r3,r2,20
  808cd0:	008020b4 	movhi	r2,130
  808cd4:	10825704 	addi	r2,r2,2396
  808cd8:	1885883a 	add	r2,r3,r2
  808cdc:	010020b4 	movhi	r4,130
  808ce0:	210b3504 	addi	r4,r4,11476
  808ce4:	014020b4 	movhi	r5,130
  808ce8:	2978bc04 	addi	r5,r5,-7440
  808cec:	100f883a 	mov	r7,r2
  808cf0:	080be200 	call	80be20 <sprintf>
	displayLCD(lcdString);
  808cf4:	010020b4 	movhi	r4,130
  808cf8:	210b3504 	addi	r4,r4,11476
  808cfc:	08085280 	call	808528 <displayLCD>

    // initilize interrupts
    init_button_pio();
  808d00:	0808b780 	call	808b78 <init_button_pio>

    // open the first file or else pressing play will fry
	put_rc(f_open(&File1, fileName[songPointer], 1)); // always 1
  808d04:	d0a36717 	ldw	r2,-29284(gp)
  808d08:	10c00524 	muli	r3,r2,20
  808d0c:	008020b4 	movhi	r2,130
  808d10:	10825704 	addi	r2,r2,2396
  808d14:	1885883a 	add	r2,r3,r2
  808d18:	010020b4 	movhi	r4,130
  808d1c:	2101c804 	addi	r4,r4,1824
  808d20:	100b883a 	mov	r5,r2
  808d24:	01800044 	movi	r6,1
  808d28:	0803f200 	call	803f20 <f_open>
  808d2c:	1009883a 	mov	r4,r2
  808d30:	08082a80 	call	8082a8 <put_rc>
	songByteCount = fileSize[songPointer];
  808d34:	d0e36717 	ldw	r3,-29284(gp)
  808d38:	008020b4 	movhi	r2,130
  808d3c:	10829804 	addi	r2,r2,2656
  808d40:	18c7883a 	add	r3,r3,r3
  808d44:	18c7883a 	add	r3,r3,r3
  808d48:	10c5883a 	add	r2,r2,r3
  808d4c:	10800017 	ldw	r2,0(r2)
  808d50:	d0a36c15 	stw	r2,-29264(gp)

    // Design spec: When the song ends, we go into pause mode

    // Read the maximum amount of bytes
    // 256 (32-bit) words which is 1024 bytes
    musicWordCounter = 0;
  808d54:	d0236e15 	stw	zero,-29256(gp)

#if !CMD_LINE
    while (1) {

		while ( songByteCount > 0) {
  808d58:	00006f06 	br	808f18 <main+0x348>

			if ((uint32_t) songByteCount >= bytesPerLoop) {
  808d5c:	00810004 	movi	r2,1024
  808d60:	1007883a 	mov	r3,r2
  808d64:	d0a36c17 	ldw	r2,-29264(gp)
  808d68:	10c00536 	bltu	r2,r3,808d80 <main+0x1b0>
				songByteCount -= bytesPerLoop;
  808d6c:	d0a36c17 	ldw	r2,-29264(gp)
  808d70:	00c10004 	movi	r3,1024
  808d74:	10c5c83a 	sub	r2,r2,r3
  808d78:	d0a36c15 	stw	r2,-29264(gp)
  808d7c:	00000106 	br	808d84 <main+0x1b4>
			} else {
				songByteCount = 0;
  808d80:	d0236c15 	stw	zero,-29264(gp)
			}
			res = f_read(&File1, &Buff, bytesPerLoop, &bytesPerLoop); // size in bytes to be read
  808d84:	00810004 	movi	r2,1024
  808d88:	010020b4 	movhi	r4,130
  808d8c:	2101c804 	addi	r4,r4,1824
  808d90:	014020b4 	movhi	r5,130
  808d94:	2942a504 	addi	r5,r5,2708
  808d98:	100d883a 	mov	r6,r2
  808d9c:	d1e00104 	addi	r7,gp,-32764
  808da0:	08043a40 	call	8043a4 <f_read>
  808da4:	e0bffb05 	stb	r2,-20(fp)
			if (res != FR_OK) {
  808da8:	e0bffb03 	ldbu	r2,-20(fp)
  808dac:	10000426 	beq	r2,zero,808dc0 <main+0x1f0>
				put_rc(res); // error occurrence
  808db0:	e0bffb03 	ldbu	r2,-20(fp)
  808db4:	1009883a 	mov	r4,r2
  808db8:	08082a80 	call	8082a8 <put_rc>
				break;
  808dbc:	00005806 	br	808f20 <main+0x350>
			}
			//
			for (i = 0; i < bytesPerLoop; i+= (4 + doubleSpeed*4) ) {
  808dc0:	e03ff415 	stw	zero,-48(fp)
  808dc4:	00005106 	br	808f0c <main+0x33c>
				leftWord = 0;
  808dc8:	e03ffc15 	stw	zero,-16(fp)
				rightWord = 0;
  808dcc:	e03ffd15 	stw	zero,-12(fp)

				leftWord |= Buff[i+1];
  808dd0:	e0bff417 	ldw	r2,-48(fp)
  808dd4:	10c00044 	addi	r3,r2,1
  808dd8:	008020b4 	movhi	r2,130
  808ddc:	1082a504 	addi	r2,r2,2708
  808de0:	10c5883a 	add	r2,r2,r3
  808de4:	10800003 	ldbu	r2,0(r2)
  808de8:	10c03fcc 	andi	r3,r2,255
  808dec:	e0bffc17 	ldw	r2,-16(fp)
  808df0:	1884b03a 	or	r2,r3,r2
  808df4:	e0bffc15 	stw	r2,-16(fp)
				leftWord <<= 8;
  808df8:	e0bffc17 	ldw	r2,-16(fp)
  808dfc:	1004923a 	slli	r2,r2,8
  808e00:	e0bffc15 	stw	r2,-16(fp)
				leftWord |= Buff[i+0];
  808e04:	008020b4 	movhi	r2,130
  808e08:	1082a504 	addi	r2,r2,2708
  808e0c:	e0fff417 	ldw	r3,-48(fp)
  808e10:	10c5883a 	add	r2,r2,r3
  808e14:	10800003 	ldbu	r2,0(r2)
  808e18:	10c03fcc 	andi	r3,r2,255
  808e1c:	e0bffc17 	ldw	r2,-16(fp)
  808e20:	1884b03a 	or	r2,r3,r2
  808e24:	e0bffc15 	stw	r2,-16(fp)

				rightWord |= Buff[i+3];
  808e28:	e0bff417 	ldw	r2,-48(fp)
  808e2c:	10c000c4 	addi	r3,r2,3
  808e30:	008020b4 	movhi	r2,130
  808e34:	1082a504 	addi	r2,r2,2708
  808e38:	10c5883a 	add	r2,r2,r3
  808e3c:	10800003 	ldbu	r2,0(r2)
  808e40:	10c03fcc 	andi	r3,r2,255
  808e44:	e0bffd17 	ldw	r2,-12(fp)
  808e48:	1884b03a 	or	r2,r3,r2
  808e4c:	e0bffd15 	stw	r2,-12(fp)
				rightWord <<= 8;
  808e50:	e0bffd17 	ldw	r2,-12(fp)
  808e54:	1004923a 	slli	r2,r2,8
  808e58:	e0bffd15 	stw	r2,-12(fp)
				rightWord |= Buff[i+2];
  808e5c:	e0bff417 	ldw	r2,-48(fp)
  808e60:	10c00084 	addi	r3,r2,2
  808e64:	008020b4 	movhi	r2,130
  808e68:	1082a504 	addi	r2,r2,2708
  808e6c:	10c5883a 	add	r2,r2,r3
  808e70:	10800003 	ldbu	r2,0(r2)
  808e74:	10c03fcc 	andi	r3,r2,255
  808e78:	e0bffd17 	ldw	r2,-12(fp)
  808e7c:	1884b03a 	or	r2,r3,r2
  808e80:	e0bffd15 	stw	r2,-12(fp)

				while (alt_up_audio_write_fifo_space(audio_dev, ALT_UP_AUDIO_RIGHT) < 1); // returns in units of words
  808e84:	0001883a 	nop
  808e88:	d0a37117 	ldw	r2,-29244(gp)
  808e8c:	1009883a 	mov	r4,r2
  808e90:	01400044 	movi	r5,1
  808e94:	081ce200 	call	81ce20 <alt_up_audio_write_fifo_space>
  808e98:	103ffb26 	beq	r2,zero,808e88 <__alt_data_end+0xff808e88>
				while(isPlaying == 0);
  808e9c:	0001883a 	nop
  808ea0:	d0a36817 	ldw	r2,-29280(gp)
  808ea4:	103ffe26 	beq	r2,zero,808ea0 <__alt_data_end+0xff808ea0>

				musicWordCounter++;
  808ea8:	d0a36e17 	ldw	r2,-29256(gp)
  808eac:	10800044 	addi	r2,r2,1
  808eb0:	d0a36e15 	stw	r2,-29256(gp)

				alt_up_audio_write_fifo (audio_dev, &leftWord, 1, ALT_UP_AUDIO_LEFT);
  808eb4:	d0e37117 	ldw	r3,-29244(gp)
  808eb8:	e0bffc04 	addi	r2,fp,-16
  808ebc:	1809883a 	mov	r4,r3
  808ec0:	100b883a 	mov	r5,r2
  808ec4:	01800044 	movi	r6,1
  808ec8:	000f883a 	mov	r7,zero
  808ecc:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
				alt_up_audio_write_fifo (audio_dev, &rightWord, 1, ALT_UP_AUDIO_RIGHT);
  808ed0:	d0e37117 	ldw	r3,-29244(gp)
  808ed4:	e0bffd04 	addi	r2,fp,-12
  808ed8:	1809883a 	mov	r4,r3
  808edc:	100b883a 	mov	r5,r2
  808ee0:	01800044 	movi	r6,1
  808ee4:	01c00044 	movi	r7,1
  808ee8:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
			if (res != FR_OK) {
				put_rc(res); // error occurrence
				break;
			}
			//
			for (i = 0; i < bytesPerLoop; i+= (4 + doubleSpeed*4) ) {
  808eec:	d0a36917 	ldw	r2,-29276(gp)
  808ef0:	10800044 	addi	r2,r2,1
  808ef4:	1085883a 	add	r2,r2,r2
  808ef8:	1085883a 	add	r2,r2,r2
  808efc:	1007883a 	mov	r3,r2
  808f00:	e0bff417 	ldw	r2,-48(fp)
  808f04:	10c5883a 	add	r2,r2,r3
  808f08:	e0bff415 	stw	r2,-48(fp)
  808f0c:	00810004 	movi	r2,1024
  808f10:	e0fff417 	ldw	r3,-48(fp)
  808f14:	18bfac16 	blt	r3,r2,808dc8 <__alt_data_end+0xff808dc8>
    musicWordCounter = 0;

#if !CMD_LINE
    while (1) {

		while ( songByteCount > 0) {
  808f18:	d0a36c17 	ldw	r2,-29264(gp)
  808f1c:	103f8f1e 	bne	r2,zero,808d5c <__alt_data_end+0xff808d5c>
				alt_up_audio_write_fifo (audio_dev, &rightWord, 1, ALT_UP_AUDIO_RIGHT);
			} // end for loop
		} // end while

		//printf("song over\n");
		isPlaying = 0;
  808f20:	d0236815 	stw	zero,-29280(gp)
		put_rc(f_open(&File1, fileName[songPointer], 1)); // always 1
  808f24:	d0a36717 	ldw	r2,-29284(gp)
  808f28:	10c00524 	muli	r3,r2,20
  808f2c:	008020b4 	movhi	r2,130
  808f30:	10825704 	addi	r2,r2,2396
  808f34:	1885883a 	add	r2,r3,r2
  808f38:	010020b4 	movhi	r4,130
  808f3c:	2101c804 	addi	r4,r4,1824
  808f40:	100b883a 	mov	r5,r2
  808f44:	01800044 	movi	r6,1
  808f48:	0803f200 	call	803f20 <f_open>
  808f4c:	1009883a 	mov	r4,r2
  808f50:	08082a80 	call	8082a8 <put_rc>
		songByteCount = fileSize[songPointer];
  808f54:	d0e36717 	ldw	r3,-29284(gp)
  808f58:	008020b4 	movhi	r2,130
  808f5c:	10829804 	addi	r2,r2,2656
  808f60:	18c7883a 	add	r3,r3,r3
  808f64:	18c7883a 	add	r3,r3,r3
  808f68:	10c5883a 	add	r2,r2,r3
  808f6c:	10800017 	ldw	r2,0(r2)
  808f70:	d0a36c15 	stw	r2,-29264(gp)
		//printf("after song is over isPlaying=%d\n",isPlaying);
    }
  808f74:	003f7806 	br	808d58 <__alt_data_end+0xff808d58>

00808f78 <xatoi>:
  808f78:	defffb04 	addi	sp,sp,-20
  808f7c:	df000415 	stw	fp,16(sp)
  808f80:	df000404 	addi	fp,sp,16
  808f84:	e13ffe15 	stw	r4,-8(fp)
  808f88:	e17fff15 	stw	r5,-4(fp)
  808f8c:	e03ffd85 	stb	zero,-10(fp)
  808f90:	00000506 	br	808fa8 <xatoi+0x30>
  808f94:	e0bffe17 	ldw	r2,-8(fp)
  808f98:	10800017 	ldw	r2,0(r2)
  808f9c:	10c00044 	addi	r3,r2,1
  808fa0:	e0bffe17 	ldw	r2,-8(fp)
  808fa4:	10c00015 	stw	r3,0(r2)
  808fa8:	e0bffe17 	ldw	r2,-8(fp)
  808fac:	10800017 	ldw	r2,0(r2)
  808fb0:	10800003 	ldbu	r2,0(r2)
  808fb4:	e0bffd05 	stb	r2,-12(fp)
  808fb8:	e0bffd03 	ldbu	r2,-12(fp)
  808fbc:	10800820 	cmpeqi	r2,r2,32
  808fc0:	103ff41e 	bne	r2,zero,808f94 <__alt_data_end+0xff808f94>
  808fc4:	e0bffd03 	ldbu	r2,-12(fp)
  808fc8:	10800b58 	cmpnei	r2,r2,45
  808fcc:	10000b1e 	bne	r2,zero,808ffc <xatoi+0x84>
  808fd0:	00800044 	movi	r2,1
  808fd4:	e0bffd85 	stb	r2,-10(fp)
  808fd8:	e0bffe17 	ldw	r2,-8(fp)
  808fdc:	10800017 	ldw	r2,0(r2)
  808fe0:	10c00044 	addi	r3,r2,1
  808fe4:	e0bffe17 	ldw	r2,-8(fp)
  808fe8:	10c00015 	stw	r3,0(r2)
  808fec:	e0bffe17 	ldw	r2,-8(fp)
  808ff0:	10800017 	ldw	r2,0(r2)
  808ff4:	10800003 	ldbu	r2,0(r2)
  808ff8:	e0bffd05 	stb	r2,-12(fp)
  808ffc:	e0bffd03 	ldbu	r2,-12(fp)
  809000:	10800c18 	cmpnei	r2,r2,48
  809004:	1000391e 	bne	r2,zero,8090ec <xatoi+0x174>
  809008:	e0bffe17 	ldw	r2,-8(fp)
  80900c:	10800017 	ldw	r2,0(r2)
  809010:	10c00044 	addi	r3,r2,1
  809014:	e0bffe17 	ldw	r2,-8(fp)
  809018:	10c00015 	stw	r3,0(r2)
  80901c:	e0bffe17 	ldw	r2,-8(fp)
  809020:	10800017 	ldw	r2,0(r2)
  809024:	10800003 	ldbu	r2,0(r2)
  809028:	e0bffd05 	stb	r2,-12(fp)
  80902c:	e0bffd03 	ldbu	r2,-12(fp)
  809030:	10800868 	cmpgeui	r2,r2,33
  809034:	1000041e 	bne	r2,zero,809048 <xatoi+0xd0>
  809038:	e0bfff17 	ldw	r2,-4(fp)
  80903c:	10000015 	stw	zero,0(r2)
  809040:	00800044 	movi	r2,1
  809044:	00006906 	br	8091ec <xatoi+0x274>
  809048:	e0bffd03 	ldbu	r2,-12(fp)
  80904c:	10801e18 	cmpnei	r2,r2,120
  809050:	10000c1e 	bne	r2,zero,809084 <xatoi+0x10c>
  809054:	00800404 	movi	r2,16
  809058:	e0bffd45 	stb	r2,-11(fp)
  80905c:	e0bffe17 	ldw	r2,-8(fp)
  809060:	10800017 	ldw	r2,0(r2)
  809064:	10c00044 	addi	r3,r2,1
  809068:	e0bffe17 	ldw	r2,-8(fp)
  80906c:	10c00015 	stw	r3,0(r2)
  809070:	e0bffe17 	ldw	r2,-8(fp)
  809074:	10800017 	ldw	r2,0(r2)
  809078:	10800003 	ldbu	r2,0(r2)
  80907c:	e0bffd05 	stb	r2,-12(fp)
  809080:	00002406 	br	809114 <xatoi+0x19c>
  809084:	e0bffd03 	ldbu	r2,-12(fp)
  809088:	10801898 	cmpnei	r2,r2,98
  80908c:	10000c1e 	bne	r2,zero,8090c0 <xatoi+0x148>
  809090:	00800084 	movi	r2,2
  809094:	e0bffd45 	stb	r2,-11(fp)
  809098:	e0bffe17 	ldw	r2,-8(fp)
  80909c:	10800017 	ldw	r2,0(r2)
  8090a0:	10c00044 	addi	r3,r2,1
  8090a4:	e0bffe17 	ldw	r2,-8(fp)
  8090a8:	10c00015 	stw	r3,0(r2)
  8090ac:	e0bffe17 	ldw	r2,-8(fp)
  8090b0:	10800017 	ldw	r2,0(r2)
  8090b4:	10800003 	ldbu	r2,0(r2)
  8090b8:	e0bffd05 	stb	r2,-12(fp)
  8090bc:	00001506 	br	809114 <xatoi+0x19c>
  8090c0:	e0bffd03 	ldbu	r2,-12(fp)
  8090c4:	10800c30 	cmpltui	r2,r2,48
  8090c8:	1000061e 	bne	r2,zero,8090e4 <xatoi+0x16c>
  8090cc:	e0bffd03 	ldbu	r2,-12(fp)
  8090d0:	10800ea8 	cmpgeui	r2,r2,58
  8090d4:	1000031e 	bne	r2,zero,8090e4 <xatoi+0x16c>
  8090d8:	00800204 	movi	r2,8
  8090dc:	e0bffd45 	stb	r2,-11(fp)
  8090e0:	00000c06 	br	809114 <xatoi+0x19c>
  8090e4:	0005883a 	mov	r2,zero
  8090e8:	00004006 	br	8091ec <xatoi+0x274>
  8090ec:	e0bffd03 	ldbu	r2,-12(fp)
  8090f0:	10800c70 	cmpltui	r2,r2,49
  8090f4:	1000031e 	bne	r2,zero,809104 <xatoi+0x18c>
  8090f8:	e0bffd03 	ldbu	r2,-12(fp)
  8090fc:	10800eb0 	cmpltui	r2,r2,58
  809100:	1000021e 	bne	r2,zero,80910c <xatoi+0x194>
  809104:	0005883a 	mov	r2,zero
  809108:	00003806 	br	8091ec <xatoi+0x274>
  80910c:	00800284 	movi	r2,10
  809110:	e0bffd45 	stb	r2,-11(fp)
  809114:	e03ffc15 	stw	zero,-16(fp)
  809118:	00002806 	br	8091bc <xatoi+0x244>
  80911c:	e0bffd03 	ldbu	r2,-12(fp)
  809120:	10801870 	cmpltui	r2,r2,97
  809124:	1000031e 	bne	r2,zero,809134 <xatoi+0x1bc>
  809128:	e0bffd03 	ldbu	r2,-12(fp)
  80912c:	10bff804 	addi	r2,r2,-32
  809130:	e0bffd05 	stb	r2,-12(fp)
  809134:	e0bffd03 	ldbu	r2,-12(fp)
  809138:	10bff404 	addi	r2,r2,-48
  80913c:	e0bffd05 	stb	r2,-12(fp)
  809140:	e0bffd03 	ldbu	r2,-12(fp)
  809144:	10800470 	cmpltui	r2,r2,17
  809148:	1000081e 	bne	r2,zero,80916c <xatoi+0x1f4>
  80914c:	e0bffd03 	ldbu	r2,-12(fp)
  809150:	10bffe44 	addi	r2,r2,-7
  809154:	e0bffd05 	stb	r2,-12(fp)
  809158:	e0bffd03 	ldbu	r2,-12(fp)
  80915c:	108002a8 	cmpgeui	r2,r2,10
  809160:	1000021e 	bne	r2,zero,80916c <xatoi+0x1f4>
  809164:	0005883a 	mov	r2,zero
  809168:	00002006 	br	8091ec <xatoi+0x274>
  80916c:	e0fffd03 	ldbu	r3,-12(fp)
  809170:	e0bffd43 	ldbu	r2,-11(fp)
  809174:	18800236 	bltu	r3,r2,809180 <xatoi+0x208>
  809178:	0005883a 	mov	r2,zero
  80917c:	00001b06 	br	8091ec <xatoi+0x274>
  809180:	e0fffd43 	ldbu	r3,-11(fp)
  809184:	e0bffc17 	ldw	r2,-16(fp)
  809188:	1887383a 	mul	r3,r3,r2
  80918c:	e0bffd03 	ldbu	r2,-12(fp)
  809190:	1885883a 	add	r2,r3,r2
  809194:	e0bffc15 	stw	r2,-16(fp)
  809198:	e0bffe17 	ldw	r2,-8(fp)
  80919c:	10800017 	ldw	r2,0(r2)
  8091a0:	10c00044 	addi	r3,r2,1
  8091a4:	e0bffe17 	ldw	r2,-8(fp)
  8091a8:	10c00015 	stw	r3,0(r2)
  8091ac:	e0bffe17 	ldw	r2,-8(fp)
  8091b0:	10800017 	ldw	r2,0(r2)
  8091b4:	10800003 	ldbu	r2,0(r2)
  8091b8:	e0bffd05 	stb	r2,-12(fp)
  8091bc:	e0bffd03 	ldbu	r2,-12(fp)
  8091c0:	10800868 	cmpgeui	r2,r2,33
  8091c4:	103fd51e 	bne	r2,zero,80911c <__alt_data_end+0xff80911c>
  8091c8:	e0bffd83 	ldbu	r2,-10(fp)
  8091cc:	10000326 	beq	r2,zero,8091dc <xatoi+0x264>
  8091d0:	e0bffc17 	ldw	r2,-16(fp)
  8091d4:	0085c83a 	sub	r2,zero,r2
  8091d8:	e0bffc15 	stw	r2,-16(fp)
  8091dc:	e0fffc17 	ldw	r3,-16(fp)
  8091e0:	e0bfff17 	ldw	r2,-4(fp)
  8091e4:	10c00015 	stw	r3,0(r2)
  8091e8:	00800044 	movi	r2,1
  8091ec:	e037883a 	mov	sp,fp
  8091f0:	df000017 	ldw	fp,0(sp)
  8091f4:	dec00104 	addi	sp,sp,4
  8091f8:	f800283a 	ret

008091fc <xputc>:
  8091fc:	defffd04 	addi	sp,sp,-12
  809200:	dfc00215 	stw	ra,8(sp)
  809204:	df000115 	stw	fp,4(sp)
  809208:	df000104 	addi	fp,sp,4
  80920c:	2005883a 	mov	r2,r4
  809210:	e0bfff05 	stb	r2,-4(fp)
  809214:	e0bfff07 	ldb	r2,-4(fp)
  809218:	10800298 	cmpnei	r2,r2,10
  80921c:	1000021e 	bne	r2,zero,809228 <xputc+0x2c>
  809220:	01000344 	movi	r4,13
  809224:	08099100 	call	809910 <uart0_put>
  809228:	e0bfff03 	ldbu	r2,-4(fp)
  80922c:	10803fcc 	andi	r2,r2,255
  809230:	1009883a 	mov	r4,r2
  809234:	08099100 	call	809910 <uart0_put>
  809238:	e037883a 	mov	sp,fp
  80923c:	dfc00117 	ldw	ra,4(sp)
  809240:	df000017 	ldw	fp,0(sp)
  809244:	dec00204 	addi	sp,sp,8
  809248:	f800283a 	ret

0080924c <xputs>:
  80924c:	defffd04 	addi	sp,sp,-12
  809250:	dfc00215 	stw	ra,8(sp)
  809254:	df000115 	stw	fp,4(sp)
  809258:	df000104 	addi	fp,sp,4
  80925c:	e13fff15 	stw	r4,-4(fp)
  809260:	00000906 	br	809288 <xputs+0x3c>
  809264:	e0bfff17 	ldw	r2,-4(fp)
  809268:	10c00044 	addi	r3,r2,1
  80926c:	e0ffff15 	stw	r3,-4(fp)
  809270:	10800003 	ldbu	r2,0(r2)
  809274:	10803fcc 	andi	r2,r2,255
  809278:	1080201c 	xori	r2,r2,128
  80927c:	10bfe004 	addi	r2,r2,-128
  809280:	1009883a 	mov	r4,r2
  809284:	08091fc0 	call	8091fc <xputc>
  809288:	e0bfff17 	ldw	r2,-4(fp)
  80928c:	10800003 	ldbu	r2,0(r2)
  809290:	10803fcc 	andi	r2,r2,255
  809294:	1080201c 	xori	r2,r2,128
  809298:	10bfe004 	addi	r2,r2,-128
  80929c:	103ff11e 	bne	r2,zero,809264 <__alt_data_end+0xff809264>
  8092a0:	e037883a 	mov	sp,fp
  8092a4:	dfc00117 	ldw	ra,4(sp)
  8092a8:	df000017 	ldw	fp,0(sp)
  8092ac:	dec00204 	addi	sp,sp,8
  8092b0:	f800283a 	ret

008092b4 <xitoa>:
  8092b4:	defff304 	addi	sp,sp,-52
  8092b8:	dfc00c15 	stw	ra,48(sp)
  8092bc:	df000b15 	stw	fp,44(sp)
  8092c0:	df000b04 	addi	fp,sp,44
  8092c4:	e13ffd15 	stw	r4,-12(fp)
  8092c8:	2807883a 	mov	r3,r5
  8092cc:	3005883a 	mov	r2,r6
  8092d0:	e0fffe05 	stb	r3,-8(fp)
  8092d4:	e0bfff05 	stb	r2,-4(fp)
  8092d8:	e03ff545 	stb	zero,-43(fp)
  8092dc:	00800804 	movi	r2,32
  8092e0:	e0bff585 	stb	r2,-42(fp)
  8092e4:	e03ff5c5 	stb	zero,-41(fp)
  8092e8:	e0bffe07 	ldb	r2,-8(fp)
  8092ec:	10000a0e 	bge	r2,zero,809318 <xitoa+0x64>
  8092f0:	e0bffe03 	ldbu	r2,-8(fp)
  8092f4:	0085c83a 	sub	r2,zero,r2
  8092f8:	e0bffe05 	stb	r2,-8(fp)
  8092fc:	e0bffd17 	ldw	r2,-12(fp)
  809300:	1000050e 	bge	r2,zero,809318 <xitoa+0x64>
  809304:	e0bffd17 	ldw	r2,-12(fp)
  809308:	0085c83a 	sub	r2,zero,r2
  80930c:	e0bffd15 	stw	r2,-12(fp)
  809310:	00800b44 	movi	r2,45
  809314:	e0bff545 	stb	r2,-43(fp)
  809318:	e0bffd17 	ldw	r2,-12(fp)
  80931c:	e0bff615 	stw	r2,-40(fp)
  809320:	e0bffe03 	ldbu	r2,-8(fp)
  809324:	e0bff705 	stb	r2,-36(fp)
  809328:	e0bfff07 	ldb	r2,-4(fp)
  80932c:	1000050e 	bge	r2,zero,809344 <xitoa+0x90>
  809330:	e0bfff03 	ldbu	r2,-4(fp)
  809334:	0085c83a 	sub	r2,zero,r2
  809338:	e0bfff05 	stb	r2,-4(fp)
  80933c:	00800c04 	movi	r2,48
  809340:	e0bff585 	stb	r2,-42(fp)
  809344:	e0bfff07 	ldb	r2,-4(fp)
  809348:	10800550 	cmplti	r2,r2,21
  80934c:	10004226 	beq	r2,zero,809458 <xitoa+0x1a4>
  809350:	e0bff703 	ldbu	r2,-36(fp)
  809354:	e0fff617 	ldw	r3,-40(fp)
  809358:	1809883a 	mov	r4,r3
  80935c:	100b883a 	mov	r5,r2
  809360:	0809ac40 	call	809ac4 <__umodsi3>
  809364:	e0bff505 	stb	r2,-44(fp)
  809368:	e0bff503 	ldbu	r2,-44(fp)
  80936c:	108002b0 	cmpltui	r2,r2,10
  809370:	1000031e 	bne	r2,zero,809380 <xitoa+0xcc>
  809374:	e0bff503 	ldbu	r2,-44(fp)
  809378:	108001c4 	addi	r2,r2,7
  80937c:	e0bff505 	stb	r2,-44(fp)
  809380:	e0bff503 	ldbu	r2,-44(fp)
  809384:	10800c04 	addi	r2,r2,48
  809388:	e0bff505 	stb	r2,-44(fp)
  80938c:	e0bff5c3 	ldbu	r2,-41(fp)
  809390:	10c00044 	addi	r3,r2,1
  809394:	e0fff5c5 	stb	r3,-41(fp)
  809398:	10803fcc 	andi	r2,r2,255
  80939c:	e0fff744 	addi	r3,fp,-35
  8093a0:	1885883a 	add	r2,r3,r2
  8093a4:	e0fff503 	ldbu	r3,-44(fp)
  8093a8:	10c00005 	stb	r3,0(r2)
  8093ac:	e0bff703 	ldbu	r2,-36(fp)
  8093b0:	e13ff617 	ldw	r4,-40(fp)
  8093b4:	100b883a 	mov	r5,r2
  8093b8:	0809abc0 	call	809abc <__udivsi3>
  8093bc:	e0bff615 	stw	r2,-40(fp)
  8093c0:	e0bff617 	ldw	r2,-40(fp)
  8093c4:	103fe21e 	bne	r2,zero,809350 <__alt_data_end+0xff809350>
  8093c8:	e0bff543 	ldbu	r2,-43(fp)
  8093cc:	10000826 	beq	r2,zero,8093f0 <xitoa+0x13c>
  8093d0:	e0bff5c3 	ldbu	r2,-41(fp)
  8093d4:	10c00044 	addi	r3,r2,1
  8093d8:	e0fff5c5 	stb	r3,-41(fp)
  8093dc:	10803fcc 	andi	r2,r2,255
  8093e0:	e0fff744 	addi	r3,fp,-35
  8093e4:	1885883a 	add	r2,r3,r2
  8093e8:	e0fff543 	ldbu	r3,-43(fp)
  8093ec:	10c00005 	stb	r3,0(r2)
  8093f0:	00000806 	br	809414 <xitoa+0x160>
  8093f4:	e0bff5c3 	ldbu	r2,-41(fp)
  8093f8:	10c00044 	addi	r3,r2,1
  8093fc:	e0fff5c5 	stb	r3,-41(fp)
  809400:	10803fcc 	andi	r2,r2,255
  809404:	e0fff744 	addi	r3,fp,-35
  809408:	1885883a 	add	r2,r3,r2
  80940c:	e0fff583 	ldbu	r3,-42(fp)
  809410:	10c00005 	stb	r3,0(r2)
  809414:	e0fff5c3 	ldbu	r3,-41(fp)
  809418:	e0bfff07 	ldb	r2,-4(fp)
  80941c:	18bff516 	blt	r3,r2,8093f4 <__alt_data_end+0xff8093f4>
  809420:	e0bff5c3 	ldbu	r2,-41(fp)
  809424:	10bfffc4 	addi	r2,r2,-1
  809428:	e0bff5c5 	stb	r2,-41(fp)
  80942c:	e0bff5c3 	ldbu	r2,-41(fp)
  809430:	e0fff744 	addi	r3,fp,-35
  809434:	1885883a 	add	r2,r3,r2
  809438:	10800003 	ldbu	r2,0(r2)
  80943c:	10803fcc 	andi	r2,r2,255
  809440:	1080201c 	xori	r2,r2,128
  809444:	10bfe004 	addi	r2,r2,-128
  809448:	1009883a 	mov	r4,r2
  80944c:	08091fc0 	call	8091fc <xputc>
  809450:	e0bff5c3 	ldbu	r2,-41(fp)
  809454:	103ff21e 	bne	r2,zero,809420 <__alt_data_end+0xff809420>
  809458:	e037883a 	mov	sp,fp
  80945c:	dfc00117 	ldw	ra,4(sp)
  809460:	df000017 	ldw	fp,0(sp)
  809464:	dec00204 	addi	sp,sp,8
  809468:	f800283a 	ret

0080946c <xprintf>:
  80946c:	defff704 	addi	sp,sp,-36
  809470:	dfc00515 	stw	ra,20(sp)
  809474:	df000415 	stw	fp,16(sp)
  809478:	df000404 	addi	fp,sp,16
  80947c:	e1400215 	stw	r5,8(fp)
  809480:	e1800315 	stw	r6,12(fp)
  809484:	e1c00415 	stw	r7,16(fp)
  809488:	e13fff15 	stw	r4,-4(fp)
  80948c:	e0800204 	addi	r2,fp,8
  809490:	e0bffe15 	stw	r2,-8(fp)
  809494:	00009406 	br	8096e8 <xprintf+0x27c>
  809498:	e0bffc07 	ldb	r2,-16(fp)
  80949c:	10800960 	cmpeqi	r2,r2,37
  8094a0:	1000041e 	bne	r2,zero,8094b4 <xprintf+0x48>
  8094a4:	e0bffc07 	ldb	r2,-16(fp)
  8094a8:	1009883a 	mov	r4,r2
  8094ac:	08091fc0 	call	8091fc <xputc>
  8094b0:	00008d06 	br	8096e8 <xprintf+0x27c>
  8094b4:	e0bfff17 	ldw	r2,-4(fp)
  8094b8:	10c00044 	addi	r3,r2,1
  8094bc:	e0ffff15 	stw	r3,-4(fp)
  8094c0:	10800003 	ldbu	r2,0(r2)
  8094c4:	e0bffc05 	stb	r2,-16(fp)
  8094c8:	e03ffd05 	stb	zero,-12(fp)
  8094cc:	e0bffd03 	ldbu	r2,-12(fp)
  8094d0:	e0bffcc5 	stb	r2,-13(fp)
  8094d4:	e0bffcc3 	ldbu	r2,-13(fp)
  8094d8:	e0bffc45 	stb	r2,-15(fp)
  8094dc:	e0bffc43 	ldbu	r2,-15(fp)
  8094e0:	e0bffc85 	stb	r2,-14(fp)
  8094e4:	e0bffc07 	ldb	r2,-16(fp)
  8094e8:	10800c18 	cmpnei	r2,r2,48
  8094ec:	1000071e 	bne	r2,zero,80950c <xprintf+0xa0>
  8094f0:	e0bfff17 	ldw	r2,-4(fp)
  8094f4:	10c00044 	addi	r3,r2,1
  8094f8:	e0ffff15 	stw	r3,-4(fp)
  8094fc:	10800003 	ldbu	r2,0(r2)
  809500:	e0bffc05 	stb	r2,-16(fp)
  809504:	00800044 	movi	r2,1
  809508:	e0bffcc5 	stb	r2,-13(fp)
  80950c:	00000f06 	br	80954c <xprintf+0xe0>
  809510:	e0bffc83 	ldbu	r2,-14(fp)
  809514:	108002a4 	muli	r2,r2,10
  809518:	1007883a 	mov	r3,r2
  80951c:	e0bffc03 	ldbu	r2,-16(fp)
  809520:	1885883a 	add	r2,r3,r2
  809524:	1007883a 	mov	r3,r2
  809528:	e0bffc83 	ldbu	r2,-14(fp)
  80952c:	1885883a 	add	r2,r3,r2
  809530:	10bff404 	addi	r2,r2,-48
  809534:	e0bffc85 	stb	r2,-14(fp)
  809538:	e0bfff17 	ldw	r2,-4(fp)
  80953c:	10c00044 	addi	r3,r2,1
  809540:	e0ffff15 	stw	r3,-4(fp)
  809544:	10800003 	ldbu	r2,0(r2)
  809548:	e0bffc05 	stb	r2,-16(fp)
  80954c:	e0bffc07 	ldb	r2,-16(fp)
  809550:	10800c10 	cmplti	r2,r2,48
  809554:	1000031e 	bne	r2,zero,809564 <xprintf+0xf8>
  809558:	e0bffc07 	ldb	r2,-16(fp)
  80955c:	10800e90 	cmplti	r2,r2,58
  809560:	103feb1e 	bne	r2,zero,809510 <__alt_data_end+0xff809510>
  809564:	e0bffcc7 	ldb	r2,-13(fp)
  809568:	10000326 	beq	r2,zero,809578 <xprintf+0x10c>
  80956c:	e0bffc83 	ldbu	r2,-14(fp)
  809570:	0085c83a 	sub	r2,zero,r2
  809574:	e0bffc85 	stb	r2,-14(fp)
  809578:	e0bffc07 	ldb	r2,-16(fp)
  80957c:	10801b18 	cmpnei	r2,r2,108
  809580:	1000071e 	bne	r2,zero,8095a0 <xprintf+0x134>
  809584:	00800044 	movi	r2,1
  809588:	e0bffd05 	stb	r2,-12(fp)
  80958c:	e0bfff17 	ldw	r2,-4(fp)
  809590:	10c00044 	addi	r3,r2,1
  809594:	e0ffff15 	stw	r3,-4(fp)
  809598:	10800003 	ldbu	r2,0(r2)
  80959c:	e0bffc05 	stb	r2,-16(fp)
  8095a0:	e0bffc07 	ldb	r2,-16(fp)
  8095a4:	1000011e 	bne	r2,zero,8095ac <xprintf+0x140>
  8095a8:	00005606 	br	809704 <xprintf+0x298>
  8095ac:	e0bffc07 	ldb	r2,-16(fp)
  8095b0:	10801cd8 	cmpnei	r2,r2,115
  8095b4:	1000071e 	bne	r2,zero,8095d4 <xprintf+0x168>
  8095b8:	e0bffe17 	ldw	r2,-8(fp)
  8095bc:	10c00104 	addi	r3,r2,4
  8095c0:	e0fffe15 	stw	r3,-8(fp)
  8095c4:	10800017 	ldw	r2,0(r2)
  8095c8:	1009883a 	mov	r4,r2
  8095cc:	080924c0 	call	80924c <xputs>
  8095d0:	00004506 	br	8096e8 <xprintf+0x27c>
  8095d4:	e0bffc07 	ldb	r2,-16(fp)
  8095d8:	108018d8 	cmpnei	r2,r2,99
  8095dc:	10000a1e 	bne	r2,zero,809608 <xprintf+0x19c>
  8095e0:	e0bffe17 	ldw	r2,-8(fp)
  8095e4:	10c00104 	addi	r3,r2,4
  8095e8:	e0fffe15 	stw	r3,-8(fp)
  8095ec:	10800017 	ldw	r2,0(r2)
  8095f0:	10803fcc 	andi	r2,r2,255
  8095f4:	1080201c 	xori	r2,r2,128
  8095f8:	10bfe004 	addi	r2,r2,-128
  8095fc:	1009883a 	mov	r4,r2
  809600:	08091fc0 	call	8091fc <xputc>
  809604:	00003806 	br	8096e8 <xprintf+0x27c>
  809608:	e0bffc07 	ldb	r2,-16(fp)
  80960c:	10801d58 	cmpnei	r2,r2,117
  809610:	1000021e 	bne	r2,zero,80961c <xprintf+0x1b0>
  809614:	00800284 	movi	r2,10
  809618:	e0bffc45 	stb	r2,-15(fp)
  80961c:	e0bffc07 	ldb	r2,-16(fp)
  809620:	10801918 	cmpnei	r2,r2,100
  809624:	1000021e 	bne	r2,zero,809630 <xprintf+0x1c4>
  809628:	00bffd84 	movi	r2,-10
  80962c:	e0bffc45 	stb	r2,-15(fp)
  809630:	e0bffc07 	ldb	r2,-16(fp)
  809634:	10801618 	cmpnei	r2,r2,88
  809638:	1000021e 	bne	r2,zero,809644 <xprintf+0x1d8>
  80963c:	00800404 	movi	r2,16
  809640:	e0bffc45 	stb	r2,-15(fp)
  809644:	e0bffc07 	ldb	r2,-16(fp)
  809648:	10801898 	cmpnei	r2,r2,98
  80964c:	1000021e 	bne	r2,zero,809658 <xprintf+0x1ec>
  809650:	00800084 	movi	r2,2
  809654:	e0bffc45 	stb	r2,-15(fp)
  809658:	e0bffc47 	ldb	r2,-15(fp)
  80965c:	1000011e 	bne	r2,zero,809664 <xprintf+0x1f8>
  809660:	00002806 	br	809704 <xprintf+0x298>
  809664:	e0bffd07 	ldb	r2,-12(fp)
  809668:	10000a26 	beq	r2,zero,809694 <xprintf+0x228>
  80966c:	e0bffe17 	ldw	r2,-8(fp)
  809670:	10c00104 	addi	r3,r2,4
  809674:	e0fffe15 	stw	r3,-8(fp)
  809678:	11000017 	ldw	r4,0(r2)
  80967c:	e0fffc47 	ldb	r3,-15(fp)
  809680:	e0bffc87 	ldb	r2,-14(fp)
  809684:	180b883a 	mov	r5,r3
  809688:	100d883a 	mov	r6,r2
  80968c:	08092b40 	call	8092b4 <xitoa>
  809690:	00001506 	br	8096e8 <xprintf+0x27c>
  809694:	e0bffc47 	ldb	r2,-15(fp)
  809698:	00800a0e 	bge	zero,r2,8096c4 <xprintf+0x258>
  80969c:	e0bffe17 	ldw	r2,-8(fp)
  8096a0:	10c00104 	addi	r3,r2,4
  8096a4:	e0fffe15 	stw	r3,-8(fp)
  8096a8:	11000017 	ldw	r4,0(r2)
  8096ac:	e0fffc47 	ldb	r3,-15(fp)
  8096b0:	e0bffc87 	ldb	r2,-14(fp)
  8096b4:	180b883a 	mov	r5,r3
  8096b8:	100d883a 	mov	r6,r2
  8096bc:	08092b40 	call	8092b4 <xitoa>
  8096c0:	00000906 	br	8096e8 <xprintf+0x27c>
  8096c4:	e0bffe17 	ldw	r2,-8(fp)
  8096c8:	10c00104 	addi	r3,r2,4
  8096cc:	e0fffe15 	stw	r3,-8(fp)
  8096d0:	11000017 	ldw	r4,0(r2)
  8096d4:	e0fffc47 	ldb	r3,-15(fp)
  8096d8:	e0bffc87 	ldb	r2,-14(fp)
  8096dc:	180b883a 	mov	r5,r3
  8096e0:	100d883a 	mov	r6,r2
  8096e4:	08092b40 	call	8092b4 <xitoa>
  8096e8:	e0bfff17 	ldw	r2,-4(fp)
  8096ec:	10c00044 	addi	r3,r2,1
  8096f0:	e0ffff15 	stw	r3,-4(fp)
  8096f4:	10800003 	ldbu	r2,0(r2)
  8096f8:	e0bffc05 	stb	r2,-16(fp)
  8096fc:	e0bffc07 	ldb	r2,-16(fp)
  809700:	103f651e 	bne	r2,zero,809498 <__alt_data_end+0xff809498>
  809704:	e037883a 	mov	sp,fp
  809708:	dfc00117 	ldw	ra,4(sp)
  80970c:	df000017 	ldw	fp,0(sp)
  809710:	dec00504 	addi	sp,sp,20
  809714:	f800283a 	ret

00809718 <put_dump>:
  809718:	defffa04 	addi	sp,sp,-24
  80971c:	dfc00515 	stw	ra,20(sp)
  809720:	df000415 	stw	fp,16(sp)
  809724:	df000404 	addi	fp,sp,16
  809728:	e13ffd15 	stw	r4,-12(fp)
  80972c:	e17ffe15 	stw	r5,-8(fp)
  809730:	e1bfff15 	stw	r6,-4(fp)
  809734:	010020b4 	movhi	r4,130
  809738:	2138f504 	addi	r4,r4,-7212
  80973c:	e17ffe17 	ldw	r5,-8(fp)
  809740:	080946c0 	call	80946c <xprintf>
  809744:	e03ffc05 	stb	zero,-16(fp)
  809748:	00000c06 	br	80977c <put_dump+0x64>
  80974c:	e0bffc03 	ldbu	r2,-16(fp)
  809750:	e0fffd17 	ldw	r3,-12(fp)
  809754:	1885883a 	add	r2,r3,r2
  809758:	10800003 	ldbu	r2,0(r2)
  80975c:	10803fcc 	andi	r2,r2,255
  809760:	010020b4 	movhi	r4,130
  809764:	2138f704 	addi	r4,r4,-7204
  809768:	100b883a 	mov	r5,r2
  80976c:	080946c0 	call	80946c <xprintf>
  809770:	e0bffc03 	ldbu	r2,-16(fp)
  809774:	10800044 	addi	r2,r2,1
  809778:	e0bffc05 	stb	r2,-16(fp)
  80977c:	e0fffc03 	ldbu	r3,-16(fp)
  809780:	e0bfff17 	ldw	r2,-4(fp)
  809784:	18bff116 	blt	r3,r2,80974c <__alt_data_end+0xff80974c>
  809788:	01000804 	movi	r4,32
  80978c:	08091fc0 	call	8091fc <xputc>
  809790:	e03ffc05 	stb	zero,-16(fp)
  809794:	00001d06 	br	80980c <put_dump+0xf4>
  809798:	e0bffc03 	ldbu	r2,-16(fp)
  80979c:	e0fffd17 	ldw	r3,-12(fp)
  8097a0:	1885883a 	add	r2,r3,r2
  8097a4:	10800003 	ldbu	r2,0(r2)
  8097a8:	10803fcc 	andi	r2,r2,255
  8097ac:	10800830 	cmpltui	r2,r2,32
  8097b0:	1000071e 	bne	r2,zero,8097d0 <put_dump+0xb8>
  8097b4:	e0bffc03 	ldbu	r2,-16(fp)
  8097b8:	e0fffd17 	ldw	r3,-12(fp)
  8097bc:	1885883a 	add	r2,r3,r2
  8097c0:	10800003 	ldbu	r2,0(r2)
  8097c4:	10803fcc 	andi	r2,r2,255
  8097c8:	10801ff0 	cmpltui	r2,r2,127
  8097cc:	1000031e 	bne	r2,zero,8097dc <put_dump+0xc4>
  8097d0:	01000b84 	movi	r4,46
  8097d4:	08091fc0 	call	8091fc <xputc>
  8097d8:	00000906 	br	809800 <put_dump+0xe8>
  8097dc:	e0bffc03 	ldbu	r2,-16(fp)
  8097e0:	e0fffd17 	ldw	r3,-12(fp)
  8097e4:	1885883a 	add	r2,r3,r2
  8097e8:	10800003 	ldbu	r2,0(r2)
  8097ec:	10803fcc 	andi	r2,r2,255
  8097f0:	1080201c 	xori	r2,r2,128
  8097f4:	10bfe004 	addi	r2,r2,-128
  8097f8:	1009883a 	mov	r4,r2
  8097fc:	08091fc0 	call	8091fc <xputc>
  809800:	e0bffc03 	ldbu	r2,-16(fp)
  809804:	10800044 	addi	r2,r2,1
  809808:	e0bffc05 	stb	r2,-16(fp)
  80980c:	e0fffc03 	ldbu	r3,-16(fp)
  809810:	e0bfff17 	ldw	r2,-4(fp)
  809814:	18bfe016 	blt	r3,r2,809798 <__alt_data_end+0xff809798>
  809818:	01000284 	movi	r4,10
  80981c:	08091fc0 	call	8091fc <xputc>
  809820:	e037883a 	mov	sp,fp
  809824:	dfc00117 	ldw	ra,4(sp)
  809828:	df000017 	ldw	fp,0(sp)
  80982c:	dec00204 	addi	sp,sp,8
  809830:	f800283a 	ret

00809834 <get_line>:
  809834:	defffa04 	addi	sp,sp,-24
  809838:	dfc00515 	stw	ra,20(sp)
  80983c:	df000415 	stw	fp,16(sp)
  809840:	df000404 	addi	fp,sp,16
  809844:	e13ffe15 	stw	r4,-8(fp)
  809848:	e17fff15 	stw	r5,-4(fp)
  80984c:	e03ffc15 	stw	zero,-16(fp)
  809850:	08099480 	call	809948 <uart0_get>
  809854:	e0bffd05 	stb	r2,-12(fp)
  809858:	e0bffd07 	ldb	r2,-12(fp)
  80985c:	10800358 	cmpnei	r2,r2,13
  809860:	1000011e 	bne	r2,zero,809868 <get_line+0x34>
  809864:	00001906 	br	8098cc <get_line+0x98>
  809868:	e0bffd07 	ldb	r2,-12(fp)
  80986c:	10800218 	cmpnei	r2,r2,8
  809870:	1000051e 	bne	r2,zero,809888 <get_line+0x54>
  809874:	e0bffc17 	ldw	r2,-16(fp)
  809878:	10000326 	beq	r2,zero,809888 <get_line+0x54>
  80987c:	e0bffc17 	ldw	r2,-16(fp)
  809880:	10bfffc4 	addi	r2,r2,-1
  809884:	e0bffc15 	stw	r2,-16(fp)
  809888:	e0bffd03 	ldbu	r2,-12(fp)
  80988c:	10803fcc 	andi	r2,r2,255
  809890:	10800830 	cmpltui	r2,r2,32
  809894:	10000c1e 	bne	r2,zero,8098c8 <get_line+0x94>
  809898:	e0bfff17 	ldw	r2,-4(fp)
  80989c:	10bfffc4 	addi	r2,r2,-1
  8098a0:	e0fffc17 	ldw	r3,-16(fp)
  8098a4:	1880080e 	bge	r3,r2,8098c8 <get_line+0x94>
  8098a8:	e0bffc17 	ldw	r2,-16(fp)
  8098ac:	10c00044 	addi	r3,r2,1
  8098b0:	e0fffc15 	stw	r3,-16(fp)
  8098b4:	1007883a 	mov	r3,r2
  8098b8:	e0bffe17 	ldw	r2,-8(fp)
  8098bc:	10c5883a 	add	r2,r2,r3
  8098c0:	e0fffd03 	ldbu	r3,-12(fp)
  8098c4:	10c00005 	stb	r3,0(r2)
  8098c8:	003fe106 	br	809850 <__alt_data_end+0xff809850>
  8098cc:	e0bffc17 	ldw	r2,-16(fp)
  8098d0:	e0fffe17 	ldw	r3,-8(fp)
  8098d4:	1885883a 	add	r2,r3,r2
  8098d8:	10000005 	stb	zero,0(r2)
  8098dc:	e037883a 	mov	sp,fp
  8098e0:	dfc00117 	ldw	ra,4(sp)
  8098e4:	df000017 	ldw	fp,0(sp)
  8098e8:	dec00204 	addi	sp,sp,8
  8098ec:	f800283a 	ret

008098f0 <uart0_init>:
/*  In    : Baudrate                                                       */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
void uart0_init (unsigned long Baudrate)
{
  8098f0:	defffe04 	addi	sp,sp,-8
  8098f4:	df000115 	stw	fp,4(sp)
  8098f8:	df000104 	addi	fp,sp,4
  8098fc:	e13fff15 	stw	r4,-4(fp)
//   /*
//    * Set baudrate
//    */
//   Divisor = (((UART_FREQ*10) / Baudrate) + 5) / 10;
//   IOWR_ALTERA_AVALON_UART_DIVISOR(UART_BASE, Divisor);
} /* uart0_init */
  809900:	e037883a 	mov	sp,fp
  809904:	df000017 	ldw	fp,0(sp)
  809908:	dec00104 	addi	sp,sp,4
  80990c:	f800283a 	ret

00809910 <uart0_put>:
/*  In    : Data                                                           */
/*  Out   : none                                                           */
/*  Return: none                                                           */
/***************************************************************************/
void uart0_put (unsigned char ch)
{
  809910:	defffd04 	addi	sp,sp,-12
  809914:	dfc00215 	stw	ra,8(sp)
  809918:	df000115 	stw	fp,4(sp)
  80991c:	df000104 	addi	fp,sp,4
  809920:	2005883a 	mov	r2,r4
  809924:	e0bfff05 	stb	r2,-4(fp)
//   {
//      status = IORD_ALTERA_AVALON_UART_STATUS(UART_BASE);
//   }
//   IOWR_ALTERA_AVALON_UART_TXDATA(UART_BASE, ch);

		printf("%c",ch);
  809928:	e0bfff03 	ldbu	r2,-4(fp)
  80992c:	1009883a 	mov	r4,r2
  809930:	080ba280 	call	80ba28 <putchar>



} /* uart0_put */
  809934:	e037883a 	mov	sp,fp
  809938:	dfc00117 	ldw	ra,4(sp)
  80993c:	df000017 	ldw	fp,0(sp)
  809940:	dec00204 	addi	sp,sp,8
  809944:	f800283a 	ret

00809948 <uart0_get>:
/*  In    : none                                                           */
/*  Out   : none                                                           */
/*  Return: Data                                                           */
/***************************************************************************/
unsigned char uart0_get (void)
{
  809948:	defffd04 	addi	sp,sp,-12
  80994c:	dfc00215 	stw	ra,8(sp)
  809950:	df000115 	stw	fp,4(sp)
  809954:	df000104 	addi	fp,sp,4
//   //printf("%d",(char) data & 0xFF);
//
//      return ((char) data & 0xFF);


   ch = getc(stdin);
  809958:	008020b4 	movhi	r2,130
  80995c:	10bdb104 	addi	r2,r2,-2364
  809960:	10800017 	ldw	r2,0(r2)
  809964:	10800117 	ldw	r2,4(r2)
  809968:	1009883a 	mov	r4,r2
  80996c:	080ae500 	call	80ae50 <getc>
  809970:	e0bfff05 	stb	r2,-4(fp)
   if (ch == 10) ch = 13;
  809974:	e0bfff07 	ldb	r2,-4(fp)
  809978:	10800298 	cmpnei	r2,r2,10
  80997c:	1000021e 	bne	r2,zero,809988 <uart0_get+0x40>
  809980:	00800344 	movi	r2,13
  809984:	e0bfff05 	stb	r2,-4(fp)

   return(ch);
  809988:	e0bfff03 	ldbu	r2,-4(fp)

} /* uart0_get */
  80998c:	e037883a 	mov	sp,fp
  809990:	dfc00117 	ldw	ra,4(sp)
  809994:	df000017 	ldw	fp,0(sp)
  809998:	dec00204 	addi	sp,sp,8
  80999c:	f800283a 	ret

008099a0 <udivmodsi4>:
  8099a0:	2900182e 	bgeu	r5,r4,809a04 <udivmodsi4+0x64>
  8099a4:	28001716 	blt	r5,zero,809a04 <udivmodsi4+0x64>
  8099a8:	00800804 	movi	r2,32
  8099ac:	00c00044 	movi	r3,1
  8099b0:	00000206 	br	8099bc <udivmodsi4+0x1c>
  8099b4:	10001126 	beq	r2,zero,8099fc <udivmodsi4+0x5c>
  8099b8:	28000516 	blt	r5,zero,8099d0 <udivmodsi4+0x30>
  8099bc:	294b883a 	add	r5,r5,r5
  8099c0:	10bfffc4 	addi	r2,r2,-1
  8099c4:	18c7883a 	add	r3,r3,r3
  8099c8:	293ffa36 	bltu	r5,r4,8099b4 <__alt_data_end+0xff8099b4>
  8099cc:	18000b26 	beq	r3,zero,8099fc <udivmodsi4+0x5c>
  8099d0:	0005883a 	mov	r2,zero
  8099d4:	21400236 	bltu	r4,r5,8099e0 <udivmodsi4+0x40>
  8099d8:	2149c83a 	sub	r4,r4,r5
  8099dc:	10c4b03a 	or	r2,r2,r3
  8099e0:	1806d07a 	srli	r3,r3,1
  8099e4:	280ad07a 	srli	r5,r5,1
  8099e8:	183ffa1e 	bne	r3,zero,8099d4 <__alt_data_end+0xff8099d4>
  8099ec:	3000011e 	bne	r6,zero,8099f4 <udivmodsi4+0x54>
  8099f0:	f800283a 	ret
  8099f4:	2005883a 	mov	r2,r4
  8099f8:	f800283a 	ret
  8099fc:	0005883a 	mov	r2,zero
  809a00:	003ffa06 	br	8099ec <__alt_data_end+0xff8099ec>
  809a04:	00c00044 	movi	r3,1
  809a08:	003ff106 	br	8099d0 <__alt_data_end+0xff8099d0>

00809a0c <__divsi3>:
  809a0c:	defffe04 	addi	sp,sp,-8
  809a10:	dfc00115 	stw	ra,4(sp)
  809a14:	dc000015 	stw	r16,0(sp)
  809a18:	20000b16 	blt	r4,zero,809a48 <__divsi3+0x3c>
  809a1c:	0021883a 	mov	r16,zero
  809a20:	28000c16 	blt	r5,zero,809a54 <__divsi3+0x48>
  809a24:	000d883a 	mov	r6,zero
  809a28:	08099a00 	call	8099a0 <udivmodsi4>
  809a2c:	0407c83a 	sub	r3,zero,r16
  809a30:	1884f03a 	xor	r2,r3,r2
  809a34:	1405883a 	add	r2,r2,r16
  809a38:	dfc00117 	ldw	ra,4(sp)
  809a3c:	dc000017 	ldw	r16,0(sp)
  809a40:	dec00204 	addi	sp,sp,8
  809a44:	f800283a 	ret
  809a48:	0109c83a 	sub	r4,zero,r4
  809a4c:	04000044 	movi	r16,1
  809a50:	283ff40e 	bge	r5,zero,809a24 <__alt_data_end+0xff809a24>
  809a54:	014bc83a 	sub	r5,zero,r5
  809a58:	8400005c 	xori	r16,r16,1
  809a5c:	003ff106 	br	809a24 <__alt_data_end+0xff809a24>

00809a60 <__modsi3>:
  809a60:	defffd04 	addi	sp,sp,-12
  809a64:	dfc00215 	stw	ra,8(sp)
  809a68:	dc400115 	stw	r17,4(sp)
  809a6c:	dc000015 	stw	r16,0(sp)
  809a70:	20000c16 	blt	r4,zero,809aa4 <__modsi3+0x44>
  809a74:	0023883a 	mov	r17,zero
  809a78:	0021883a 	mov	r16,zero
  809a7c:	28000d16 	blt	r5,zero,809ab4 <__modsi3+0x54>
  809a80:	01800044 	movi	r6,1
  809a84:	08099a00 	call	8099a0 <udivmodsi4>
  809a88:	1404f03a 	xor	r2,r2,r16
  809a8c:	8885883a 	add	r2,r17,r2
  809a90:	dfc00217 	ldw	ra,8(sp)
  809a94:	dc400117 	ldw	r17,4(sp)
  809a98:	dc000017 	ldw	r16,0(sp)
  809a9c:	dec00304 	addi	sp,sp,12
  809aa0:	f800283a 	ret
  809aa4:	0109c83a 	sub	r4,zero,r4
  809aa8:	04400044 	movi	r17,1
  809aac:	043fffc4 	movi	r16,-1
  809ab0:	283ff30e 	bge	r5,zero,809a80 <__alt_data_end+0xff809a80>
  809ab4:	014bc83a 	sub	r5,zero,r5
  809ab8:	003ff106 	br	809a80 <__alt_data_end+0xff809a80>

00809abc <__udivsi3>:
  809abc:	000d883a 	mov	r6,zero
  809ac0:	08099a01 	jmpi	8099a0 <udivmodsi4>

00809ac4 <__umodsi3>:
  809ac4:	01800044 	movi	r6,1
  809ac8:	08099a01 	jmpi	8099a0 <udivmodsi4>

00809acc <_fclose_r>:
  809acc:	28003926 	beq	r5,zero,809bb4 <_fclose_r+0xe8>
  809ad0:	defffc04 	addi	sp,sp,-16
  809ad4:	dc400115 	stw	r17,4(sp)
  809ad8:	dc000015 	stw	r16,0(sp)
  809adc:	dfc00315 	stw	ra,12(sp)
  809ae0:	dc800215 	stw	r18,8(sp)
  809ae4:	2023883a 	mov	r17,r4
  809ae8:	2821883a 	mov	r16,r5
  809aec:	20000226 	beq	r4,zero,809af8 <_fclose_r+0x2c>
  809af0:	20800e17 	ldw	r2,56(r4)
  809af4:	10002726 	beq	r2,zero,809b94 <_fclose_r+0xc8>
  809af8:	8080030f 	ldh	r2,12(r16)
  809afc:	1000071e 	bne	r2,zero,809b1c <_fclose_r+0x50>
  809b00:	0005883a 	mov	r2,zero
  809b04:	dfc00317 	ldw	ra,12(sp)
  809b08:	dc800217 	ldw	r18,8(sp)
  809b0c:	dc400117 	ldw	r17,4(sp)
  809b10:	dc000017 	ldw	r16,0(sp)
  809b14:	dec00404 	addi	sp,sp,16
  809b18:	f800283a 	ret
  809b1c:	8809883a 	mov	r4,r17
  809b20:	800b883a 	mov	r5,r16
  809b24:	0809bd00 	call	809bd0 <__sflush_r>
  809b28:	1025883a 	mov	r18,r2
  809b2c:	80800b17 	ldw	r2,44(r16)
  809b30:	10000426 	beq	r2,zero,809b44 <_fclose_r+0x78>
  809b34:	81400717 	ldw	r5,28(r16)
  809b38:	8809883a 	mov	r4,r17
  809b3c:	103ee83a 	callr	r2
  809b40:	10001616 	blt	r2,zero,809b9c <_fclose_r+0xd0>
  809b44:	8080030b 	ldhu	r2,12(r16)
  809b48:	1080200c 	andi	r2,r2,128
  809b4c:	1000151e 	bne	r2,zero,809ba4 <_fclose_r+0xd8>
  809b50:	81400c17 	ldw	r5,48(r16)
  809b54:	28000526 	beq	r5,zero,809b6c <_fclose_r+0xa0>
  809b58:	80801004 	addi	r2,r16,64
  809b5c:	28800226 	beq	r5,r2,809b68 <_fclose_r+0x9c>
  809b60:	8809883a 	mov	r4,r17
  809b64:	080a4800 	call	80a480 <_free_r>
  809b68:	80000c15 	stw	zero,48(r16)
  809b6c:	81401117 	ldw	r5,68(r16)
  809b70:	28000326 	beq	r5,zero,809b80 <_fclose_r+0xb4>
  809b74:	8809883a 	mov	r4,r17
  809b78:	080a4800 	call	80a480 <_free_r>
  809b7c:	80001115 	stw	zero,68(r16)
  809b80:	080a1c40 	call	80a1c4 <__sfp_lock_acquire>
  809b84:	8000030d 	sth	zero,12(r16)
  809b88:	080a1c80 	call	80a1c8 <__sfp_lock_release>
  809b8c:	9005883a 	mov	r2,r18
  809b90:	003fdc06 	br	809b04 <__alt_data_end+0xff809b04>
  809b94:	080a1b40 	call	80a1b4 <__sinit>
  809b98:	003fd706 	br	809af8 <__alt_data_end+0xff809af8>
  809b9c:	04bfffc4 	movi	r18,-1
  809ba0:	003fe806 	br	809b44 <__alt_data_end+0xff809b44>
  809ba4:	81400417 	ldw	r5,16(r16)
  809ba8:	8809883a 	mov	r4,r17
  809bac:	080a4800 	call	80a480 <_free_r>
  809bb0:	003fe706 	br	809b50 <__alt_data_end+0xff809b50>
  809bb4:	0005883a 	mov	r2,zero
  809bb8:	f800283a 	ret

00809bbc <fclose>:
  809bbc:	008020b4 	movhi	r2,130
  809bc0:	10bdb104 	addi	r2,r2,-2364
  809bc4:	200b883a 	mov	r5,r4
  809bc8:	11000017 	ldw	r4,0(r2)
  809bcc:	0809acc1 	jmpi	809acc <_fclose_r>

00809bd0 <__sflush_r>:
  809bd0:	2880030b 	ldhu	r2,12(r5)
  809bd4:	defffb04 	addi	sp,sp,-20
  809bd8:	dcc00315 	stw	r19,12(sp)
  809bdc:	dc400115 	stw	r17,4(sp)
  809be0:	dfc00415 	stw	ra,16(sp)
  809be4:	dc800215 	stw	r18,8(sp)
  809be8:	dc000015 	stw	r16,0(sp)
  809bec:	10c0020c 	andi	r3,r2,8
  809bf0:	2823883a 	mov	r17,r5
  809bf4:	2027883a 	mov	r19,r4
  809bf8:	1800311e 	bne	r3,zero,809cc0 <__sflush_r+0xf0>
  809bfc:	28c00117 	ldw	r3,4(r5)
  809c00:	10820014 	ori	r2,r2,2048
  809c04:	2880030d 	sth	r2,12(r5)
  809c08:	00c04b0e 	bge	zero,r3,809d38 <__sflush_r+0x168>
  809c0c:	8a000a17 	ldw	r8,40(r17)
  809c10:	40002326 	beq	r8,zero,809ca0 <__sflush_r+0xd0>
  809c14:	9c000017 	ldw	r16,0(r19)
  809c18:	10c4000c 	andi	r3,r2,4096
  809c1c:	98000015 	stw	zero,0(r19)
  809c20:	18004826 	beq	r3,zero,809d44 <__sflush_r+0x174>
  809c24:	89801417 	ldw	r6,80(r17)
  809c28:	10c0010c 	andi	r3,r2,4
  809c2c:	18000626 	beq	r3,zero,809c48 <__sflush_r+0x78>
  809c30:	88c00117 	ldw	r3,4(r17)
  809c34:	88800c17 	ldw	r2,48(r17)
  809c38:	30cdc83a 	sub	r6,r6,r3
  809c3c:	10000226 	beq	r2,zero,809c48 <__sflush_r+0x78>
  809c40:	88800f17 	ldw	r2,60(r17)
  809c44:	308dc83a 	sub	r6,r6,r2
  809c48:	89400717 	ldw	r5,28(r17)
  809c4c:	9809883a 	mov	r4,r19
  809c50:	000f883a 	mov	r7,zero
  809c54:	403ee83a 	callr	r8
  809c58:	00ffffc4 	movi	r3,-1
  809c5c:	10c04426 	beq	r2,r3,809d70 <__sflush_r+0x1a0>
  809c60:	88c0030b 	ldhu	r3,12(r17)
  809c64:	89000417 	ldw	r4,16(r17)
  809c68:	88000115 	stw	zero,4(r17)
  809c6c:	197dffcc 	andi	r5,r3,63487
  809c70:	8940030d 	sth	r5,12(r17)
  809c74:	89000015 	stw	r4,0(r17)
  809c78:	18c4000c 	andi	r3,r3,4096
  809c7c:	18002c1e 	bne	r3,zero,809d30 <__sflush_r+0x160>
  809c80:	89400c17 	ldw	r5,48(r17)
  809c84:	9c000015 	stw	r16,0(r19)
  809c88:	28000526 	beq	r5,zero,809ca0 <__sflush_r+0xd0>
  809c8c:	88801004 	addi	r2,r17,64
  809c90:	28800226 	beq	r5,r2,809c9c <__sflush_r+0xcc>
  809c94:	9809883a 	mov	r4,r19
  809c98:	080a4800 	call	80a480 <_free_r>
  809c9c:	88000c15 	stw	zero,48(r17)
  809ca0:	0005883a 	mov	r2,zero
  809ca4:	dfc00417 	ldw	ra,16(sp)
  809ca8:	dcc00317 	ldw	r19,12(sp)
  809cac:	dc800217 	ldw	r18,8(sp)
  809cb0:	dc400117 	ldw	r17,4(sp)
  809cb4:	dc000017 	ldw	r16,0(sp)
  809cb8:	dec00504 	addi	sp,sp,20
  809cbc:	f800283a 	ret
  809cc0:	2c800417 	ldw	r18,16(r5)
  809cc4:	903ff626 	beq	r18,zero,809ca0 <__alt_data_end+0xff809ca0>
  809cc8:	2c000017 	ldw	r16,0(r5)
  809ccc:	108000cc 	andi	r2,r2,3
  809cd0:	2c800015 	stw	r18,0(r5)
  809cd4:	84a1c83a 	sub	r16,r16,r18
  809cd8:	1000131e 	bne	r2,zero,809d28 <__sflush_r+0x158>
  809cdc:	28800517 	ldw	r2,20(r5)
  809ce0:	88800215 	stw	r2,8(r17)
  809ce4:	04000316 	blt	zero,r16,809cf4 <__sflush_r+0x124>
  809ce8:	003fed06 	br	809ca0 <__alt_data_end+0xff809ca0>
  809cec:	90a5883a 	add	r18,r18,r2
  809cf0:	043feb0e 	bge	zero,r16,809ca0 <__alt_data_end+0xff809ca0>
  809cf4:	88800917 	ldw	r2,36(r17)
  809cf8:	89400717 	ldw	r5,28(r17)
  809cfc:	800f883a 	mov	r7,r16
  809d00:	900d883a 	mov	r6,r18
  809d04:	9809883a 	mov	r4,r19
  809d08:	103ee83a 	callr	r2
  809d0c:	80a1c83a 	sub	r16,r16,r2
  809d10:	00bff616 	blt	zero,r2,809cec <__alt_data_end+0xff809cec>
  809d14:	88c0030b 	ldhu	r3,12(r17)
  809d18:	00bfffc4 	movi	r2,-1
  809d1c:	18c01014 	ori	r3,r3,64
  809d20:	88c0030d 	sth	r3,12(r17)
  809d24:	003fdf06 	br	809ca4 <__alt_data_end+0xff809ca4>
  809d28:	0005883a 	mov	r2,zero
  809d2c:	003fec06 	br	809ce0 <__alt_data_end+0xff809ce0>
  809d30:	88801415 	stw	r2,80(r17)
  809d34:	003fd206 	br	809c80 <__alt_data_end+0xff809c80>
  809d38:	28c00f17 	ldw	r3,60(r5)
  809d3c:	00ffb316 	blt	zero,r3,809c0c <__alt_data_end+0xff809c0c>
  809d40:	003fd706 	br	809ca0 <__alt_data_end+0xff809ca0>
  809d44:	89400717 	ldw	r5,28(r17)
  809d48:	000d883a 	mov	r6,zero
  809d4c:	9809883a 	mov	r4,r19
  809d50:	01c00044 	movi	r7,1
  809d54:	403ee83a 	callr	r8
  809d58:	100d883a 	mov	r6,r2
  809d5c:	00bfffc4 	movi	r2,-1
  809d60:	30801426 	beq	r6,r2,809db4 <__sflush_r+0x1e4>
  809d64:	8880030b 	ldhu	r2,12(r17)
  809d68:	8a000a17 	ldw	r8,40(r17)
  809d6c:	003fae06 	br	809c28 <__alt_data_end+0xff809c28>
  809d70:	98c00017 	ldw	r3,0(r19)
  809d74:	183fba26 	beq	r3,zero,809c60 <__alt_data_end+0xff809c60>
  809d78:	01000744 	movi	r4,29
  809d7c:	19000626 	beq	r3,r4,809d98 <__sflush_r+0x1c8>
  809d80:	01000584 	movi	r4,22
  809d84:	19000426 	beq	r3,r4,809d98 <__sflush_r+0x1c8>
  809d88:	88c0030b 	ldhu	r3,12(r17)
  809d8c:	18c01014 	ori	r3,r3,64
  809d90:	88c0030d 	sth	r3,12(r17)
  809d94:	003fc306 	br	809ca4 <__alt_data_end+0xff809ca4>
  809d98:	8880030b 	ldhu	r2,12(r17)
  809d9c:	88c00417 	ldw	r3,16(r17)
  809da0:	88000115 	stw	zero,4(r17)
  809da4:	10bdffcc 	andi	r2,r2,63487
  809da8:	8880030d 	sth	r2,12(r17)
  809dac:	88c00015 	stw	r3,0(r17)
  809db0:	003fb306 	br	809c80 <__alt_data_end+0xff809c80>
  809db4:	98800017 	ldw	r2,0(r19)
  809db8:	103fea26 	beq	r2,zero,809d64 <__alt_data_end+0xff809d64>
  809dbc:	00c00744 	movi	r3,29
  809dc0:	10c00226 	beq	r2,r3,809dcc <__sflush_r+0x1fc>
  809dc4:	00c00584 	movi	r3,22
  809dc8:	10ffd21e 	bne	r2,r3,809d14 <__alt_data_end+0xff809d14>
  809dcc:	9c000015 	stw	r16,0(r19)
  809dd0:	0005883a 	mov	r2,zero
  809dd4:	003fb306 	br	809ca4 <__alt_data_end+0xff809ca4>

00809dd8 <_fflush_r>:
  809dd8:	defffd04 	addi	sp,sp,-12
  809ddc:	dc000115 	stw	r16,4(sp)
  809de0:	dfc00215 	stw	ra,8(sp)
  809de4:	2021883a 	mov	r16,r4
  809de8:	20000226 	beq	r4,zero,809df4 <_fflush_r+0x1c>
  809dec:	20800e17 	ldw	r2,56(r4)
  809df0:	10000c26 	beq	r2,zero,809e24 <_fflush_r+0x4c>
  809df4:	2880030f 	ldh	r2,12(r5)
  809df8:	1000051e 	bne	r2,zero,809e10 <_fflush_r+0x38>
  809dfc:	0005883a 	mov	r2,zero
  809e00:	dfc00217 	ldw	ra,8(sp)
  809e04:	dc000117 	ldw	r16,4(sp)
  809e08:	dec00304 	addi	sp,sp,12
  809e0c:	f800283a 	ret
  809e10:	8009883a 	mov	r4,r16
  809e14:	dfc00217 	ldw	ra,8(sp)
  809e18:	dc000117 	ldw	r16,4(sp)
  809e1c:	dec00304 	addi	sp,sp,12
  809e20:	0809bd01 	jmpi	809bd0 <__sflush_r>
  809e24:	d9400015 	stw	r5,0(sp)
  809e28:	080a1b40 	call	80a1b4 <__sinit>
  809e2c:	d9400017 	ldw	r5,0(sp)
  809e30:	003ff006 	br	809df4 <__alt_data_end+0xff809df4>

00809e34 <fflush>:
  809e34:	20000526 	beq	r4,zero,809e4c <fflush+0x18>
  809e38:	008020b4 	movhi	r2,130
  809e3c:	10bdb104 	addi	r2,r2,-2364
  809e40:	200b883a 	mov	r5,r4
  809e44:	11000017 	ldw	r4,0(r2)
  809e48:	0809dd81 	jmpi	809dd8 <_fflush_r>
  809e4c:	008020b4 	movhi	r2,130
  809e50:	10bdb004 	addi	r2,r2,-2368
  809e54:	11000017 	ldw	r4,0(r2)
  809e58:	01402074 	movhi	r5,129
  809e5c:	29677604 	addi	r5,r5,-25128
  809e60:	080ad1c1 	jmpi	80ad1c <_fwalk_reent>

00809e64 <__fp_lock>:
  809e64:	0005883a 	mov	r2,zero
  809e68:	f800283a 	ret

00809e6c <__fp_unlock>:
  809e6c:	0005883a 	mov	r2,zero
  809e70:	f800283a 	ret

00809e74 <_cleanup_r>:
  809e74:	01402074 	movhi	r5,129
  809e78:	2966b304 	addi	r5,r5,-25908
  809e7c:	080ad1c1 	jmpi	80ad1c <_fwalk_reent>

00809e80 <__sinit.part.1>:
  809e80:	defff704 	addi	sp,sp,-36
  809e84:	00c02074 	movhi	r3,129
  809e88:	dfc00815 	stw	ra,32(sp)
  809e8c:	ddc00715 	stw	r23,28(sp)
  809e90:	dd800615 	stw	r22,24(sp)
  809e94:	dd400515 	stw	r21,20(sp)
  809e98:	dd000415 	stw	r20,16(sp)
  809e9c:	dcc00315 	stw	r19,12(sp)
  809ea0:	dc800215 	stw	r18,8(sp)
  809ea4:	dc400115 	stw	r17,4(sp)
  809ea8:	dc000015 	stw	r16,0(sp)
  809eac:	18e79d04 	addi	r3,r3,-24972
  809eb0:	24000117 	ldw	r16,4(r4)
  809eb4:	20c00f15 	stw	r3,60(r4)
  809eb8:	2080bb04 	addi	r2,r4,748
  809ebc:	00c000c4 	movi	r3,3
  809ec0:	20c0b915 	stw	r3,740(r4)
  809ec4:	2080ba15 	stw	r2,744(r4)
  809ec8:	2000b815 	stw	zero,736(r4)
  809ecc:	05c00204 	movi	r23,8
  809ed0:	00800104 	movi	r2,4
  809ed4:	2025883a 	mov	r18,r4
  809ed8:	b80d883a 	mov	r6,r23
  809edc:	81001704 	addi	r4,r16,92
  809ee0:	000b883a 	mov	r5,zero
  809ee4:	80000015 	stw	zero,0(r16)
  809ee8:	80000115 	stw	zero,4(r16)
  809eec:	80000215 	stw	zero,8(r16)
  809ef0:	8080030d 	sth	r2,12(r16)
  809ef4:	80001915 	stw	zero,100(r16)
  809ef8:	8000038d 	sth	zero,14(r16)
  809efc:	80000415 	stw	zero,16(r16)
  809f00:	80000515 	stw	zero,20(r16)
  809f04:	80000615 	stw	zero,24(r16)
  809f08:	080b8380 	call	80b838 <memset>
  809f0c:	05802074 	movhi	r22,129
  809f10:	94400217 	ldw	r17,8(r18)
  809f14:	05402074 	movhi	r21,129
  809f18:	05002074 	movhi	r20,129
  809f1c:	04c02074 	movhi	r19,129
  809f20:	b5afa304 	addi	r22,r22,-16756
  809f24:	ad6fba04 	addi	r21,r21,-16664
  809f28:	a52fd904 	addi	r20,r20,-16540
  809f2c:	9ceff004 	addi	r19,r19,-16448
  809f30:	85800815 	stw	r22,32(r16)
  809f34:	85400915 	stw	r21,36(r16)
  809f38:	85000a15 	stw	r20,40(r16)
  809f3c:	84c00b15 	stw	r19,44(r16)
  809f40:	84000715 	stw	r16,28(r16)
  809f44:	00800284 	movi	r2,10
  809f48:	8880030d 	sth	r2,12(r17)
  809f4c:	00800044 	movi	r2,1
  809f50:	89001704 	addi	r4,r17,92
  809f54:	b80d883a 	mov	r6,r23
  809f58:	000b883a 	mov	r5,zero
  809f5c:	88000015 	stw	zero,0(r17)
  809f60:	88000115 	stw	zero,4(r17)
  809f64:	88000215 	stw	zero,8(r17)
  809f68:	88001915 	stw	zero,100(r17)
  809f6c:	8880038d 	sth	r2,14(r17)
  809f70:	88000415 	stw	zero,16(r17)
  809f74:	88000515 	stw	zero,20(r17)
  809f78:	88000615 	stw	zero,24(r17)
  809f7c:	080b8380 	call	80b838 <memset>
  809f80:	94000317 	ldw	r16,12(r18)
  809f84:	00800484 	movi	r2,18
  809f88:	8c400715 	stw	r17,28(r17)
  809f8c:	8d800815 	stw	r22,32(r17)
  809f90:	8d400915 	stw	r21,36(r17)
  809f94:	8d000a15 	stw	r20,40(r17)
  809f98:	8cc00b15 	stw	r19,44(r17)
  809f9c:	8080030d 	sth	r2,12(r16)
  809fa0:	00800084 	movi	r2,2
  809fa4:	80000015 	stw	zero,0(r16)
  809fa8:	80000115 	stw	zero,4(r16)
  809fac:	80000215 	stw	zero,8(r16)
  809fb0:	80001915 	stw	zero,100(r16)
  809fb4:	8080038d 	sth	r2,14(r16)
  809fb8:	80000415 	stw	zero,16(r16)
  809fbc:	80000515 	stw	zero,20(r16)
  809fc0:	80000615 	stw	zero,24(r16)
  809fc4:	81001704 	addi	r4,r16,92
  809fc8:	000b883a 	mov	r5,zero
  809fcc:	b80d883a 	mov	r6,r23
  809fd0:	080b8380 	call	80b838 <memset>
  809fd4:	00800044 	movi	r2,1
  809fd8:	84000715 	stw	r16,28(r16)
  809fdc:	85800815 	stw	r22,32(r16)
  809fe0:	85400915 	stw	r21,36(r16)
  809fe4:	85000a15 	stw	r20,40(r16)
  809fe8:	84c00b15 	stw	r19,44(r16)
  809fec:	90800e15 	stw	r2,56(r18)
  809ff0:	dfc00817 	ldw	ra,32(sp)
  809ff4:	ddc00717 	ldw	r23,28(sp)
  809ff8:	dd800617 	ldw	r22,24(sp)
  809ffc:	dd400517 	ldw	r21,20(sp)
  80a000:	dd000417 	ldw	r20,16(sp)
  80a004:	dcc00317 	ldw	r19,12(sp)
  80a008:	dc800217 	ldw	r18,8(sp)
  80a00c:	dc400117 	ldw	r17,4(sp)
  80a010:	dc000017 	ldw	r16,0(sp)
  80a014:	dec00904 	addi	sp,sp,36
  80a018:	f800283a 	ret

0080a01c <__sfmoreglue>:
  80a01c:	defffc04 	addi	sp,sp,-16
  80a020:	dc400115 	stw	r17,4(sp)
  80a024:	2c7fffc4 	addi	r17,r5,-1
  80a028:	8c401a24 	muli	r17,r17,104
  80a02c:	dc800215 	stw	r18,8(sp)
  80a030:	2825883a 	mov	r18,r5
  80a034:	89401d04 	addi	r5,r17,116
  80a038:	dc000015 	stw	r16,0(sp)
  80a03c:	dfc00315 	stw	ra,12(sp)
  80a040:	080b0900 	call	80b090 <_malloc_r>
  80a044:	1021883a 	mov	r16,r2
  80a048:	10000726 	beq	r2,zero,80a068 <__sfmoreglue+0x4c>
  80a04c:	11000304 	addi	r4,r2,12
  80a050:	10000015 	stw	zero,0(r2)
  80a054:	14800115 	stw	r18,4(r2)
  80a058:	11000215 	stw	r4,8(r2)
  80a05c:	000b883a 	mov	r5,zero
  80a060:	89801a04 	addi	r6,r17,104
  80a064:	080b8380 	call	80b838 <memset>
  80a068:	8005883a 	mov	r2,r16
  80a06c:	dfc00317 	ldw	ra,12(sp)
  80a070:	dc800217 	ldw	r18,8(sp)
  80a074:	dc400117 	ldw	r17,4(sp)
  80a078:	dc000017 	ldw	r16,0(sp)
  80a07c:	dec00404 	addi	sp,sp,16
  80a080:	f800283a 	ret

0080a084 <__sfp>:
  80a084:	008020b4 	movhi	r2,130
  80a088:	defffb04 	addi	sp,sp,-20
  80a08c:	10bdb004 	addi	r2,r2,-2368
  80a090:	dc800215 	stw	r18,8(sp)
  80a094:	14800017 	ldw	r18,0(r2)
  80a098:	dcc00315 	stw	r19,12(sp)
  80a09c:	dfc00415 	stw	ra,16(sp)
  80a0a0:	90800e17 	ldw	r2,56(r18)
  80a0a4:	dc400115 	stw	r17,4(sp)
  80a0a8:	dc000015 	stw	r16,0(sp)
  80a0ac:	2027883a 	mov	r19,r4
  80a0b0:	1000021e 	bne	r2,zero,80a0bc <__sfp+0x38>
  80a0b4:	9009883a 	mov	r4,r18
  80a0b8:	0809e800 	call	809e80 <__sinit.part.1>
  80a0bc:	9480b804 	addi	r18,r18,736
  80a0c0:	047fffc4 	movi	r17,-1
  80a0c4:	91400117 	ldw	r5,4(r18)
  80a0c8:	94000217 	ldw	r16,8(r18)
  80a0cc:	297fffc4 	addi	r5,r5,-1
  80a0d0:	28000a16 	blt	r5,zero,80a0fc <__sfp+0x78>
  80a0d4:	8080030f 	ldh	r2,12(r16)
  80a0d8:	10000c26 	beq	r2,zero,80a10c <__sfp+0x88>
  80a0dc:	80c01d04 	addi	r3,r16,116
  80a0e0:	00000206 	br	80a0ec <__sfp+0x68>
  80a0e4:	18bfe60f 	ldh	r2,-104(r3)
  80a0e8:	10000826 	beq	r2,zero,80a10c <__sfp+0x88>
  80a0ec:	297fffc4 	addi	r5,r5,-1
  80a0f0:	1c3ffd04 	addi	r16,r3,-12
  80a0f4:	18c01a04 	addi	r3,r3,104
  80a0f8:	2c7ffa1e 	bne	r5,r17,80a0e4 <__alt_data_end+0xff80a0e4>
  80a0fc:	90800017 	ldw	r2,0(r18)
  80a100:	10001d26 	beq	r2,zero,80a178 <__sfp+0xf4>
  80a104:	1025883a 	mov	r18,r2
  80a108:	003fee06 	br	80a0c4 <__alt_data_end+0xff80a0c4>
  80a10c:	00bfffc4 	movi	r2,-1
  80a110:	8080038d 	sth	r2,14(r16)
  80a114:	00800044 	movi	r2,1
  80a118:	8080030d 	sth	r2,12(r16)
  80a11c:	80001915 	stw	zero,100(r16)
  80a120:	80000015 	stw	zero,0(r16)
  80a124:	80000215 	stw	zero,8(r16)
  80a128:	80000115 	stw	zero,4(r16)
  80a12c:	80000415 	stw	zero,16(r16)
  80a130:	80000515 	stw	zero,20(r16)
  80a134:	80000615 	stw	zero,24(r16)
  80a138:	81001704 	addi	r4,r16,92
  80a13c:	000b883a 	mov	r5,zero
  80a140:	01800204 	movi	r6,8
  80a144:	080b8380 	call	80b838 <memset>
  80a148:	8005883a 	mov	r2,r16
  80a14c:	80000c15 	stw	zero,48(r16)
  80a150:	80000d15 	stw	zero,52(r16)
  80a154:	80001115 	stw	zero,68(r16)
  80a158:	80001215 	stw	zero,72(r16)
  80a15c:	dfc00417 	ldw	ra,16(sp)
  80a160:	dcc00317 	ldw	r19,12(sp)
  80a164:	dc800217 	ldw	r18,8(sp)
  80a168:	dc400117 	ldw	r17,4(sp)
  80a16c:	dc000017 	ldw	r16,0(sp)
  80a170:	dec00504 	addi	sp,sp,20
  80a174:	f800283a 	ret
  80a178:	9809883a 	mov	r4,r19
  80a17c:	01400104 	movi	r5,4
  80a180:	080a01c0 	call	80a01c <__sfmoreglue>
  80a184:	90800015 	stw	r2,0(r18)
  80a188:	103fde1e 	bne	r2,zero,80a104 <__alt_data_end+0xff80a104>
  80a18c:	00800304 	movi	r2,12
  80a190:	98800015 	stw	r2,0(r19)
  80a194:	0005883a 	mov	r2,zero
  80a198:	003ff006 	br	80a15c <__alt_data_end+0xff80a15c>

0080a19c <_cleanup>:
  80a19c:	008020b4 	movhi	r2,130
  80a1a0:	10bdb004 	addi	r2,r2,-2368
  80a1a4:	11000017 	ldw	r4,0(r2)
  80a1a8:	01402074 	movhi	r5,129
  80a1ac:	2966b304 	addi	r5,r5,-25908
  80a1b0:	080ad1c1 	jmpi	80ad1c <_fwalk_reent>

0080a1b4 <__sinit>:
  80a1b4:	20800e17 	ldw	r2,56(r4)
  80a1b8:	10000126 	beq	r2,zero,80a1c0 <__sinit+0xc>
  80a1bc:	f800283a 	ret
  80a1c0:	0809e801 	jmpi	809e80 <__sinit.part.1>

0080a1c4 <__sfp_lock_acquire>:
  80a1c4:	f800283a 	ret

0080a1c8 <__sfp_lock_release>:
  80a1c8:	f800283a 	ret

0080a1cc <__sinit_lock_acquire>:
  80a1cc:	f800283a 	ret

0080a1d0 <__sinit_lock_release>:
  80a1d0:	f800283a 	ret

0080a1d4 <__fp_lock_all>:
  80a1d4:	008020b4 	movhi	r2,130
  80a1d8:	10bdb104 	addi	r2,r2,-2364
  80a1dc:	11000017 	ldw	r4,0(r2)
  80a1e0:	01402074 	movhi	r5,129
  80a1e4:	29679904 	addi	r5,r5,-24988
  80a1e8:	080ac581 	jmpi	80ac58 <_fwalk>

0080a1ec <__fp_unlock_all>:
  80a1ec:	008020b4 	movhi	r2,130
  80a1f0:	10bdb104 	addi	r2,r2,-2364
  80a1f4:	11000017 	ldw	r4,0(r2)
  80a1f8:	01402074 	movhi	r5,129
  80a1fc:	29679b04 	addi	r5,r5,-24980
  80a200:	080ac581 	jmpi	80ac58 <_fwalk>

0080a204 <_fopen_r>:
  80a204:	defffa04 	addi	sp,sp,-24
  80a208:	dcc00415 	stw	r19,16(sp)
  80a20c:	2827883a 	mov	r19,r5
  80a210:	300b883a 	mov	r5,r6
  80a214:	d80d883a 	mov	r6,sp
  80a218:	dc800315 	stw	r18,12(sp)
  80a21c:	dc400215 	stw	r17,8(sp)
  80a220:	dfc00515 	stw	ra,20(sp)
  80a224:	dc000115 	stw	r16,4(sp)
  80a228:	2025883a 	mov	r18,r4
  80a22c:	0811bdc0 	call	811bdc <__sflags>
  80a230:	1023883a 	mov	r17,r2
  80a234:	10002626 	beq	r2,zero,80a2d0 <_fopen_r+0xcc>
  80a238:	9009883a 	mov	r4,r18
  80a23c:	080a0840 	call	80a084 <__sfp>
  80a240:	1021883a 	mov	r16,r2
  80a244:	10002226 	beq	r2,zero,80a2d0 <_fopen_r+0xcc>
  80a248:	d9800017 	ldw	r6,0(sp)
  80a24c:	9009883a 	mov	r4,r18
  80a250:	980b883a 	mov	r5,r19
  80a254:	01c06d84 	movi	r7,438
  80a258:	080b95c0 	call	80b95c <_open_r>
  80a25c:	10001916 	blt	r2,zero,80a2c4 <_fopen_r+0xc0>
  80a260:	8080038d 	sth	r2,14(r16)
  80a264:	00802074 	movhi	r2,129
  80a268:	10afa304 	addi	r2,r2,-16756
  80a26c:	80800815 	stw	r2,32(r16)
  80a270:	00802074 	movhi	r2,129
  80a274:	10afba04 	addi	r2,r2,-16664
  80a278:	80800915 	stw	r2,36(r16)
  80a27c:	00802074 	movhi	r2,129
  80a280:	10afd904 	addi	r2,r2,-16540
  80a284:	80800a15 	stw	r2,40(r16)
  80a288:	00802074 	movhi	r2,129
  80a28c:	10aff004 	addi	r2,r2,-16448
  80a290:	8440030d 	sth	r17,12(r16)
  80a294:	84000715 	stw	r16,28(r16)
  80a298:	80800b15 	stw	r2,44(r16)
  80a29c:	8c40400c 	andi	r17,r17,256
  80a2a0:	88000d1e 	bne	r17,zero,80a2d8 <_fopen_r+0xd4>
  80a2a4:	8005883a 	mov	r2,r16
  80a2a8:	dfc00517 	ldw	ra,20(sp)
  80a2ac:	dcc00417 	ldw	r19,16(sp)
  80a2b0:	dc800317 	ldw	r18,12(sp)
  80a2b4:	dc400217 	ldw	r17,8(sp)
  80a2b8:	dc000117 	ldw	r16,4(sp)
  80a2bc:	dec00604 	addi	sp,sp,24
  80a2c0:	f800283a 	ret
  80a2c4:	080a1c40 	call	80a1c4 <__sfp_lock_acquire>
  80a2c8:	8000030d 	sth	zero,12(r16)
  80a2cc:	080a1c80 	call	80a1c8 <__sfp_lock_release>
  80a2d0:	0005883a 	mov	r2,zero
  80a2d4:	003ff406 	br	80a2a8 <__alt_data_end+0xff80a2a8>
  80a2d8:	9009883a 	mov	r4,r18
  80a2dc:	800b883a 	mov	r5,r16
  80a2e0:	000d883a 	mov	r6,zero
  80a2e4:	01c00084 	movi	r7,2
  80a2e8:	080a7700 	call	80a770 <_fseek_r>
  80a2ec:	8005883a 	mov	r2,r16
  80a2f0:	003fed06 	br	80a2a8 <__alt_data_end+0xff80a2a8>

0080a2f4 <fopen>:
  80a2f4:	00c020b4 	movhi	r3,130
  80a2f8:	18fdb104 	addi	r3,r3,-2364
  80a2fc:	2005883a 	mov	r2,r4
  80a300:	19000017 	ldw	r4,0(r3)
  80a304:	280d883a 	mov	r6,r5
  80a308:	100b883a 	mov	r5,r2
  80a30c:	080a2041 	jmpi	80a204 <_fopen_r>

0080a310 <_fprintf_r>:
  80a310:	defffe04 	addi	sp,sp,-8
  80a314:	2809883a 	mov	r4,r5
  80a318:	dfc00015 	stw	ra,0(sp)
  80a31c:	d9c00115 	stw	r7,4(sp)
  80a320:	300b883a 	mov	r5,r6
  80a324:	d9800104 	addi	r6,sp,4
  80a328:	080ffd00 	call	80ffd0 <__vfprintf_internal>
  80a32c:	dfc00017 	ldw	ra,0(sp)
  80a330:	dec00204 	addi	sp,sp,8
  80a334:	f800283a 	ret

0080a338 <fprintf>:
  80a338:	defffd04 	addi	sp,sp,-12
  80a33c:	dfc00015 	stw	ra,0(sp)
  80a340:	d9800115 	stw	r6,4(sp)
  80a344:	d9c00215 	stw	r7,8(sp)
  80a348:	d9800104 	addi	r6,sp,4
  80a34c:	080ffd00 	call	80ffd0 <__vfprintf_internal>
  80a350:	dfc00017 	ldw	ra,0(sp)
  80a354:	dec00304 	addi	sp,sp,12
  80a358:	f800283a 	ret

0080a35c <_malloc_trim_r>:
  80a35c:	defffb04 	addi	sp,sp,-20
  80a360:	dcc00315 	stw	r19,12(sp)
  80a364:	04c020b4 	movhi	r19,130
  80a368:	dc800215 	stw	r18,8(sp)
  80a36c:	dc400115 	stw	r17,4(sp)
  80a370:	dc000015 	stw	r16,0(sp)
  80a374:	dfc00415 	stw	ra,16(sp)
  80a378:	2821883a 	mov	r16,r5
  80a37c:	9cfb8404 	addi	r19,r19,-4592
  80a380:	2025883a 	mov	r18,r4
  80a384:	081a4e40 	call	81a4e4 <__malloc_lock>
  80a388:	98800217 	ldw	r2,8(r19)
  80a38c:	14400117 	ldw	r17,4(r2)
  80a390:	00bfff04 	movi	r2,-4
  80a394:	88a2703a 	and	r17,r17,r2
  80a398:	8c21c83a 	sub	r16,r17,r16
  80a39c:	8403fbc4 	addi	r16,r16,4079
  80a3a0:	8020d33a 	srli	r16,r16,12
  80a3a4:	0083ffc4 	movi	r2,4095
  80a3a8:	843fffc4 	addi	r16,r16,-1
  80a3ac:	8020933a 	slli	r16,r16,12
  80a3b0:	1400060e 	bge	r2,r16,80a3cc <_malloc_trim_r+0x70>
  80a3b4:	9009883a 	mov	r4,r18
  80a3b8:	000b883a 	mov	r5,zero
  80a3bc:	080bd740 	call	80bd74 <_sbrk_r>
  80a3c0:	98c00217 	ldw	r3,8(r19)
  80a3c4:	1c47883a 	add	r3,r3,r17
  80a3c8:	10c00a26 	beq	r2,r3,80a3f4 <_malloc_trim_r+0x98>
  80a3cc:	9009883a 	mov	r4,r18
  80a3d0:	081a5040 	call	81a504 <__malloc_unlock>
  80a3d4:	0005883a 	mov	r2,zero
  80a3d8:	dfc00417 	ldw	ra,16(sp)
  80a3dc:	dcc00317 	ldw	r19,12(sp)
  80a3e0:	dc800217 	ldw	r18,8(sp)
  80a3e4:	dc400117 	ldw	r17,4(sp)
  80a3e8:	dc000017 	ldw	r16,0(sp)
  80a3ec:	dec00504 	addi	sp,sp,20
  80a3f0:	f800283a 	ret
  80a3f4:	9009883a 	mov	r4,r18
  80a3f8:	040bc83a 	sub	r5,zero,r16
  80a3fc:	080bd740 	call	80bd74 <_sbrk_r>
  80a400:	00ffffc4 	movi	r3,-1
  80a404:	10c00d26 	beq	r2,r3,80a43c <_malloc_trim_r+0xe0>
  80a408:	00c020b4 	movhi	r3,130
  80a40c:	18c13204 	addi	r3,r3,1224
  80a410:	18800017 	ldw	r2,0(r3)
  80a414:	99000217 	ldw	r4,8(r19)
  80a418:	8c23c83a 	sub	r17,r17,r16
  80a41c:	8c400054 	ori	r17,r17,1
  80a420:	1421c83a 	sub	r16,r2,r16
  80a424:	24400115 	stw	r17,4(r4)
  80a428:	9009883a 	mov	r4,r18
  80a42c:	1c000015 	stw	r16,0(r3)
  80a430:	081a5040 	call	81a504 <__malloc_unlock>
  80a434:	00800044 	movi	r2,1
  80a438:	003fe706 	br	80a3d8 <__alt_data_end+0xff80a3d8>
  80a43c:	9009883a 	mov	r4,r18
  80a440:	000b883a 	mov	r5,zero
  80a444:	080bd740 	call	80bd74 <_sbrk_r>
  80a448:	99000217 	ldw	r4,8(r19)
  80a44c:	014003c4 	movi	r5,15
  80a450:	1107c83a 	sub	r3,r2,r4
  80a454:	28ffdd0e 	bge	r5,r3,80a3cc <__alt_data_end+0xff80a3cc>
  80a458:	014020b4 	movhi	r5,130
  80a45c:	297db204 	addi	r5,r5,-2360
  80a460:	29400017 	ldw	r5,0(r5)
  80a464:	18c00054 	ori	r3,r3,1
  80a468:	20c00115 	stw	r3,4(r4)
  80a46c:	00c020b4 	movhi	r3,130
  80a470:	1145c83a 	sub	r2,r2,r5
  80a474:	18c13204 	addi	r3,r3,1224
  80a478:	18800015 	stw	r2,0(r3)
  80a47c:	003fd306 	br	80a3cc <__alt_data_end+0xff80a3cc>

0080a480 <_free_r>:
  80a480:	28004c26 	beq	r5,zero,80a5b4 <_free_r+0x134>
  80a484:	defffd04 	addi	sp,sp,-12
  80a488:	dc400115 	stw	r17,4(sp)
  80a48c:	dc000015 	stw	r16,0(sp)
  80a490:	2023883a 	mov	r17,r4
  80a494:	2821883a 	mov	r16,r5
  80a498:	dfc00215 	stw	ra,8(sp)
  80a49c:	081a4e40 	call	81a4e4 <__malloc_lock>
  80a4a0:	813fff17 	ldw	r4,-4(r16)
  80a4a4:	00bfff84 	movi	r2,-2
  80a4a8:	024020b4 	movhi	r9,130
  80a4ac:	81bffe04 	addi	r6,r16,-8
  80a4b0:	2084703a 	and	r2,r4,r2
  80a4b4:	4a7b8404 	addi	r9,r9,-4592
  80a4b8:	308b883a 	add	r5,r6,r2
  80a4bc:	2a000117 	ldw	r8,4(r5)
  80a4c0:	49c00217 	ldw	r7,8(r9)
  80a4c4:	00ffff04 	movi	r3,-4
  80a4c8:	40c6703a 	and	r3,r8,r3
  80a4cc:	39405326 	beq	r7,r5,80a61c <_free_r+0x19c>
  80a4d0:	28c00115 	stw	r3,4(r5)
  80a4d4:	2100004c 	andi	r4,r4,1
  80a4d8:	2000091e 	bne	r4,zero,80a500 <_free_r+0x80>
  80a4dc:	81fffe17 	ldw	r7,-8(r16)
  80a4e0:	4a000204 	addi	r8,r9,8
  80a4e4:	31cdc83a 	sub	r6,r6,r7
  80a4e8:	31000217 	ldw	r4,8(r6)
  80a4ec:	11c5883a 	add	r2,r2,r7
  80a4f0:	22006126 	beq	r4,r8,80a678 <_free_r+0x1f8>
  80a4f4:	31c00317 	ldw	r7,12(r6)
  80a4f8:	21c00315 	stw	r7,12(r4)
  80a4fc:	39000215 	stw	r4,8(r7)
  80a500:	28c9883a 	add	r4,r5,r3
  80a504:	21c00117 	ldw	r7,4(r4)
  80a508:	39c0004c 	andi	r7,r7,1
  80a50c:	38000d1e 	bne	r7,zero,80a544 <_free_r+0xc4>
  80a510:	29000217 	ldw	r4,8(r5)
  80a514:	10c5883a 	add	r2,r2,r3
  80a518:	00c020b4 	movhi	r3,130
  80a51c:	18fb8604 	addi	r3,r3,-4584
  80a520:	20c07526 	beq	r4,r3,80a6f8 <_free_r+0x278>
  80a524:	29c00317 	ldw	r7,12(r5)
  80a528:	11400054 	ori	r5,r2,1
  80a52c:	3087883a 	add	r3,r6,r2
  80a530:	21c00315 	stw	r7,12(r4)
  80a534:	39000215 	stw	r4,8(r7)
  80a538:	31400115 	stw	r5,4(r6)
  80a53c:	18800015 	stw	r2,0(r3)
  80a540:	00000406 	br	80a554 <_free_r+0xd4>
  80a544:	10c00054 	ori	r3,r2,1
  80a548:	30c00115 	stw	r3,4(r6)
  80a54c:	3087883a 	add	r3,r6,r2
  80a550:	18800015 	stw	r2,0(r3)
  80a554:	00c07fc4 	movi	r3,511
  80a558:	18801736 	bltu	r3,r2,80a5b8 <_free_r+0x138>
  80a55c:	1004d0fa 	srli	r2,r2,3
  80a560:	01400044 	movi	r5,1
  80a564:	49000117 	ldw	r4,4(r9)
  80a568:	1087883a 	add	r3,r2,r2
  80a56c:	18c7883a 	add	r3,r3,r3
  80a570:	1005d0ba 	srai	r2,r2,2
  80a574:	18c7883a 	add	r3,r3,r3
  80a578:	1a47883a 	add	r3,r3,r9
  80a57c:	19c00217 	ldw	r7,8(r3)
  80a580:	2884983a 	sll	r2,r5,r2
  80a584:	30c00315 	stw	r3,12(r6)
  80a588:	31c00215 	stw	r7,8(r6)
  80a58c:	1104b03a 	or	r2,r2,r4
  80a590:	19800215 	stw	r6,8(r3)
  80a594:	48800115 	stw	r2,4(r9)
  80a598:	39800315 	stw	r6,12(r7)
  80a59c:	8809883a 	mov	r4,r17
  80a5a0:	dfc00217 	ldw	ra,8(sp)
  80a5a4:	dc400117 	ldw	r17,4(sp)
  80a5a8:	dc000017 	ldw	r16,0(sp)
  80a5ac:	dec00304 	addi	sp,sp,12
  80a5b0:	081a5041 	jmpi	81a504 <__malloc_unlock>
  80a5b4:	f800283a 	ret
  80a5b8:	1006d27a 	srli	r3,r2,9
  80a5bc:	01000104 	movi	r4,4
  80a5c0:	20c04036 	bltu	r4,r3,80a6c4 <_free_r+0x244>
  80a5c4:	1006d1ba 	srli	r3,r2,6
  80a5c8:	19400e04 	addi	r5,r3,56
  80a5cc:	2947883a 	add	r3,r5,r5
  80a5d0:	18c7883a 	add	r3,r3,r3
  80a5d4:	18c7883a 	add	r3,r3,r3
  80a5d8:	1a49883a 	add	r4,r3,r9
  80a5dc:	20c00217 	ldw	r3,8(r4)
  80a5e0:	01c020b4 	movhi	r7,130
  80a5e4:	39fb8404 	addi	r7,r7,-4592
  80a5e8:	19003b26 	beq	r3,r4,80a6d8 <_free_r+0x258>
  80a5ec:	01ffff04 	movi	r7,-4
  80a5f0:	19400117 	ldw	r5,4(r3)
  80a5f4:	29ca703a 	and	r5,r5,r7
  80a5f8:	1140022e 	bgeu	r2,r5,80a604 <_free_r+0x184>
  80a5fc:	18c00217 	ldw	r3,8(r3)
  80a600:	20fffb1e 	bne	r4,r3,80a5f0 <__alt_data_end+0xff80a5f0>
  80a604:	18800317 	ldw	r2,12(r3)
  80a608:	30800315 	stw	r2,12(r6)
  80a60c:	30c00215 	stw	r3,8(r6)
  80a610:	11800215 	stw	r6,8(r2)
  80a614:	19800315 	stw	r6,12(r3)
  80a618:	003fe006 	br	80a59c <__alt_data_end+0xff80a59c>
  80a61c:	2100004c 	andi	r4,r4,1
  80a620:	1885883a 	add	r2,r3,r2
  80a624:	2000071e 	bne	r4,zero,80a644 <_free_r+0x1c4>
  80a628:	817ffe17 	ldw	r5,-8(r16)
  80a62c:	314dc83a 	sub	r6,r6,r5
  80a630:	30c00317 	ldw	r3,12(r6)
  80a634:	31000217 	ldw	r4,8(r6)
  80a638:	1145883a 	add	r2,r2,r5
  80a63c:	20c00315 	stw	r3,12(r4)
  80a640:	19000215 	stw	r4,8(r3)
  80a644:	10c00054 	ori	r3,r2,1
  80a648:	30c00115 	stw	r3,4(r6)
  80a64c:	00c020b4 	movhi	r3,130
  80a650:	18fdb304 	addi	r3,r3,-2356
  80a654:	18c00017 	ldw	r3,0(r3)
  80a658:	49800215 	stw	r6,8(r9)
  80a65c:	10ffcf36 	bltu	r2,r3,80a59c <__alt_data_end+0xff80a59c>
  80a660:	008020b4 	movhi	r2,130
  80a664:	10812104 	addi	r2,r2,1156
  80a668:	11400017 	ldw	r5,0(r2)
  80a66c:	8809883a 	mov	r4,r17
  80a670:	080a35c0 	call	80a35c <_malloc_trim_r>
  80a674:	003fc906 	br	80a59c <__alt_data_end+0xff80a59c>
  80a678:	28c9883a 	add	r4,r5,r3
  80a67c:	21000117 	ldw	r4,4(r4)
  80a680:	2100004c 	andi	r4,r4,1
  80a684:	20000a1e 	bne	r4,zero,80a6b0 <_free_r+0x230>
  80a688:	29000317 	ldw	r4,12(r5)
  80a68c:	29400217 	ldw	r5,8(r5)
  80a690:	10c5883a 	add	r2,r2,r3
  80a694:	10c00054 	ori	r3,r2,1
  80a698:	29000315 	stw	r4,12(r5)
  80a69c:	21400215 	stw	r5,8(r4)
  80a6a0:	30c00115 	stw	r3,4(r6)
  80a6a4:	308d883a 	add	r6,r6,r2
  80a6a8:	30800015 	stw	r2,0(r6)
  80a6ac:	003fbb06 	br	80a59c <__alt_data_end+0xff80a59c>
  80a6b0:	10c00054 	ori	r3,r2,1
  80a6b4:	30c00115 	stw	r3,4(r6)
  80a6b8:	308d883a 	add	r6,r6,r2
  80a6bc:	30800015 	stw	r2,0(r6)
  80a6c0:	003fb606 	br	80a59c <__alt_data_end+0xff80a59c>
  80a6c4:	01000504 	movi	r4,20
  80a6c8:	20c01436 	bltu	r4,r3,80a71c <_free_r+0x29c>
  80a6cc:	194016c4 	addi	r5,r3,91
  80a6d0:	2947883a 	add	r3,r5,r5
  80a6d4:	003fbe06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a6d8:	280bd0ba 	srai	r5,r5,2
  80a6dc:	00800044 	movi	r2,1
  80a6e0:	39000117 	ldw	r4,4(r7)
  80a6e4:	114a983a 	sll	r5,r2,r5
  80a6e8:	1805883a 	mov	r2,r3
  80a6ec:	2908b03a 	or	r4,r5,r4
  80a6f0:	39000115 	stw	r4,4(r7)
  80a6f4:	003fc406 	br	80a608 <__alt_data_end+0xff80a608>
  80a6f8:	49800515 	stw	r6,20(r9)
  80a6fc:	49800415 	stw	r6,16(r9)
  80a700:	10c00054 	ori	r3,r2,1
  80a704:	31000315 	stw	r4,12(r6)
  80a708:	31000215 	stw	r4,8(r6)
  80a70c:	30c00115 	stw	r3,4(r6)
  80a710:	308d883a 	add	r6,r6,r2
  80a714:	30800015 	stw	r2,0(r6)
  80a718:	003fa006 	br	80a59c <__alt_data_end+0xff80a59c>
  80a71c:	01001504 	movi	r4,84
  80a720:	20c00436 	bltu	r4,r3,80a734 <_free_r+0x2b4>
  80a724:	1006d33a 	srli	r3,r2,12
  80a728:	19401b84 	addi	r5,r3,110
  80a72c:	2947883a 	add	r3,r5,r5
  80a730:	003fa706 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a734:	01005504 	movi	r4,340
  80a738:	20c00436 	bltu	r4,r3,80a74c <_free_r+0x2cc>
  80a73c:	1006d3fa 	srli	r3,r2,15
  80a740:	19401dc4 	addi	r5,r3,119
  80a744:	2947883a 	add	r3,r5,r5
  80a748:	003fa106 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a74c:	01015504 	movi	r4,1364
  80a750:	20c00436 	bltu	r4,r3,80a764 <_free_r+0x2e4>
  80a754:	1006d4ba 	srli	r3,r2,18
  80a758:	19401f04 	addi	r5,r3,124
  80a75c:	2947883a 	add	r3,r5,r5
  80a760:	003f9b06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a764:	00c03f04 	movi	r3,252
  80a768:	01401f84 	movi	r5,126
  80a76c:	003f9806 	br	80a5d0 <__alt_data_end+0xff80a5d0>

0080a770 <_fseek_r>:
  80a770:	080a7981 	jmpi	80a798 <_fseeko_r>

0080a774 <fseek>:
  80a774:	2007883a 	mov	r3,r4
  80a778:	010020b4 	movhi	r4,130
  80a77c:	213db104 	addi	r4,r4,-2364
  80a780:	21000017 	ldw	r4,0(r4)
  80a784:	2805883a 	mov	r2,r5
  80a788:	300f883a 	mov	r7,r6
  80a78c:	180b883a 	mov	r5,r3
  80a790:	100d883a 	mov	r6,r2
  80a794:	080a7981 	jmpi	80a798 <_fseeko_r>

0080a798 <_fseeko_r>:
  80a798:	deffe804 	addi	sp,sp,-96
  80a79c:	dd401415 	stw	r21,80(sp)
  80a7a0:	dc801115 	stw	r18,68(sp)
  80a7a4:	dc401015 	stw	r17,64(sp)
  80a7a8:	dc000f15 	stw	r16,60(sp)
  80a7ac:	dfc01715 	stw	ra,92(sp)
  80a7b0:	ddc01615 	stw	r23,88(sp)
  80a7b4:	dd801515 	stw	r22,84(sp)
  80a7b8:	dd001315 	stw	r20,76(sp)
  80a7bc:	dcc01215 	stw	r19,72(sp)
  80a7c0:	2023883a 	mov	r17,r4
  80a7c4:	2821883a 	mov	r16,r5
  80a7c8:	302b883a 	mov	r21,r6
  80a7cc:	3825883a 	mov	r18,r7
  80a7d0:	20000226 	beq	r4,zero,80a7dc <_fseeko_r+0x44>
  80a7d4:	20800e17 	ldw	r2,56(r4)
  80a7d8:	10005a26 	beq	r2,zero,80a944 <_fseeko_r+0x1ac>
  80a7dc:	8080030b 	ldhu	r2,12(r16)
  80a7e0:	00c04204 	movi	r3,264
  80a7e4:	1080420c 	andi	r2,r2,264
  80a7e8:	10c05b26 	beq	r2,r3,80a958 <_fseeko_r+0x1c0>
  80a7ec:	85000a17 	ldw	r20,40(r16)
  80a7f0:	a000f626 	beq	r20,zero,80abcc <_fseeko_r+0x434>
  80a7f4:	00800044 	movi	r2,1
  80a7f8:	90803e26 	beq	r18,r2,80a8f4 <_fseeko_r+0x15c>
  80a7fc:	00800084 	movi	r2,2
  80a800:	90801026 	beq	r18,r2,80a844 <_fseeko_r+0xac>
  80a804:	90000f26 	beq	r18,zero,80a844 <_fseeko_r+0xac>
  80a808:	00800584 	movi	r2,22
  80a80c:	88800015 	stw	r2,0(r17)
  80a810:	04ffffc4 	movi	r19,-1
  80a814:	9805883a 	mov	r2,r19
  80a818:	dfc01717 	ldw	ra,92(sp)
  80a81c:	ddc01617 	ldw	r23,88(sp)
  80a820:	dd801517 	ldw	r22,84(sp)
  80a824:	dd401417 	ldw	r21,80(sp)
  80a828:	dd001317 	ldw	r20,76(sp)
  80a82c:	dcc01217 	ldw	r19,72(sp)
  80a830:	dc801117 	ldw	r18,68(sp)
  80a834:	dc401017 	ldw	r17,64(sp)
  80a838:	dc000f17 	ldw	r16,60(sp)
  80a83c:	dec01804 	addi	sp,sp,96
  80a840:	f800283a 	ret
  80a844:	80800417 	ldw	r2,16(r16)
  80a848:	002f883a 	mov	r23,zero
  80a84c:	0027883a 	mov	r19,zero
  80a850:	1000cb26 	beq	r2,zero,80ab80 <_fseeko_r+0x3e8>
  80a854:	8080030b 	ldhu	r2,12(r16)
  80a858:	10c2068c 	andi	r3,r2,2074
  80a85c:	1800071e 	bne	r3,zero,80a87c <_fseeko_r+0xe4>
  80a860:	10c1000c 	andi	r3,r2,1024
  80a864:	1800451e 	bne	r3,zero,80a97c <_fseeko_r+0x1e4>
  80a868:	00c02074 	movhi	r3,129
  80a86c:	18efd904 	addi	r3,r3,-16540
  80a870:	a0c0b726 	beq	r20,r3,80ab50 <_fseeko_r+0x3b8>
  80a874:	10820014 	ori	r2,r2,2048
  80a878:	8080030d 	sth	r2,12(r16)
  80a87c:	8809883a 	mov	r4,r17
  80a880:	800b883a 	mov	r5,r16
  80a884:	0809dd80 	call	809dd8 <_fflush_r>
  80a888:	1027883a 	mov	r19,r2
  80a88c:	103fe01e 	bne	r2,zero,80a810 <__alt_data_end+0xff80a810>
  80a890:	81400717 	ldw	r5,28(r16)
  80a894:	8809883a 	mov	r4,r17
  80a898:	a80d883a 	mov	r6,r21
  80a89c:	900f883a 	mov	r7,r18
  80a8a0:	a03ee83a 	callr	r20
  80a8a4:	00ffffc4 	movi	r3,-1
  80a8a8:	10ffd926 	beq	r2,r3,80a810 <__alt_data_end+0xff80a810>
  80a8ac:	81400c17 	ldw	r5,48(r16)
  80a8b0:	28000526 	beq	r5,zero,80a8c8 <_fseeko_r+0x130>
  80a8b4:	80801004 	addi	r2,r16,64
  80a8b8:	28800226 	beq	r5,r2,80a8c4 <_fseeko_r+0x12c>
  80a8bc:	8809883a 	mov	r4,r17
  80a8c0:	080a4800 	call	80a480 <_free_r>
  80a8c4:	80000c15 	stw	zero,48(r16)
  80a8c8:	8080030b 	ldhu	r2,12(r16)
  80a8cc:	80c00417 	ldw	r3,16(r16)
  80a8d0:	80000115 	stw	zero,4(r16)
  80a8d4:	10bdf7cc 	andi	r2,r2,63455
  80a8d8:	80c00015 	stw	r3,0(r16)
  80a8dc:	8080030d 	sth	r2,12(r16)
  80a8e0:	81001704 	addi	r4,r16,92
  80a8e4:	000b883a 	mov	r5,zero
  80a8e8:	01800204 	movi	r6,8
  80a8ec:	080b8380 	call	80b838 <memset>
  80a8f0:	003fc806 	br	80a814 <__alt_data_end+0xff80a814>
  80a8f4:	8809883a 	mov	r4,r17
  80a8f8:	800b883a 	mov	r5,r16
  80a8fc:	0809dd80 	call	809dd8 <_fflush_r>
  80a900:	8080030b 	ldhu	r2,12(r16)
  80a904:	10c4000c 	andi	r3,r2,4096
  80a908:	18008726 	beq	r3,zero,80ab28 <_fseeko_r+0x390>
  80a90c:	84c01417 	ldw	r19,80(r16)
  80a910:	10c0010c 	andi	r3,r2,4
  80a914:	1800431e 	bne	r3,zero,80aa24 <_fseeko_r+0x28c>
  80a918:	1080020c 	andi	r2,r2,8
  80a91c:	10008026 	beq	r2,zero,80ab20 <_fseeko_r+0x388>
  80a920:	80c00017 	ldw	r3,0(r16)
  80a924:	80800417 	ldw	r2,16(r16)
  80a928:	18000226 	beq	r3,zero,80a934 <_fseeko_r+0x19c>
  80a92c:	1887c83a 	sub	r3,r3,r2
  80a930:	98e7883a 	add	r19,r19,r3
  80a934:	aceb883a 	add	r21,r21,r19
  80a938:	05c00044 	movi	r23,1
  80a93c:	0025883a 	mov	r18,zero
  80a940:	003fc306 	br	80a850 <__alt_data_end+0xff80a850>
  80a944:	080a1b40 	call	80a1b4 <__sinit>
  80a948:	8080030b 	ldhu	r2,12(r16)
  80a94c:	00c04204 	movi	r3,264
  80a950:	1080420c 	andi	r2,r2,264
  80a954:	10ffa51e 	bne	r2,r3,80a7ec <__alt_data_end+0xff80a7ec>
  80a958:	8809883a 	mov	r4,r17
  80a95c:	800b883a 	mov	r5,r16
  80a960:	0809dd80 	call	809dd8 <_fflush_r>
  80a964:	003fa106 	br	80a7ec <__alt_data_end+0xff80a7ec>
  80a968:	8080030b 	ldhu	r2,12(r16)
  80a96c:	00c10004 	movi	r3,1024
  80a970:	80c01315 	stw	r3,76(r16)
  80a974:	10c4b03a 	or	r2,r2,r3
  80a978:	8080030d 	sth	r2,12(r16)
  80a97c:	9000311e 	bne	r18,zero,80aa44 <_fseeko_r+0x2ac>
  80a980:	a82d883a 	mov	r22,r21
  80a984:	b800371e 	bne	r23,zero,80aa64 <_fseeko_r+0x2cc>
  80a988:	8080030b 	ldhu	r2,12(r16)
  80a98c:	1084000c 	andi	r2,r2,4096
  80a990:	10007f26 	beq	r2,zero,80ab90 <_fseeko_r+0x3f8>
  80a994:	80801417 	ldw	r2,80(r16)
  80a998:	81800117 	ldw	r6,4(r16)
  80a99c:	81400c17 	ldw	r5,48(r16)
  80a9a0:	11a7c83a 	sub	r19,r2,r6
  80a9a4:	28008226 	beq	r5,zero,80abb0 <_fseeko_r+0x418>
  80a9a8:	81c00f17 	ldw	r7,60(r16)
  80a9ac:	99e7c83a 	sub	r19,r19,r7
  80a9b0:	81000e17 	ldw	r4,56(r16)
  80a9b4:	80800417 	ldw	r2,16(r16)
  80a9b8:	99a7883a 	add	r19,r19,r6
  80a9bc:	2087c83a 	sub	r3,r4,r2
  80a9c0:	98e7c83a 	sub	r19,r19,r3
  80a9c4:	38c7883a 	add	r3,r7,r3
  80a9c8:	b4c02b16 	blt	r22,r19,80aa78 <_fseeko_r+0x2e0>
  80a9cc:	98c9883a 	add	r4,r19,r3
  80a9d0:	b100292e 	bgeu	r22,r4,80aa78 <_fseeko_r+0x2e0>
  80a9d4:	b4e7c83a 	sub	r19,r22,r19
  80a9d8:	14c5883a 	add	r2,r2,r19
  80a9dc:	1ce7c83a 	sub	r19,r3,r19
  80a9e0:	80800015 	stw	r2,0(r16)
  80a9e4:	84c00115 	stw	r19,4(r16)
  80a9e8:	28000526 	beq	r5,zero,80aa00 <_fseeko_r+0x268>
  80a9ec:	80801004 	addi	r2,r16,64
  80a9f0:	28800226 	beq	r5,r2,80a9fc <_fseeko_r+0x264>
  80a9f4:	8809883a 	mov	r4,r17
  80a9f8:	080a4800 	call	80a480 <_free_r>
  80a9fc:	80000c15 	stw	zero,48(r16)
  80aa00:	8080030b 	ldhu	r2,12(r16)
  80aa04:	81001704 	addi	r4,r16,92
  80aa08:	000b883a 	mov	r5,zero
  80aa0c:	10bff7cc 	andi	r2,r2,65503
  80aa10:	8080030d 	sth	r2,12(r16)
  80aa14:	01800204 	movi	r6,8
  80aa18:	080b8380 	call	80b838 <memset>
  80aa1c:	0027883a 	mov	r19,zero
  80aa20:	003f7c06 	br	80a814 <__alt_data_end+0xff80a814>
  80aa24:	80c00117 	ldw	r3,4(r16)
  80aa28:	80800c17 	ldw	r2,48(r16)
  80aa2c:	98e7c83a 	sub	r19,r19,r3
  80aa30:	10003b26 	beq	r2,zero,80ab20 <_fseeko_r+0x388>
  80aa34:	80c00f17 	ldw	r3,60(r16)
  80aa38:	80800417 	ldw	r2,16(r16)
  80aa3c:	98e7c83a 	sub	r19,r19,r3
  80aa40:	003fbc06 	br	80a934 <__alt_data_end+0xff80a934>
  80aa44:	8140038f 	ldh	r5,14(r16)
  80aa48:	8809883a 	mov	r4,r17
  80aa4c:	d80d883a 	mov	r6,sp
  80aa50:	080ac000 	call	80ac00 <_fstat_r>
  80aa54:	103f891e 	bne	r2,zero,80a87c <__alt_data_end+0xff80a87c>
  80aa58:	dd800417 	ldw	r22,16(sp)
  80aa5c:	adad883a 	add	r22,r21,r22
  80aa60:	b83fc926 	beq	r23,zero,80a988 <__alt_data_end+0xff80a988>
  80aa64:	81400c17 	ldw	r5,48(r16)
  80aa68:	81800117 	ldw	r6,4(r16)
  80aa6c:	28005026 	beq	r5,zero,80abb0 <_fseeko_r+0x418>
  80aa70:	81c00f17 	ldw	r7,60(r16)
  80aa74:	003fce06 	br	80a9b0 <__alt_data_end+0xff80a9b0>
  80aa78:	84c01317 	ldw	r19,76(r16)
  80aa7c:	81400717 	ldw	r5,28(r16)
  80aa80:	8809883a 	mov	r4,r17
  80aa84:	04e7c83a 	sub	r19,zero,r19
  80aa88:	b4e6703a 	and	r19,r22,r19
  80aa8c:	980d883a 	mov	r6,r19
  80aa90:	000f883a 	mov	r7,zero
  80aa94:	a03ee83a 	callr	r20
  80aa98:	00ffffc4 	movi	r3,-1
  80aa9c:	10ff7726 	beq	r2,r3,80a87c <__alt_data_end+0xff80a87c>
  80aaa0:	80800417 	ldw	r2,16(r16)
  80aaa4:	81400c17 	ldw	r5,48(r16)
  80aaa8:	80000115 	stw	zero,4(r16)
  80aaac:	80800015 	stw	r2,0(r16)
  80aab0:	28000526 	beq	r5,zero,80aac8 <_fseeko_r+0x330>
  80aab4:	80801004 	addi	r2,r16,64
  80aab8:	28800226 	beq	r5,r2,80aac4 <_fseeko_r+0x32c>
  80aabc:	8809883a 	mov	r4,r17
  80aac0:	080a4800 	call	80a480 <_free_r>
  80aac4:	80000c15 	stw	zero,48(r16)
  80aac8:	8080030b 	ldhu	r2,12(r16)
  80aacc:	b4e7c83a 	sub	r19,r22,r19
  80aad0:	10bff7cc 	andi	r2,r2,65503
  80aad4:	8080030d 	sth	r2,12(r16)
  80aad8:	98000b26 	beq	r19,zero,80ab08 <_fseeko_r+0x370>
  80aadc:	8809883a 	mov	r4,r17
  80aae0:	800b883a 	mov	r5,r16
  80aae4:	080bb180 	call	80bb18 <__srefill_r>
  80aae8:	103f641e 	bne	r2,zero,80a87c <__alt_data_end+0xff80a87c>
  80aaec:	80800117 	ldw	r2,4(r16)
  80aaf0:	14ff6236 	bltu	r2,r19,80a87c <__alt_data_end+0xff80a87c>
  80aaf4:	80c00017 	ldw	r3,0(r16)
  80aaf8:	14c5c83a 	sub	r2,r2,r19
  80aafc:	80800115 	stw	r2,4(r16)
  80ab00:	1ce7883a 	add	r19,r3,r19
  80ab04:	84c00015 	stw	r19,0(r16)
  80ab08:	81001704 	addi	r4,r16,92
  80ab0c:	000b883a 	mov	r5,zero
  80ab10:	01800204 	movi	r6,8
  80ab14:	080b8380 	call	80b838 <memset>
  80ab18:	0027883a 	mov	r19,zero
  80ab1c:	003f3d06 	br	80a814 <__alt_data_end+0xff80a814>
  80ab20:	80800417 	ldw	r2,16(r16)
  80ab24:	003f8306 	br	80a934 <__alt_data_end+0xff80a934>
  80ab28:	81400717 	ldw	r5,28(r16)
  80ab2c:	8809883a 	mov	r4,r17
  80ab30:	000d883a 	mov	r6,zero
  80ab34:	900f883a 	mov	r7,r18
  80ab38:	a03ee83a 	callr	r20
  80ab3c:	1027883a 	mov	r19,r2
  80ab40:	00bfffc4 	movi	r2,-1
  80ab44:	98bf3226 	beq	r19,r2,80a810 <__alt_data_end+0xff80a810>
  80ab48:	8080030b 	ldhu	r2,12(r16)
  80ab4c:	003f7006 	br	80a910 <__alt_data_end+0xff80a910>
  80ab50:	8140038f 	ldh	r5,14(r16)
  80ab54:	283f4716 	blt	r5,zero,80a874 <__alt_data_end+0xff80a874>
  80ab58:	8809883a 	mov	r4,r17
  80ab5c:	d80d883a 	mov	r6,sp
  80ab60:	080ac000 	call	80ac00 <_fstat_r>
  80ab64:	1000041e 	bne	r2,zero,80ab78 <_fseeko_r+0x3e0>
  80ab68:	d8800117 	ldw	r2,4(sp)
  80ab6c:	00e00014 	movui	r3,32768
  80ab70:	10bc000c 	andi	r2,r2,61440
  80ab74:	10ff7c26 	beq	r2,r3,80a968 <__alt_data_end+0xff80a968>
  80ab78:	8080030b 	ldhu	r2,12(r16)
  80ab7c:	003f3d06 	br	80a874 <__alt_data_end+0xff80a874>
  80ab80:	8809883a 	mov	r4,r17
  80ab84:	800b883a 	mov	r5,r16
  80ab88:	080aed80 	call	80aed8 <__smakebuf_r>
  80ab8c:	003f3106 	br	80a854 <__alt_data_end+0xff80a854>
  80ab90:	81400717 	ldw	r5,28(r16)
  80ab94:	8809883a 	mov	r4,r17
  80ab98:	000d883a 	mov	r6,zero
  80ab9c:	01c00044 	movi	r7,1
  80aba0:	a03ee83a 	callr	r20
  80aba4:	00ffffc4 	movi	r3,-1
  80aba8:	10ff7b1e 	bne	r2,r3,80a998 <__alt_data_end+0xff80a998>
  80abac:	003f3306 	br	80a87c <__alt_data_end+0xff80a87c>
  80abb0:	80c00017 	ldw	r3,0(r16)
  80abb4:	80800417 	ldw	r2,16(r16)
  80abb8:	000b883a 	mov	r5,zero
  80abbc:	1887c83a 	sub	r3,r3,r2
  80abc0:	98e7c83a 	sub	r19,r19,r3
  80abc4:	30c7883a 	add	r3,r6,r3
  80abc8:	003f7f06 	br	80a9c8 <__alt_data_end+0xff80a9c8>
  80abcc:	00800744 	movi	r2,29
  80abd0:	88800015 	stw	r2,0(r17)
  80abd4:	04ffffc4 	movi	r19,-1
  80abd8:	003f0e06 	br	80a814 <__alt_data_end+0xff80a814>

0080abdc <fseeko>:
  80abdc:	2007883a 	mov	r3,r4
  80abe0:	010020b4 	movhi	r4,130
  80abe4:	213db104 	addi	r4,r4,-2364
  80abe8:	21000017 	ldw	r4,0(r4)
  80abec:	2805883a 	mov	r2,r5
  80abf0:	300f883a 	mov	r7,r6
  80abf4:	180b883a 	mov	r5,r3
  80abf8:	100d883a 	mov	r6,r2
  80abfc:	080a7981 	jmpi	80a798 <_fseeko_r>

0080ac00 <_fstat_r>:
  80ac00:	defffd04 	addi	sp,sp,-12
  80ac04:	dc000015 	stw	r16,0(sp)
  80ac08:	040020b4 	movhi	r16,130
  80ac0c:	dc400115 	stw	r17,4(sp)
  80ac10:	84011e04 	addi	r16,r16,1144
  80ac14:	2023883a 	mov	r17,r4
  80ac18:	2809883a 	mov	r4,r5
  80ac1c:	300b883a 	mov	r5,r6
  80ac20:	dfc00215 	stw	ra,8(sp)
  80ac24:	80000015 	stw	zero,0(r16)
  80ac28:	0819f100 	call	819f10 <fstat>
  80ac2c:	00ffffc4 	movi	r3,-1
  80ac30:	10c00526 	beq	r2,r3,80ac48 <_fstat_r+0x48>
  80ac34:	dfc00217 	ldw	ra,8(sp)
  80ac38:	dc400117 	ldw	r17,4(sp)
  80ac3c:	dc000017 	ldw	r16,0(sp)
  80ac40:	dec00304 	addi	sp,sp,12
  80ac44:	f800283a 	ret
  80ac48:	80c00017 	ldw	r3,0(r16)
  80ac4c:	183ff926 	beq	r3,zero,80ac34 <__alt_data_end+0xff80ac34>
  80ac50:	88c00015 	stw	r3,0(r17)
  80ac54:	003ff706 	br	80ac34 <__alt_data_end+0xff80ac34>

0080ac58 <_fwalk>:
  80ac58:	defff704 	addi	sp,sp,-36
  80ac5c:	dd000415 	stw	r20,16(sp)
  80ac60:	dfc00815 	stw	ra,32(sp)
  80ac64:	ddc00715 	stw	r23,28(sp)
  80ac68:	dd800615 	stw	r22,24(sp)
  80ac6c:	dd400515 	stw	r21,20(sp)
  80ac70:	dcc00315 	stw	r19,12(sp)
  80ac74:	dc800215 	stw	r18,8(sp)
  80ac78:	dc400115 	stw	r17,4(sp)
  80ac7c:	dc000015 	stw	r16,0(sp)
  80ac80:	2500b804 	addi	r20,r4,736
  80ac84:	a0002326 	beq	r20,zero,80ad14 <_fwalk+0xbc>
  80ac88:	282b883a 	mov	r21,r5
  80ac8c:	002f883a 	mov	r23,zero
  80ac90:	05800044 	movi	r22,1
  80ac94:	04ffffc4 	movi	r19,-1
  80ac98:	a4400117 	ldw	r17,4(r20)
  80ac9c:	a4800217 	ldw	r18,8(r20)
  80aca0:	8c7fffc4 	addi	r17,r17,-1
  80aca4:	88000d16 	blt	r17,zero,80acdc <_fwalk+0x84>
  80aca8:	94000304 	addi	r16,r18,12
  80acac:	94800384 	addi	r18,r18,14
  80acb0:	80c0000b 	ldhu	r3,0(r16)
  80acb4:	8c7fffc4 	addi	r17,r17,-1
  80acb8:	813ffd04 	addi	r4,r16,-12
  80acbc:	b0c0042e 	bgeu	r22,r3,80acd0 <_fwalk+0x78>
  80acc0:	90c0000f 	ldh	r3,0(r18)
  80acc4:	1cc00226 	beq	r3,r19,80acd0 <_fwalk+0x78>
  80acc8:	a83ee83a 	callr	r21
  80accc:	b8aeb03a 	or	r23,r23,r2
  80acd0:	84001a04 	addi	r16,r16,104
  80acd4:	94801a04 	addi	r18,r18,104
  80acd8:	8cfff51e 	bne	r17,r19,80acb0 <__alt_data_end+0xff80acb0>
  80acdc:	a5000017 	ldw	r20,0(r20)
  80ace0:	a03fed1e 	bne	r20,zero,80ac98 <__alt_data_end+0xff80ac98>
  80ace4:	b805883a 	mov	r2,r23
  80ace8:	dfc00817 	ldw	ra,32(sp)
  80acec:	ddc00717 	ldw	r23,28(sp)
  80acf0:	dd800617 	ldw	r22,24(sp)
  80acf4:	dd400517 	ldw	r21,20(sp)
  80acf8:	dd000417 	ldw	r20,16(sp)
  80acfc:	dcc00317 	ldw	r19,12(sp)
  80ad00:	dc800217 	ldw	r18,8(sp)
  80ad04:	dc400117 	ldw	r17,4(sp)
  80ad08:	dc000017 	ldw	r16,0(sp)
  80ad0c:	dec00904 	addi	sp,sp,36
  80ad10:	f800283a 	ret
  80ad14:	002f883a 	mov	r23,zero
  80ad18:	003ff206 	br	80ace4 <__alt_data_end+0xff80ace4>

0080ad1c <_fwalk_reent>:
  80ad1c:	defff704 	addi	sp,sp,-36
  80ad20:	dd400515 	stw	r21,20(sp)
  80ad24:	dfc00815 	stw	ra,32(sp)
  80ad28:	ddc00715 	stw	r23,28(sp)
  80ad2c:	dd800615 	stw	r22,24(sp)
  80ad30:	dd000415 	stw	r20,16(sp)
  80ad34:	dcc00315 	stw	r19,12(sp)
  80ad38:	dc800215 	stw	r18,8(sp)
  80ad3c:	dc400115 	stw	r17,4(sp)
  80ad40:	dc000015 	stw	r16,0(sp)
  80ad44:	2540b804 	addi	r21,r4,736
  80ad48:	a8002326 	beq	r21,zero,80add8 <_fwalk_reent+0xbc>
  80ad4c:	2829883a 	mov	r20,r5
  80ad50:	202d883a 	mov	r22,r4
  80ad54:	002f883a 	mov	r23,zero
  80ad58:	04c00044 	movi	r19,1
  80ad5c:	04bfffc4 	movi	r18,-1
  80ad60:	ac400117 	ldw	r17,4(r21)
  80ad64:	ac000217 	ldw	r16,8(r21)
  80ad68:	8c7fffc4 	addi	r17,r17,-1
  80ad6c:	88000c16 	blt	r17,zero,80ada0 <_fwalk_reent+0x84>
  80ad70:	84000304 	addi	r16,r16,12
  80ad74:	80c0000b 	ldhu	r3,0(r16)
  80ad78:	8c7fffc4 	addi	r17,r17,-1
  80ad7c:	817ffd04 	addi	r5,r16,-12
  80ad80:	98c0052e 	bgeu	r19,r3,80ad98 <_fwalk_reent+0x7c>
  80ad84:	80c0008f 	ldh	r3,2(r16)
  80ad88:	b009883a 	mov	r4,r22
  80ad8c:	1c800226 	beq	r3,r18,80ad98 <_fwalk_reent+0x7c>
  80ad90:	a03ee83a 	callr	r20
  80ad94:	b8aeb03a 	or	r23,r23,r2
  80ad98:	84001a04 	addi	r16,r16,104
  80ad9c:	8cbff51e 	bne	r17,r18,80ad74 <__alt_data_end+0xff80ad74>
  80ada0:	ad400017 	ldw	r21,0(r21)
  80ada4:	a83fee1e 	bne	r21,zero,80ad60 <__alt_data_end+0xff80ad60>
  80ada8:	b805883a 	mov	r2,r23
  80adac:	dfc00817 	ldw	ra,32(sp)
  80adb0:	ddc00717 	ldw	r23,28(sp)
  80adb4:	dd800617 	ldw	r22,24(sp)
  80adb8:	dd400517 	ldw	r21,20(sp)
  80adbc:	dd000417 	ldw	r20,16(sp)
  80adc0:	dcc00317 	ldw	r19,12(sp)
  80adc4:	dc800217 	ldw	r18,8(sp)
  80adc8:	dc400117 	ldw	r17,4(sp)
  80adcc:	dc000017 	ldw	r16,0(sp)
  80add0:	dec00904 	addi	sp,sp,36
  80add4:	f800283a 	ret
  80add8:	002f883a 	mov	r23,zero
  80addc:	003ff206 	br	80ada8 <__alt_data_end+0xff80ada8>

0080ade0 <_getc_r>:
  80ade0:	defffd04 	addi	sp,sp,-12
  80ade4:	dc000115 	stw	r16,4(sp)
  80ade8:	dfc00215 	stw	ra,8(sp)
  80adec:	2021883a 	mov	r16,r4
  80adf0:	20000226 	beq	r4,zero,80adfc <_getc_r+0x1c>
  80adf4:	20800e17 	ldw	r2,56(r4)
  80adf8:	10000c26 	beq	r2,zero,80ae2c <_getc_r+0x4c>
  80adfc:	28800117 	ldw	r2,4(r5)
  80ae00:	10bfffc4 	addi	r2,r2,-1
  80ae04:	28800115 	stw	r2,4(r5)
  80ae08:	10000c16 	blt	r2,zero,80ae3c <_getc_r+0x5c>
  80ae0c:	28800017 	ldw	r2,0(r5)
  80ae10:	10c00044 	addi	r3,r2,1
  80ae14:	28c00015 	stw	r3,0(r5)
  80ae18:	10800003 	ldbu	r2,0(r2)
  80ae1c:	dfc00217 	ldw	ra,8(sp)
  80ae20:	dc000117 	ldw	r16,4(sp)
  80ae24:	dec00304 	addi	sp,sp,12
  80ae28:	f800283a 	ret
  80ae2c:	d9400015 	stw	r5,0(sp)
  80ae30:	080a1b40 	call	80a1b4 <__sinit>
  80ae34:	d9400017 	ldw	r5,0(sp)
  80ae38:	003ff006 	br	80adfc <__alt_data_end+0xff80adfc>
  80ae3c:	8009883a 	mov	r4,r16
  80ae40:	dfc00217 	ldw	ra,8(sp)
  80ae44:	dc000117 	ldw	r16,4(sp)
  80ae48:	dec00304 	addi	sp,sp,12
  80ae4c:	080bcec1 	jmpi	80bcec <__srget_r>

0080ae50 <getc>:
  80ae50:	008020b4 	movhi	r2,130
  80ae54:	defffd04 	addi	sp,sp,-12
  80ae58:	10bdb104 	addi	r2,r2,-2364
  80ae5c:	dc400115 	stw	r17,4(sp)
  80ae60:	14400017 	ldw	r17,0(r2)
  80ae64:	dc000015 	stw	r16,0(sp)
  80ae68:	dfc00215 	stw	ra,8(sp)
  80ae6c:	2021883a 	mov	r16,r4
  80ae70:	88000226 	beq	r17,zero,80ae7c <getc+0x2c>
  80ae74:	88800e17 	ldw	r2,56(r17)
  80ae78:	10000d26 	beq	r2,zero,80aeb0 <getc+0x60>
  80ae7c:	80800117 	ldw	r2,4(r16)
  80ae80:	10bfffc4 	addi	r2,r2,-1
  80ae84:	80800115 	stw	r2,4(r16)
  80ae88:	10000c16 	blt	r2,zero,80aebc <getc+0x6c>
  80ae8c:	80800017 	ldw	r2,0(r16)
  80ae90:	10c00044 	addi	r3,r2,1
  80ae94:	80c00015 	stw	r3,0(r16)
  80ae98:	10800003 	ldbu	r2,0(r2)
  80ae9c:	dfc00217 	ldw	ra,8(sp)
  80aea0:	dc400117 	ldw	r17,4(sp)
  80aea4:	dc000017 	ldw	r16,0(sp)
  80aea8:	dec00304 	addi	sp,sp,12
  80aeac:	f800283a 	ret
  80aeb0:	8809883a 	mov	r4,r17
  80aeb4:	080a1b40 	call	80a1b4 <__sinit>
  80aeb8:	003ff006 	br	80ae7c <__alt_data_end+0xff80ae7c>
  80aebc:	8809883a 	mov	r4,r17
  80aec0:	800b883a 	mov	r5,r16
  80aec4:	dfc00217 	ldw	ra,8(sp)
  80aec8:	dc400117 	ldw	r17,4(sp)
  80aecc:	dc000017 	ldw	r16,0(sp)
  80aed0:	dec00304 	addi	sp,sp,12
  80aed4:	080bcec1 	jmpi	80bcec <__srget_r>

0080aed8 <__smakebuf_r>:
  80aed8:	2880030b 	ldhu	r2,12(r5)
  80aedc:	10c0008c 	andi	r3,r2,2
  80aee0:	1800401e 	bne	r3,zero,80afe4 <__smakebuf_r+0x10c>
  80aee4:	deffec04 	addi	sp,sp,-80
  80aee8:	dc000f15 	stw	r16,60(sp)
  80aeec:	2821883a 	mov	r16,r5
  80aef0:	2940038f 	ldh	r5,14(r5)
  80aef4:	dc401015 	stw	r17,64(sp)
  80aef8:	dfc01315 	stw	ra,76(sp)
  80aefc:	dcc01215 	stw	r19,72(sp)
  80af00:	dc801115 	stw	r18,68(sp)
  80af04:	2023883a 	mov	r17,r4
  80af08:	28001b16 	blt	r5,zero,80af78 <__smakebuf_r+0xa0>
  80af0c:	d80d883a 	mov	r6,sp
  80af10:	080ac000 	call	80ac00 <_fstat_r>
  80af14:	10001716 	blt	r2,zero,80af74 <__smakebuf_r+0x9c>
  80af18:	d8800117 	ldw	r2,4(sp)
  80af1c:	00e00014 	movui	r3,32768
  80af20:	10bc000c 	andi	r2,r2,61440
  80af24:	10c03726 	beq	r2,r3,80b004 <__smakebuf_r+0x12c>
  80af28:	80c0030b 	ldhu	r3,12(r16)
  80af2c:	18c20014 	ori	r3,r3,2048
  80af30:	80c0030d 	sth	r3,12(r16)
  80af34:	00c80004 	movi	r3,8192
  80af38:	10c03c1e 	bne	r2,r3,80b02c <__smakebuf_r+0x154>
  80af3c:	8140038f 	ldh	r5,14(r16)
  80af40:	8809883a 	mov	r4,r17
  80af44:	08121480 	call	812148 <_isatty_r>
  80af48:	10004e26 	beq	r2,zero,80b084 <__smakebuf_r+0x1ac>
  80af4c:	8080030b 	ldhu	r2,12(r16)
  80af50:	04c00044 	movi	r19,1
  80af54:	80c010c4 	addi	r3,r16,67
  80af58:	14c4b03a 	or	r2,r2,r19
  80af5c:	8080030d 	sth	r2,12(r16)
  80af60:	80c00015 	stw	r3,0(r16)
  80af64:	80c00415 	stw	r3,16(r16)
  80af68:	84c00515 	stw	r19,20(r16)
  80af6c:	04810004 	movi	r18,1024
  80af70:	00000706 	br	80af90 <__smakebuf_r+0xb8>
  80af74:	8080030b 	ldhu	r2,12(r16)
  80af78:	10c0200c 	andi	r3,r2,128
  80af7c:	18001f1e 	bne	r3,zero,80affc <__smakebuf_r+0x124>
  80af80:	04810004 	movi	r18,1024
  80af84:	10820014 	ori	r2,r2,2048
  80af88:	8080030d 	sth	r2,12(r16)
  80af8c:	0027883a 	mov	r19,zero
  80af90:	8809883a 	mov	r4,r17
  80af94:	900b883a 	mov	r5,r18
  80af98:	080b0900 	call	80b090 <_malloc_r>
  80af9c:	10002e26 	beq	r2,zero,80b058 <__smakebuf_r+0x180>
  80afa0:	80c0030b 	ldhu	r3,12(r16)
  80afa4:	01002074 	movhi	r4,129
  80afa8:	21279d04 	addi	r4,r4,-24972
  80afac:	89000f15 	stw	r4,60(r17)
  80afb0:	18c02014 	ori	r3,r3,128
  80afb4:	80c0030d 	sth	r3,12(r16)
  80afb8:	80800015 	stw	r2,0(r16)
  80afbc:	80800415 	stw	r2,16(r16)
  80afc0:	84800515 	stw	r18,20(r16)
  80afc4:	98001c1e 	bne	r19,zero,80b038 <__smakebuf_r+0x160>
  80afc8:	dfc01317 	ldw	ra,76(sp)
  80afcc:	dcc01217 	ldw	r19,72(sp)
  80afd0:	dc801117 	ldw	r18,68(sp)
  80afd4:	dc401017 	ldw	r17,64(sp)
  80afd8:	dc000f17 	ldw	r16,60(sp)
  80afdc:	dec01404 	addi	sp,sp,80
  80afe0:	f800283a 	ret
  80afe4:	288010c4 	addi	r2,r5,67
  80afe8:	28800015 	stw	r2,0(r5)
  80afec:	28800415 	stw	r2,16(r5)
  80aff0:	00800044 	movi	r2,1
  80aff4:	28800515 	stw	r2,20(r5)
  80aff8:	f800283a 	ret
  80affc:	04801004 	movi	r18,64
  80b000:	003fe006 	br	80af84 <__alt_data_end+0xff80af84>
  80b004:	81000a17 	ldw	r4,40(r16)
  80b008:	00c02074 	movhi	r3,129
  80b00c:	18efd904 	addi	r3,r3,-16540
  80b010:	20ffc51e 	bne	r4,r3,80af28 <__alt_data_end+0xff80af28>
  80b014:	80c0030b 	ldhu	r3,12(r16)
  80b018:	01010004 	movi	r4,1024
  80b01c:	81001315 	stw	r4,76(r16)
  80b020:	1906b03a 	or	r3,r3,r4
  80b024:	80c0030d 	sth	r3,12(r16)
  80b028:	003fc206 	br	80af34 <__alt_data_end+0xff80af34>
  80b02c:	0027883a 	mov	r19,zero
  80b030:	04810004 	movi	r18,1024
  80b034:	003fd606 	br	80af90 <__alt_data_end+0xff80af90>
  80b038:	8140038f 	ldh	r5,14(r16)
  80b03c:	8809883a 	mov	r4,r17
  80b040:	08121480 	call	812148 <_isatty_r>
  80b044:	103fe026 	beq	r2,zero,80afc8 <__alt_data_end+0xff80afc8>
  80b048:	8080030b 	ldhu	r2,12(r16)
  80b04c:	10800054 	ori	r2,r2,1
  80b050:	8080030d 	sth	r2,12(r16)
  80b054:	003fdc06 	br	80afc8 <__alt_data_end+0xff80afc8>
  80b058:	8080030b 	ldhu	r2,12(r16)
  80b05c:	10c0800c 	andi	r3,r2,512
  80b060:	183fd91e 	bne	r3,zero,80afc8 <__alt_data_end+0xff80afc8>
  80b064:	10800094 	ori	r2,r2,2
  80b068:	80c010c4 	addi	r3,r16,67
  80b06c:	8080030d 	sth	r2,12(r16)
  80b070:	00800044 	movi	r2,1
  80b074:	80c00015 	stw	r3,0(r16)
  80b078:	80c00415 	stw	r3,16(r16)
  80b07c:	80800515 	stw	r2,20(r16)
  80b080:	003fd106 	br	80afc8 <__alt_data_end+0xff80afc8>
  80b084:	04c00044 	movi	r19,1
  80b088:	04810004 	movi	r18,1024
  80b08c:	003fc006 	br	80af90 <__alt_data_end+0xff80af90>

0080b090 <_malloc_r>:
  80b090:	defff504 	addi	sp,sp,-44
  80b094:	dc800315 	stw	r18,12(sp)
  80b098:	dfc00a15 	stw	ra,40(sp)
  80b09c:	df000915 	stw	fp,36(sp)
  80b0a0:	ddc00815 	stw	r23,32(sp)
  80b0a4:	dd800715 	stw	r22,28(sp)
  80b0a8:	dd400615 	stw	r21,24(sp)
  80b0ac:	dd000515 	stw	r20,20(sp)
  80b0b0:	dcc00415 	stw	r19,16(sp)
  80b0b4:	dc400215 	stw	r17,8(sp)
  80b0b8:	dc000115 	stw	r16,4(sp)
  80b0bc:	288002c4 	addi	r2,r5,11
  80b0c0:	00c00584 	movi	r3,22
  80b0c4:	2025883a 	mov	r18,r4
  80b0c8:	18802a2e 	bgeu	r3,r2,80b174 <_malloc_r+0xe4>
  80b0cc:	047ffe04 	movi	r17,-8
  80b0d0:	1462703a 	and	r17,r2,r17
  80b0d4:	88009e16 	blt	r17,zero,80b350 <_malloc_r+0x2c0>
  80b0d8:	89409d36 	bltu	r17,r5,80b350 <_malloc_r+0x2c0>
  80b0dc:	081a4e40 	call	81a4e4 <__malloc_lock>
  80b0e0:	00807dc4 	movi	r2,503
  80b0e4:	14402736 	bltu	r2,r17,80b184 <_malloc_r+0xf4>
  80b0e8:	8806d0fa 	srli	r3,r17,3
  80b0ec:	04c020b4 	movhi	r19,130
  80b0f0:	9cfb8404 	addi	r19,r19,-4592
  80b0f4:	18c5883a 	add	r2,r3,r3
  80b0f8:	1085883a 	add	r2,r2,r2
  80b0fc:	1085883a 	add	r2,r2,r2
  80b100:	9885883a 	add	r2,r19,r2
  80b104:	14000317 	ldw	r16,12(r2)
  80b108:	80814a26 	beq	r16,r2,80b634 <_malloc_r+0x5a4>
  80b10c:	80c00117 	ldw	r3,4(r16)
  80b110:	81000317 	ldw	r4,12(r16)
  80b114:	00bfff04 	movi	r2,-4
  80b118:	1884703a 	and	r2,r3,r2
  80b11c:	81400217 	ldw	r5,8(r16)
  80b120:	8085883a 	add	r2,r16,r2
  80b124:	10c00117 	ldw	r3,4(r2)
  80b128:	29000315 	stw	r4,12(r5)
  80b12c:	21400215 	stw	r5,8(r4)
  80b130:	18c00054 	ori	r3,r3,1
  80b134:	10c00115 	stw	r3,4(r2)
  80b138:	9009883a 	mov	r4,r18
  80b13c:	081a5040 	call	81a504 <__malloc_unlock>
  80b140:	80800204 	addi	r2,r16,8
  80b144:	dfc00a17 	ldw	ra,40(sp)
  80b148:	df000917 	ldw	fp,36(sp)
  80b14c:	ddc00817 	ldw	r23,32(sp)
  80b150:	dd800717 	ldw	r22,28(sp)
  80b154:	dd400617 	ldw	r21,24(sp)
  80b158:	dd000517 	ldw	r20,20(sp)
  80b15c:	dcc00417 	ldw	r19,16(sp)
  80b160:	dc800317 	ldw	r18,12(sp)
  80b164:	dc400217 	ldw	r17,8(sp)
  80b168:	dc000117 	ldw	r16,4(sp)
  80b16c:	dec00b04 	addi	sp,sp,44
  80b170:	f800283a 	ret
  80b174:	04400404 	movi	r17,16
  80b178:	89407536 	bltu	r17,r5,80b350 <_malloc_r+0x2c0>
  80b17c:	081a4e40 	call	81a4e4 <__malloc_lock>
  80b180:	003fd906 	br	80b0e8 <__alt_data_end+0xff80b0e8>
  80b184:	8806d27a 	srli	r3,r17,9
  80b188:	18007526 	beq	r3,zero,80b360 <_malloc_r+0x2d0>
  80b18c:	00800104 	movi	r2,4
  80b190:	10c0ef36 	bltu	r2,r3,80b550 <_malloc_r+0x4c0>
  80b194:	8806d1ba 	srli	r3,r17,6
  80b198:	19c00e04 	addi	r7,r3,56
  80b19c:	39cb883a 	add	r5,r7,r7
  80b1a0:	04c020b4 	movhi	r19,130
  80b1a4:	294b883a 	add	r5,r5,r5
  80b1a8:	9cfb8404 	addi	r19,r19,-4592
  80b1ac:	294b883a 	add	r5,r5,r5
  80b1b0:	994b883a 	add	r5,r19,r5
  80b1b4:	2c000317 	ldw	r16,12(r5)
  80b1b8:	2c000e26 	beq	r5,r16,80b1f4 <_malloc_r+0x164>
  80b1bc:	80800117 	ldw	r2,4(r16)
  80b1c0:	01bfff04 	movi	r6,-4
  80b1c4:	010003c4 	movi	r4,15
  80b1c8:	1184703a 	and	r2,r2,r6
  80b1cc:	1447c83a 	sub	r3,r2,r17
  80b1d0:	20c00716 	blt	r4,r3,80b1f0 <_malloc_r+0x160>
  80b1d4:	1800650e 	bge	r3,zero,80b36c <_malloc_r+0x2dc>
  80b1d8:	84000317 	ldw	r16,12(r16)
  80b1dc:	2c000526 	beq	r5,r16,80b1f4 <_malloc_r+0x164>
  80b1e0:	80800117 	ldw	r2,4(r16)
  80b1e4:	1184703a 	and	r2,r2,r6
  80b1e8:	1447c83a 	sub	r3,r2,r17
  80b1ec:	20fff90e 	bge	r4,r3,80b1d4 <__alt_data_end+0xff80b1d4>
  80b1f0:	39ffffc4 	addi	r7,r7,-1
  80b1f4:	38c00044 	addi	r3,r7,1
  80b1f8:	018020b4 	movhi	r6,130
  80b1fc:	9c000417 	ldw	r16,16(r19)
  80b200:	31bb8404 	addi	r6,r6,-4592
  80b204:	32400204 	addi	r9,r6,8
  80b208:	82410326 	beq	r16,r9,80b618 <_malloc_r+0x588>
  80b20c:	81000117 	ldw	r4,4(r16)
  80b210:	00bfff04 	movi	r2,-4
  80b214:	208e703a 	and	r7,r4,r2
  80b218:	3c45c83a 	sub	r2,r7,r17
  80b21c:	010003c4 	movi	r4,15
  80b220:	2080ee16 	blt	r4,r2,80b5dc <_malloc_r+0x54c>
  80b224:	32400515 	stw	r9,20(r6)
  80b228:	32400415 	stw	r9,16(r6)
  80b22c:	1000510e 	bge	r2,zero,80b374 <_malloc_r+0x2e4>
  80b230:	00807fc4 	movi	r2,511
  80b234:	11c0ce36 	bltu	r2,r7,80b570 <_malloc_r+0x4e0>
  80b238:	3808d0fa 	srli	r4,r7,3
  80b23c:	01c00044 	movi	r7,1
  80b240:	30800117 	ldw	r2,4(r6)
  80b244:	210b883a 	add	r5,r4,r4
  80b248:	294b883a 	add	r5,r5,r5
  80b24c:	2009d0ba 	srai	r4,r4,2
  80b250:	294b883a 	add	r5,r5,r5
  80b254:	298b883a 	add	r5,r5,r6
  80b258:	2a000217 	ldw	r8,8(r5)
  80b25c:	3908983a 	sll	r4,r7,r4
  80b260:	81400315 	stw	r5,12(r16)
  80b264:	82000215 	stw	r8,8(r16)
  80b268:	2088b03a 	or	r4,r4,r2
  80b26c:	2c000215 	stw	r16,8(r5)
  80b270:	31000115 	stw	r4,4(r6)
  80b274:	44000315 	stw	r16,12(r8)
  80b278:	1805d0ba 	srai	r2,r3,2
  80b27c:	01400044 	movi	r5,1
  80b280:	288a983a 	sll	r5,r5,r2
  80b284:	21404336 	bltu	r4,r5,80b394 <_malloc_r+0x304>
  80b288:	2144703a 	and	r2,r4,r5
  80b28c:	10000a1e 	bne	r2,zero,80b2b8 <_malloc_r+0x228>
  80b290:	00bfff04 	movi	r2,-4
  80b294:	294b883a 	add	r5,r5,r5
  80b298:	1886703a 	and	r3,r3,r2
  80b29c:	2144703a 	and	r2,r4,r5
  80b2a0:	18c00104 	addi	r3,r3,4
  80b2a4:	1000041e 	bne	r2,zero,80b2b8 <_malloc_r+0x228>
  80b2a8:	294b883a 	add	r5,r5,r5
  80b2ac:	2144703a 	and	r2,r4,r5
  80b2b0:	18c00104 	addi	r3,r3,4
  80b2b4:	103ffc26 	beq	r2,zero,80b2a8 <__alt_data_end+0xff80b2a8>
  80b2b8:	023fff04 	movi	r8,-4
  80b2bc:	01c003c4 	movi	r7,15
  80b2c0:	18c5883a 	add	r2,r3,r3
  80b2c4:	1085883a 	add	r2,r2,r2
  80b2c8:	1085883a 	add	r2,r2,r2
  80b2cc:	9895883a 	add	r10,r19,r2
  80b2d0:	52c00304 	addi	r11,r10,12
  80b2d4:	1819883a 	mov	r12,r3
  80b2d8:	5c000017 	ldw	r16,0(r11)
  80b2dc:	59bffd04 	addi	r6,r11,-12
  80b2e0:	8180041e 	bne	r16,r6,80b2f4 <_malloc_r+0x264>
  80b2e4:	0000ce06 	br	80b620 <_malloc_r+0x590>
  80b2e8:	2000d70e 	bge	r4,zero,80b648 <_malloc_r+0x5b8>
  80b2ec:	84000317 	ldw	r16,12(r16)
  80b2f0:	8180cb26 	beq	r16,r6,80b620 <_malloc_r+0x590>
  80b2f4:	80800117 	ldw	r2,4(r16)
  80b2f8:	1204703a 	and	r2,r2,r8
  80b2fc:	1449c83a 	sub	r4,r2,r17
  80b300:	393ff90e 	bge	r7,r4,80b2e8 <__alt_data_end+0xff80b2e8>
  80b304:	80800317 	ldw	r2,12(r16)
  80b308:	80c00217 	ldw	r3,8(r16)
  80b30c:	89400054 	ori	r5,r17,1
  80b310:	81400115 	stw	r5,4(r16)
  80b314:	18800315 	stw	r2,12(r3)
  80b318:	10c00215 	stw	r3,8(r2)
  80b31c:	8463883a 	add	r17,r16,r17
  80b320:	9c400515 	stw	r17,20(r19)
  80b324:	9c400415 	stw	r17,16(r19)
  80b328:	20800054 	ori	r2,r4,1
  80b32c:	88800115 	stw	r2,4(r17)
  80b330:	8a400315 	stw	r9,12(r17)
  80b334:	8a400215 	stw	r9,8(r17)
  80b338:	8923883a 	add	r17,r17,r4
  80b33c:	89000015 	stw	r4,0(r17)
  80b340:	9009883a 	mov	r4,r18
  80b344:	081a5040 	call	81a504 <__malloc_unlock>
  80b348:	80800204 	addi	r2,r16,8
  80b34c:	003f7d06 	br	80b144 <__alt_data_end+0xff80b144>
  80b350:	00800304 	movi	r2,12
  80b354:	90800015 	stw	r2,0(r18)
  80b358:	0005883a 	mov	r2,zero
  80b35c:	003f7906 	br	80b144 <__alt_data_end+0xff80b144>
  80b360:	01401f84 	movi	r5,126
  80b364:	01c00fc4 	movi	r7,63
  80b368:	003f8d06 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b36c:	81000317 	ldw	r4,12(r16)
  80b370:	003f6a06 	br	80b11c <__alt_data_end+0xff80b11c>
  80b374:	81c5883a 	add	r2,r16,r7
  80b378:	10c00117 	ldw	r3,4(r2)
  80b37c:	9009883a 	mov	r4,r18
  80b380:	18c00054 	ori	r3,r3,1
  80b384:	10c00115 	stw	r3,4(r2)
  80b388:	081a5040 	call	81a504 <__malloc_unlock>
  80b38c:	80800204 	addi	r2,r16,8
  80b390:	003f6c06 	br	80b144 <__alt_data_end+0xff80b144>
  80b394:	9c000217 	ldw	r16,8(r19)
  80b398:	00bfff04 	movi	r2,-4
  80b39c:	85800117 	ldw	r22,4(r16)
  80b3a0:	b0ac703a 	and	r22,r22,r2
  80b3a4:	b4400336 	bltu	r22,r17,80b3b4 <_malloc_r+0x324>
  80b3a8:	b445c83a 	sub	r2,r22,r17
  80b3ac:	00c003c4 	movi	r3,15
  80b3b0:	18805d16 	blt	r3,r2,80b528 <_malloc_r+0x498>
  80b3b4:	05c020b4 	movhi	r23,130
  80b3b8:	008020b4 	movhi	r2,130
  80b3bc:	bdfdb204 	addi	r23,r23,-2360
  80b3c0:	10812104 	addi	r2,r2,1156
  80b3c4:	15400017 	ldw	r21,0(r2)
  80b3c8:	b9000017 	ldw	r4,0(r23)
  80b3cc:	00ffffc4 	movi	r3,-1
  80b3d0:	858d883a 	add	r6,r16,r22
  80b3d4:	8d6b883a 	add	r21,r17,r21
  80b3d8:	20c0e426 	beq	r4,r3,80b76c <_malloc_r+0x6dc>
  80b3dc:	ad4403c4 	addi	r21,r21,4111
  80b3e0:	00fc0004 	movi	r3,-4096
  80b3e4:	a8ea703a 	and	r21,r21,r3
  80b3e8:	9009883a 	mov	r4,r18
  80b3ec:	a80b883a 	mov	r5,r21
  80b3f0:	d9800015 	stw	r6,0(sp)
  80b3f4:	080bd740 	call	80bd74 <_sbrk_r>
  80b3f8:	00ffffc4 	movi	r3,-1
  80b3fc:	1029883a 	mov	r20,r2
  80b400:	d9800017 	ldw	r6,0(sp)
  80b404:	10c0a426 	beq	r2,r3,80b698 <_malloc_r+0x608>
  80b408:	1180a236 	bltu	r2,r6,80b694 <_malloc_r+0x604>
  80b40c:	070020b4 	movhi	fp,130
  80b410:	e7013204 	addi	fp,fp,1224
  80b414:	e0c00017 	ldw	r3,0(fp)
  80b418:	a8c7883a 	add	r3,r21,r3
  80b41c:	e0c00015 	stw	r3,0(fp)
  80b420:	3500da26 	beq	r6,r20,80b78c <_malloc_r+0x6fc>
  80b424:	b9000017 	ldw	r4,0(r23)
  80b428:	00bfffc4 	movi	r2,-1
  80b42c:	2080e426 	beq	r4,r2,80b7c0 <_malloc_r+0x730>
  80b430:	a185c83a 	sub	r2,r20,r6
  80b434:	1885883a 	add	r2,r3,r2
  80b438:	e0800015 	stw	r2,0(fp)
  80b43c:	a0c001cc 	andi	r3,r20,7
  80b440:	1800b526 	beq	r3,zero,80b718 <_malloc_r+0x688>
  80b444:	a0e9c83a 	sub	r20,r20,r3
  80b448:	00840204 	movi	r2,4104
  80b44c:	a5000204 	addi	r20,r20,8
  80b450:	10c7c83a 	sub	r3,r2,r3
  80b454:	a545883a 	add	r2,r20,r21
  80b458:	1083ffcc 	andi	r2,r2,4095
  80b45c:	18abc83a 	sub	r21,r3,r2
  80b460:	9009883a 	mov	r4,r18
  80b464:	a80b883a 	mov	r5,r21
  80b468:	080bd740 	call	80bd74 <_sbrk_r>
  80b46c:	00ffffc4 	movi	r3,-1
  80b470:	10c0d026 	beq	r2,r3,80b7b4 <_malloc_r+0x724>
  80b474:	1507c83a 	sub	r3,r2,r20
  80b478:	a8c7883a 	add	r3,r21,r3
  80b47c:	18c00054 	ori	r3,r3,1
  80b480:	e0800017 	ldw	r2,0(fp)
  80b484:	9d000215 	stw	r20,8(r19)
  80b488:	a0c00115 	stw	r3,4(r20)
  80b48c:	a887883a 	add	r3,r21,r2
  80b490:	e0c00015 	stw	r3,0(fp)
  80b494:	84c00e26 	beq	r16,r19,80b4d0 <_malloc_r+0x440>
  80b498:	018003c4 	movi	r6,15
  80b49c:	3580a02e 	bgeu	r6,r22,80b720 <_malloc_r+0x690>
  80b4a0:	81400117 	ldw	r5,4(r16)
  80b4a4:	013ffe04 	movi	r4,-8
  80b4a8:	b0bffd04 	addi	r2,r22,-12
  80b4ac:	1104703a 	and	r2,r2,r4
  80b4b0:	2900004c 	andi	r4,r5,1
  80b4b4:	1108b03a 	or	r4,r2,r4
  80b4b8:	81000115 	stw	r4,4(r16)
  80b4bc:	01400144 	movi	r5,5
  80b4c0:	8089883a 	add	r4,r16,r2
  80b4c4:	21400115 	stw	r5,4(r4)
  80b4c8:	21400215 	stw	r5,8(r4)
  80b4cc:	3080c036 	bltu	r6,r2,80b7d0 <_malloc_r+0x740>
  80b4d0:	008020b4 	movhi	r2,130
  80b4d4:	10812004 	addi	r2,r2,1152
  80b4d8:	11000017 	ldw	r4,0(r2)
  80b4dc:	20c0012e 	bgeu	r4,r3,80b4e4 <_malloc_r+0x454>
  80b4e0:	10c00015 	stw	r3,0(r2)
  80b4e4:	008020b4 	movhi	r2,130
  80b4e8:	10811f04 	addi	r2,r2,1148
  80b4ec:	11000017 	ldw	r4,0(r2)
  80b4f0:	9c000217 	ldw	r16,8(r19)
  80b4f4:	20c0012e 	bgeu	r4,r3,80b4fc <_malloc_r+0x46c>
  80b4f8:	10c00015 	stw	r3,0(r2)
  80b4fc:	80c00117 	ldw	r3,4(r16)
  80b500:	00bfff04 	movi	r2,-4
  80b504:	1886703a 	and	r3,r3,r2
  80b508:	1c45c83a 	sub	r2,r3,r17
  80b50c:	1c400236 	bltu	r3,r17,80b518 <_malloc_r+0x488>
  80b510:	00c003c4 	movi	r3,15
  80b514:	18800416 	blt	r3,r2,80b528 <_malloc_r+0x498>
  80b518:	9009883a 	mov	r4,r18
  80b51c:	081a5040 	call	81a504 <__malloc_unlock>
  80b520:	0005883a 	mov	r2,zero
  80b524:	003f0706 	br	80b144 <__alt_data_end+0xff80b144>
  80b528:	88c00054 	ori	r3,r17,1
  80b52c:	80c00115 	stw	r3,4(r16)
  80b530:	8463883a 	add	r17,r16,r17
  80b534:	10800054 	ori	r2,r2,1
  80b538:	9c400215 	stw	r17,8(r19)
  80b53c:	88800115 	stw	r2,4(r17)
  80b540:	9009883a 	mov	r4,r18
  80b544:	081a5040 	call	81a504 <__malloc_unlock>
  80b548:	80800204 	addi	r2,r16,8
  80b54c:	003efd06 	br	80b144 <__alt_data_end+0xff80b144>
  80b550:	00800504 	movi	r2,20
  80b554:	10c0482e 	bgeu	r2,r3,80b678 <_malloc_r+0x5e8>
  80b558:	00801504 	movi	r2,84
  80b55c:	10c06836 	bltu	r2,r3,80b700 <_malloc_r+0x670>
  80b560:	8806d33a 	srli	r3,r17,12
  80b564:	19c01b84 	addi	r7,r3,110
  80b568:	39cb883a 	add	r5,r7,r7
  80b56c:	003f0c06 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b570:	3804d27a 	srli	r2,r7,9
  80b574:	01000104 	movi	r4,4
  80b578:	2080422e 	bgeu	r4,r2,80b684 <_malloc_r+0x5f4>
  80b57c:	01000504 	movi	r4,20
  80b580:	20807c36 	bltu	r4,r2,80b774 <_malloc_r+0x6e4>
  80b584:	110016c4 	addi	r4,r2,91
  80b588:	210b883a 	add	r5,r4,r4
  80b58c:	294b883a 	add	r5,r5,r5
  80b590:	294b883a 	add	r5,r5,r5
  80b594:	994b883a 	add	r5,r19,r5
  80b598:	28800217 	ldw	r2,8(r5)
  80b59c:	020020b4 	movhi	r8,130
  80b5a0:	423b8404 	addi	r8,r8,-4592
  80b5a4:	11406326 	beq	r2,r5,80b734 <_malloc_r+0x6a4>
  80b5a8:	01bfff04 	movi	r6,-4
  80b5ac:	11000117 	ldw	r4,4(r2)
  80b5b0:	2188703a 	and	r4,r4,r6
  80b5b4:	3900022e 	bgeu	r7,r4,80b5c0 <_malloc_r+0x530>
  80b5b8:	10800217 	ldw	r2,8(r2)
  80b5bc:	28bffb1e 	bne	r5,r2,80b5ac <__alt_data_end+0xff80b5ac>
  80b5c0:	11800317 	ldw	r6,12(r2)
  80b5c4:	99000117 	ldw	r4,4(r19)
  80b5c8:	81800315 	stw	r6,12(r16)
  80b5cc:	80800215 	stw	r2,8(r16)
  80b5d0:	34000215 	stw	r16,8(r6)
  80b5d4:	14000315 	stw	r16,12(r2)
  80b5d8:	003f2706 	br	80b278 <__alt_data_end+0xff80b278>
  80b5dc:	88c00054 	ori	r3,r17,1
  80b5e0:	80c00115 	stw	r3,4(r16)
  80b5e4:	8463883a 	add	r17,r16,r17
  80b5e8:	34400515 	stw	r17,20(r6)
  80b5ec:	34400415 	stw	r17,16(r6)
  80b5f0:	10c00054 	ori	r3,r2,1
  80b5f4:	8a400315 	stw	r9,12(r17)
  80b5f8:	8a400215 	stw	r9,8(r17)
  80b5fc:	88c00115 	stw	r3,4(r17)
  80b600:	88a3883a 	add	r17,r17,r2
  80b604:	88800015 	stw	r2,0(r17)
  80b608:	9009883a 	mov	r4,r18
  80b60c:	081a5040 	call	81a504 <__malloc_unlock>
  80b610:	80800204 	addi	r2,r16,8
  80b614:	003ecb06 	br	80b144 <__alt_data_end+0xff80b144>
  80b618:	31000117 	ldw	r4,4(r6)
  80b61c:	003f1606 	br	80b278 <__alt_data_end+0xff80b278>
  80b620:	63000044 	addi	r12,r12,1
  80b624:	608000cc 	andi	r2,r12,3
  80b628:	5ac00204 	addi	r11,r11,8
  80b62c:	103f2a1e 	bne	r2,zero,80b2d8 <__alt_data_end+0xff80b2d8>
  80b630:	00002106 	br	80b6b8 <_malloc_r+0x628>
  80b634:	80800204 	addi	r2,r16,8
  80b638:	84000517 	ldw	r16,20(r16)
  80b63c:	143eb31e 	bne	r2,r16,80b10c <__alt_data_end+0xff80b10c>
  80b640:	18c00084 	addi	r3,r3,2
  80b644:	003eec06 	br	80b1f8 <__alt_data_end+0xff80b1f8>
  80b648:	8085883a 	add	r2,r16,r2
  80b64c:	10c00117 	ldw	r3,4(r2)
  80b650:	81000317 	ldw	r4,12(r16)
  80b654:	81400217 	ldw	r5,8(r16)
  80b658:	18c00054 	ori	r3,r3,1
  80b65c:	10c00115 	stw	r3,4(r2)
  80b660:	29000315 	stw	r4,12(r5)
  80b664:	21400215 	stw	r5,8(r4)
  80b668:	9009883a 	mov	r4,r18
  80b66c:	081a5040 	call	81a504 <__malloc_unlock>
  80b670:	80800204 	addi	r2,r16,8
  80b674:	003eb306 	br	80b144 <__alt_data_end+0xff80b144>
  80b678:	19c016c4 	addi	r7,r3,91
  80b67c:	39cb883a 	add	r5,r7,r7
  80b680:	003ec706 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b684:	3804d1ba 	srli	r2,r7,6
  80b688:	11000e04 	addi	r4,r2,56
  80b68c:	210b883a 	add	r5,r4,r4
  80b690:	003fbe06 	br	80b58c <__alt_data_end+0xff80b58c>
  80b694:	84ff5d26 	beq	r16,r19,80b40c <__alt_data_end+0xff80b40c>
  80b698:	9c000217 	ldw	r16,8(r19)
  80b69c:	00bfff04 	movi	r2,-4
  80b6a0:	80c00117 	ldw	r3,4(r16)
  80b6a4:	1886703a 	and	r3,r3,r2
  80b6a8:	003f9706 	br	80b508 <__alt_data_end+0xff80b508>
  80b6ac:	52800017 	ldw	r10,0(r10)
  80b6b0:	18ffffc4 	addi	r3,r3,-1
  80b6b4:	50805c1e 	bne	r10,r2,80b828 <_malloc_r+0x798>
  80b6b8:	190000cc 	andi	r4,r3,3
  80b6bc:	50bffe04 	addi	r2,r10,-8
  80b6c0:	203ffa1e 	bne	r4,zero,80b6ac <__alt_data_end+0xff80b6ac>
  80b6c4:	98800117 	ldw	r2,4(r19)
  80b6c8:	0146303a 	nor	r3,zero,r5
  80b6cc:	1884703a 	and	r2,r3,r2
  80b6d0:	98800115 	stw	r2,4(r19)
  80b6d4:	294b883a 	add	r5,r5,r5
  80b6d8:	117f2e36 	bltu	r2,r5,80b394 <__alt_data_end+0xff80b394>
  80b6dc:	283f2d26 	beq	r5,zero,80b394 <__alt_data_end+0xff80b394>
  80b6e0:	1146703a 	and	r3,r2,r5
  80b6e4:	1800521e 	bne	r3,zero,80b830 <_malloc_r+0x7a0>
  80b6e8:	6007883a 	mov	r3,r12
  80b6ec:	294b883a 	add	r5,r5,r5
  80b6f0:	1148703a 	and	r4,r2,r5
  80b6f4:	18c00104 	addi	r3,r3,4
  80b6f8:	203ffc26 	beq	r4,zero,80b6ec <__alt_data_end+0xff80b6ec>
  80b6fc:	003ef006 	br	80b2c0 <__alt_data_end+0xff80b2c0>
  80b700:	00805504 	movi	r2,340
  80b704:	10c01336 	bltu	r2,r3,80b754 <_malloc_r+0x6c4>
  80b708:	8806d3fa 	srli	r3,r17,15
  80b70c:	19c01dc4 	addi	r7,r3,119
  80b710:	39cb883a 	add	r5,r7,r7
  80b714:	003ea206 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b718:	00c40004 	movi	r3,4096
  80b71c:	003f4d06 	br	80b454 <__alt_data_end+0xff80b454>
  80b720:	00800044 	movi	r2,1
  80b724:	a0800115 	stw	r2,4(r20)
  80b728:	a021883a 	mov	r16,r20
  80b72c:	0007883a 	mov	r3,zero
  80b730:	003f7506 	br	80b508 <__alt_data_end+0xff80b508>
  80b734:	200bd0ba 	srai	r5,r4,2
  80b738:	01800044 	movi	r6,1
  80b73c:	41000117 	ldw	r4,4(r8)
  80b740:	314a983a 	sll	r5,r6,r5
  80b744:	100d883a 	mov	r6,r2
  80b748:	2908b03a 	or	r4,r5,r4
  80b74c:	41000115 	stw	r4,4(r8)
  80b750:	003f9d06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80b754:	00815504 	movi	r2,1364
  80b758:	10c01336 	bltu	r2,r3,80b7a8 <_malloc_r+0x718>
  80b75c:	8806d4ba 	srli	r3,r17,18
  80b760:	19c01f04 	addi	r7,r3,124
  80b764:	39cb883a 	add	r5,r7,r7
  80b768:	003e8d06 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b76c:	ad400404 	addi	r21,r21,16
  80b770:	003f1d06 	br	80b3e8 <__alt_data_end+0xff80b3e8>
  80b774:	01001504 	movi	r4,84
  80b778:	20801c36 	bltu	r4,r2,80b7ec <_malloc_r+0x75c>
  80b77c:	3804d33a 	srli	r2,r7,12
  80b780:	11001b84 	addi	r4,r2,110
  80b784:	210b883a 	add	r5,r4,r4
  80b788:	003f8006 	br	80b58c <__alt_data_end+0xff80b58c>
  80b78c:	3083ffcc 	andi	r2,r6,4095
  80b790:	103f241e 	bne	r2,zero,80b424 <__alt_data_end+0xff80b424>
  80b794:	99000217 	ldw	r4,8(r19)
  80b798:	ad85883a 	add	r2,r21,r22
  80b79c:	10800054 	ori	r2,r2,1
  80b7a0:	20800115 	stw	r2,4(r4)
  80b7a4:	003f4a06 	br	80b4d0 <__alt_data_end+0xff80b4d0>
  80b7a8:	01403f04 	movi	r5,252
  80b7ac:	01c01f84 	movi	r7,126
  80b7b0:	003e7b06 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b7b4:	00c00044 	movi	r3,1
  80b7b8:	002b883a 	mov	r21,zero
  80b7bc:	003f3006 	br	80b480 <__alt_data_end+0xff80b480>
  80b7c0:	008020b4 	movhi	r2,130
  80b7c4:	10bdb204 	addi	r2,r2,-2360
  80b7c8:	15000015 	stw	r20,0(r2)
  80b7cc:	003f1b06 	br	80b43c <__alt_data_end+0xff80b43c>
  80b7d0:	9009883a 	mov	r4,r18
  80b7d4:	81400204 	addi	r5,r16,8
  80b7d8:	080a4800 	call	80a480 <_free_r>
  80b7dc:	008020b4 	movhi	r2,130
  80b7e0:	10813204 	addi	r2,r2,1224
  80b7e4:	10c00017 	ldw	r3,0(r2)
  80b7e8:	003f3906 	br	80b4d0 <__alt_data_end+0xff80b4d0>
  80b7ec:	01005504 	movi	r4,340
  80b7f0:	20800436 	bltu	r4,r2,80b804 <_malloc_r+0x774>
  80b7f4:	3804d3fa 	srli	r2,r7,15
  80b7f8:	11001dc4 	addi	r4,r2,119
  80b7fc:	210b883a 	add	r5,r4,r4
  80b800:	003f6206 	br	80b58c <__alt_data_end+0xff80b58c>
  80b804:	01015504 	movi	r4,1364
  80b808:	20800436 	bltu	r4,r2,80b81c <_malloc_r+0x78c>
  80b80c:	3804d4ba 	srli	r2,r7,18
  80b810:	11001f04 	addi	r4,r2,124
  80b814:	210b883a 	add	r5,r4,r4
  80b818:	003f5c06 	br	80b58c <__alt_data_end+0xff80b58c>
  80b81c:	01403f04 	movi	r5,252
  80b820:	01001f84 	movi	r4,126
  80b824:	003f5906 	br	80b58c <__alt_data_end+0xff80b58c>
  80b828:	98800117 	ldw	r2,4(r19)
  80b82c:	003fa906 	br	80b6d4 <__alt_data_end+0xff80b6d4>
  80b830:	6007883a 	mov	r3,r12
  80b834:	003ea206 	br	80b2c0 <__alt_data_end+0xff80b2c0>

0080b838 <memset>:
  80b838:	20c000cc 	andi	r3,r4,3
  80b83c:	2005883a 	mov	r2,r4
  80b840:	18004326 	beq	r3,zero,80b950 <memset+0x118>
  80b844:	31ffffc4 	addi	r7,r6,-1
  80b848:	30004026 	beq	r6,zero,80b94c <memset+0x114>
  80b84c:	2813883a 	mov	r9,r5
  80b850:	200d883a 	mov	r6,r4
  80b854:	2007883a 	mov	r3,r4
  80b858:	00000406 	br	80b86c <memset+0x34>
  80b85c:	3a3fffc4 	addi	r8,r7,-1
  80b860:	31800044 	addi	r6,r6,1
  80b864:	38003926 	beq	r7,zero,80b94c <memset+0x114>
  80b868:	400f883a 	mov	r7,r8
  80b86c:	18c00044 	addi	r3,r3,1
  80b870:	32400005 	stb	r9,0(r6)
  80b874:	1a0000cc 	andi	r8,r3,3
  80b878:	403ff81e 	bne	r8,zero,80b85c <__alt_data_end+0xff80b85c>
  80b87c:	010000c4 	movi	r4,3
  80b880:	21c02d2e 	bgeu	r4,r7,80b938 <memset+0x100>
  80b884:	29803fcc 	andi	r6,r5,255
  80b888:	3008923a 	slli	r4,r6,8
  80b88c:	218cb03a 	or	r6,r4,r6
  80b890:	3008943a 	slli	r4,r6,16
  80b894:	218cb03a 	or	r6,r4,r6
  80b898:	010003c4 	movi	r4,15
  80b89c:	21c0182e 	bgeu	r4,r7,80b900 <memset+0xc8>
  80b8a0:	3b3ffc04 	addi	r12,r7,-16
  80b8a4:	6018d13a 	srli	r12,r12,4
  80b8a8:	1a000104 	addi	r8,r3,4
  80b8ac:	1ac00204 	addi	r11,r3,8
  80b8b0:	6008913a 	slli	r4,r12,4
  80b8b4:	1a800304 	addi	r10,r3,12
  80b8b8:	1813883a 	mov	r9,r3
  80b8bc:	21000504 	addi	r4,r4,20
  80b8c0:	1909883a 	add	r4,r3,r4
  80b8c4:	49800015 	stw	r6,0(r9)
  80b8c8:	41800015 	stw	r6,0(r8)
  80b8cc:	59800015 	stw	r6,0(r11)
  80b8d0:	51800015 	stw	r6,0(r10)
  80b8d4:	42000404 	addi	r8,r8,16
  80b8d8:	4a400404 	addi	r9,r9,16
  80b8dc:	5ac00404 	addi	r11,r11,16
  80b8e0:	52800404 	addi	r10,r10,16
  80b8e4:	413ff71e 	bne	r8,r4,80b8c4 <__alt_data_end+0xff80b8c4>
  80b8e8:	63000044 	addi	r12,r12,1
  80b8ec:	6018913a 	slli	r12,r12,4
  80b8f0:	39c003cc 	andi	r7,r7,15
  80b8f4:	010000c4 	movi	r4,3
  80b8f8:	1b07883a 	add	r3,r3,r12
  80b8fc:	21c00e2e 	bgeu	r4,r7,80b938 <memset+0x100>
  80b900:	1813883a 	mov	r9,r3
  80b904:	3811883a 	mov	r8,r7
  80b908:	010000c4 	movi	r4,3
  80b90c:	49800015 	stw	r6,0(r9)
  80b910:	423fff04 	addi	r8,r8,-4
  80b914:	4a400104 	addi	r9,r9,4
  80b918:	223ffc36 	bltu	r4,r8,80b90c <__alt_data_end+0xff80b90c>
  80b91c:	393fff04 	addi	r4,r7,-4
  80b920:	2008d0ba 	srli	r4,r4,2
  80b924:	39c000cc 	andi	r7,r7,3
  80b928:	21000044 	addi	r4,r4,1
  80b92c:	2109883a 	add	r4,r4,r4
  80b930:	2109883a 	add	r4,r4,r4
  80b934:	1907883a 	add	r3,r3,r4
  80b938:	38000426 	beq	r7,zero,80b94c <memset+0x114>
  80b93c:	19cf883a 	add	r7,r3,r7
  80b940:	19400005 	stb	r5,0(r3)
  80b944:	18c00044 	addi	r3,r3,1
  80b948:	19fffd1e 	bne	r3,r7,80b940 <__alt_data_end+0xff80b940>
  80b94c:	f800283a 	ret
  80b950:	2007883a 	mov	r3,r4
  80b954:	300f883a 	mov	r7,r6
  80b958:	003fc806 	br	80b87c <__alt_data_end+0xff80b87c>

0080b95c <_open_r>:
  80b95c:	defffd04 	addi	sp,sp,-12
  80b960:	dc000015 	stw	r16,0(sp)
  80b964:	040020b4 	movhi	r16,130
  80b968:	dc400115 	stw	r17,4(sp)
  80b96c:	84011e04 	addi	r16,r16,1144
  80b970:	2023883a 	mov	r17,r4
  80b974:	2809883a 	mov	r4,r5
  80b978:	300b883a 	mov	r5,r6
  80b97c:	380d883a 	mov	r6,r7
  80b980:	dfc00215 	stw	ra,8(sp)
  80b984:	80000015 	stw	zero,0(r16)
  80b988:	081a6400 	call	81a640 <open>
  80b98c:	00ffffc4 	movi	r3,-1
  80b990:	10c00526 	beq	r2,r3,80b9a8 <_open_r+0x4c>
  80b994:	dfc00217 	ldw	ra,8(sp)
  80b998:	dc400117 	ldw	r17,4(sp)
  80b99c:	dc000017 	ldw	r16,0(sp)
  80b9a0:	dec00304 	addi	sp,sp,12
  80b9a4:	f800283a 	ret
  80b9a8:	80c00017 	ldw	r3,0(r16)
  80b9ac:	183ff926 	beq	r3,zero,80b994 <__alt_data_end+0xff80b994>
  80b9b0:	88c00015 	stw	r3,0(r17)
  80b9b4:	003ff706 	br	80b994 <__alt_data_end+0xff80b994>

0080b9b8 <_printf_r>:
  80b9b8:	defffd04 	addi	sp,sp,-12
  80b9bc:	dfc00015 	stw	ra,0(sp)
  80b9c0:	d9800115 	stw	r6,4(sp)
  80b9c4:	d9c00215 	stw	r7,8(sp)
  80b9c8:	280d883a 	mov	r6,r5
  80b9cc:	21400217 	ldw	r5,8(r4)
  80b9d0:	d9c00104 	addi	r7,sp,4
  80b9d4:	080e0800 	call	80e080 <___vfprintf_internal_r>
  80b9d8:	dfc00017 	ldw	ra,0(sp)
  80b9dc:	dec00304 	addi	sp,sp,12
  80b9e0:	f800283a 	ret

0080b9e4 <printf>:
  80b9e4:	defffc04 	addi	sp,sp,-16
  80b9e8:	dfc00015 	stw	ra,0(sp)
  80b9ec:	d9400115 	stw	r5,4(sp)
  80b9f0:	d9800215 	stw	r6,8(sp)
  80b9f4:	d9c00315 	stw	r7,12(sp)
  80b9f8:	008020b4 	movhi	r2,130
  80b9fc:	10bdb104 	addi	r2,r2,-2364
  80ba00:	10800017 	ldw	r2,0(r2)
  80ba04:	200b883a 	mov	r5,r4
  80ba08:	d9800104 	addi	r6,sp,4
  80ba0c:	11000217 	ldw	r4,8(r2)
  80ba10:	080ffd00 	call	80ffd0 <__vfprintf_internal>
  80ba14:	dfc00017 	ldw	ra,0(sp)
  80ba18:	dec00404 	addi	sp,sp,16
  80ba1c:	f800283a 	ret

0080ba20 <_putchar_r>:
  80ba20:	21800217 	ldw	r6,8(r4)
  80ba24:	08135f41 	jmpi	8135f4 <_putc_r>

0080ba28 <putchar>:
  80ba28:	008020b4 	movhi	r2,130
  80ba2c:	10bdb104 	addi	r2,r2,-2364
  80ba30:	200b883a 	mov	r5,r4
  80ba34:	11000017 	ldw	r4,0(r2)
  80ba38:	21800217 	ldw	r6,8(r4)
  80ba3c:	08135f41 	jmpi	8135f4 <_putc_r>

0080ba40 <_puts_r>:
  80ba40:	defff604 	addi	sp,sp,-40
  80ba44:	dc000715 	stw	r16,28(sp)
  80ba48:	2021883a 	mov	r16,r4
  80ba4c:	2809883a 	mov	r4,r5
  80ba50:	dc400815 	stw	r17,32(sp)
  80ba54:	dfc00915 	stw	ra,36(sp)
  80ba58:	2823883a 	mov	r17,r5
  80ba5c:	080c0580 	call	80c058 <strlen>
  80ba60:	81400217 	ldw	r5,8(r16)
  80ba64:	11000044 	addi	r4,r2,1
  80ba68:	d8800115 	stw	r2,4(sp)
  80ba6c:	008020b4 	movhi	r2,130
  80ba70:	2980030b 	ldhu	r6,12(r5)
  80ba74:	10b8fa04 	addi	r2,r2,-7192
  80ba78:	d8800215 	stw	r2,8(sp)
  80ba7c:	00800044 	movi	r2,1
  80ba80:	d8800315 	stw	r2,12(sp)
  80ba84:	00800084 	movi	r2,2
  80ba88:	d8800515 	stw	r2,20(sp)
  80ba8c:	dc400015 	stw	r17,0(sp)
  80ba90:	d9000615 	stw	r4,24(sp)
  80ba94:	dec00415 	stw	sp,16(sp)
  80ba98:	3088000c 	andi	r2,r6,8192
  80ba9c:	1000061e 	bne	r2,zero,80bab8 <_puts_r+0x78>
  80baa0:	29001917 	ldw	r4,100(r5)
  80baa4:	00b7ffc4 	movi	r2,-8193
  80baa8:	31880014 	ori	r6,r6,8192
  80baac:	2084703a 	and	r2,r4,r2
  80bab0:	2980030d 	sth	r6,12(r5)
  80bab4:	28801915 	stw	r2,100(r5)
  80bab8:	8009883a 	mov	r4,r16
  80babc:	d9800404 	addi	r6,sp,16
  80bac0:	0811c880 	call	811c88 <__sfvwrite_r>
  80bac4:	1000061e 	bne	r2,zero,80bae0 <_puts_r+0xa0>
  80bac8:	00800284 	movi	r2,10
  80bacc:	dfc00917 	ldw	ra,36(sp)
  80bad0:	dc400817 	ldw	r17,32(sp)
  80bad4:	dc000717 	ldw	r16,28(sp)
  80bad8:	dec00a04 	addi	sp,sp,40
  80badc:	f800283a 	ret
  80bae0:	00bfffc4 	movi	r2,-1
  80bae4:	003ff906 	br	80bacc <__alt_data_end+0xff80bacc>

0080bae8 <puts>:
  80bae8:	008020b4 	movhi	r2,130
  80baec:	10bdb104 	addi	r2,r2,-2364
  80baf0:	200b883a 	mov	r5,r4
  80baf4:	11000017 	ldw	r4,0(r2)
  80baf8:	080ba401 	jmpi	80ba40 <_puts_r>

0080bafc <lflush>:
  80bafc:	2080030b 	ldhu	r2,12(r4)
  80bb00:	00c00244 	movi	r3,9
  80bb04:	1080024c 	andi	r2,r2,9
  80bb08:	10c00226 	beq	r2,r3,80bb14 <lflush+0x18>
  80bb0c:	0005883a 	mov	r2,zero
  80bb10:	f800283a 	ret
  80bb14:	0809e341 	jmpi	809e34 <fflush>

0080bb18 <__srefill_r>:
  80bb18:	defffc04 	addi	sp,sp,-16
  80bb1c:	dc400115 	stw	r17,4(sp)
  80bb20:	dc000015 	stw	r16,0(sp)
  80bb24:	dfc00315 	stw	ra,12(sp)
  80bb28:	dc800215 	stw	r18,8(sp)
  80bb2c:	2023883a 	mov	r17,r4
  80bb30:	2821883a 	mov	r16,r5
  80bb34:	20000226 	beq	r4,zero,80bb40 <__srefill_r+0x28>
  80bb38:	20800e17 	ldw	r2,56(r4)
  80bb3c:	10003c26 	beq	r2,zero,80bc30 <__srefill_r+0x118>
  80bb40:	80c0030b 	ldhu	r3,12(r16)
  80bb44:	1908000c 	andi	r4,r3,8192
  80bb48:	1805883a 	mov	r2,r3
  80bb4c:	2000071e 	bne	r4,zero,80bb6c <__srefill_r+0x54>
  80bb50:	81001917 	ldw	r4,100(r16)
  80bb54:	18880014 	ori	r2,r3,8192
  80bb58:	00f7ffc4 	movi	r3,-8193
  80bb5c:	20c8703a 	and	r4,r4,r3
  80bb60:	8080030d 	sth	r2,12(r16)
  80bb64:	1007883a 	mov	r3,r2
  80bb68:	81001915 	stw	r4,100(r16)
  80bb6c:	80000115 	stw	zero,4(r16)
  80bb70:	1100080c 	andi	r4,r2,32
  80bb74:	2000571e 	bne	r4,zero,80bcd4 <__srefill_r+0x1bc>
  80bb78:	1100010c 	andi	r4,r2,4
  80bb7c:	20001f26 	beq	r4,zero,80bbfc <__srefill_r+0xe4>
  80bb80:	81400c17 	ldw	r5,48(r16)
  80bb84:	28000826 	beq	r5,zero,80bba8 <__srefill_r+0x90>
  80bb88:	80801004 	addi	r2,r16,64
  80bb8c:	28800226 	beq	r5,r2,80bb98 <__srefill_r+0x80>
  80bb90:	8809883a 	mov	r4,r17
  80bb94:	080a4800 	call	80a480 <_free_r>
  80bb98:	80800f17 	ldw	r2,60(r16)
  80bb9c:	80000c15 	stw	zero,48(r16)
  80bba0:	80800115 	stw	r2,4(r16)
  80bba4:	1000391e 	bne	r2,zero,80bc8c <__srefill_r+0x174>
  80bba8:	80800417 	ldw	r2,16(r16)
  80bbac:	10004b26 	beq	r2,zero,80bcdc <__srefill_r+0x1c4>
  80bbb0:	8480030b 	ldhu	r18,12(r16)
  80bbb4:	908000cc 	andi	r2,r18,3
  80bbb8:	10001f1e 	bne	r2,zero,80bc38 <__srefill_r+0x120>
  80bbbc:	81800417 	ldw	r6,16(r16)
  80bbc0:	80800817 	ldw	r2,32(r16)
  80bbc4:	81400717 	ldw	r5,28(r16)
  80bbc8:	81c00517 	ldw	r7,20(r16)
  80bbcc:	81800015 	stw	r6,0(r16)
  80bbd0:	8809883a 	mov	r4,r17
  80bbd4:	103ee83a 	callr	r2
  80bbd8:	80800115 	stw	r2,4(r16)
  80bbdc:	00800e0e 	bge	zero,r2,80bc18 <__srefill_r+0x100>
  80bbe0:	0005883a 	mov	r2,zero
  80bbe4:	dfc00317 	ldw	ra,12(sp)
  80bbe8:	dc800217 	ldw	r18,8(sp)
  80bbec:	dc400117 	ldw	r17,4(sp)
  80bbf0:	dc000017 	ldw	r16,0(sp)
  80bbf4:	dec00404 	addi	sp,sp,16
  80bbf8:	f800283a 	ret
  80bbfc:	1100040c 	andi	r4,r2,16
  80bc00:	20003026 	beq	r4,zero,80bcc4 <__srefill_r+0x1ac>
  80bc04:	1080020c 	andi	r2,r2,8
  80bc08:	1000241e 	bne	r2,zero,80bc9c <__srefill_r+0x184>
  80bc0c:	18c00114 	ori	r3,r3,4
  80bc10:	80c0030d 	sth	r3,12(r16)
  80bc14:	003fe406 	br	80bba8 <__alt_data_end+0xff80bba8>
  80bc18:	80c0030b 	ldhu	r3,12(r16)
  80bc1c:	1000161e 	bne	r2,zero,80bc78 <__srefill_r+0x160>
  80bc20:	18c00814 	ori	r3,r3,32
  80bc24:	00bfffc4 	movi	r2,-1
  80bc28:	80c0030d 	sth	r3,12(r16)
  80bc2c:	003fed06 	br	80bbe4 <__alt_data_end+0xff80bbe4>
  80bc30:	080a1b40 	call	80a1b4 <__sinit>
  80bc34:	003fc206 	br	80bb40 <__alt_data_end+0xff80bb40>
  80bc38:	008020b4 	movhi	r2,130
  80bc3c:	10bdb004 	addi	r2,r2,-2368
  80bc40:	11000017 	ldw	r4,0(r2)
  80bc44:	01402074 	movhi	r5,129
  80bc48:	00800044 	movi	r2,1
  80bc4c:	296ebf04 	addi	r5,r5,-17668
  80bc50:	8080030d 	sth	r2,12(r16)
  80bc54:	080ac580 	call	80ac58 <_fwalk>
  80bc58:	00800244 	movi	r2,9
  80bc5c:	8480030d 	sth	r18,12(r16)
  80bc60:	9480024c 	andi	r18,r18,9
  80bc64:	90bfd51e 	bne	r18,r2,80bbbc <__alt_data_end+0xff80bbbc>
  80bc68:	8809883a 	mov	r4,r17
  80bc6c:	800b883a 	mov	r5,r16
  80bc70:	0809bd00 	call	809bd0 <__sflush_r>
  80bc74:	003fd106 	br	80bbbc <__alt_data_end+0xff80bbbc>
  80bc78:	18c01014 	ori	r3,r3,64
  80bc7c:	80000115 	stw	zero,4(r16)
  80bc80:	00bfffc4 	movi	r2,-1
  80bc84:	80c0030d 	sth	r3,12(r16)
  80bc88:	003fd606 	br	80bbe4 <__alt_data_end+0xff80bbe4>
  80bc8c:	80c00e17 	ldw	r3,56(r16)
  80bc90:	0005883a 	mov	r2,zero
  80bc94:	80c00015 	stw	r3,0(r16)
  80bc98:	003fd206 	br	80bbe4 <__alt_data_end+0xff80bbe4>
  80bc9c:	8809883a 	mov	r4,r17
  80bca0:	800b883a 	mov	r5,r16
  80bca4:	0809dd80 	call	809dd8 <_fflush_r>
  80bca8:	10000a1e 	bne	r2,zero,80bcd4 <__srefill_r+0x1bc>
  80bcac:	8080030b 	ldhu	r2,12(r16)
  80bcb0:	00fffdc4 	movi	r3,-9
  80bcb4:	80000215 	stw	zero,8(r16)
  80bcb8:	1886703a 	and	r3,r3,r2
  80bcbc:	80000615 	stw	zero,24(r16)
  80bcc0:	003fd206 	br	80bc0c <__alt_data_end+0xff80bc0c>
  80bcc4:	00800244 	movi	r2,9
  80bcc8:	88800015 	stw	r2,0(r17)
  80bccc:	18c01014 	ori	r3,r3,64
  80bcd0:	80c0030d 	sth	r3,12(r16)
  80bcd4:	00bfffc4 	movi	r2,-1
  80bcd8:	003fc206 	br	80bbe4 <__alt_data_end+0xff80bbe4>
  80bcdc:	8809883a 	mov	r4,r17
  80bce0:	800b883a 	mov	r5,r16
  80bce4:	080aed80 	call	80aed8 <__smakebuf_r>
  80bce8:	003fb106 	br	80bbb0 <__alt_data_end+0xff80bbb0>

0080bcec <__srget_r>:
  80bcec:	defffd04 	addi	sp,sp,-12
  80bcf0:	dc400115 	stw	r17,4(sp)
  80bcf4:	dc000015 	stw	r16,0(sp)
  80bcf8:	dfc00215 	stw	ra,8(sp)
  80bcfc:	2023883a 	mov	r17,r4
  80bd00:	2821883a 	mov	r16,r5
  80bd04:	20000226 	beq	r4,zero,80bd10 <__srget_r+0x24>
  80bd08:	20800e17 	ldw	r2,56(r4)
  80bd0c:	10001026 	beq	r2,zero,80bd50 <__srget_r+0x64>
  80bd10:	8809883a 	mov	r4,r17
  80bd14:	800b883a 	mov	r5,r16
  80bd18:	080bb180 	call	80bb18 <__srefill_r>
  80bd1c:	10000e1e 	bne	r2,zero,80bd58 <__srget_r+0x6c>
  80bd20:	80c00017 	ldw	r3,0(r16)
  80bd24:	80800117 	ldw	r2,4(r16)
  80bd28:	19000044 	addi	r4,r3,1
  80bd2c:	10bfffc4 	addi	r2,r2,-1
  80bd30:	80800115 	stw	r2,4(r16)
  80bd34:	81000015 	stw	r4,0(r16)
  80bd38:	18800003 	ldbu	r2,0(r3)
  80bd3c:	dfc00217 	ldw	ra,8(sp)
  80bd40:	dc400117 	ldw	r17,4(sp)
  80bd44:	dc000017 	ldw	r16,0(sp)
  80bd48:	dec00304 	addi	sp,sp,12
  80bd4c:	f800283a 	ret
  80bd50:	080a1b40 	call	80a1b4 <__sinit>
  80bd54:	003fee06 	br	80bd10 <__alt_data_end+0xff80bd10>
  80bd58:	00bfffc4 	movi	r2,-1
  80bd5c:	003ff706 	br	80bd3c <__alt_data_end+0xff80bd3c>

0080bd60 <__srget>:
  80bd60:	008020b4 	movhi	r2,130
  80bd64:	10bdb104 	addi	r2,r2,-2364
  80bd68:	200b883a 	mov	r5,r4
  80bd6c:	11000017 	ldw	r4,0(r2)
  80bd70:	080bcec1 	jmpi	80bcec <__srget_r>

0080bd74 <_sbrk_r>:
  80bd74:	defffd04 	addi	sp,sp,-12
  80bd78:	dc000015 	stw	r16,0(sp)
  80bd7c:	040020b4 	movhi	r16,130
  80bd80:	dc400115 	stw	r17,4(sp)
  80bd84:	84011e04 	addi	r16,r16,1144
  80bd88:	2023883a 	mov	r17,r4
  80bd8c:	2809883a 	mov	r4,r5
  80bd90:	dfc00215 	stw	ra,8(sp)
  80bd94:	80000015 	stw	zero,0(r16)
  80bd98:	081abb00 	call	81abb0 <sbrk>
  80bd9c:	00ffffc4 	movi	r3,-1
  80bda0:	10c00526 	beq	r2,r3,80bdb8 <_sbrk_r+0x44>
  80bda4:	dfc00217 	ldw	ra,8(sp)
  80bda8:	dc400117 	ldw	r17,4(sp)
  80bdac:	dc000017 	ldw	r16,0(sp)
  80bdb0:	dec00304 	addi	sp,sp,12
  80bdb4:	f800283a 	ret
  80bdb8:	80c00017 	ldw	r3,0(r16)
  80bdbc:	183ff926 	beq	r3,zero,80bda4 <__alt_data_end+0xff80bda4>
  80bdc0:	88c00015 	stw	r3,0(r17)
  80bdc4:	003ff706 	br	80bda4 <__alt_data_end+0xff80bda4>

0080bdc8 <_sprintf_r>:
  80bdc8:	deffe404 	addi	sp,sp,-112
  80bdcc:	2807883a 	mov	r3,r5
  80bdd0:	dfc01a15 	stw	ra,104(sp)
  80bdd4:	d9c01b15 	stw	r7,108(sp)
  80bdd8:	00a00034 	movhi	r2,32768
  80bddc:	10bfffc4 	addi	r2,r2,-1
  80bde0:	02008204 	movi	r8,520
  80bde4:	d8800215 	stw	r2,8(sp)
  80bde8:	d8800515 	stw	r2,20(sp)
  80bdec:	d80b883a 	mov	r5,sp
  80bdf0:	d9c01b04 	addi	r7,sp,108
  80bdf4:	00bfffc4 	movi	r2,-1
  80bdf8:	d8c00015 	stw	r3,0(sp)
  80bdfc:	d8c00415 	stw	r3,16(sp)
  80be00:	da00030d 	sth	r8,12(sp)
  80be04:	d880038d 	sth	r2,14(sp)
  80be08:	080c0f00 	call	80c0f0 <___svfprintf_internal_r>
  80be0c:	d8c00017 	ldw	r3,0(sp)
  80be10:	18000005 	stb	zero,0(r3)
  80be14:	dfc01a17 	ldw	ra,104(sp)
  80be18:	dec01c04 	addi	sp,sp,112
  80be1c:	f800283a 	ret

0080be20 <sprintf>:
  80be20:	deffe304 	addi	sp,sp,-116
  80be24:	2007883a 	mov	r3,r4
  80be28:	dfc01a15 	stw	ra,104(sp)
  80be2c:	d9801b15 	stw	r6,108(sp)
  80be30:	d9c01c15 	stw	r7,112(sp)
  80be34:	010020b4 	movhi	r4,130
  80be38:	213db104 	addi	r4,r4,-2364
  80be3c:	21000017 	ldw	r4,0(r4)
  80be40:	00a00034 	movhi	r2,32768
  80be44:	10bfffc4 	addi	r2,r2,-1
  80be48:	280d883a 	mov	r6,r5
  80be4c:	02008204 	movi	r8,520
  80be50:	d8800215 	stw	r2,8(sp)
  80be54:	d8800515 	stw	r2,20(sp)
  80be58:	d80b883a 	mov	r5,sp
  80be5c:	d9c01b04 	addi	r7,sp,108
  80be60:	00bfffc4 	movi	r2,-1
  80be64:	d8c00015 	stw	r3,0(sp)
  80be68:	d8c00415 	stw	r3,16(sp)
  80be6c:	da00030d 	sth	r8,12(sp)
  80be70:	d880038d 	sth	r2,14(sp)
  80be74:	080c0f00 	call	80c0f0 <___svfprintf_internal_r>
  80be78:	d8c00017 	ldw	r3,0(sp)
  80be7c:	18000005 	stb	zero,0(r3)
  80be80:	dfc01a17 	ldw	ra,104(sp)
  80be84:	dec01d04 	addi	sp,sp,116
  80be88:	f800283a 	ret

0080be8c <__sread>:
  80be8c:	defffe04 	addi	sp,sp,-8
  80be90:	dc000015 	stw	r16,0(sp)
  80be94:	2821883a 	mov	r16,r5
  80be98:	2940038f 	ldh	r5,14(r5)
  80be9c:	dfc00115 	stw	ra,4(sp)
  80bea0:	08137600 	call	813760 <_read_r>
  80bea4:	10000716 	blt	r2,zero,80bec4 <__sread+0x38>
  80bea8:	80c01417 	ldw	r3,80(r16)
  80beac:	1887883a 	add	r3,r3,r2
  80beb0:	80c01415 	stw	r3,80(r16)
  80beb4:	dfc00117 	ldw	ra,4(sp)
  80beb8:	dc000017 	ldw	r16,0(sp)
  80bebc:	dec00204 	addi	sp,sp,8
  80bec0:	f800283a 	ret
  80bec4:	80c0030b 	ldhu	r3,12(r16)
  80bec8:	18fbffcc 	andi	r3,r3,61439
  80becc:	80c0030d 	sth	r3,12(r16)
  80bed0:	dfc00117 	ldw	ra,4(sp)
  80bed4:	dc000017 	ldw	r16,0(sp)
  80bed8:	dec00204 	addi	sp,sp,8
  80bedc:	f800283a 	ret

0080bee0 <__seofread>:
  80bee0:	0005883a 	mov	r2,zero
  80bee4:	f800283a 	ret

0080bee8 <__swrite>:
  80bee8:	2880030b 	ldhu	r2,12(r5)
  80beec:	defffb04 	addi	sp,sp,-20
  80bef0:	dcc00315 	stw	r19,12(sp)
  80bef4:	dc800215 	stw	r18,8(sp)
  80bef8:	dc400115 	stw	r17,4(sp)
  80befc:	dc000015 	stw	r16,0(sp)
  80bf00:	dfc00415 	stw	ra,16(sp)
  80bf04:	10c0400c 	andi	r3,r2,256
  80bf08:	2821883a 	mov	r16,r5
  80bf0c:	2027883a 	mov	r19,r4
  80bf10:	3025883a 	mov	r18,r6
  80bf14:	3823883a 	mov	r17,r7
  80bf18:	18000526 	beq	r3,zero,80bf30 <__swrite+0x48>
  80bf1c:	2940038f 	ldh	r5,14(r5)
  80bf20:	000d883a 	mov	r6,zero
  80bf24:	01c00084 	movi	r7,2
  80bf28:	081227c0 	call	81227c <_lseek_r>
  80bf2c:	8080030b 	ldhu	r2,12(r16)
  80bf30:	8140038f 	ldh	r5,14(r16)
  80bf34:	10bbffcc 	andi	r2,r2,61439
  80bf38:	9809883a 	mov	r4,r19
  80bf3c:	900d883a 	mov	r6,r18
  80bf40:	880f883a 	mov	r7,r17
  80bf44:	8080030d 	sth	r2,12(r16)
  80bf48:	dfc00417 	ldw	ra,16(sp)
  80bf4c:	dcc00317 	ldw	r19,12(sp)
  80bf50:	dc800217 	ldw	r18,8(sp)
  80bf54:	dc400117 	ldw	r17,4(sp)
  80bf58:	dc000017 	ldw	r16,0(sp)
  80bf5c:	dec00504 	addi	sp,sp,20
  80bf60:	08100b01 	jmpi	8100b0 <_write_r>

0080bf64 <__sseek>:
  80bf64:	defffe04 	addi	sp,sp,-8
  80bf68:	dc000015 	stw	r16,0(sp)
  80bf6c:	2821883a 	mov	r16,r5
  80bf70:	2940038f 	ldh	r5,14(r5)
  80bf74:	dfc00115 	stw	ra,4(sp)
  80bf78:	081227c0 	call	81227c <_lseek_r>
  80bf7c:	00ffffc4 	movi	r3,-1
  80bf80:	10c00826 	beq	r2,r3,80bfa4 <__sseek+0x40>
  80bf84:	80c0030b 	ldhu	r3,12(r16)
  80bf88:	80801415 	stw	r2,80(r16)
  80bf8c:	18c40014 	ori	r3,r3,4096
  80bf90:	80c0030d 	sth	r3,12(r16)
  80bf94:	dfc00117 	ldw	ra,4(sp)
  80bf98:	dc000017 	ldw	r16,0(sp)
  80bf9c:	dec00204 	addi	sp,sp,8
  80bfa0:	f800283a 	ret
  80bfa4:	80c0030b 	ldhu	r3,12(r16)
  80bfa8:	18fbffcc 	andi	r3,r3,61439
  80bfac:	80c0030d 	sth	r3,12(r16)
  80bfb0:	dfc00117 	ldw	ra,4(sp)
  80bfb4:	dc000017 	ldw	r16,0(sp)
  80bfb8:	dec00204 	addi	sp,sp,8
  80bfbc:	f800283a 	ret

0080bfc0 <__sclose>:
  80bfc0:	2940038f 	ldh	r5,14(r5)
  80bfc4:	08102601 	jmpi	810260 <_close_r>

0080bfc8 <strcpy>:
  80bfc8:	2906b03a 	or	r3,r5,r4
  80bfcc:	18c000cc 	andi	r3,r3,3
  80bfd0:	2005883a 	mov	r2,r4
  80bfd4:	1800161e 	bne	r3,zero,80c030 <strcpy+0x68>
  80bfd8:	29c00017 	ldw	r7,0(r5)
  80bfdc:	02ffbff4 	movhi	r11,65279
  80bfe0:	5affbfc4 	addi	r11,r11,-257
  80bfe4:	02a02074 	movhi	r10,32897
  80bfe8:	01c8303a 	nor	r4,zero,r7
  80bfec:	3ac7883a 	add	r3,r7,r11
  80bff0:	52a02004 	addi	r10,r10,-32640
  80bff4:	20c6703a 	and	r3,r4,r3
  80bff8:	1a86703a 	and	r3,r3,r10
  80bffc:	18000c1e 	bne	r3,zero,80c030 <strcpy+0x68>
  80c000:	1011883a 	mov	r8,r2
  80c004:	41c00015 	stw	r7,0(r8)
  80c008:	29400104 	addi	r5,r5,4
  80c00c:	29c00017 	ldw	r7,0(r5)
  80c010:	41800104 	addi	r6,r8,4
  80c014:	3011883a 	mov	r8,r6
  80c018:	01d2303a 	nor	r9,zero,r7
  80c01c:	3ac7883a 	add	r3,r7,r11
  80c020:	48c6703a 	and	r3,r9,r3
  80c024:	1a86703a 	and	r3,r3,r10
  80c028:	183ff626 	beq	r3,zero,80c004 <__alt_data_end+0xff80c004>
  80c02c:	00000106 	br	80c034 <strcpy+0x6c>
  80c030:	100d883a 	mov	r6,r2
  80c034:	28c00003 	ldbu	r3,0(r5)
  80c038:	31800044 	addi	r6,r6,1
  80c03c:	29400044 	addi	r5,r5,1
  80c040:	30ffffc5 	stb	r3,-1(r6)
  80c044:	18c03fcc 	andi	r3,r3,255
  80c048:	18c0201c 	xori	r3,r3,128
  80c04c:	18ffe004 	addi	r3,r3,-128
  80c050:	183ff81e 	bne	r3,zero,80c034 <__alt_data_end+0xff80c034>
  80c054:	f800283a 	ret

0080c058 <strlen>:
  80c058:	208000cc 	andi	r2,r4,3
  80c05c:	10002026 	beq	r2,zero,80c0e0 <strlen+0x88>
  80c060:	20800007 	ldb	r2,0(r4)
  80c064:	10002026 	beq	r2,zero,80c0e8 <strlen+0x90>
  80c068:	2005883a 	mov	r2,r4
  80c06c:	00000206 	br	80c078 <strlen+0x20>
  80c070:	10c00007 	ldb	r3,0(r2)
  80c074:	18001826 	beq	r3,zero,80c0d8 <strlen+0x80>
  80c078:	10800044 	addi	r2,r2,1
  80c07c:	10c000cc 	andi	r3,r2,3
  80c080:	183ffb1e 	bne	r3,zero,80c070 <__alt_data_end+0xff80c070>
  80c084:	10c00017 	ldw	r3,0(r2)
  80c088:	01ffbff4 	movhi	r7,65279
  80c08c:	39ffbfc4 	addi	r7,r7,-257
  80c090:	00ca303a 	nor	r5,zero,r3
  80c094:	01a02074 	movhi	r6,32897
  80c098:	19c7883a 	add	r3,r3,r7
  80c09c:	31a02004 	addi	r6,r6,-32640
  80c0a0:	1946703a 	and	r3,r3,r5
  80c0a4:	1986703a 	and	r3,r3,r6
  80c0a8:	1800091e 	bne	r3,zero,80c0d0 <strlen+0x78>
  80c0ac:	10800104 	addi	r2,r2,4
  80c0b0:	10c00017 	ldw	r3,0(r2)
  80c0b4:	19cb883a 	add	r5,r3,r7
  80c0b8:	00c6303a 	nor	r3,zero,r3
  80c0bc:	28c6703a 	and	r3,r5,r3
  80c0c0:	1986703a 	and	r3,r3,r6
  80c0c4:	183ff926 	beq	r3,zero,80c0ac <__alt_data_end+0xff80c0ac>
  80c0c8:	00000106 	br	80c0d0 <strlen+0x78>
  80c0cc:	10800044 	addi	r2,r2,1
  80c0d0:	10c00007 	ldb	r3,0(r2)
  80c0d4:	183ffd1e 	bne	r3,zero,80c0cc <__alt_data_end+0xff80c0cc>
  80c0d8:	1105c83a 	sub	r2,r2,r4
  80c0dc:	f800283a 	ret
  80c0e0:	2005883a 	mov	r2,r4
  80c0e4:	003fe706 	br	80c084 <__alt_data_end+0xff80c084>
  80c0e8:	0005883a 	mov	r2,zero
  80c0ec:	f800283a 	ret

0080c0f0 <___svfprintf_internal_r>:
  80c0f0:	deffb504 	addi	sp,sp,-300
  80c0f4:	dfc04a15 	stw	ra,296(sp)
  80c0f8:	ddc04815 	stw	r23,288(sp)
  80c0fc:	d9002f15 	stw	r4,188(sp)
  80c100:	282f883a 	mov	r23,r5
  80c104:	d9802915 	stw	r6,164(sp)
  80c108:	d9c02d15 	stw	r7,180(sp)
  80c10c:	df004915 	stw	fp,292(sp)
  80c110:	dd804715 	stw	r22,284(sp)
  80c114:	dd404615 	stw	r21,280(sp)
  80c118:	dd004515 	stw	r20,276(sp)
  80c11c:	dcc04415 	stw	r19,272(sp)
  80c120:	dc804315 	stw	r18,268(sp)
  80c124:	dc404215 	stw	r17,264(sp)
  80c128:	dc004115 	stw	r16,260(sp)
  80c12c:	08122480 	call	812248 <_localeconv_r>
  80c130:	10800017 	ldw	r2,0(r2)
  80c134:	1009883a 	mov	r4,r2
  80c138:	d8803515 	stw	r2,212(sp)
  80c13c:	080c0580 	call	80c058 <strlen>
  80c140:	d8803915 	stw	r2,228(sp)
  80c144:	b880030b 	ldhu	r2,12(r23)
  80c148:	1080200c 	andi	r2,r2,128
  80c14c:	10000226 	beq	r2,zero,80c158 <___svfprintf_internal_r+0x68>
  80c150:	b8800417 	ldw	r2,16(r23)
  80c154:	10065f26 	beq	r2,zero,80dad4 <___svfprintf_internal_r+0x19e4>
  80c158:	db001dc4 	addi	r12,sp,119
  80c15c:	dd801e04 	addi	r22,sp,120
  80c160:	d8800404 	addi	r2,sp,16
  80c164:	050020b4 	movhi	r20,130
  80c168:	b317c83a 	sub	r11,r22,r12
  80c16c:	a5390b84 	addi	r20,r20,-7122
  80c170:	db002815 	stw	r12,160(sp)
  80c174:	d8801e15 	stw	r2,120(sp)
  80c178:	d8002015 	stw	zero,128(sp)
  80c17c:	d8001f15 	stw	zero,124(sp)
  80c180:	d8003315 	stw	zero,204(sp)
  80c184:	d8003715 	stw	zero,220(sp)
  80c188:	d8003815 	stw	zero,224(sp)
  80c18c:	1011883a 	mov	r8,r2
  80c190:	d8003b15 	stw	zero,236(sp)
  80c194:	d8003a15 	stw	zero,232(sp)
  80c198:	d8003015 	stw	zero,192(sp)
  80c19c:	dac03d15 	stw	r11,244(sp)
  80c1a0:	db002917 	ldw	r12,164(sp)
  80c1a4:	60800007 	ldb	r2,0(r12)
  80c1a8:	1000ab26 	beq	r2,zero,80c458 <___svfprintf_internal_r+0x368>
  80c1ac:	00c00944 	movi	r3,37
  80c1b0:	10c0a926 	beq	r2,r3,80c458 <___svfprintf_internal_r+0x368>
  80c1b4:	6021883a 	mov	r16,r12
  80c1b8:	00000106 	br	80c1c0 <___svfprintf_internal_r+0xd0>
  80c1bc:	10c08426 	beq	r2,r3,80c3d0 <___svfprintf_internal_r+0x2e0>
  80c1c0:	84000044 	addi	r16,r16,1
  80c1c4:	80800007 	ldb	r2,0(r16)
  80c1c8:	103ffc1e 	bne	r2,zero,80c1bc <__alt_data_end+0xff80c1bc>
  80c1cc:	dac02917 	ldw	r11,164(sp)
  80c1d0:	82e3c83a 	sub	r17,r16,r11
  80c1d4:	88000f26 	beq	r17,zero,80c214 <___svfprintf_internal_r+0x124>
  80c1d8:	d8c02017 	ldw	r3,128(sp)
  80c1dc:	d8801f17 	ldw	r2,124(sp)
  80c1e0:	dac02917 	ldw	r11,164(sp)
  80c1e4:	1c47883a 	add	r3,r3,r17
  80c1e8:	10800044 	addi	r2,r2,1
  80c1ec:	d8c02015 	stw	r3,128(sp)
  80c1f0:	42c00015 	stw	r11,0(r8)
  80c1f4:	44400115 	stw	r17,4(r8)
  80c1f8:	d8801f15 	stw	r2,124(sp)
  80c1fc:	00c001c4 	movi	r3,7
  80c200:	18807616 	blt	r3,r2,80c3dc <___svfprintf_internal_r+0x2ec>
  80c204:	42000204 	addi	r8,r8,8
  80c208:	db003017 	ldw	r12,192(sp)
  80c20c:	6459883a 	add	r12,r12,r17
  80c210:	db003015 	stw	r12,192(sp)
  80c214:	80800007 	ldb	r2,0(r16)
  80c218:	10007726 	beq	r2,zero,80c3f8 <___svfprintf_internal_r+0x308>
  80c21c:	80800044 	addi	r2,r16,1
  80c220:	84000047 	ldb	r16,1(r16)
  80c224:	d8002785 	stb	zero,158(sp)
  80c228:	000d883a 	mov	r6,zero
  80c22c:	027fffc4 	movi	r9,-1
  80c230:	d8002e15 	stw	zero,184(sp)
  80c234:	0023883a 	mov	r17,zero
  80c238:	01001604 	movi	r4,88
  80c23c:	01400244 	movi	r5,9
  80c240:	02800a84 	movi	r10,42
  80c244:	01c01b04 	movi	r7,108
  80c248:	10c00044 	addi	r3,r2,1
  80c24c:	80bff804 	addi	r2,r16,-32
  80c250:	2082e636 	bltu	r4,r2,80cdec <___svfprintf_internal_r+0xcfc>
  80c254:	100490ba 	slli	r2,r2,2
  80c258:	02c02074 	movhi	r11,129
  80c25c:	5af09b04 	addi	r11,r11,-15764
  80c260:	12c5883a 	add	r2,r2,r11
  80c264:	10800017 	ldw	r2,0(r2)
  80c268:	1000683a 	jmp	r2
  80c26c:	0080cbcc 	andi	r2,zero,815
  80c270:	0080cdec 	andhi	r2,zero,823
  80c274:	0080cdec 	andhi	r2,zero,823
  80c278:	0080cbec 	andhi	r2,zero,815
  80c27c:	0080cdec 	andhi	r2,zero,823
  80c280:	0080cdec 	andhi	r2,zero,823
  80c284:	0080cdec 	andhi	r2,zero,823
  80c288:	0080cdec 	andhi	r2,zero,823
  80c28c:	0080cdec 	andhi	r2,zero,823
  80c290:	0080cdec 	andhi	r2,zero,823
  80c294:	0080cbfc 	xorhi	r2,zero,815
  80c298:	0080cc28 	cmpgeui	r2,zero,816
  80c29c:	0080cdec 	andhi	r2,zero,823
  80c2a0:	0080c460 	cmpeqi	r2,zero,785
  80c2a4:	0080c470 	cmpltui	r2,zero,785
  80c2a8:	0080cdec 	andhi	r2,zero,823
  80c2ac:	0080c4b0 	cmpltui	r2,zero,786
  80c2b0:	0080ca90 	cmplti	r2,zero,810
  80c2b4:	0080ca90 	cmplti	r2,zero,810
  80c2b8:	0080ca90 	cmplti	r2,zero,810
  80c2bc:	0080ca90 	cmplti	r2,zero,810
  80c2c0:	0080ca90 	cmplti	r2,zero,810
  80c2c4:	0080ca90 	cmplti	r2,zero,810
  80c2c8:	0080ca90 	cmplti	r2,zero,810
  80c2cc:	0080ca90 	cmplti	r2,zero,810
  80c2d0:	0080ca90 	cmplti	r2,zero,810
  80c2d4:	0080cdec 	andhi	r2,zero,823
  80c2d8:	0080cdec 	andhi	r2,zero,823
  80c2dc:	0080cdec 	andhi	r2,zero,823
  80c2e0:	0080cdec 	andhi	r2,zero,823
  80c2e4:	0080cdec 	andhi	r2,zero,823
  80c2e8:	0080cdec 	andhi	r2,zero,823
  80c2ec:	0080cdec 	andhi	r2,zero,823
  80c2f0:	0080cdec 	andhi	r2,zero,823
  80c2f4:	0080cdec 	andhi	r2,zero,823
  80c2f8:	0080cdec 	andhi	r2,zero,823
  80c2fc:	0080c4c0 	call	80c4c <__reset-0x77f3b4>
  80c300:	0080c940 	call	80c94 <__reset-0x77f36c>
  80c304:	0080cdec 	andhi	r2,zero,823
  80c308:	0080c940 	call	80c94 <__reset-0x77f36c>
  80c30c:	0080cdec 	andhi	r2,zero,823
  80c310:	0080cdec 	andhi	r2,zero,823
  80c314:	0080cdec 	andhi	r2,zero,823
  80c318:	0080cdec 	andhi	r2,zero,823
  80c31c:	0080c9e4 	muli	r2,zero,807
  80c320:	0080cdec 	andhi	r2,zero,823
  80c324:	0080cdec 	andhi	r2,zero,823
  80c328:	0080cd80 	call	80cd8 <__reset-0x77f328>
  80c32c:	0080cdec 	andhi	r2,zero,823
  80c330:	0080cdec 	andhi	r2,zero,823
  80c334:	0080cdec 	andhi	r2,zero,823
  80c338:	0080cdec 	andhi	r2,zero,823
  80c33c:	0080cdec 	andhi	r2,zero,823
  80c340:	0080c9f4 	movhi	r2,807
  80c344:	0080cdec 	andhi	r2,zero,823
  80c348:	0080cdec 	andhi	r2,zero,823
  80c34c:	0080ca34 	movhi	r2,808
  80c350:	0080cdec 	andhi	r2,zero,823
  80c354:	0080cdec 	andhi	r2,zero,823
  80c358:	0080cdec 	andhi	r2,zero,823
  80c35c:	0080cdec 	andhi	r2,zero,823
  80c360:	0080cdec 	andhi	r2,zero,823
  80c364:	0080cdec 	andhi	r2,zero,823
  80c368:	0080cdec 	andhi	r2,zero,823
  80c36c:	0080cdec 	andhi	r2,zero,823
  80c370:	0080cdec 	andhi	r2,zero,823
  80c374:	0080cdec 	andhi	r2,zero,823
  80c378:	0080ccd8 	cmpnei	r2,zero,819
  80c37c:	0080cd18 	cmpnei	r2,zero,820
  80c380:	0080c940 	call	80c94 <__reset-0x77f36c>
  80c384:	0080c940 	call	80c94 <__reset-0x77f36c>
  80c388:	0080c940 	call	80c94 <__reset-0x77f36c>
  80c38c:	0080cc38 	rdprs	r2,zero,816
  80c390:	0080cd18 	cmpnei	r2,zero,820
  80c394:	0080cdec 	andhi	r2,zero,823
  80c398:	0080cdec 	andhi	r2,zero,823
  80c39c:	0080cc48 	cmpgei	r2,zero,817
  80c3a0:	0080cdec 	andhi	r2,zero,823
  80c3a4:	0080cc5c 	xori	r2,zero,817
  80c3a8:	0080cdb0 	cmpltui	r2,zero,822
  80c3ac:	0080cc90 	cmplti	r2,zero,818
  80c3b0:	0080cac4 	movi	r2,811
  80c3b4:	0080cdec 	andhi	r2,zero,823
  80c3b8:	0080cad4 	movui	r2,811
  80c3bc:	0080cdec 	andhi	r2,zero,823
  80c3c0:	0080cb4c 	andi	r2,zero,813
  80c3c4:	0080cdec 	andhi	r2,zero,823
  80c3c8:	0080cdec 	andhi	r2,zero,823
  80c3cc:	0080cb8c 	andi	r2,zero,814
  80c3d0:	db002917 	ldw	r12,164(sp)
  80c3d4:	8323c83a 	sub	r17,r16,r12
  80c3d8:	003f7e06 	br	80c1d4 <__alt_data_end+0xff80c1d4>
  80c3dc:	d9002f17 	ldw	r4,188(sp)
  80c3e0:	b80b883a 	mov	r5,r23
  80c3e4:	b00d883a 	mov	r6,r22
  80c3e8:	0813e3c0 	call	813e3c <__ssprint_r>
  80c3ec:	1000081e 	bne	r2,zero,80c410 <___svfprintf_internal_r+0x320>
  80c3f0:	da000404 	addi	r8,sp,16
  80c3f4:	003f8406 	br	80c208 <__alt_data_end+0xff80c208>
  80c3f8:	d8802017 	ldw	r2,128(sp)
  80c3fc:	10000426 	beq	r2,zero,80c410 <___svfprintf_internal_r+0x320>
  80c400:	d9002f17 	ldw	r4,188(sp)
  80c404:	b80b883a 	mov	r5,r23
  80c408:	d9801e04 	addi	r6,sp,120
  80c40c:	0813e3c0 	call	813e3c <__ssprint_r>
  80c410:	b880030b 	ldhu	r2,12(r23)
  80c414:	1080100c 	andi	r2,r2,64
  80c418:	10000d1e 	bne	r2,zero,80c450 <___svfprintf_internal_r+0x360>
  80c41c:	d8803017 	ldw	r2,192(sp)
  80c420:	dfc04a17 	ldw	ra,296(sp)
  80c424:	df004917 	ldw	fp,292(sp)
  80c428:	ddc04817 	ldw	r23,288(sp)
  80c42c:	dd804717 	ldw	r22,284(sp)
  80c430:	dd404617 	ldw	r21,280(sp)
  80c434:	dd004517 	ldw	r20,276(sp)
  80c438:	dcc04417 	ldw	r19,272(sp)
  80c43c:	dc804317 	ldw	r18,268(sp)
  80c440:	dc404217 	ldw	r17,264(sp)
  80c444:	dc004117 	ldw	r16,260(sp)
  80c448:	dec04b04 	addi	sp,sp,300
  80c44c:	f800283a 	ret
  80c450:	00bfffc4 	movi	r2,-1
  80c454:	003ff206 	br	80c420 <__alt_data_end+0xff80c420>
  80c458:	dc002917 	ldw	r16,164(sp)
  80c45c:	003f6d06 	br	80c214 <__alt_data_end+0xff80c214>
  80c460:	1805883a 	mov	r2,r3
  80c464:	8c400114 	ori	r17,r17,4
  80c468:	1c000007 	ldb	r16,0(r3)
  80c46c:	003f7606 	br	80c248 <__alt_data_end+0xff80c248>
  80c470:	1c000007 	ldb	r16,0(r3)
  80c474:	18800044 	addi	r2,r3,1
  80c478:	8286e726 	beq	r16,r10,80e018 <___svfprintf_internal_r+0x1f28>
  80c47c:	82fff404 	addi	r11,r16,-48
  80c480:	1007883a 	mov	r3,r2
  80c484:	0013883a 	mov	r9,zero
  80c488:	2aff7036 	bltu	r5,r11,80c24c <__alt_data_end+0xff80c24c>
  80c48c:	1c000007 	ldb	r16,0(r3)
  80c490:	4a4002a4 	muli	r9,r9,10
  80c494:	18c00044 	addi	r3,r3,1
  80c498:	5a53883a 	add	r9,r11,r9
  80c49c:	82fff404 	addi	r11,r16,-48
  80c4a0:	2afffa2e 	bgeu	r5,r11,80c48c <__alt_data_end+0xff80c48c>
  80c4a4:	483f690e 	bge	r9,zero,80c24c <__alt_data_end+0xff80c24c>
  80c4a8:	027fffc4 	movi	r9,-1
  80c4ac:	003f6706 	br	80c24c <__alt_data_end+0xff80c24c>
  80c4b0:	8c402014 	ori	r17,r17,128
  80c4b4:	1805883a 	mov	r2,r3
  80c4b8:	1c000007 	ldb	r16,0(r3)
  80c4bc:	003f6206 	br	80c248 <__alt_data_end+0xff80c248>
  80c4c0:	8c400414 	ori	r17,r17,16
  80c4c4:	d8c02915 	stw	r3,164(sp)
  80c4c8:	d9802785 	stb	r6,158(sp)
  80c4cc:	8880080c 	andi	r2,r17,32
  80c4d0:	d8c02d17 	ldw	r3,180(sp)
  80c4d4:	10021526 	beq	r2,zero,80cd2c <___svfprintf_internal_r+0xc3c>
  80c4d8:	db002d17 	ldw	r12,180(sp)
  80c4dc:	18800117 	ldw	r2,4(r3)
  80c4e0:	1cc00017 	ldw	r19,0(r3)
  80c4e4:	63000204 	addi	r12,r12,8
  80c4e8:	db002d15 	stw	r12,180(sp)
  80c4ec:	1039883a 	mov	fp,r2
  80c4f0:	10021916 	blt	r2,zero,80cd58 <___svfprintf_internal_r+0xc68>
  80c4f4:	dd402783 	ldbu	r21,158(sp)
  80c4f8:	da403215 	stw	r9,200(sp)
  80c4fc:	00800044 	movi	r2,1
  80c500:	9f06b03a 	or	r3,r19,fp
  80c504:	48000216 	blt	r9,zero,80c510 <___svfprintf_internal_r+0x420>
  80c508:	013fdfc4 	movi	r4,-129
  80c50c:	8922703a 	and	r17,r17,r4
  80c510:	1802461e 	bne	r3,zero,80ce2c <___svfprintf_internal_r+0xd3c>
  80c514:	48035426 	beq	r9,zero,80d268 <___svfprintf_internal_r+0x1178>
  80c518:	10803fcc 	andi	r2,r2,255
  80c51c:	00c00044 	movi	r3,1
  80c520:	10c26726 	beq	r2,r3,80cec0 <___svfprintf_internal_r+0xdd0>
  80c524:	00c00084 	movi	r3,2
  80c528:	10c2ea26 	beq	r2,r3,80d0d4 <___svfprintf_internal_r+0xfe4>
  80c52c:	b007883a 	mov	r3,r22
  80c530:	9808d0fa 	srli	r4,r19,3
  80c534:	e00a977a 	slli	r5,fp,29
  80c538:	e038d0fa 	srli	fp,fp,3
  80c53c:	9cc001cc 	andi	r19,r19,7
  80c540:	98800c04 	addi	r2,r19,48
  80c544:	18ffffc4 	addi	r3,r3,-1
  80c548:	2926b03a 	or	r19,r5,r4
  80c54c:	18800005 	stb	r2,0(r3)
  80c550:	9f08b03a 	or	r4,r19,fp
  80c554:	203ff61e 	bne	r4,zero,80c530 <__alt_data_end+0xff80c530>
  80c558:	8900004c 	andi	r4,r17,1
  80c55c:	d8c03115 	stw	r3,196(sp)
  80c560:	2002ea26 	beq	r4,zero,80d10c <___svfprintf_internal_r+0x101c>
  80c564:	10803fcc 	andi	r2,r2,255
  80c568:	1080201c 	xori	r2,r2,128
  80c56c:	10bfe004 	addi	r2,r2,-128
  80c570:	01000c04 	movi	r4,48
  80c574:	11057526 	beq	r2,r4,80db4c <___svfprintf_internal_r+0x1a5c>
  80c578:	dac03117 	ldw	r11,196(sp)
  80c57c:	193fffc5 	stb	r4,-1(r3)
  80c580:	5affffc4 	addi	r11,r11,-1
  80c584:	dac03115 	stw	r11,196(sp)
  80c588:	b2e5c83a 	sub	r18,r22,r11
  80c58c:	9005883a 	mov	r2,r18
  80c590:	9240010e 	bge	r18,r9,80c598 <___svfprintf_internal_r+0x4a8>
  80c594:	4805883a 	mov	r2,r9
  80c598:	d8802a15 	stw	r2,168(sp)
  80c59c:	d8003415 	stw	zero,208(sp)
  80c5a0:	a8803fcc 	andi	r2,r21,255
  80c5a4:	1080201c 	xori	r2,r2,128
  80c5a8:	10bfe004 	addi	r2,r2,-128
  80c5ac:	10000326 	beq	r2,zero,80c5bc <___svfprintf_internal_r+0x4cc>
  80c5b0:	d8c02a17 	ldw	r3,168(sp)
  80c5b4:	18c00044 	addi	r3,r3,1
  80c5b8:	d8c02a15 	stw	r3,168(sp)
  80c5bc:	8ac0008c 	andi	r11,r17,2
  80c5c0:	dac02b15 	stw	r11,172(sp)
  80c5c4:	58000326 	beq	r11,zero,80c5d4 <___svfprintf_internal_r+0x4e4>
  80c5c8:	db002a17 	ldw	r12,168(sp)
  80c5cc:	63000084 	addi	r12,r12,2
  80c5d0:	db002a15 	stw	r12,168(sp)
  80c5d4:	88c0210c 	andi	r3,r17,132
  80c5d8:	d8c02c15 	stw	r3,176(sp)
  80c5dc:	1802111e 	bne	r3,zero,80ce24 <___svfprintf_internal_r+0xd34>
  80c5e0:	dac02e17 	ldw	r11,184(sp)
  80c5e4:	db002a17 	ldw	r12,168(sp)
  80c5e8:	5b39c83a 	sub	fp,r11,r12
  80c5ec:	07020d0e 	bge	zero,fp,80ce24 <___svfprintf_internal_r+0xd34>
  80c5f0:	02400404 	movi	r9,16
  80c5f4:	d8c02017 	ldw	r3,128(sp)
  80c5f8:	d8801f17 	ldw	r2,124(sp)
  80c5fc:	4f058c0e 	bge	r9,fp,80dc30 <___svfprintf_internal_r+0x1b40>
  80c600:	014020b4 	movhi	r5,130
  80c604:	e009883a 	mov	r4,fp
  80c608:	29790f84 	addi	r5,r5,-7106
  80c60c:	dc003c15 	stw	r16,240(sp)
  80c610:	9039883a 	mov	fp,r18
  80c614:	d9403615 	stw	r5,216(sp)
  80c618:	8825883a 	mov	r18,r17
  80c61c:	482b883a 	mov	r21,r9
  80c620:	04c001c4 	movi	r19,7
  80c624:	dc002f17 	ldw	r16,188(sp)
  80c628:	2023883a 	mov	r17,r4
  80c62c:	00000306 	br	80c63c <___svfprintf_internal_r+0x54c>
  80c630:	8c7ffc04 	addi	r17,r17,-16
  80c634:	42000204 	addi	r8,r8,8
  80c638:	ac40130e 	bge	r21,r17,80c688 <___svfprintf_internal_r+0x598>
  80c63c:	02c020b4 	movhi	r11,130
  80c640:	18c00404 	addi	r3,r3,16
  80c644:	10800044 	addi	r2,r2,1
  80c648:	5af90f84 	addi	r11,r11,-7106
  80c64c:	42c00015 	stw	r11,0(r8)
  80c650:	45400115 	stw	r21,4(r8)
  80c654:	d8c02015 	stw	r3,128(sp)
  80c658:	d8801f15 	stw	r2,124(sp)
  80c65c:	98bff40e 	bge	r19,r2,80c630 <__alt_data_end+0xff80c630>
  80c660:	8009883a 	mov	r4,r16
  80c664:	b80b883a 	mov	r5,r23
  80c668:	b00d883a 	mov	r6,r22
  80c66c:	0813e3c0 	call	813e3c <__ssprint_r>
  80c670:	103f671e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80c674:	8c7ffc04 	addi	r17,r17,-16
  80c678:	d8c02017 	ldw	r3,128(sp)
  80c67c:	d8801f17 	ldw	r2,124(sp)
  80c680:	da000404 	addi	r8,sp,16
  80c684:	ac7fed16 	blt	r21,r17,80c63c <__alt_data_end+0xff80c63c>
  80c688:	dc003c17 	ldw	r16,240(sp)
  80c68c:	8809883a 	mov	r4,r17
  80c690:	9023883a 	mov	r17,r18
  80c694:	e025883a 	mov	r18,fp
  80c698:	2039883a 	mov	fp,r4
  80c69c:	db003617 	ldw	r12,216(sp)
  80c6a0:	e0c7883a 	add	r3,fp,r3
  80c6a4:	10800044 	addi	r2,r2,1
  80c6a8:	43000015 	stw	r12,0(r8)
  80c6ac:	47000115 	stw	fp,4(r8)
  80c6b0:	d8c02015 	stw	r3,128(sp)
  80c6b4:	d8801f15 	stw	r2,124(sp)
  80c6b8:	010001c4 	movi	r4,7
  80c6bc:	20834416 	blt	r4,r2,80d3d0 <___svfprintf_internal_r+0x12e0>
  80c6c0:	d8802787 	ldb	r2,158(sp)
  80c6c4:	42000204 	addi	r8,r8,8
  80c6c8:	10000c26 	beq	r2,zero,80c6fc <___svfprintf_internal_r+0x60c>
  80c6cc:	d8801f17 	ldw	r2,124(sp)
  80c6d0:	d9002784 	addi	r4,sp,158
  80c6d4:	18c00044 	addi	r3,r3,1
  80c6d8:	10800044 	addi	r2,r2,1
  80c6dc:	41000015 	stw	r4,0(r8)
  80c6e0:	01000044 	movi	r4,1
  80c6e4:	41000115 	stw	r4,4(r8)
  80c6e8:	d8c02015 	stw	r3,128(sp)
  80c6ec:	d8801f15 	stw	r2,124(sp)
  80c6f0:	010001c4 	movi	r4,7
  80c6f4:	2082f616 	blt	r4,r2,80d2d0 <___svfprintf_internal_r+0x11e0>
  80c6f8:	42000204 	addi	r8,r8,8
  80c6fc:	dac02b17 	ldw	r11,172(sp)
  80c700:	58000c26 	beq	r11,zero,80c734 <___svfprintf_internal_r+0x644>
  80c704:	d8801f17 	ldw	r2,124(sp)
  80c708:	d9002704 	addi	r4,sp,156
  80c70c:	18c00084 	addi	r3,r3,2
  80c710:	10800044 	addi	r2,r2,1
  80c714:	41000015 	stw	r4,0(r8)
  80c718:	01000084 	movi	r4,2
  80c71c:	41000115 	stw	r4,4(r8)
  80c720:	d8c02015 	stw	r3,128(sp)
  80c724:	d8801f15 	stw	r2,124(sp)
  80c728:	010001c4 	movi	r4,7
  80c72c:	2082e016 	blt	r4,r2,80d2b0 <___svfprintf_internal_r+0x11c0>
  80c730:	42000204 	addi	r8,r8,8
  80c734:	db002c17 	ldw	r12,176(sp)
  80c738:	00802004 	movi	r2,128
  80c73c:	60822f26 	beq	r12,r2,80cffc <___svfprintf_internal_r+0xf0c>
  80c740:	db003217 	ldw	r12,200(sp)
  80c744:	64abc83a 	sub	r21,r12,r18
  80c748:	0540310e 	bge	zero,r21,80c810 <___svfprintf_internal_r+0x720>
  80c74c:	07000404 	movi	fp,16
  80c750:	d8801f17 	ldw	r2,124(sp)
  80c754:	e544270e 	bge	fp,r21,80d7f4 <___svfprintf_internal_r+0x1704>
  80c758:	014020b4 	movhi	r5,130
  80c75c:	a809883a 	mov	r4,r21
  80c760:	29790b84 	addi	r5,r5,-7122
  80c764:	dc002c15 	stw	r16,176(sp)
  80c768:	902b883a 	mov	r21,r18
  80c76c:	d9402b15 	stw	r5,172(sp)
  80c770:	8825883a 	mov	r18,r17
  80c774:	04c001c4 	movi	r19,7
  80c778:	dc002f17 	ldw	r16,188(sp)
  80c77c:	2023883a 	mov	r17,r4
  80c780:	00000306 	br	80c790 <___svfprintf_internal_r+0x6a0>
  80c784:	8c7ffc04 	addi	r17,r17,-16
  80c788:	42000204 	addi	r8,r8,8
  80c78c:	e440110e 	bge	fp,r17,80c7d4 <___svfprintf_internal_r+0x6e4>
  80c790:	18c00404 	addi	r3,r3,16
  80c794:	10800044 	addi	r2,r2,1
  80c798:	45000015 	stw	r20,0(r8)
  80c79c:	47000115 	stw	fp,4(r8)
  80c7a0:	d8c02015 	stw	r3,128(sp)
  80c7a4:	d8801f15 	stw	r2,124(sp)
  80c7a8:	98bff60e 	bge	r19,r2,80c784 <__alt_data_end+0xff80c784>
  80c7ac:	8009883a 	mov	r4,r16
  80c7b0:	b80b883a 	mov	r5,r23
  80c7b4:	b00d883a 	mov	r6,r22
  80c7b8:	0813e3c0 	call	813e3c <__ssprint_r>
  80c7bc:	103f141e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80c7c0:	8c7ffc04 	addi	r17,r17,-16
  80c7c4:	d8c02017 	ldw	r3,128(sp)
  80c7c8:	d8801f17 	ldw	r2,124(sp)
  80c7cc:	da000404 	addi	r8,sp,16
  80c7d0:	e47fef16 	blt	fp,r17,80c790 <__alt_data_end+0xff80c790>
  80c7d4:	dc002c17 	ldw	r16,176(sp)
  80c7d8:	8809883a 	mov	r4,r17
  80c7dc:	9023883a 	mov	r17,r18
  80c7e0:	a825883a 	mov	r18,r21
  80c7e4:	202b883a 	mov	r21,r4
  80c7e8:	dac02b17 	ldw	r11,172(sp)
  80c7ec:	1d47883a 	add	r3,r3,r21
  80c7f0:	10800044 	addi	r2,r2,1
  80c7f4:	42c00015 	stw	r11,0(r8)
  80c7f8:	45400115 	stw	r21,4(r8)
  80c7fc:	d8c02015 	stw	r3,128(sp)
  80c800:	d8801f15 	stw	r2,124(sp)
  80c804:	010001c4 	movi	r4,7
  80c808:	2082a116 	blt	r4,r2,80d290 <___svfprintf_internal_r+0x11a0>
  80c80c:	42000204 	addi	r8,r8,8
  80c810:	8880400c 	andi	r2,r17,256
  80c814:	1001b01e 	bne	r2,zero,80ced8 <___svfprintf_internal_r+0xde8>
  80c818:	d8801f17 	ldw	r2,124(sp)
  80c81c:	db003117 	ldw	r12,196(sp)
  80c820:	1c87883a 	add	r3,r3,r18
  80c824:	10800044 	addi	r2,r2,1
  80c828:	43000015 	stw	r12,0(r8)
  80c82c:	44800115 	stw	r18,4(r8)
  80c830:	d8c02015 	stw	r3,128(sp)
  80c834:	d8801f15 	stw	r2,124(sp)
  80c838:	010001c4 	movi	r4,7
  80c83c:	20828216 	blt	r4,r2,80d248 <___svfprintf_internal_r+0x1158>
  80c840:	42000204 	addi	r8,r8,8
  80c844:	8c40010c 	andi	r17,r17,4
  80c848:	88003226 	beq	r17,zero,80c914 <___svfprintf_internal_r+0x824>
  80c84c:	db002e17 	ldw	r12,184(sp)
  80c850:	dac02a17 	ldw	r11,168(sp)
  80c854:	62e1c83a 	sub	r16,r12,r11
  80c858:	04002e0e 	bge	zero,r16,80c914 <___svfprintf_internal_r+0x824>
  80c85c:	04400404 	movi	r17,16
  80c860:	d8801f17 	ldw	r2,124(sp)
  80c864:	8c05330e 	bge	r17,r16,80dd34 <___svfprintf_internal_r+0x1c44>
  80c868:	010020b4 	movhi	r4,130
  80c86c:	21390f84 	addi	r4,r4,-7106
  80c870:	d9003615 	stw	r4,216(sp)
  80c874:	048001c4 	movi	r18,7
  80c878:	dcc02f17 	ldw	r19,188(sp)
  80c87c:	00000306 	br	80c88c <___svfprintf_internal_r+0x79c>
  80c880:	843ffc04 	addi	r16,r16,-16
  80c884:	42000204 	addi	r8,r8,8
  80c888:	8c00130e 	bge	r17,r16,80c8d8 <___svfprintf_internal_r+0x7e8>
  80c88c:	014020b4 	movhi	r5,130
  80c890:	18c00404 	addi	r3,r3,16
  80c894:	10800044 	addi	r2,r2,1
  80c898:	29790f84 	addi	r5,r5,-7106
  80c89c:	41400015 	stw	r5,0(r8)
  80c8a0:	44400115 	stw	r17,4(r8)
  80c8a4:	d8c02015 	stw	r3,128(sp)
  80c8a8:	d8801f15 	stw	r2,124(sp)
  80c8ac:	90bff40e 	bge	r18,r2,80c880 <__alt_data_end+0xff80c880>
  80c8b0:	9809883a 	mov	r4,r19
  80c8b4:	b80b883a 	mov	r5,r23
  80c8b8:	b00d883a 	mov	r6,r22
  80c8bc:	0813e3c0 	call	813e3c <__ssprint_r>
  80c8c0:	103ed31e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80c8c4:	843ffc04 	addi	r16,r16,-16
  80c8c8:	d8c02017 	ldw	r3,128(sp)
  80c8cc:	d8801f17 	ldw	r2,124(sp)
  80c8d0:	da000404 	addi	r8,sp,16
  80c8d4:	8c3fed16 	blt	r17,r16,80c88c <__alt_data_end+0xff80c88c>
  80c8d8:	dac03617 	ldw	r11,216(sp)
  80c8dc:	1c07883a 	add	r3,r3,r16
  80c8e0:	10800044 	addi	r2,r2,1
  80c8e4:	42c00015 	stw	r11,0(r8)
  80c8e8:	44000115 	stw	r16,4(r8)
  80c8ec:	d8c02015 	stw	r3,128(sp)
  80c8f0:	d8801f15 	stw	r2,124(sp)
  80c8f4:	010001c4 	movi	r4,7
  80c8f8:	2080060e 	bge	r4,r2,80c914 <___svfprintf_internal_r+0x824>
  80c8fc:	d9002f17 	ldw	r4,188(sp)
  80c900:	b80b883a 	mov	r5,r23
  80c904:	b00d883a 	mov	r6,r22
  80c908:	0813e3c0 	call	813e3c <__ssprint_r>
  80c90c:	103ec01e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80c910:	d8c02017 	ldw	r3,128(sp)
  80c914:	d8802a17 	ldw	r2,168(sp)
  80c918:	db002e17 	ldw	r12,184(sp)
  80c91c:	1300010e 	bge	r2,r12,80c924 <___svfprintf_internal_r+0x834>
  80c920:	6005883a 	mov	r2,r12
  80c924:	dac03017 	ldw	r11,192(sp)
  80c928:	5897883a 	add	r11,r11,r2
  80c92c:	dac03015 	stw	r11,192(sp)
  80c930:	1802331e 	bne	r3,zero,80d200 <___svfprintf_internal_r+0x1110>
  80c934:	d8001f15 	stw	zero,124(sp)
  80c938:	da000404 	addi	r8,sp,16
  80c93c:	003e1806 	br	80c1a0 <__alt_data_end+0xff80c1a0>
  80c940:	db002d17 	ldw	r12,180(sp)
  80c944:	dac02d17 	ldw	r11,180(sp)
  80c948:	d8c02915 	stw	r3,164(sp)
  80c94c:	63000017 	ldw	r12,0(r12)
  80c950:	5ac00117 	ldw	r11,4(r11)
  80c954:	d9802785 	stb	r6,158(sp)
  80c958:	6009883a 	mov	r4,r12
  80c95c:	580b883a 	mov	r5,r11
  80c960:	db003715 	stw	r12,220(sp)
  80c964:	da004015 	stw	r8,256(sp)
  80c968:	da403f15 	stw	r9,252(sp)
  80c96c:	dac03815 	stw	r11,224(sp)
  80c970:	0813d240 	call	813d24 <__fpclassifyd>
  80c974:	db002d17 	ldw	r12,180(sp)
  80c978:	04800044 	movi	r18,1
  80c97c:	da004017 	ldw	r8,256(sp)
  80c980:	64c00204 	addi	r19,r12,8
  80c984:	da403f17 	ldw	r9,252(sp)
  80c988:	d9003717 	ldw	r4,220(sp)
  80c98c:	d9403817 	ldw	r5,224(sp)
  80c990:	1483561e 	bne	r2,r18,80d6ec <___svfprintf_internal_r+0x15fc>
  80c994:	000d883a 	mov	r6,zero
  80c998:	000f883a 	mov	r7,zero
  80c99c:	08189000 	call	818900 <__ledf2>
  80c9a0:	da004017 	ldw	r8,256(sp)
  80c9a4:	1004ee16 	blt	r2,zero,80dd60 <___svfprintf_internal_r+0x1c70>
  80c9a8:	dd402783 	ldbu	r21,158(sp)
  80c9ac:	008011c4 	movi	r2,71
  80c9b0:	1404440e 	bge	r2,r16,80dac4 <___svfprintf_internal_r+0x19d4>
  80c9b4:	00c020b4 	movhi	r3,130
  80c9b8:	18f8fc04 	addi	r3,r3,-7184
  80c9bc:	d8c03115 	stw	r3,196(sp)
  80c9c0:	02c000c4 	movi	r11,3
  80c9c4:	00bfdfc4 	movi	r2,-129
  80c9c8:	dac02a15 	stw	r11,168(sp)
  80c9cc:	88a2703a 	and	r17,r17,r2
  80c9d0:	dcc02d15 	stw	r19,180(sp)
  80c9d4:	5825883a 	mov	r18,r11
  80c9d8:	d8003215 	stw	zero,200(sp)
  80c9dc:	d8003415 	stw	zero,208(sp)
  80c9e0:	003eef06 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80c9e4:	8c400214 	ori	r17,r17,8
  80c9e8:	1805883a 	mov	r2,r3
  80c9ec:	1c000007 	ldb	r16,0(r3)
  80c9f0:	003e1506 	br	80c248 <__alt_data_end+0xff80c248>
  80c9f4:	8c400414 	ori	r17,r17,16
  80c9f8:	d8c02915 	stw	r3,164(sp)
  80c9fc:	88c0080c 	andi	r3,r17,32
  80ca00:	d8802d17 	ldw	r2,180(sp)
  80ca04:	18005526 	beq	r3,zero,80cb5c <___svfprintf_internal_r+0xa6c>
  80ca08:	dac02d17 	ldw	r11,180(sp)
  80ca0c:	14c00017 	ldw	r19,0(r2)
  80ca10:	17000117 	ldw	fp,4(r2)
  80ca14:	5ac00204 	addi	r11,r11,8
  80ca18:	dac02d15 	stw	r11,180(sp)
  80ca1c:	00800044 	movi	r2,1
  80ca20:	9f06b03a 	or	r3,r19,fp
  80ca24:	d8002785 	stb	zero,158(sp)
  80ca28:	da403215 	stw	r9,200(sp)
  80ca2c:	002b883a 	mov	r21,zero
  80ca30:	003eb406 	br	80c504 <__alt_data_end+0xff80c504>
  80ca34:	030020b4 	movhi	r12,130
  80ca38:	6338ff04 	addi	r12,r12,-7172
  80ca3c:	d8c02915 	stw	r3,164(sp)
  80ca40:	d9802785 	stb	r6,158(sp)
  80ca44:	db003b15 	stw	r12,236(sp)
  80ca48:	88c0080c 	andi	r3,r17,32
  80ca4c:	d8802d17 	ldw	r2,180(sp)
  80ca50:	18005626 	beq	r3,zero,80cbac <___svfprintf_internal_r+0xabc>
  80ca54:	dac02d17 	ldw	r11,180(sp)
  80ca58:	14c00017 	ldw	r19,0(r2)
  80ca5c:	17000117 	ldw	fp,4(r2)
  80ca60:	5ac00204 	addi	r11,r11,8
  80ca64:	dac02d15 	stw	r11,180(sp)
  80ca68:	8880004c 	andi	r2,r17,1
  80ca6c:	10029326 	beq	r2,zero,80d4bc <___svfprintf_internal_r+0x13cc>
  80ca70:	9f06b03a 	or	r3,r19,fp
  80ca74:	18033526 	beq	r3,zero,80d74c <___svfprintf_internal_r+0x165c>
  80ca78:	00800c04 	movi	r2,48
  80ca7c:	d8802705 	stb	r2,156(sp)
  80ca80:	dc002745 	stb	r16,157(sp)
  80ca84:	8c400094 	ori	r17,r17,2
  80ca88:	00800084 	movi	r2,2
  80ca8c:	003fe506 	br	80ca24 <__alt_data_end+0xff80ca24>
  80ca90:	1805883a 	mov	r2,r3
  80ca94:	d8002e15 	stw	zero,184(sp)
  80ca98:	82fff404 	addi	r11,r16,-48
  80ca9c:	0019883a 	mov	r12,zero
  80caa0:	14000007 	ldb	r16,0(r2)
  80caa4:	630002a4 	muli	r12,r12,10
  80caa8:	18c00044 	addi	r3,r3,1
  80caac:	1805883a 	mov	r2,r3
  80cab0:	62d9883a 	add	r12,r12,r11
  80cab4:	82fff404 	addi	r11,r16,-48
  80cab8:	2afff92e 	bgeu	r5,r11,80caa0 <__alt_data_end+0xff80caa0>
  80cabc:	db002e15 	stw	r12,184(sp)
  80cac0:	003de206 	br	80c24c <__alt_data_end+0xff80c24c>
  80cac4:	8c400814 	ori	r17,r17,32
  80cac8:	1805883a 	mov	r2,r3
  80cacc:	1c000007 	ldb	r16,0(r3)
  80cad0:	003ddd06 	br	80c248 <__alt_data_end+0xff80c248>
  80cad4:	dac02d17 	ldw	r11,180(sp)
  80cad8:	db002d17 	ldw	r12,180(sp)
  80cadc:	d8c02915 	stw	r3,164(sp)
  80cae0:	5ac00017 	ldw	r11,0(r11)
  80cae4:	d8002785 	stb	zero,158(sp)
  80cae8:	64c00104 	addi	r19,r12,4
  80caec:	dac03115 	stw	r11,196(sp)
  80caf0:	58048126 	beq	r11,zero,80dcf8 <___svfprintf_internal_r+0x1c08>
  80caf4:	d9003117 	ldw	r4,196(sp)
  80caf8:	48041716 	blt	r9,zero,80db58 <___svfprintf_internal_r+0x1a68>
  80cafc:	480d883a 	mov	r6,r9
  80cb00:	000b883a 	mov	r5,zero
  80cb04:	da004015 	stw	r8,256(sp)
  80cb08:	da403f15 	stw	r9,252(sp)
  80cb0c:	08122d80 	call	8122d8 <memchr>
  80cb10:	da004017 	ldw	r8,256(sp)
  80cb14:	da403f17 	ldw	r9,252(sp)
  80cb18:	1004db26 	beq	r2,zero,80de88 <___svfprintf_internal_r+0x1d98>
  80cb1c:	d8c03117 	ldw	r3,196(sp)
  80cb20:	10e5c83a 	sub	r18,r2,r3
  80cb24:	4c80010e 	bge	r9,r18,80cb2c <___svfprintf_internal_r+0xa3c>
  80cb28:	4825883a 	mov	r18,r9
  80cb2c:	9005883a 	mov	r2,r18
  80cb30:	90040e16 	blt	r18,zero,80db6c <___svfprintf_internal_r+0x1a7c>
  80cb34:	dd402783 	ldbu	r21,158(sp)
  80cb38:	d8802a15 	stw	r2,168(sp)
  80cb3c:	dcc02d15 	stw	r19,180(sp)
  80cb40:	d8003215 	stw	zero,200(sp)
  80cb44:	d8003415 	stw	zero,208(sp)
  80cb48:	003e9506 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80cb4c:	d8c02915 	stw	r3,164(sp)
  80cb50:	88c0080c 	andi	r3,r17,32
  80cb54:	d8802d17 	ldw	r2,180(sp)
  80cb58:	183fab1e 	bne	r3,zero,80ca08 <__alt_data_end+0xff80ca08>
  80cb5c:	88c0040c 	andi	r3,r17,16
  80cb60:	1802681e 	bne	r3,zero,80d504 <___svfprintf_internal_r+0x1414>
  80cb64:	88c0100c 	andi	r3,r17,64
  80cb68:	18026626 	beq	r3,zero,80d504 <___svfprintf_internal_r+0x1414>
  80cb6c:	dac02d17 	ldw	r11,180(sp)
  80cb70:	14c0000b 	ldhu	r19,0(r2)
  80cb74:	0039883a 	mov	fp,zero
  80cb78:	5ac00104 	addi	r11,r11,4
  80cb7c:	dac02d15 	stw	r11,180(sp)
  80cb80:	00800044 	movi	r2,1
  80cb84:	9807883a 	mov	r3,r19
  80cb88:	003fa606 	br	80ca24 <__alt_data_end+0xff80ca24>
  80cb8c:	008020b4 	movhi	r2,130
  80cb90:	10b90404 	addi	r2,r2,-7152
  80cb94:	d8c02915 	stw	r3,164(sp)
  80cb98:	d8803b15 	stw	r2,236(sp)
  80cb9c:	d9802785 	stb	r6,158(sp)
  80cba0:	88c0080c 	andi	r3,r17,32
  80cba4:	d8802d17 	ldw	r2,180(sp)
  80cba8:	183faa1e 	bne	r3,zero,80ca54 <__alt_data_end+0xff80ca54>
  80cbac:	88c0040c 	andi	r3,r17,16
  80cbb0:	1802e826 	beq	r3,zero,80d754 <___svfprintf_internal_r+0x1664>
  80cbb4:	db002d17 	ldw	r12,180(sp)
  80cbb8:	14c00017 	ldw	r19,0(r2)
  80cbbc:	0039883a 	mov	fp,zero
  80cbc0:	63000104 	addi	r12,r12,4
  80cbc4:	db002d15 	stw	r12,180(sp)
  80cbc8:	003fa706 	br	80ca68 <__alt_data_end+0xff80ca68>
  80cbcc:	30803fcc 	andi	r2,r6,255
  80cbd0:	1080201c 	xori	r2,r2,128
  80cbd4:	10bfe004 	addi	r2,r2,-128
  80cbd8:	1002d91e 	bne	r2,zero,80d740 <___svfprintf_internal_r+0x1650>
  80cbdc:	1805883a 	mov	r2,r3
  80cbe0:	01800804 	movi	r6,32
  80cbe4:	1c000007 	ldb	r16,0(r3)
  80cbe8:	003d9706 	br	80c248 <__alt_data_end+0xff80c248>
  80cbec:	8c400054 	ori	r17,r17,1
  80cbf0:	1805883a 	mov	r2,r3
  80cbf4:	1c000007 	ldb	r16,0(r3)
  80cbf8:	003d9306 	br	80c248 <__alt_data_end+0xff80c248>
  80cbfc:	dac02d17 	ldw	r11,180(sp)
  80cc00:	db002d17 	ldw	r12,180(sp)
  80cc04:	5ac00017 	ldw	r11,0(r11)
  80cc08:	dac02e15 	stw	r11,184(sp)
  80cc0c:	62c00104 	addi	r11,r12,4
  80cc10:	db002e17 	ldw	r12,184(sp)
  80cc14:	60033e16 	blt	r12,zero,80d910 <___svfprintf_internal_r+0x1820>
  80cc18:	dac02d15 	stw	r11,180(sp)
  80cc1c:	1805883a 	mov	r2,r3
  80cc20:	1c000007 	ldb	r16,0(r3)
  80cc24:	003d8806 	br	80c248 <__alt_data_end+0xff80c248>
  80cc28:	1805883a 	mov	r2,r3
  80cc2c:	01800ac4 	movi	r6,43
  80cc30:	1c000007 	ldb	r16,0(r3)
  80cc34:	003d8406 	br	80c248 <__alt_data_end+0xff80c248>
  80cc38:	8c401014 	ori	r17,r17,64
  80cc3c:	1805883a 	mov	r2,r3
  80cc40:	1c000007 	ldb	r16,0(r3)
  80cc44:	003d8006 	br	80c248 <__alt_data_end+0xff80c248>
  80cc48:	1c000007 	ldb	r16,0(r3)
  80cc4c:	81c33626 	beq	r16,r7,80d928 <___svfprintf_internal_r+0x1838>
  80cc50:	8c400414 	ori	r17,r17,16
  80cc54:	1805883a 	mov	r2,r3
  80cc58:	003d7b06 	br	80c248 <__alt_data_end+0xff80c248>
  80cc5c:	d8c02915 	stw	r3,164(sp)
  80cc60:	d9802785 	stb	r6,158(sp)
  80cc64:	8880080c 	andi	r2,r17,32
  80cc68:	1002c226 	beq	r2,zero,80d774 <___svfprintf_internal_r+0x1684>
  80cc6c:	db002d17 	ldw	r12,180(sp)
  80cc70:	dac03017 	ldw	r11,192(sp)
  80cc74:	60800017 	ldw	r2,0(r12)
  80cc78:	5807d7fa 	srai	r3,r11,31
  80cc7c:	63000104 	addi	r12,r12,4
  80cc80:	db002d15 	stw	r12,180(sp)
  80cc84:	12c00015 	stw	r11,0(r2)
  80cc88:	10c00115 	stw	r3,4(r2)
  80cc8c:	003d4406 	br	80c1a0 <__alt_data_end+0xff80c1a0>
  80cc90:	db002d17 	ldw	r12,180(sp)
  80cc94:	00800c04 	movi	r2,48
  80cc98:	d8802705 	stb	r2,156(sp)
  80cc9c:	64c00017 	ldw	r19,0(r12)
  80cca0:	00801e04 	movi	r2,120
  80cca4:	d8802745 	stb	r2,157(sp)
  80cca8:	008020b4 	movhi	r2,130
  80ccac:	10b90404 	addi	r2,r2,-7152
  80ccb0:	63000104 	addi	r12,r12,4
  80ccb4:	d8c02915 	stw	r3,164(sp)
  80ccb8:	d8803b15 	stw	r2,236(sp)
  80ccbc:	0039883a 	mov	fp,zero
  80ccc0:	8c400094 	ori	r17,r17,2
  80ccc4:	db002d15 	stw	r12,180(sp)
  80ccc8:	00800084 	movi	r2,2
  80cccc:	04001e04 	movi	r16,120
  80ccd0:	9807883a 	mov	r3,r19
  80ccd4:	003f5306 	br	80ca24 <__alt_data_end+0xff80ca24>
  80ccd8:	db002d17 	ldw	r12,180(sp)
  80ccdc:	d8c02915 	stw	r3,164(sp)
  80cce0:	dac01404 	addi	r11,sp,80
  80cce4:	60800017 	ldw	r2,0(r12)
  80cce8:	00c00044 	movi	r3,1
  80ccec:	63000104 	addi	r12,r12,4
  80ccf0:	d8801405 	stb	r2,80(sp)
  80ccf4:	d8c02a15 	stw	r3,168(sp)
  80ccf8:	d8002785 	stb	zero,158(sp)
  80ccfc:	db002d15 	stw	r12,180(sp)
  80cd00:	1825883a 	mov	r18,r3
  80cd04:	d8003215 	stw	zero,200(sp)
  80cd08:	d8003415 	stw	zero,208(sp)
  80cd0c:	dac03115 	stw	r11,196(sp)
  80cd10:	0005883a 	mov	r2,zero
  80cd14:	003e2906 	br	80c5bc <__alt_data_end+0xff80c5bc>
  80cd18:	d8c02915 	stw	r3,164(sp)
  80cd1c:	d9802785 	stb	r6,158(sp)
  80cd20:	8880080c 	andi	r2,r17,32
  80cd24:	d8c02d17 	ldw	r3,180(sp)
  80cd28:	103deb1e 	bne	r2,zero,80c4d8 <__alt_data_end+0xff80c4d8>
  80cd2c:	8880040c 	andi	r2,r17,16
  80cd30:	1001e51e 	bne	r2,zero,80d4c8 <___svfprintf_internal_r+0x13d8>
  80cd34:	8880100c 	andi	r2,r17,64
  80cd38:	1001e326 	beq	r2,zero,80d4c8 <___svfprintf_internal_r+0x13d8>
  80cd3c:	1cc0000f 	ldh	r19,0(r3)
  80cd40:	db002d17 	ldw	r12,180(sp)
  80cd44:	9839d7fa 	srai	fp,r19,31
  80cd48:	63000104 	addi	r12,r12,4
  80cd4c:	db002d15 	stw	r12,180(sp)
  80cd50:	e005883a 	mov	r2,fp
  80cd54:	103de70e 	bge	r2,zero,80c4f4 <__alt_data_end+0xff80c4f4>
  80cd58:	04e7c83a 	sub	r19,zero,r19
  80cd5c:	9804c03a 	cmpne	r2,r19,zero
  80cd60:	0739c83a 	sub	fp,zero,fp
  80cd64:	e0b9c83a 	sub	fp,fp,r2
  80cd68:	05400b44 	movi	r21,45
  80cd6c:	dd402785 	stb	r21,158(sp)
  80cd70:	da403215 	stw	r9,200(sp)
  80cd74:	00800044 	movi	r2,1
  80cd78:	9f06b03a 	or	r3,r19,fp
  80cd7c:	003de106 	br	80c504 <__alt_data_end+0xff80c504>
  80cd80:	8c400414 	ori	r17,r17,16
  80cd84:	d8c02915 	stw	r3,164(sp)
  80cd88:	8880080c 	andi	r2,r17,32
  80cd8c:	10000b26 	beq	r2,zero,80cdbc <___svfprintf_internal_r+0xccc>
  80cd90:	db002d17 	ldw	r12,180(sp)
  80cd94:	0005883a 	mov	r2,zero
  80cd98:	64c00017 	ldw	r19,0(r12)
  80cd9c:	67000117 	ldw	fp,4(r12)
  80cda0:	63000204 	addi	r12,r12,8
  80cda4:	db002d15 	stw	r12,180(sp)
  80cda8:	9f06b03a 	or	r3,r19,fp
  80cdac:	003f1d06 	br	80ca24 <__alt_data_end+0xff80ca24>
  80cdb0:	d8c02915 	stw	r3,164(sp)
  80cdb4:	8880080c 	andi	r2,r17,32
  80cdb8:	103ff51e 	bne	r2,zero,80cd90 <__alt_data_end+0xff80cd90>
  80cdbc:	8880040c 	andi	r2,r17,16
  80cdc0:	1001c81e 	bne	r2,zero,80d4e4 <___svfprintf_internal_r+0x13f4>
  80cdc4:	8880100c 	andi	r2,r17,64
  80cdc8:	1001c626 	beq	r2,zero,80d4e4 <___svfprintf_internal_r+0x13f4>
  80cdcc:	db002d17 	ldw	r12,180(sp)
  80cdd0:	0039883a 	mov	fp,zero
  80cdd4:	0005883a 	mov	r2,zero
  80cdd8:	64c0000b 	ldhu	r19,0(r12)
  80cddc:	63000104 	addi	r12,r12,4
  80cde0:	db002d15 	stw	r12,180(sp)
  80cde4:	9807883a 	mov	r3,r19
  80cde8:	003f0e06 	br	80ca24 <__alt_data_end+0xff80ca24>
  80cdec:	d8c02915 	stw	r3,164(sp)
  80cdf0:	d9802785 	stb	r6,158(sp)
  80cdf4:	803d8026 	beq	r16,zero,80c3f8 <__alt_data_end+0xff80c3f8>
  80cdf8:	02c00044 	movi	r11,1
  80cdfc:	db001404 	addi	r12,sp,80
  80ce00:	dac02a15 	stw	r11,168(sp)
  80ce04:	dc001405 	stb	r16,80(sp)
  80ce08:	d8002785 	stb	zero,158(sp)
  80ce0c:	5825883a 	mov	r18,r11
  80ce10:	d8003215 	stw	zero,200(sp)
  80ce14:	d8003415 	stw	zero,208(sp)
  80ce18:	db003115 	stw	r12,196(sp)
  80ce1c:	0005883a 	mov	r2,zero
  80ce20:	003de606 	br	80c5bc <__alt_data_end+0xff80c5bc>
  80ce24:	d8c02017 	ldw	r3,128(sp)
  80ce28:	003e2706 	br	80c6c8 <__alt_data_end+0xff80c6c8>
  80ce2c:	10803fcc 	andi	r2,r2,255
  80ce30:	00c00044 	movi	r3,1
  80ce34:	10fdbb1e 	bne	r2,r3,80c524 <__alt_data_end+0xff80c524>
  80ce38:	e000021e 	bne	fp,zero,80ce44 <___svfprintf_internal_r+0xd54>
  80ce3c:	00800244 	movi	r2,9
  80ce40:	14c01f2e 	bgeu	r2,r19,80cec0 <___svfprintf_internal_r+0xdd0>
  80ce44:	dc002a15 	stw	r16,168(sp)
  80ce48:	dc402b15 	stw	r17,172(sp)
  80ce4c:	9821883a 	mov	r16,r19
  80ce50:	e023883a 	mov	r17,fp
  80ce54:	b025883a 	mov	r18,r22
  80ce58:	4827883a 	mov	r19,r9
  80ce5c:	4039883a 	mov	fp,r8
  80ce60:	8009883a 	mov	r4,r16
  80ce64:	880b883a 	mov	r5,r17
  80ce68:	01800284 	movi	r6,10
  80ce6c:	000f883a 	mov	r7,zero
  80ce70:	08170a40 	call	8170a4 <__umoddi3>
  80ce74:	10800c04 	addi	r2,r2,48
  80ce78:	94bfffc4 	addi	r18,r18,-1
  80ce7c:	8009883a 	mov	r4,r16
  80ce80:	880b883a 	mov	r5,r17
  80ce84:	01800284 	movi	r6,10
  80ce88:	000f883a 	mov	r7,zero
  80ce8c:	90800005 	stb	r2,0(r18)
  80ce90:	0816ae40 	call	816ae4 <__udivdi3>
  80ce94:	1021883a 	mov	r16,r2
  80ce98:	10c4b03a 	or	r2,r2,r3
  80ce9c:	1823883a 	mov	r17,r3
  80cea0:	103fef1e 	bne	r2,zero,80ce60 <__alt_data_end+0xff80ce60>
  80cea4:	dc803115 	stw	r18,196(sp)
  80cea8:	dc002a17 	ldw	r16,168(sp)
  80ceac:	dc402b17 	ldw	r17,172(sp)
  80ceb0:	9813883a 	mov	r9,r19
  80ceb4:	e011883a 	mov	r8,fp
  80ceb8:	b4a5c83a 	sub	r18,r22,r18
  80cebc:	003db306 	br	80c58c <__alt_data_end+0xff80c58c>
  80cec0:	9cc00c04 	addi	r19,r19,48
  80cec4:	db001dc4 	addi	r12,sp,119
  80cec8:	dcc01dc5 	stb	r19,119(sp)
  80cecc:	dc803d17 	ldw	r18,244(sp)
  80ced0:	db003115 	stw	r12,196(sp)
  80ced4:	003dad06 	br	80c58c <__alt_data_end+0xff80c58c>
  80ced8:	00801944 	movi	r2,101
  80cedc:	14008d0e 	bge	r2,r16,80d114 <___svfprintf_internal_r+0x1024>
  80cee0:	d9003717 	ldw	r4,220(sp)
  80cee4:	d9403817 	ldw	r5,224(sp)
  80cee8:	000d883a 	mov	r6,zero
  80ceec:	000f883a 	mov	r7,zero
  80cef0:	d8c03e15 	stw	r3,248(sp)
  80cef4:	da004015 	stw	r8,256(sp)
  80cef8:	081879c0 	call	81879c <__eqdf2>
  80cefc:	d8c03e17 	ldw	r3,248(sp)
  80cf00:	da004017 	ldw	r8,256(sp)
  80cf04:	1000fd1e 	bne	r2,zero,80d2fc <___svfprintf_internal_r+0x120c>
  80cf08:	d8801f17 	ldw	r2,124(sp)
  80cf0c:	010020b4 	movhi	r4,130
  80cf10:	21390b04 	addi	r4,r4,-7124
  80cf14:	18c00044 	addi	r3,r3,1
  80cf18:	10800044 	addi	r2,r2,1
  80cf1c:	41000015 	stw	r4,0(r8)
  80cf20:	01000044 	movi	r4,1
  80cf24:	41000115 	stw	r4,4(r8)
  80cf28:	d8c02015 	stw	r3,128(sp)
  80cf2c:	d8801f15 	stw	r2,124(sp)
  80cf30:	010001c4 	movi	r4,7
  80cf34:	20823316 	blt	r4,r2,80d804 <___svfprintf_internal_r+0x1714>
  80cf38:	42000204 	addi	r8,r8,8
  80cf3c:	d8802617 	ldw	r2,152(sp)
  80cf40:	dac03317 	ldw	r11,204(sp)
  80cf44:	12c00216 	blt	r2,r11,80cf50 <___svfprintf_internal_r+0xe60>
  80cf48:	8880004c 	andi	r2,r17,1
  80cf4c:	103e3d26 	beq	r2,zero,80c844 <__alt_data_end+0xff80c844>
  80cf50:	db003917 	ldw	r12,228(sp)
  80cf54:	d8801f17 	ldw	r2,124(sp)
  80cf58:	dac03517 	ldw	r11,212(sp)
  80cf5c:	1b07883a 	add	r3,r3,r12
  80cf60:	10800044 	addi	r2,r2,1
  80cf64:	42c00015 	stw	r11,0(r8)
  80cf68:	43000115 	stw	r12,4(r8)
  80cf6c:	d8c02015 	stw	r3,128(sp)
  80cf70:	d8801f15 	stw	r2,124(sp)
  80cf74:	010001c4 	movi	r4,7
  80cf78:	20826f16 	blt	r4,r2,80d938 <___svfprintf_internal_r+0x1848>
  80cf7c:	42000204 	addi	r8,r8,8
  80cf80:	db003317 	ldw	r12,204(sp)
  80cf84:	643fffc4 	addi	r16,r12,-1
  80cf88:	043e2e0e 	bge	zero,r16,80c844 <__alt_data_end+0xff80c844>
  80cf8c:	04800404 	movi	r18,16
  80cf90:	d8801f17 	ldw	r2,124(sp)
  80cf94:	9400a00e 	bge	r18,r16,80d218 <___svfprintf_internal_r+0x1128>
  80cf98:	014020b4 	movhi	r5,130
  80cf9c:	29790b84 	addi	r5,r5,-7122
  80cfa0:	d9402b15 	stw	r5,172(sp)
  80cfa4:	054001c4 	movi	r21,7
  80cfa8:	dcc02f17 	ldw	r19,188(sp)
  80cfac:	00000306 	br	80cfbc <___svfprintf_internal_r+0xecc>
  80cfb0:	42000204 	addi	r8,r8,8
  80cfb4:	843ffc04 	addi	r16,r16,-16
  80cfb8:	94009a0e 	bge	r18,r16,80d224 <___svfprintf_internal_r+0x1134>
  80cfbc:	18c00404 	addi	r3,r3,16
  80cfc0:	10800044 	addi	r2,r2,1
  80cfc4:	45000015 	stw	r20,0(r8)
  80cfc8:	44800115 	stw	r18,4(r8)
  80cfcc:	d8c02015 	stw	r3,128(sp)
  80cfd0:	d8801f15 	stw	r2,124(sp)
  80cfd4:	a8bff60e 	bge	r21,r2,80cfb0 <__alt_data_end+0xff80cfb0>
  80cfd8:	9809883a 	mov	r4,r19
  80cfdc:	b80b883a 	mov	r5,r23
  80cfe0:	b00d883a 	mov	r6,r22
  80cfe4:	0813e3c0 	call	813e3c <__ssprint_r>
  80cfe8:	103d091e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80cfec:	d8c02017 	ldw	r3,128(sp)
  80cff0:	d8801f17 	ldw	r2,124(sp)
  80cff4:	da000404 	addi	r8,sp,16
  80cff8:	003fee06 	br	80cfb4 <__alt_data_end+0xff80cfb4>
  80cffc:	dac02e17 	ldw	r11,184(sp)
  80d000:	db002a17 	ldw	r12,168(sp)
  80d004:	5b2bc83a 	sub	r21,r11,r12
  80d008:	057dcd0e 	bge	zero,r21,80c740 <__alt_data_end+0xff80c740>
  80d00c:	07000404 	movi	fp,16
  80d010:	d8801f17 	ldw	r2,124(sp)
  80d014:	e5435d0e 	bge	fp,r21,80dd8c <___svfprintf_internal_r+0x1c9c>
  80d018:	014020b4 	movhi	r5,130
  80d01c:	a809883a 	mov	r4,r21
  80d020:	29790b84 	addi	r5,r5,-7122
  80d024:	dc002c15 	stw	r16,176(sp)
  80d028:	902b883a 	mov	r21,r18
  80d02c:	d9402b15 	stw	r5,172(sp)
  80d030:	8825883a 	mov	r18,r17
  80d034:	04c001c4 	movi	r19,7
  80d038:	dc002f17 	ldw	r16,188(sp)
  80d03c:	2023883a 	mov	r17,r4
  80d040:	00000306 	br	80d050 <___svfprintf_internal_r+0xf60>
  80d044:	8c7ffc04 	addi	r17,r17,-16
  80d048:	42000204 	addi	r8,r8,8
  80d04c:	e440110e 	bge	fp,r17,80d094 <___svfprintf_internal_r+0xfa4>
  80d050:	18c00404 	addi	r3,r3,16
  80d054:	10800044 	addi	r2,r2,1
  80d058:	45000015 	stw	r20,0(r8)
  80d05c:	47000115 	stw	fp,4(r8)
  80d060:	d8c02015 	stw	r3,128(sp)
  80d064:	d8801f15 	stw	r2,124(sp)
  80d068:	98bff60e 	bge	r19,r2,80d044 <__alt_data_end+0xff80d044>
  80d06c:	8009883a 	mov	r4,r16
  80d070:	b80b883a 	mov	r5,r23
  80d074:	b00d883a 	mov	r6,r22
  80d078:	0813e3c0 	call	813e3c <__ssprint_r>
  80d07c:	103ce41e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d080:	8c7ffc04 	addi	r17,r17,-16
  80d084:	d8c02017 	ldw	r3,128(sp)
  80d088:	d8801f17 	ldw	r2,124(sp)
  80d08c:	da000404 	addi	r8,sp,16
  80d090:	e47fef16 	blt	fp,r17,80d050 <__alt_data_end+0xff80d050>
  80d094:	dc002c17 	ldw	r16,176(sp)
  80d098:	8809883a 	mov	r4,r17
  80d09c:	9023883a 	mov	r17,r18
  80d0a0:	a825883a 	mov	r18,r21
  80d0a4:	202b883a 	mov	r21,r4
  80d0a8:	dac02b17 	ldw	r11,172(sp)
  80d0ac:	1d47883a 	add	r3,r3,r21
  80d0b0:	10800044 	addi	r2,r2,1
  80d0b4:	42c00015 	stw	r11,0(r8)
  80d0b8:	45400115 	stw	r21,4(r8)
  80d0bc:	d8c02015 	stw	r3,128(sp)
  80d0c0:	d8801f15 	stw	r2,124(sp)
  80d0c4:	010001c4 	movi	r4,7
  80d0c8:	20818016 	blt	r4,r2,80d6cc <___svfprintf_internal_r+0x15dc>
  80d0cc:	42000204 	addi	r8,r8,8
  80d0d0:	003d9b06 	br	80c740 <__alt_data_end+0xff80c740>
  80d0d4:	d9403b17 	ldw	r5,236(sp)
  80d0d8:	b007883a 	mov	r3,r22
  80d0dc:	988003cc 	andi	r2,r19,15
  80d0e0:	e008973a 	slli	r4,fp,28
  80d0e4:	2885883a 	add	r2,r5,r2
  80d0e8:	9826d13a 	srli	r19,r19,4
  80d0ec:	10800003 	ldbu	r2,0(r2)
  80d0f0:	e038d13a 	srli	fp,fp,4
  80d0f4:	18ffffc4 	addi	r3,r3,-1
  80d0f8:	24e6b03a 	or	r19,r4,r19
  80d0fc:	18800005 	stb	r2,0(r3)
  80d100:	9f04b03a 	or	r2,r19,fp
  80d104:	103ff51e 	bne	r2,zero,80d0dc <__alt_data_end+0xff80d0dc>
  80d108:	d8c03115 	stw	r3,196(sp)
  80d10c:	b0e5c83a 	sub	r18,r22,r3
  80d110:	003d1e06 	br	80c58c <__alt_data_end+0xff80c58c>
  80d114:	db003317 	ldw	r12,204(sp)
  80d118:	00800044 	movi	r2,1
  80d11c:	18c00044 	addi	r3,r3,1
  80d120:	13014b0e 	bge	r2,r12,80d650 <___svfprintf_internal_r+0x1560>
  80d124:	dc001f17 	ldw	r16,124(sp)
  80d128:	dac03117 	ldw	r11,196(sp)
  80d12c:	00800044 	movi	r2,1
  80d130:	84000044 	addi	r16,r16,1
  80d134:	40800115 	stw	r2,4(r8)
  80d138:	42c00015 	stw	r11,0(r8)
  80d13c:	d8c02015 	stw	r3,128(sp)
  80d140:	dc001f15 	stw	r16,124(sp)
  80d144:	008001c4 	movi	r2,7
  80d148:	14014e16 	blt	r2,r16,80d684 <___svfprintf_internal_r+0x1594>
  80d14c:	42000204 	addi	r8,r8,8
  80d150:	db003917 	ldw	r12,228(sp)
  80d154:	dac03517 	ldw	r11,212(sp)
  80d158:	84000044 	addi	r16,r16,1
  80d15c:	1b07883a 	add	r3,r3,r12
  80d160:	42c00015 	stw	r11,0(r8)
  80d164:	43000115 	stw	r12,4(r8)
  80d168:	d8c02015 	stw	r3,128(sp)
  80d16c:	dc001f15 	stw	r16,124(sp)
  80d170:	008001c4 	movi	r2,7
  80d174:	14014c16 	blt	r2,r16,80d6a8 <___svfprintf_internal_r+0x15b8>
  80d178:	44800204 	addi	r18,r8,8
  80d17c:	d9003717 	ldw	r4,220(sp)
  80d180:	d9403817 	ldw	r5,224(sp)
  80d184:	000d883a 	mov	r6,zero
  80d188:	000f883a 	mov	r7,zero
  80d18c:	d8c03e15 	stw	r3,248(sp)
  80d190:	081879c0 	call	81879c <__eqdf2>
  80d194:	d8c03e17 	ldw	r3,248(sp)
  80d198:	db003317 	ldw	r12,204(sp)
  80d19c:	10009526 	beq	r2,zero,80d3f4 <___svfprintf_internal_r+0x1304>
  80d1a0:	dac03117 	ldw	r11,196(sp)
  80d1a4:	60bfffc4 	addi	r2,r12,-1
  80d1a8:	1887883a 	add	r3,r3,r2
  80d1ac:	59000044 	addi	r4,r11,1
  80d1b0:	84000044 	addi	r16,r16,1
  80d1b4:	90800115 	stw	r2,4(r18)
  80d1b8:	91000015 	stw	r4,0(r18)
  80d1bc:	d8c02015 	stw	r3,128(sp)
  80d1c0:	dc001f15 	stw	r16,124(sp)
  80d1c4:	008001c4 	movi	r2,7
  80d1c8:	1400b316 	blt	r2,r16,80d498 <___svfprintf_internal_r+0x13a8>
  80d1cc:	94800204 	addi	r18,r18,8
  80d1d0:	dac03a17 	ldw	r11,232(sp)
  80d1d4:	dd4022c4 	addi	r21,sp,139
  80d1d8:	84000044 	addi	r16,r16,1
  80d1dc:	1ac7883a 	add	r3,r3,r11
  80d1e0:	95400015 	stw	r21,0(r18)
  80d1e4:	92c00115 	stw	r11,4(r18)
  80d1e8:	d8c02015 	stw	r3,128(sp)
  80d1ec:	dc001f15 	stw	r16,124(sp)
  80d1f0:	008001c4 	movi	r2,7
  80d1f4:	14001416 	blt	r2,r16,80d248 <___svfprintf_internal_r+0x1158>
  80d1f8:	92000204 	addi	r8,r18,8
  80d1fc:	003d9106 	br	80c844 <__alt_data_end+0xff80c844>
  80d200:	d9002f17 	ldw	r4,188(sp)
  80d204:	b80b883a 	mov	r5,r23
  80d208:	b00d883a 	mov	r6,r22
  80d20c:	0813e3c0 	call	813e3c <__ssprint_r>
  80d210:	103dc826 	beq	r2,zero,80c934 <__alt_data_end+0xff80c934>
  80d214:	003c7e06 	br	80c410 <__alt_data_end+0xff80c410>
  80d218:	010020b4 	movhi	r4,130
  80d21c:	21390b84 	addi	r4,r4,-7122
  80d220:	d9002b15 	stw	r4,172(sp)
  80d224:	dac02b17 	ldw	r11,172(sp)
  80d228:	1c07883a 	add	r3,r3,r16
  80d22c:	44000115 	stw	r16,4(r8)
  80d230:	42c00015 	stw	r11,0(r8)
  80d234:	10800044 	addi	r2,r2,1
  80d238:	d8c02015 	stw	r3,128(sp)
  80d23c:	d8801f15 	stw	r2,124(sp)
  80d240:	010001c4 	movi	r4,7
  80d244:	20bd7e0e 	bge	r4,r2,80c840 <__alt_data_end+0xff80c840>
  80d248:	d9002f17 	ldw	r4,188(sp)
  80d24c:	b80b883a 	mov	r5,r23
  80d250:	b00d883a 	mov	r6,r22
  80d254:	0813e3c0 	call	813e3c <__ssprint_r>
  80d258:	103c6d1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d25c:	d8c02017 	ldw	r3,128(sp)
  80d260:	da000404 	addi	r8,sp,16
  80d264:	003d7706 	br	80c844 <__alt_data_end+0xff80c844>
  80d268:	10803fcc 	andi	r2,r2,255
  80d26c:	1000201e 	bne	r2,zero,80d2f0 <___svfprintf_internal_r+0x1200>
  80d270:	8880004c 	andi	r2,r17,1
  80d274:	10001e26 	beq	r2,zero,80d2f0 <___svfprintf_internal_r+0x1200>
  80d278:	00800c04 	movi	r2,48
  80d27c:	d8c01dc4 	addi	r3,sp,119
  80d280:	d8801dc5 	stb	r2,119(sp)
  80d284:	dc803d17 	ldw	r18,244(sp)
  80d288:	d8c03115 	stw	r3,196(sp)
  80d28c:	003cbf06 	br	80c58c <__alt_data_end+0xff80c58c>
  80d290:	d9002f17 	ldw	r4,188(sp)
  80d294:	b80b883a 	mov	r5,r23
  80d298:	b00d883a 	mov	r6,r22
  80d29c:	0813e3c0 	call	813e3c <__ssprint_r>
  80d2a0:	103c5b1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d2a4:	d8c02017 	ldw	r3,128(sp)
  80d2a8:	da000404 	addi	r8,sp,16
  80d2ac:	003d5806 	br	80c810 <__alt_data_end+0xff80c810>
  80d2b0:	d9002f17 	ldw	r4,188(sp)
  80d2b4:	b80b883a 	mov	r5,r23
  80d2b8:	b00d883a 	mov	r6,r22
  80d2bc:	0813e3c0 	call	813e3c <__ssprint_r>
  80d2c0:	103c531e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d2c4:	d8c02017 	ldw	r3,128(sp)
  80d2c8:	da000404 	addi	r8,sp,16
  80d2cc:	003d1906 	br	80c734 <__alt_data_end+0xff80c734>
  80d2d0:	d9002f17 	ldw	r4,188(sp)
  80d2d4:	b80b883a 	mov	r5,r23
  80d2d8:	b00d883a 	mov	r6,r22
  80d2dc:	0813e3c0 	call	813e3c <__ssprint_r>
  80d2e0:	103c4b1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d2e4:	d8c02017 	ldw	r3,128(sp)
  80d2e8:	da000404 	addi	r8,sp,16
  80d2ec:	003d0306 	br	80c6fc <__alt_data_end+0xff80c6fc>
  80d2f0:	0025883a 	mov	r18,zero
  80d2f4:	dd803115 	stw	r22,196(sp)
  80d2f8:	003ca406 	br	80c58c <__alt_data_end+0xff80c58c>
  80d2fc:	dc002617 	ldw	r16,152(sp)
  80d300:	0401480e 	bge	zero,r16,80d824 <___svfprintf_internal_r+0x1734>
  80d304:	db003117 	ldw	r12,196(sp)
  80d308:	dac03317 	ldw	r11,204(sp)
  80d30c:	62e1883a 	add	r16,r12,r11
  80d310:	db003417 	ldw	r12,208(sp)
  80d314:	5825883a 	mov	r18,r11
  80d318:	62c0010e 	bge	r12,r11,80d320 <___svfprintf_internal_r+0x1230>
  80d31c:	6025883a 	mov	r18,r12
  80d320:	04800b0e 	bge	zero,r18,80d350 <___svfprintf_internal_r+0x1260>
  80d324:	d8801f17 	ldw	r2,124(sp)
  80d328:	dac03117 	ldw	r11,196(sp)
  80d32c:	1c87883a 	add	r3,r3,r18
  80d330:	10800044 	addi	r2,r2,1
  80d334:	42c00015 	stw	r11,0(r8)
  80d338:	44800115 	stw	r18,4(r8)
  80d33c:	d8c02015 	stw	r3,128(sp)
  80d340:	d8801f15 	stw	r2,124(sp)
  80d344:	010001c4 	movi	r4,7
  80d348:	20823f16 	blt	r4,r2,80dc48 <___svfprintf_internal_r+0x1b58>
  80d34c:	42000204 	addi	r8,r8,8
  80d350:	90023b16 	blt	r18,zero,80dc40 <___svfprintf_internal_r+0x1b50>
  80d354:	db003417 	ldw	r12,208(sp)
  80d358:	64a5c83a 	sub	r18,r12,r18
  80d35c:	0480780e 	bge	zero,r18,80d540 <___svfprintf_internal_r+0x1450>
  80d360:	05400404 	movi	r21,16
  80d364:	d8801f17 	ldw	r2,124(sp)
  80d368:	ac81140e 	bge	r21,r18,80d7bc <___svfprintf_internal_r+0x16cc>
  80d36c:	014020b4 	movhi	r5,130
  80d370:	29790b84 	addi	r5,r5,-7122
  80d374:	d9402b15 	stw	r5,172(sp)
  80d378:	070001c4 	movi	fp,7
  80d37c:	dcc02f17 	ldw	r19,188(sp)
  80d380:	00000306 	br	80d390 <___svfprintf_internal_r+0x12a0>
  80d384:	42000204 	addi	r8,r8,8
  80d388:	94bffc04 	addi	r18,r18,-16
  80d38c:	ac810e0e 	bge	r21,r18,80d7c8 <___svfprintf_internal_r+0x16d8>
  80d390:	18c00404 	addi	r3,r3,16
  80d394:	10800044 	addi	r2,r2,1
  80d398:	45000015 	stw	r20,0(r8)
  80d39c:	45400115 	stw	r21,4(r8)
  80d3a0:	d8c02015 	stw	r3,128(sp)
  80d3a4:	d8801f15 	stw	r2,124(sp)
  80d3a8:	e0bff60e 	bge	fp,r2,80d384 <__alt_data_end+0xff80d384>
  80d3ac:	9809883a 	mov	r4,r19
  80d3b0:	b80b883a 	mov	r5,r23
  80d3b4:	b00d883a 	mov	r6,r22
  80d3b8:	0813e3c0 	call	813e3c <__ssprint_r>
  80d3bc:	103c141e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d3c0:	d8c02017 	ldw	r3,128(sp)
  80d3c4:	d8801f17 	ldw	r2,124(sp)
  80d3c8:	da000404 	addi	r8,sp,16
  80d3cc:	003fee06 	br	80d388 <__alt_data_end+0xff80d388>
  80d3d0:	d9002f17 	ldw	r4,188(sp)
  80d3d4:	b80b883a 	mov	r5,r23
  80d3d8:	b00d883a 	mov	r6,r22
  80d3dc:	0813e3c0 	call	813e3c <__ssprint_r>
  80d3e0:	103c0b1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d3e4:	d8c02017 	ldw	r3,128(sp)
  80d3e8:	d8802787 	ldb	r2,158(sp)
  80d3ec:	da000404 	addi	r8,sp,16
  80d3f0:	003cb506 	br	80c6c8 <__alt_data_end+0xff80c6c8>
  80d3f4:	657fffc4 	addi	r21,r12,-1
  80d3f8:	057f750e 	bge	zero,r21,80d1d0 <__alt_data_end+0xff80d1d0>
  80d3fc:	07000404 	movi	fp,16
  80d400:	e542ed0e 	bge	fp,r21,80dfb8 <___svfprintf_internal_r+0x1ec8>
  80d404:	010020b4 	movhi	r4,130
  80d408:	21390b84 	addi	r4,r4,-7122
  80d40c:	d9002b15 	stw	r4,172(sp)
  80d410:	01c001c4 	movi	r7,7
  80d414:	dcc02f17 	ldw	r19,188(sp)
  80d418:	00000306 	br	80d428 <___svfprintf_internal_r+0x1338>
  80d41c:	ad7ffc04 	addi	r21,r21,-16
  80d420:	94800204 	addi	r18,r18,8
  80d424:	e540130e 	bge	fp,r21,80d474 <___svfprintf_internal_r+0x1384>
  80d428:	18c00404 	addi	r3,r3,16
  80d42c:	84000044 	addi	r16,r16,1
  80d430:	95000015 	stw	r20,0(r18)
  80d434:	97000115 	stw	fp,4(r18)
  80d438:	d8c02015 	stw	r3,128(sp)
  80d43c:	dc001f15 	stw	r16,124(sp)
  80d440:	3c3ff60e 	bge	r7,r16,80d41c <__alt_data_end+0xff80d41c>
  80d444:	9809883a 	mov	r4,r19
  80d448:	b80b883a 	mov	r5,r23
  80d44c:	b00d883a 	mov	r6,r22
  80d450:	d9c03e15 	stw	r7,248(sp)
  80d454:	0813e3c0 	call	813e3c <__ssprint_r>
  80d458:	d9c03e17 	ldw	r7,248(sp)
  80d45c:	103bec1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d460:	ad7ffc04 	addi	r21,r21,-16
  80d464:	d8c02017 	ldw	r3,128(sp)
  80d468:	dc001f17 	ldw	r16,124(sp)
  80d46c:	dc800404 	addi	r18,sp,16
  80d470:	e57fed16 	blt	fp,r21,80d428 <__alt_data_end+0xff80d428>
  80d474:	dac02b17 	ldw	r11,172(sp)
  80d478:	1d47883a 	add	r3,r3,r21
  80d47c:	84000044 	addi	r16,r16,1
  80d480:	92c00015 	stw	r11,0(r18)
  80d484:	95400115 	stw	r21,4(r18)
  80d488:	d8c02015 	stw	r3,128(sp)
  80d48c:	dc001f15 	stw	r16,124(sp)
  80d490:	008001c4 	movi	r2,7
  80d494:	143f4d0e 	bge	r2,r16,80d1cc <__alt_data_end+0xff80d1cc>
  80d498:	d9002f17 	ldw	r4,188(sp)
  80d49c:	b80b883a 	mov	r5,r23
  80d4a0:	b00d883a 	mov	r6,r22
  80d4a4:	0813e3c0 	call	813e3c <__ssprint_r>
  80d4a8:	103bd91e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d4ac:	d8c02017 	ldw	r3,128(sp)
  80d4b0:	dc001f17 	ldw	r16,124(sp)
  80d4b4:	dc800404 	addi	r18,sp,16
  80d4b8:	003f4506 	br	80d1d0 <__alt_data_end+0xff80d1d0>
  80d4bc:	00800084 	movi	r2,2
  80d4c0:	9f06b03a 	or	r3,r19,fp
  80d4c4:	003d5706 	br	80ca24 <__alt_data_end+0xff80ca24>
  80d4c8:	1cc00017 	ldw	r19,0(r3)
  80d4cc:	dac02d17 	ldw	r11,180(sp)
  80d4d0:	9839d7fa 	srai	fp,r19,31
  80d4d4:	5ac00104 	addi	r11,r11,4
  80d4d8:	dac02d15 	stw	r11,180(sp)
  80d4dc:	e005883a 	mov	r2,fp
  80d4e0:	003c0306 	br	80c4f0 <__alt_data_end+0xff80c4f0>
  80d4e4:	dac02d17 	ldw	r11,180(sp)
  80d4e8:	0039883a 	mov	fp,zero
  80d4ec:	0005883a 	mov	r2,zero
  80d4f0:	5cc00017 	ldw	r19,0(r11)
  80d4f4:	5ac00104 	addi	r11,r11,4
  80d4f8:	dac02d15 	stw	r11,180(sp)
  80d4fc:	9807883a 	mov	r3,r19
  80d500:	003d4806 	br	80ca24 <__alt_data_end+0xff80ca24>
  80d504:	db002d17 	ldw	r12,180(sp)
  80d508:	14c00017 	ldw	r19,0(r2)
  80d50c:	0039883a 	mov	fp,zero
  80d510:	63000104 	addi	r12,r12,4
  80d514:	db002d15 	stw	r12,180(sp)
  80d518:	00800044 	movi	r2,1
  80d51c:	9807883a 	mov	r3,r19
  80d520:	003d4006 	br	80ca24 <__alt_data_end+0xff80ca24>
  80d524:	d9002f17 	ldw	r4,188(sp)
  80d528:	b80b883a 	mov	r5,r23
  80d52c:	b00d883a 	mov	r6,r22
  80d530:	0813e3c0 	call	813e3c <__ssprint_r>
  80d534:	103bb61e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d538:	d8c02017 	ldw	r3,128(sp)
  80d53c:	da000404 	addi	r8,sp,16
  80d540:	db003117 	ldw	r12,196(sp)
  80d544:	dac03417 	ldw	r11,208(sp)
  80d548:	d8802617 	ldw	r2,152(sp)
  80d54c:	62e5883a 	add	r18,r12,r11
  80d550:	db003317 	ldw	r12,204(sp)
  80d554:	13000216 	blt	r2,r12,80d560 <___svfprintf_internal_r+0x1470>
  80d558:	8900004c 	andi	r4,r17,1
  80d55c:	20000c26 	beq	r4,zero,80d590 <___svfprintf_internal_r+0x14a0>
  80d560:	dac03917 	ldw	r11,228(sp)
  80d564:	d9001f17 	ldw	r4,124(sp)
  80d568:	db003517 	ldw	r12,212(sp)
  80d56c:	1ac7883a 	add	r3,r3,r11
  80d570:	21000044 	addi	r4,r4,1
  80d574:	43000015 	stw	r12,0(r8)
  80d578:	42c00115 	stw	r11,4(r8)
  80d57c:	d8c02015 	stw	r3,128(sp)
  80d580:	d9001f15 	stw	r4,124(sp)
  80d584:	014001c4 	movi	r5,7
  80d588:	2901b716 	blt	r5,r4,80dc68 <___svfprintf_internal_r+0x1b78>
  80d58c:	42000204 	addi	r8,r8,8
  80d590:	dac03317 	ldw	r11,204(sp)
  80d594:	8489c83a 	sub	r4,r16,r18
  80d598:	5885c83a 	sub	r2,r11,r2
  80d59c:	1021883a 	mov	r16,r2
  80d5a0:	2080010e 	bge	r4,r2,80d5a8 <___svfprintf_internal_r+0x14b8>
  80d5a4:	2021883a 	mov	r16,r4
  80d5a8:	04000a0e 	bge	zero,r16,80d5d4 <___svfprintf_internal_r+0x14e4>
  80d5ac:	d9001f17 	ldw	r4,124(sp)
  80d5b0:	1c07883a 	add	r3,r3,r16
  80d5b4:	44800015 	stw	r18,0(r8)
  80d5b8:	21000044 	addi	r4,r4,1
  80d5bc:	44000115 	stw	r16,4(r8)
  80d5c0:	d8c02015 	stw	r3,128(sp)
  80d5c4:	d9001f15 	stw	r4,124(sp)
  80d5c8:	014001c4 	movi	r5,7
  80d5cc:	2901bf16 	blt	r5,r4,80dccc <___svfprintf_internal_r+0x1bdc>
  80d5d0:	42000204 	addi	r8,r8,8
  80d5d4:	8001bb16 	blt	r16,zero,80dcc4 <___svfprintf_internal_r+0x1bd4>
  80d5d8:	1421c83a 	sub	r16,r2,r16
  80d5dc:	043c990e 	bge	zero,r16,80c844 <__alt_data_end+0xff80c844>
  80d5e0:	04800404 	movi	r18,16
  80d5e4:	d8801f17 	ldw	r2,124(sp)
  80d5e8:	943f0b0e 	bge	r18,r16,80d218 <__alt_data_end+0xff80d218>
  80d5ec:	014020b4 	movhi	r5,130
  80d5f0:	29790b84 	addi	r5,r5,-7122
  80d5f4:	d9402b15 	stw	r5,172(sp)
  80d5f8:	054001c4 	movi	r21,7
  80d5fc:	dcc02f17 	ldw	r19,188(sp)
  80d600:	00000306 	br	80d610 <___svfprintf_internal_r+0x1520>
  80d604:	42000204 	addi	r8,r8,8
  80d608:	843ffc04 	addi	r16,r16,-16
  80d60c:	943f050e 	bge	r18,r16,80d224 <__alt_data_end+0xff80d224>
  80d610:	18c00404 	addi	r3,r3,16
  80d614:	10800044 	addi	r2,r2,1
  80d618:	45000015 	stw	r20,0(r8)
  80d61c:	44800115 	stw	r18,4(r8)
  80d620:	d8c02015 	stw	r3,128(sp)
  80d624:	d8801f15 	stw	r2,124(sp)
  80d628:	a8bff60e 	bge	r21,r2,80d604 <__alt_data_end+0xff80d604>
  80d62c:	9809883a 	mov	r4,r19
  80d630:	b80b883a 	mov	r5,r23
  80d634:	b00d883a 	mov	r6,r22
  80d638:	0813e3c0 	call	813e3c <__ssprint_r>
  80d63c:	103b741e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d640:	d8c02017 	ldw	r3,128(sp)
  80d644:	d8801f17 	ldw	r2,124(sp)
  80d648:	da000404 	addi	r8,sp,16
  80d64c:	003fee06 	br	80d608 <__alt_data_end+0xff80d608>
  80d650:	8888703a 	and	r4,r17,r2
  80d654:	203eb31e 	bne	r4,zero,80d124 <__alt_data_end+0xff80d124>
  80d658:	dc001f17 	ldw	r16,124(sp)
  80d65c:	db003117 	ldw	r12,196(sp)
  80d660:	40800115 	stw	r2,4(r8)
  80d664:	84000044 	addi	r16,r16,1
  80d668:	43000015 	stw	r12,0(r8)
  80d66c:	d8c02015 	stw	r3,128(sp)
  80d670:	dc001f15 	stw	r16,124(sp)
  80d674:	008001c4 	movi	r2,7
  80d678:	143f8716 	blt	r2,r16,80d498 <__alt_data_end+0xff80d498>
  80d67c:	44800204 	addi	r18,r8,8
  80d680:	003ed306 	br	80d1d0 <__alt_data_end+0xff80d1d0>
  80d684:	d9002f17 	ldw	r4,188(sp)
  80d688:	b80b883a 	mov	r5,r23
  80d68c:	b00d883a 	mov	r6,r22
  80d690:	0813e3c0 	call	813e3c <__ssprint_r>
  80d694:	103b5e1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d698:	d8c02017 	ldw	r3,128(sp)
  80d69c:	dc001f17 	ldw	r16,124(sp)
  80d6a0:	da000404 	addi	r8,sp,16
  80d6a4:	003eaa06 	br	80d150 <__alt_data_end+0xff80d150>
  80d6a8:	d9002f17 	ldw	r4,188(sp)
  80d6ac:	b80b883a 	mov	r5,r23
  80d6b0:	b00d883a 	mov	r6,r22
  80d6b4:	0813e3c0 	call	813e3c <__ssprint_r>
  80d6b8:	103b551e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d6bc:	d8c02017 	ldw	r3,128(sp)
  80d6c0:	dc001f17 	ldw	r16,124(sp)
  80d6c4:	dc800404 	addi	r18,sp,16
  80d6c8:	003eac06 	br	80d17c <__alt_data_end+0xff80d17c>
  80d6cc:	d9002f17 	ldw	r4,188(sp)
  80d6d0:	b80b883a 	mov	r5,r23
  80d6d4:	b00d883a 	mov	r6,r22
  80d6d8:	0813e3c0 	call	813e3c <__ssprint_r>
  80d6dc:	103b4c1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d6e0:	d8c02017 	ldw	r3,128(sp)
  80d6e4:	da000404 	addi	r8,sp,16
  80d6e8:	003c1506 	br	80c740 <__alt_data_end+0xff80c740>
  80d6ec:	da004015 	stw	r8,256(sp)
  80d6f0:	da403f15 	stw	r9,252(sp)
  80d6f4:	0813d240 	call	813d24 <__fpclassifyd>
  80d6f8:	da004017 	ldw	r8,256(sp)
  80d6fc:	da403f17 	ldw	r9,252(sp)
  80d700:	1000951e 	bne	r2,zero,80d958 <___svfprintf_internal_r+0x1868>
  80d704:	008011c4 	movi	r2,71
  80d708:	1400fb16 	blt	r2,r16,80daf8 <___svfprintf_internal_r+0x1a08>
  80d70c:	030020b4 	movhi	r12,130
  80d710:	6338fd04 	addi	r12,r12,-7180
  80d714:	db003115 	stw	r12,196(sp)
  80d718:	00c000c4 	movi	r3,3
  80d71c:	00bfdfc4 	movi	r2,-129
  80d720:	d8c02a15 	stw	r3,168(sp)
  80d724:	88a2703a 	and	r17,r17,r2
  80d728:	dd402783 	ldbu	r21,158(sp)
  80d72c:	dcc02d15 	stw	r19,180(sp)
  80d730:	1825883a 	mov	r18,r3
  80d734:	d8003215 	stw	zero,200(sp)
  80d738:	d8003415 	stw	zero,208(sp)
  80d73c:	003b9806 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80d740:	1c000007 	ldb	r16,0(r3)
  80d744:	1805883a 	mov	r2,r3
  80d748:	003abf06 	br	80c248 <__alt_data_end+0xff80c248>
  80d74c:	00800084 	movi	r2,2
  80d750:	003cb406 	br	80ca24 <__alt_data_end+0xff80ca24>
  80d754:	88c0100c 	andi	r3,r17,64
  80d758:	1800f626 	beq	r3,zero,80db34 <___svfprintf_internal_r+0x1a44>
  80d75c:	dac02d17 	ldw	r11,180(sp)
  80d760:	14c0000b 	ldhu	r19,0(r2)
  80d764:	0039883a 	mov	fp,zero
  80d768:	5ac00104 	addi	r11,r11,4
  80d76c:	dac02d15 	stw	r11,180(sp)
  80d770:	003cbd06 	br	80ca68 <__alt_data_end+0xff80ca68>
  80d774:	8880040c 	andi	r2,r17,16
  80d778:	1000091e 	bne	r2,zero,80d7a0 <___svfprintf_internal_r+0x16b0>
  80d77c:	8c40100c 	andi	r17,r17,64
  80d780:	88000726 	beq	r17,zero,80d7a0 <___svfprintf_internal_r+0x16b0>
  80d784:	db002d17 	ldw	r12,180(sp)
  80d788:	dac03017 	ldw	r11,192(sp)
  80d78c:	60800017 	ldw	r2,0(r12)
  80d790:	63000104 	addi	r12,r12,4
  80d794:	db002d15 	stw	r12,180(sp)
  80d798:	12c0000d 	sth	r11,0(r2)
  80d79c:	003a8006 	br	80c1a0 <__alt_data_end+0xff80c1a0>
  80d7a0:	db002d17 	ldw	r12,180(sp)
  80d7a4:	dac03017 	ldw	r11,192(sp)
  80d7a8:	60800017 	ldw	r2,0(r12)
  80d7ac:	63000104 	addi	r12,r12,4
  80d7b0:	db002d15 	stw	r12,180(sp)
  80d7b4:	12c00015 	stw	r11,0(r2)
  80d7b8:	003a7906 	br	80c1a0 <__alt_data_end+0xff80c1a0>
  80d7bc:	010020b4 	movhi	r4,130
  80d7c0:	21390b84 	addi	r4,r4,-7122
  80d7c4:	d9002b15 	stw	r4,172(sp)
  80d7c8:	dac02b17 	ldw	r11,172(sp)
  80d7cc:	1c87883a 	add	r3,r3,r18
  80d7d0:	10800044 	addi	r2,r2,1
  80d7d4:	42c00015 	stw	r11,0(r8)
  80d7d8:	44800115 	stw	r18,4(r8)
  80d7dc:	d8c02015 	stw	r3,128(sp)
  80d7e0:	d8801f15 	stw	r2,124(sp)
  80d7e4:	010001c4 	movi	r4,7
  80d7e8:	20bf4e16 	blt	r4,r2,80d524 <__alt_data_end+0xff80d524>
  80d7ec:	42000204 	addi	r8,r8,8
  80d7f0:	003f5306 	br	80d540 <__alt_data_end+0xff80d540>
  80d7f4:	010020b4 	movhi	r4,130
  80d7f8:	21390b84 	addi	r4,r4,-7122
  80d7fc:	d9002b15 	stw	r4,172(sp)
  80d800:	003bf906 	br	80c7e8 <__alt_data_end+0xff80c7e8>
  80d804:	d9002f17 	ldw	r4,188(sp)
  80d808:	b80b883a 	mov	r5,r23
  80d80c:	b00d883a 	mov	r6,r22
  80d810:	0813e3c0 	call	813e3c <__ssprint_r>
  80d814:	103afe1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d818:	d8c02017 	ldw	r3,128(sp)
  80d81c:	da000404 	addi	r8,sp,16
  80d820:	003dc606 	br	80cf3c <__alt_data_end+0xff80cf3c>
  80d824:	d8801f17 	ldw	r2,124(sp)
  80d828:	030020b4 	movhi	r12,130
  80d82c:	01000044 	movi	r4,1
  80d830:	18c00044 	addi	r3,r3,1
  80d834:	10800044 	addi	r2,r2,1
  80d838:	63390b04 	addi	r12,r12,-7124
  80d83c:	41000115 	stw	r4,4(r8)
  80d840:	43000015 	stw	r12,0(r8)
  80d844:	d8c02015 	stw	r3,128(sp)
  80d848:	d8801f15 	stw	r2,124(sp)
  80d84c:	010001c4 	movi	r4,7
  80d850:	2080ad16 	blt	r4,r2,80db08 <___svfprintf_internal_r+0x1a18>
  80d854:	42000204 	addi	r8,r8,8
  80d858:	8000041e 	bne	r16,zero,80d86c <___svfprintf_internal_r+0x177c>
  80d85c:	dac03317 	ldw	r11,204(sp)
  80d860:	5800021e 	bne	r11,zero,80d86c <___svfprintf_internal_r+0x177c>
  80d864:	8880004c 	andi	r2,r17,1
  80d868:	103bf626 	beq	r2,zero,80c844 <__alt_data_end+0xff80c844>
  80d86c:	db003917 	ldw	r12,228(sp)
  80d870:	d8801f17 	ldw	r2,124(sp)
  80d874:	dac03517 	ldw	r11,212(sp)
  80d878:	1b07883a 	add	r3,r3,r12
  80d87c:	10800044 	addi	r2,r2,1
  80d880:	42c00015 	stw	r11,0(r8)
  80d884:	43000115 	stw	r12,4(r8)
  80d888:	d8c02015 	stw	r3,128(sp)
  80d88c:	d8801f15 	stw	r2,124(sp)
  80d890:	010001c4 	movi	r4,7
  80d894:	20818616 	blt	r4,r2,80deb0 <___svfprintf_internal_r+0x1dc0>
  80d898:	42000204 	addi	r8,r8,8
  80d89c:	0421c83a 	sub	r16,zero,r16
  80d8a0:	0400bc0e 	bge	zero,r16,80db94 <___svfprintf_internal_r+0x1aa4>
  80d8a4:	04800404 	movi	r18,16
  80d8a8:	9400f80e 	bge	r18,r16,80dc8c <___svfprintf_internal_r+0x1b9c>
  80d8ac:	010020b4 	movhi	r4,130
  80d8b0:	21390b84 	addi	r4,r4,-7122
  80d8b4:	d9002b15 	stw	r4,172(sp)
  80d8b8:	054001c4 	movi	r21,7
  80d8bc:	dcc02f17 	ldw	r19,188(sp)
  80d8c0:	00000306 	br	80d8d0 <___svfprintf_internal_r+0x17e0>
  80d8c4:	42000204 	addi	r8,r8,8
  80d8c8:	843ffc04 	addi	r16,r16,-16
  80d8cc:	9400f20e 	bge	r18,r16,80dc98 <___svfprintf_internal_r+0x1ba8>
  80d8d0:	18c00404 	addi	r3,r3,16
  80d8d4:	10800044 	addi	r2,r2,1
  80d8d8:	45000015 	stw	r20,0(r8)
  80d8dc:	44800115 	stw	r18,4(r8)
  80d8e0:	d8c02015 	stw	r3,128(sp)
  80d8e4:	d8801f15 	stw	r2,124(sp)
  80d8e8:	a8bff60e 	bge	r21,r2,80d8c4 <__alt_data_end+0xff80d8c4>
  80d8ec:	9809883a 	mov	r4,r19
  80d8f0:	b80b883a 	mov	r5,r23
  80d8f4:	b00d883a 	mov	r6,r22
  80d8f8:	0813e3c0 	call	813e3c <__ssprint_r>
  80d8fc:	103ac41e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d900:	d8c02017 	ldw	r3,128(sp)
  80d904:	d8801f17 	ldw	r2,124(sp)
  80d908:	da000404 	addi	r8,sp,16
  80d90c:	003fee06 	br	80d8c8 <__alt_data_end+0xff80d8c8>
  80d910:	db002e17 	ldw	r12,184(sp)
  80d914:	1805883a 	mov	r2,r3
  80d918:	dac02d15 	stw	r11,180(sp)
  80d91c:	0319c83a 	sub	r12,zero,r12
  80d920:	db002e15 	stw	r12,184(sp)
  80d924:	003acf06 	br	80c464 <__alt_data_end+0xff80c464>
  80d928:	18800044 	addi	r2,r3,1
  80d92c:	8c400814 	ori	r17,r17,32
  80d930:	1c000047 	ldb	r16,1(r3)
  80d934:	003a4406 	br	80c248 <__alt_data_end+0xff80c248>
  80d938:	d9002f17 	ldw	r4,188(sp)
  80d93c:	b80b883a 	mov	r5,r23
  80d940:	b00d883a 	mov	r6,r22
  80d944:	0813e3c0 	call	813e3c <__ssprint_r>
  80d948:	103ab11e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80d94c:	d8c02017 	ldw	r3,128(sp)
  80d950:	da000404 	addi	r8,sp,16
  80d954:	003d8a06 	br	80cf80 <__alt_data_end+0xff80cf80>
  80d958:	057ff7c4 	movi	r21,-33
  80d95c:	00bfffc4 	movi	r2,-1
  80d960:	856a703a 	and	r21,r16,r21
  80d964:	48807126 	beq	r9,r2,80db2c <___svfprintf_internal_r+0x1a3c>
  80d968:	008011c4 	movi	r2,71
  80d96c:	a8814d26 	beq	r21,r2,80dea4 <___svfprintf_internal_r+0x1db4>
  80d970:	db003817 	ldw	r12,224(sp)
  80d974:	8ac04014 	ori	r11,r17,256
  80d978:	dac02d15 	stw	r11,180(sp)
  80d97c:	60015616 	blt	r12,zero,80ded8 <___svfprintf_internal_r+0x1de8>
  80d980:	dc803817 	ldw	r18,224(sp)
  80d984:	d8002a05 	stb	zero,168(sp)
  80d988:	00801984 	movi	r2,102
  80d98c:	80808c26 	beq	r16,r2,80dbc0 <___svfprintf_internal_r+0x1ad0>
  80d990:	00801184 	movi	r2,70
  80d994:	80808a26 	beq	r16,r2,80dbc0 <___svfprintf_internal_r+0x1ad0>
  80d998:	00801144 	movi	r2,69
  80d99c:	a8815226 	beq	r21,r2,80dee8 <___svfprintf_internal_r+0x1df8>
  80d9a0:	4839883a 	mov	fp,r9
  80d9a4:	d8802604 	addi	r2,sp,152
  80d9a8:	d8800115 	stw	r2,4(sp)
  80d9ac:	d9002f17 	ldw	r4,188(sp)
  80d9b0:	d8802504 	addi	r2,sp,148
  80d9b4:	d9403717 	ldw	r5,220(sp)
  80d9b8:	d8800215 	stw	r2,8(sp)
  80d9bc:	d8802104 	addi	r2,sp,132
  80d9c0:	df000015 	stw	fp,0(sp)
  80d9c4:	d8800315 	stw	r2,12(sp)
  80d9c8:	900d883a 	mov	r6,r18
  80d9cc:	01c00084 	movi	r7,2
  80d9d0:	da004015 	stw	r8,256(sp)
  80d9d4:	da403f15 	stw	r9,252(sp)
  80d9d8:	08104b40 	call	8104b4 <_dtoa_r>
  80d9dc:	d8803115 	stw	r2,196(sp)
  80d9e0:	008019c4 	movi	r2,103
  80d9e4:	da004017 	ldw	r8,256(sp)
  80d9e8:	da403f17 	ldw	r9,252(sp)
  80d9ec:	80800226 	beq	r16,r2,80d9f8 <___svfprintf_internal_r+0x1908>
  80d9f0:	008011c4 	movi	r2,71
  80d9f4:	8080841e 	bne	r16,r2,80dc08 <___svfprintf_internal_r+0x1b18>
  80d9f8:	8880004c 	andi	r2,r17,1
  80d9fc:	10014f26 	beq	r2,zero,80df3c <___svfprintf_internal_r+0x1e4c>
  80da00:	db003117 	ldw	r12,196(sp)
  80da04:	6715883a 	add	r10,r12,fp
  80da08:	d9003717 	ldw	r4,220(sp)
  80da0c:	900b883a 	mov	r5,r18
  80da10:	000d883a 	mov	r6,zero
  80da14:	000f883a 	mov	r7,zero
  80da18:	da004015 	stw	r8,256(sp)
  80da1c:	da403f15 	stw	r9,252(sp)
  80da20:	da803e15 	stw	r10,248(sp)
  80da24:	081879c0 	call	81879c <__eqdf2>
  80da28:	da004017 	ldw	r8,256(sp)
  80da2c:	da403f17 	ldw	r9,252(sp)
  80da30:	da803e17 	ldw	r10,248(sp)
  80da34:	1000d926 	beq	r2,zero,80dd9c <___svfprintf_internal_r+0x1cac>
  80da38:	d8802117 	ldw	r2,132(sp)
  80da3c:	1280062e 	bgeu	r2,r10,80da58 <___svfprintf_internal_r+0x1968>
  80da40:	01000c04 	movi	r4,48
  80da44:	10c00044 	addi	r3,r2,1
  80da48:	d8c02115 	stw	r3,132(sp)
  80da4c:	11000005 	stb	r4,0(r2)
  80da50:	d8802117 	ldw	r2,132(sp)
  80da54:	12bffb36 	bltu	r2,r10,80da44 <__alt_data_end+0xff80da44>
  80da58:	db003117 	ldw	r12,196(sp)
  80da5c:	1305c83a 	sub	r2,r2,r12
  80da60:	d8803315 	stw	r2,204(sp)
  80da64:	008011c4 	movi	r2,71
  80da68:	a880b626 	beq	r21,r2,80dd44 <___svfprintf_internal_r+0x1c54>
  80da6c:	00801944 	movi	r2,101
  80da70:	14017c0e 	bge	r2,r16,80e064 <___svfprintf_internal_r+0x1f74>
  80da74:	00801984 	movi	r2,102
  80da78:	80812626 	beq	r16,r2,80df14 <___svfprintf_internal_r+0x1e24>
  80da7c:	db002617 	ldw	r12,152(sp)
  80da80:	db003415 	stw	r12,208(sp)
  80da84:	db003417 	ldw	r12,208(sp)
  80da88:	dac03317 	ldw	r11,204(sp)
  80da8c:	62c11816 	blt	r12,r11,80def0 <___svfprintf_internal_r+0x1e00>
  80da90:	8c40004c 	andi	r17,r17,1
  80da94:	88013b1e 	bne	r17,zero,80df84 <___svfprintf_internal_r+0x1e94>
  80da98:	6005883a 	mov	r2,r12
  80da9c:	60012516 	blt	r12,zero,80df34 <___svfprintf_internal_r+0x1e44>
  80daa0:	dc803417 	ldw	r18,208(sp)
  80daa4:	df002a07 	ldb	fp,168(sp)
  80daa8:	e000b01e 	bne	fp,zero,80dd6c <___svfprintf_internal_r+0x1c7c>
  80daac:	dc402d17 	ldw	r17,180(sp)
  80dab0:	dd402783 	ldbu	r21,158(sp)
  80dab4:	d8802a15 	stw	r2,168(sp)
  80dab8:	dcc02d15 	stw	r19,180(sp)
  80dabc:	d8003215 	stw	zero,200(sp)
  80dac0:	003ab706 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80dac4:	008020b4 	movhi	r2,130
  80dac8:	10b8fb04 	addi	r2,r2,-7188
  80dacc:	d8803115 	stw	r2,196(sp)
  80dad0:	003bbb06 	br	80c9c0 <__alt_data_end+0xff80c9c0>
  80dad4:	d9002f17 	ldw	r4,188(sp)
  80dad8:	04001004 	movi	r16,64
  80dadc:	800b883a 	mov	r5,r16
  80dae0:	080b0900 	call	80b090 <_malloc_r>
  80dae4:	b8800015 	stw	r2,0(r23)
  80dae8:	b8800415 	stw	r2,16(r23)
  80daec:	10015f26 	beq	r2,zero,80e06c <___svfprintf_internal_r+0x1f7c>
  80daf0:	bc000515 	stw	r16,20(r23)
  80daf4:	00399806 	br	80c158 <__alt_data_end+0xff80c158>
  80daf8:	008020b4 	movhi	r2,130
  80dafc:	10b8fe04 	addi	r2,r2,-7176
  80db00:	d8803115 	stw	r2,196(sp)
  80db04:	003f0406 	br	80d718 <__alt_data_end+0xff80d718>
  80db08:	d9002f17 	ldw	r4,188(sp)
  80db0c:	b80b883a 	mov	r5,r23
  80db10:	b00d883a 	mov	r6,r22
  80db14:	0813e3c0 	call	813e3c <__ssprint_r>
  80db18:	103a3d1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80db1c:	dc002617 	ldw	r16,152(sp)
  80db20:	d8c02017 	ldw	r3,128(sp)
  80db24:	da000404 	addi	r8,sp,16
  80db28:	003f4b06 	br	80d858 <__alt_data_end+0xff80d858>
  80db2c:	02400184 	movi	r9,6
  80db30:	003f8f06 	br	80d970 <__alt_data_end+0xff80d970>
  80db34:	db002d17 	ldw	r12,180(sp)
  80db38:	14c00017 	ldw	r19,0(r2)
  80db3c:	0039883a 	mov	fp,zero
  80db40:	63000104 	addi	r12,r12,4
  80db44:	db002d15 	stw	r12,180(sp)
  80db48:	003bc706 	br	80ca68 <__alt_data_end+0xff80ca68>
  80db4c:	d8c03117 	ldw	r3,196(sp)
  80db50:	b0e5c83a 	sub	r18,r22,r3
  80db54:	003a8d06 	br	80c58c <__alt_data_end+0xff80c58c>
  80db58:	da004015 	stw	r8,256(sp)
  80db5c:	080c0580 	call	80c058 <strlen>
  80db60:	1025883a 	mov	r18,r2
  80db64:	da004017 	ldw	r8,256(sp)
  80db68:	903bf20e 	bge	r18,zero,80cb34 <__alt_data_end+0xff80cb34>
  80db6c:	0005883a 	mov	r2,zero
  80db70:	003bf006 	br	80cb34 <__alt_data_end+0xff80cb34>
  80db74:	d9002f17 	ldw	r4,188(sp)
  80db78:	b80b883a 	mov	r5,r23
  80db7c:	b00d883a 	mov	r6,r22
  80db80:	0813e3c0 	call	813e3c <__ssprint_r>
  80db84:	103a221e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80db88:	d8c02017 	ldw	r3,128(sp)
  80db8c:	d8801f17 	ldw	r2,124(sp)
  80db90:	da000404 	addi	r8,sp,16
  80db94:	db003317 	ldw	r12,204(sp)
  80db98:	dac03117 	ldw	r11,196(sp)
  80db9c:	10800044 	addi	r2,r2,1
  80dba0:	1b07883a 	add	r3,r3,r12
  80dba4:	42c00015 	stw	r11,0(r8)
  80dba8:	43000115 	stw	r12,4(r8)
  80dbac:	d8c02015 	stw	r3,128(sp)
  80dbb0:	d8801f15 	stw	r2,124(sp)
  80dbb4:	010001c4 	movi	r4,7
  80dbb8:	20bb210e 	bge	r4,r2,80c840 <__alt_data_end+0xff80c840>
  80dbbc:	003da206 	br	80d248 <__alt_data_end+0xff80d248>
  80dbc0:	d8802604 	addi	r2,sp,152
  80dbc4:	d8800115 	stw	r2,4(sp)
  80dbc8:	d9002f17 	ldw	r4,188(sp)
  80dbcc:	d8802504 	addi	r2,sp,148
  80dbd0:	d9403717 	ldw	r5,220(sp)
  80dbd4:	d8800215 	stw	r2,8(sp)
  80dbd8:	d8802104 	addi	r2,sp,132
  80dbdc:	da400015 	stw	r9,0(sp)
  80dbe0:	d8800315 	stw	r2,12(sp)
  80dbe4:	900d883a 	mov	r6,r18
  80dbe8:	01c000c4 	movi	r7,3
  80dbec:	da004015 	stw	r8,256(sp)
  80dbf0:	da403f15 	stw	r9,252(sp)
  80dbf4:	08104b40 	call	8104b4 <_dtoa_r>
  80dbf8:	da403f17 	ldw	r9,252(sp)
  80dbfc:	da004017 	ldw	r8,256(sp)
  80dc00:	d8803115 	stw	r2,196(sp)
  80dc04:	4839883a 	mov	fp,r9
  80dc08:	dac03117 	ldw	r11,196(sp)
  80dc0c:	00801184 	movi	r2,70
  80dc10:	5f15883a 	add	r10,r11,fp
  80dc14:	a8bf7c1e 	bne	r21,r2,80da08 <__alt_data_end+0xff80da08>
  80dc18:	59000007 	ldb	r4,0(r11)
  80dc1c:	00800c04 	movi	r2,48
  80dc20:	2080c826 	beq	r4,r2,80df44 <___svfprintf_internal_r+0x1e54>
  80dc24:	d8c02617 	ldw	r3,152(sp)
  80dc28:	50d5883a 	add	r10,r10,r3
  80dc2c:	003f7606 	br	80da08 <__alt_data_end+0xff80da08>
  80dc30:	010020b4 	movhi	r4,130
  80dc34:	21390f84 	addi	r4,r4,-7106
  80dc38:	d9003615 	stw	r4,216(sp)
  80dc3c:	003a9706 	br	80c69c <__alt_data_end+0xff80c69c>
  80dc40:	0025883a 	mov	r18,zero
  80dc44:	003dc306 	br	80d354 <__alt_data_end+0xff80d354>
  80dc48:	d9002f17 	ldw	r4,188(sp)
  80dc4c:	b80b883a 	mov	r5,r23
  80dc50:	b00d883a 	mov	r6,r22
  80dc54:	0813e3c0 	call	813e3c <__ssprint_r>
  80dc58:	1039ed1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80dc5c:	d8c02017 	ldw	r3,128(sp)
  80dc60:	da000404 	addi	r8,sp,16
  80dc64:	003dba06 	br	80d350 <__alt_data_end+0xff80d350>
  80dc68:	d9002f17 	ldw	r4,188(sp)
  80dc6c:	b80b883a 	mov	r5,r23
  80dc70:	b00d883a 	mov	r6,r22
  80dc74:	0813e3c0 	call	813e3c <__ssprint_r>
  80dc78:	1039e51e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80dc7c:	d8802617 	ldw	r2,152(sp)
  80dc80:	d8c02017 	ldw	r3,128(sp)
  80dc84:	da000404 	addi	r8,sp,16
  80dc88:	003e4106 	br	80d590 <__alt_data_end+0xff80d590>
  80dc8c:	030020b4 	movhi	r12,130
  80dc90:	63390b84 	addi	r12,r12,-7122
  80dc94:	db002b15 	stw	r12,172(sp)
  80dc98:	dac02b17 	ldw	r11,172(sp)
  80dc9c:	1c07883a 	add	r3,r3,r16
  80dca0:	10800044 	addi	r2,r2,1
  80dca4:	42c00015 	stw	r11,0(r8)
  80dca8:	44000115 	stw	r16,4(r8)
  80dcac:	d8c02015 	stw	r3,128(sp)
  80dcb0:	d8801f15 	stw	r2,124(sp)
  80dcb4:	010001c4 	movi	r4,7
  80dcb8:	20bfae16 	blt	r4,r2,80db74 <__alt_data_end+0xff80db74>
  80dcbc:	42000204 	addi	r8,r8,8
  80dcc0:	003fb406 	br	80db94 <__alt_data_end+0xff80db94>
  80dcc4:	0021883a 	mov	r16,zero
  80dcc8:	003e4306 	br	80d5d8 <__alt_data_end+0xff80d5d8>
  80dccc:	d9002f17 	ldw	r4,188(sp)
  80dcd0:	b80b883a 	mov	r5,r23
  80dcd4:	b00d883a 	mov	r6,r22
  80dcd8:	0813e3c0 	call	813e3c <__ssprint_r>
  80dcdc:	1039cc1e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80dce0:	d8802617 	ldw	r2,152(sp)
  80dce4:	db003317 	ldw	r12,204(sp)
  80dce8:	d8c02017 	ldw	r3,128(sp)
  80dcec:	da000404 	addi	r8,sp,16
  80dcf0:	6085c83a 	sub	r2,r12,r2
  80dcf4:	003e3706 	br	80d5d4 <__alt_data_end+0xff80d5d4>
  80dcf8:	00800184 	movi	r2,6
  80dcfc:	1240012e 	bgeu	r2,r9,80dd04 <___svfprintf_internal_r+0x1c14>
  80dd00:	1013883a 	mov	r9,r2
  80dd04:	4825883a 	mov	r18,r9
  80dd08:	4805883a 	mov	r2,r9
  80dd0c:	4800a216 	blt	r9,zero,80df98 <___svfprintf_internal_r+0x1ea8>
  80dd10:	d8802a15 	stw	r2,168(sp)
  80dd14:	008020b4 	movhi	r2,130
  80dd18:	10b90904 	addi	r2,r2,-7132
  80dd1c:	d8803115 	stw	r2,196(sp)
  80dd20:	dcc02d15 	stw	r19,180(sp)
  80dd24:	d8003215 	stw	zero,200(sp)
  80dd28:	d8003415 	stw	zero,208(sp)
  80dd2c:	0005883a 	mov	r2,zero
  80dd30:	003a2206 	br	80c5bc <__alt_data_end+0xff80c5bc>
  80dd34:	030020b4 	movhi	r12,130
  80dd38:	63390f84 	addi	r12,r12,-7106
  80dd3c:	db003615 	stw	r12,216(sp)
  80dd40:	003ae506 	br	80c8d8 <__alt_data_end+0xff80c8d8>
  80dd44:	d8c02617 	ldw	r3,152(sp)
  80dd48:	00bfff44 	movi	r2,-3
  80dd4c:	18801516 	blt	r3,r2,80dda4 <___svfprintf_internal_r+0x1cb4>
  80dd50:	48c01416 	blt	r9,r3,80dda4 <___svfprintf_internal_r+0x1cb4>
  80dd54:	d8c03415 	stw	r3,208(sp)
  80dd58:	040019c4 	movi	r16,103
  80dd5c:	003f4906 	br	80da84 <__alt_data_end+0xff80da84>
  80dd60:	05400b44 	movi	r21,45
  80dd64:	dd402785 	stb	r21,158(sp)
  80dd68:	003b1006 	br	80c9ac <__alt_data_end+0xff80c9ac>
  80dd6c:	00c00b44 	movi	r3,45
  80dd70:	d8802a15 	stw	r2,168(sp)
  80dd74:	dc402d17 	ldw	r17,180(sp)
  80dd78:	d8c02785 	stb	r3,158(sp)
  80dd7c:	dcc02d15 	stw	r19,180(sp)
  80dd80:	d8003215 	stw	zero,200(sp)
  80dd84:	00800b44 	movi	r2,45
  80dd88:	003a0906 	br	80c5b0 <__alt_data_end+0xff80c5b0>
  80dd8c:	010020b4 	movhi	r4,130
  80dd90:	21390b84 	addi	r4,r4,-7122
  80dd94:	d9002b15 	stw	r4,172(sp)
  80dd98:	003cc306 	br	80d0a8 <__alt_data_end+0xff80d0a8>
  80dd9c:	5005883a 	mov	r2,r10
  80dda0:	003f2d06 	br	80da58 <__alt_data_end+0xff80da58>
  80dda4:	843fff84 	addi	r16,r16,-2
  80dda8:	1f3fffc4 	addi	fp,r3,-1
  80ddac:	df002615 	stw	fp,152(sp)
  80ddb0:	dc0022c5 	stb	r16,139(sp)
  80ddb4:	e000a016 	blt	fp,zero,80e038 <___svfprintf_internal_r+0x1f48>
  80ddb8:	00800ac4 	movi	r2,43
  80ddbc:	d8802305 	stb	r2,140(sp)
  80ddc0:	00800244 	movi	r2,9
  80ddc4:	1700800e 	bge	r2,fp,80dfc8 <___svfprintf_internal_r+0x1ed8>
  80ddc8:	dd4022c4 	addi	r21,sp,139
  80ddcc:	dc002b15 	stw	r16,172(sp)
  80ddd0:	4025883a 	mov	r18,r8
  80ddd4:	a821883a 	mov	r16,r21
  80ddd8:	e009883a 	mov	r4,fp
  80dddc:	01400284 	movi	r5,10
  80dde0:	0809a600 	call	809a60 <__modsi3>
  80dde4:	10800c04 	addi	r2,r2,48
  80dde8:	843fffc4 	addi	r16,r16,-1
  80ddec:	e009883a 	mov	r4,fp
  80ddf0:	01400284 	movi	r5,10
  80ddf4:	80800005 	stb	r2,0(r16)
  80ddf8:	0809a0c0 	call	809a0c <__divsi3>
  80ddfc:	1039883a 	mov	fp,r2
  80de00:	00800244 	movi	r2,9
  80de04:	173ff416 	blt	r2,fp,80ddd8 <__alt_data_end+0xff80ddd8>
  80de08:	9011883a 	mov	r8,r18
  80de0c:	e0800c04 	addi	r2,fp,48
  80de10:	8025883a 	mov	r18,r16
  80de14:	913fffc4 	addi	r4,r18,-1
  80de18:	90bfffc5 	stb	r2,-1(r18)
  80de1c:	dc002b17 	ldw	r16,172(sp)
  80de20:	25408e2e 	bgeu	r4,r21,80e05c <___svfprintf_internal_r+0x1f6c>
  80de24:	d9402384 	addi	r5,sp,142
  80de28:	2c8bc83a 	sub	r5,r5,r18
  80de2c:	d8c02344 	addi	r3,sp,141
  80de30:	a94b883a 	add	r5,r21,r5
  80de34:	00000106 	br	80de3c <___svfprintf_internal_r+0x1d4c>
  80de38:	20800003 	ldbu	r2,0(r4)
  80de3c:	18800005 	stb	r2,0(r3)
  80de40:	18c00044 	addi	r3,r3,1
  80de44:	21000044 	addi	r4,r4,1
  80de48:	197ffb1e 	bne	r3,r5,80de38 <__alt_data_end+0xff80de38>
  80de4c:	d8802304 	addi	r2,sp,140
  80de50:	1485c83a 	sub	r2,r2,r18
  80de54:	d8c02344 	addi	r3,sp,141
  80de58:	1885883a 	add	r2,r3,r2
  80de5c:	dac03317 	ldw	r11,204(sp)
  80de60:	156bc83a 	sub	r21,r2,r21
  80de64:	dd403a15 	stw	r21,232(sp)
  80de68:	00800044 	movi	r2,1
  80de6c:	5d65883a 	add	r18,r11,r21
  80de70:	12c0770e 	bge	r2,r11,80e050 <___svfprintf_internal_r+0x1f60>
  80de74:	94800044 	addi	r18,r18,1
  80de78:	9005883a 	mov	r2,r18
  80de7c:	90007216 	blt	r18,zero,80e048 <___svfprintf_internal_r+0x1f58>
  80de80:	d8003415 	stw	zero,208(sp)
  80de84:	003f0706 	br	80daa4 <__alt_data_end+0xff80daa4>
  80de88:	da402a15 	stw	r9,168(sp)
  80de8c:	dd402783 	ldbu	r21,158(sp)
  80de90:	4825883a 	mov	r18,r9
  80de94:	dcc02d15 	stw	r19,180(sp)
  80de98:	d8003215 	stw	zero,200(sp)
  80de9c:	d8003415 	stw	zero,208(sp)
  80dea0:	0039bf06 	br	80c5a0 <__alt_data_end+0xff80c5a0>
  80dea4:	483eb21e 	bne	r9,zero,80d970 <__alt_data_end+0xff80d970>
  80dea8:	9013883a 	mov	r9,r18
  80deac:	003eb006 	br	80d970 <__alt_data_end+0xff80d970>
  80deb0:	d9002f17 	ldw	r4,188(sp)
  80deb4:	b80b883a 	mov	r5,r23
  80deb8:	b00d883a 	mov	r6,r22
  80debc:	0813e3c0 	call	813e3c <__ssprint_r>
  80dec0:	1039531e 	bne	r2,zero,80c410 <__alt_data_end+0xff80c410>
  80dec4:	dc002617 	ldw	r16,152(sp)
  80dec8:	d8c02017 	ldw	r3,128(sp)
  80decc:	d8801f17 	ldw	r2,124(sp)
  80ded0:	da000404 	addi	r8,sp,16
  80ded4:	003e7106 	br	80d89c <__alt_data_end+0xff80d89c>
  80ded8:	00c00b44 	movi	r3,45
  80dedc:	64a0003c 	xorhi	r18,r12,32768
  80dee0:	d8c02a05 	stb	r3,168(sp)
  80dee4:	003ea806 	br	80d988 <__alt_data_end+0xff80d988>
  80dee8:	4f000044 	addi	fp,r9,1
  80deec:	003ead06 	br	80d9a4 <__alt_data_end+0xff80d9a4>
  80def0:	d8c03417 	ldw	r3,208(sp)
  80def4:	00c0410e 	bge	zero,r3,80dffc <___svfprintf_internal_r+0x1f0c>
  80def8:	04800044 	movi	r18,1
  80defc:	dac03317 	ldw	r11,204(sp)
  80df00:	92e5883a 	add	r18,r18,r11
  80df04:	9005883a 	mov	r2,r18
  80df08:	903ee60e 	bge	r18,zero,80daa4 <__alt_data_end+0xff80daa4>
  80df0c:	0005883a 	mov	r2,zero
  80df10:	003ee406 	br	80daa4 <__alt_data_end+0xff80daa4>
  80df14:	d8c02617 	ldw	r3,152(sp)
  80df18:	d8c03415 	stw	r3,208(sp)
  80df1c:	00c0310e 	bge	zero,r3,80dfe4 <___svfprintf_internal_r+0x1ef4>
  80df20:	48001f1e 	bne	r9,zero,80dfa0 <___svfprintf_internal_r+0x1eb0>
  80df24:	8c40004c 	andi	r17,r17,1
  80df28:	88001d1e 	bne	r17,zero,80dfa0 <___svfprintf_internal_r+0x1eb0>
  80df2c:	1805883a 	mov	r2,r3
  80df30:	183edb0e 	bge	r3,zero,80daa0 <__alt_data_end+0xff80daa0>
  80df34:	0005883a 	mov	r2,zero
  80df38:	003ed906 	br	80daa0 <__alt_data_end+0xff80daa0>
  80df3c:	d8802117 	ldw	r2,132(sp)
  80df40:	003ec506 	br	80da58 <__alt_data_end+0xff80da58>
  80df44:	d9003717 	ldw	r4,220(sp)
  80df48:	900b883a 	mov	r5,r18
  80df4c:	000d883a 	mov	r6,zero
  80df50:	000f883a 	mov	r7,zero
  80df54:	da004015 	stw	r8,256(sp)
  80df58:	da403f15 	stw	r9,252(sp)
  80df5c:	da803e15 	stw	r10,248(sp)
  80df60:	081879c0 	call	81879c <__eqdf2>
  80df64:	da004017 	ldw	r8,256(sp)
  80df68:	da403f17 	ldw	r9,252(sp)
  80df6c:	da803e17 	ldw	r10,248(sp)
  80df70:	103f2c26 	beq	r2,zero,80dc24 <__alt_data_end+0xff80dc24>
  80df74:	00800044 	movi	r2,1
  80df78:	1707c83a 	sub	r3,r2,fp
  80df7c:	d8c02615 	stw	r3,152(sp)
  80df80:	003f2906 	br	80dc28 <__alt_data_end+0xff80dc28>
  80df84:	db003417 	ldw	r12,208(sp)
  80df88:	64800044 	addi	r18,r12,1
  80df8c:	9005883a 	mov	r2,r18
  80df90:	903ec40e 	bge	r18,zero,80daa4 <__alt_data_end+0xff80daa4>
  80df94:	003fdd06 	br	80df0c <__alt_data_end+0xff80df0c>
  80df98:	0005883a 	mov	r2,zero
  80df9c:	003f5c06 	br	80dd10 <__alt_data_end+0xff80dd10>
  80dfa0:	dac03417 	ldw	r11,208(sp)
  80dfa4:	4a400044 	addi	r9,r9,1
  80dfa8:	5a65883a 	add	r18,r11,r9
  80dfac:	9005883a 	mov	r2,r18
  80dfb0:	903ebc0e 	bge	r18,zero,80daa4 <__alt_data_end+0xff80daa4>
  80dfb4:	003fd506 	br	80df0c <__alt_data_end+0xff80df0c>
  80dfb8:	008020b4 	movhi	r2,130
  80dfbc:	10b90b84 	addi	r2,r2,-7122
  80dfc0:	d8802b15 	stw	r2,172(sp)
  80dfc4:	003d2b06 	br	80d474 <__alt_data_end+0xff80d474>
  80dfc8:	00800c04 	movi	r2,48
  80dfcc:	e0c00c04 	addi	r3,fp,48
  80dfd0:	d8802345 	stb	r2,141(sp)
  80dfd4:	d8c02385 	stb	r3,142(sp)
  80dfd8:	d88023c4 	addi	r2,sp,143
  80dfdc:	dd4022c4 	addi	r21,sp,139
  80dfe0:	003f9e06 	br	80de5c <__alt_data_end+0xff80de5c>
  80dfe4:	4800081e 	bne	r9,zero,80e008 <___svfprintf_internal_r+0x1f18>
  80dfe8:	8c40004c 	andi	r17,r17,1
  80dfec:	8800061e 	bne	r17,zero,80e008 <___svfprintf_internal_r+0x1f18>
  80dff0:	00800044 	movi	r2,1
  80dff4:	1025883a 	mov	r18,r2
  80dff8:	003eaa06 	br	80daa4 <__alt_data_end+0xff80daa4>
  80dffc:	04800084 	movi	r18,2
  80e000:	90e5c83a 	sub	r18,r18,r3
  80e004:	003fbd06 	br	80defc <__alt_data_end+0xff80defc>
  80e008:	4c800084 	addi	r18,r9,2
  80e00c:	9005883a 	mov	r2,r18
  80e010:	903ea40e 	bge	r18,zero,80daa4 <__alt_data_end+0xff80daa4>
  80e014:	003fbd06 	br	80df0c <__alt_data_end+0xff80df0c>
  80e018:	dac02d17 	ldw	r11,180(sp)
  80e01c:	5a400017 	ldw	r9,0(r11)
  80e020:	5ac00104 	addi	r11,r11,4
  80e024:	dac02d15 	stw	r11,180(sp)
  80e028:	483e410e 	bge	r9,zero,80d930 <__alt_data_end+0xff80d930>
  80e02c:	027fffc4 	movi	r9,-1
  80e030:	1c000047 	ldb	r16,1(r3)
  80e034:	00388406 	br	80c248 <__alt_data_end+0xff80c248>
  80e038:	00800b44 	movi	r2,45
  80e03c:	0739c83a 	sub	fp,zero,fp
  80e040:	d8802305 	stb	r2,140(sp)
  80e044:	003f5e06 	br	80ddc0 <__alt_data_end+0xff80ddc0>
  80e048:	0005883a 	mov	r2,zero
  80e04c:	003f8c06 	br	80de80 <__alt_data_end+0xff80de80>
  80e050:	88a2703a 	and	r17,r17,r2
  80e054:	883f8826 	beq	r17,zero,80de78 <__alt_data_end+0xff80de78>
  80e058:	003f8606 	br	80de74 <__alt_data_end+0xff80de74>
  80e05c:	d8802344 	addi	r2,sp,141
  80e060:	003f7e06 	br	80de5c <__alt_data_end+0xff80de5c>
  80e064:	d8c02617 	ldw	r3,152(sp)
  80e068:	003f4f06 	br	80dda8 <__alt_data_end+0xff80dda8>
  80e06c:	dac02f17 	ldw	r11,188(sp)
  80e070:	00800304 	movi	r2,12
  80e074:	58800015 	stw	r2,0(r11)
  80e078:	00bfffc4 	movi	r2,-1
  80e07c:	0038e806 	br	80c420 <__alt_data_end+0xff80c420>

0080e080 <___vfprintf_internal_r>:
  80e080:	deffb604 	addi	sp,sp,-296
  80e084:	dfc04915 	stw	ra,292(sp)
  80e088:	ddc04715 	stw	r23,284(sp)
  80e08c:	dd804615 	stw	r22,280(sp)
  80e090:	282f883a 	mov	r23,r5
  80e094:	202d883a 	mov	r22,r4
  80e098:	d9802a15 	stw	r6,168(sp)
  80e09c:	d9c02d15 	stw	r7,180(sp)
  80e0a0:	df004815 	stw	fp,288(sp)
  80e0a4:	dd404515 	stw	r21,276(sp)
  80e0a8:	dd004415 	stw	r20,272(sp)
  80e0ac:	dcc04315 	stw	r19,268(sp)
  80e0b0:	dc804215 	stw	r18,264(sp)
  80e0b4:	dc404115 	stw	r17,260(sp)
  80e0b8:	dc004015 	stw	r16,256(sp)
  80e0bc:	08122480 	call	812248 <_localeconv_r>
  80e0c0:	10800017 	ldw	r2,0(r2)
  80e0c4:	1009883a 	mov	r4,r2
  80e0c8:	d8803515 	stw	r2,212(sp)
  80e0cc:	080c0580 	call	80c058 <strlen>
  80e0d0:	d8803815 	stw	r2,224(sp)
  80e0d4:	b0000226 	beq	r22,zero,80e0e0 <___vfprintf_internal_r+0x60>
  80e0d8:	b0800e17 	ldw	r2,56(r22)
  80e0dc:	1000e126 	beq	r2,zero,80e464 <___vfprintf_internal_r+0x3e4>
  80e0e0:	b880030b 	ldhu	r2,12(r23)
  80e0e4:	10c8000c 	andi	r3,r2,8192
  80e0e8:	1800061e 	bne	r3,zero,80e104 <___vfprintf_internal_r+0x84>
  80e0ec:	b9001917 	ldw	r4,100(r23)
  80e0f0:	00f7ffc4 	movi	r3,-8193
  80e0f4:	10880014 	ori	r2,r2,8192
  80e0f8:	20c6703a 	and	r3,r4,r3
  80e0fc:	b880030d 	sth	r2,12(r23)
  80e100:	b8c01915 	stw	r3,100(r23)
  80e104:	10c0020c 	andi	r3,r2,8
  80e108:	1800a726 	beq	r3,zero,80e3a8 <___vfprintf_internal_r+0x328>
  80e10c:	b8c00417 	ldw	r3,16(r23)
  80e110:	1800a526 	beq	r3,zero,80e3a8 <___vfprintf_internal_r+0x328>
  80e114:	1080068c 	andi	r2,r2,26
  80e118:	00c00284 	movi	r3,10
  80e11c:	10c0aa26 	beq	r2,r3,80e3c8 <___vfprintf_internal_r+0x348>
  80e120:	dac01e04 	addi	r11,sp,120
  80e124:	db001dc4 	addi	r12,sp,119
  80e128:	d8800404 	addi	r2,sp,16
  80e12c:	050020b4 	movhi	r20,130
  80e130:	dac02815 	stw	r11,160(sp)
  80e134:	5b17c83a 	sub	r11,r11,r12
  80e138:	a5391384 	addi	r20,r20,-7090
  80e13c:	db002915 	stw	r12,164(sp)
  80e140:	d8801e15 	stw	r2,120(sp)
  80e144:	d8002015 	stw	zero,128(sp)
  80e148:	d8001f15 	stw	zero,124(sp)
  80e14c:	d8003315 	stw	zero,204(sp)
  80e150:	d8003715 	stw	zero,220(sp)
  80e154:	d8003915 	stw	zero,228(sp)
  80e158:	1011883a 	mov	r8,r2
  80e15c:	d8003b15 	stw	zero,236(sp)
  80e160:	d8003a15 	stw	zero,232(sp)
  80e164:	d8002f15 	stw	zero,188(sp)
  80e168:	dac03c15 	stw	r11,240(sp)
  80e16c:	db002a17 	ldw	r12,168(sp)
  80e170:	60800007 	ldb	r2,0(r12)
  80e174:	1000be26 	beq	r2,zero,80e470 <___vfprintf_internal_r+0x3f0>
  80e178:	00c00944 	movi	r3,37
  80e17c:	10c0bc26 	beq	r2,r3,80e470 <___vfprintf_internal_r+0x3f0>
  80e180:	6021883a 	mov	r16,r12
  80e184:	00000106 	br	80e18c <___vfprintf_internal_r+0x10c>
  80e188:	10c08426 	beq	r2,r3,80e39c <___vfprintf_internal_r+0x31c>
  80e18c:	84000044 	addi	r16,r16,1
  80e190:	80800007 	ldb	r2,0(r16)
  80e194:	103ffc1e 	bne	r2,zero,80e188 <__alt_data_end+0xff80e188>
  80e198:	dac02a17 	ldw	r11,168(sp)
  80e19c:	82e3c83a 	sub	r17,r16,r11
  80e1a0:	88000f26 	beq	r17,zero,80e1e0 <___vfprintf_internal_r+0x160>
  80e1a4:	d8c02017 	ldw	r3,128(sp)
  80e1a8:	d8801f17 	ldw	r2,124(sp)
  80e1ac:	dac02a17 	ldw	r11,168(sp)
  80e1b0:	1c47883a 	add	r3,r3,r17
  80e1b4:	10800044 	addi	r2,r2,1
  80e1b8:	d8c02015 	stw	r3,128(sp)
  80e1bc:	42c00015 	stw	r11,0(r8)
  80e1c0:	44400115 	stw	r17,4(r8)
  80e1c4:	d8801f15 	stw	r2,124(sp)
  80e1c8:	00c001c4 	movi	r3,7
  80e1cc:	18809316 	blt	r3,r2,80e41c <___vfprintf_internal_r+0x39c>
  80e1d0:	42000204 	addi	r8,r8,8
  80e1d4:	db002f17 	ldw	r12,188(sp)
  80e1d8:	6459883a 	add	r12,r12,r17
  80e1dc:	db002f15 	stw	r12,188(sp)
  80e1e0:	80800007 	ldb	r2,0(r16)
  80e1e4:	10009426 	beq	r2,zero,80e438 <___vfprintf_internal_r+0x3b8>
  80e1e8:	80800044 	addi	r2,r16,1
  80e1ec:	84000047 	ldb	r16,1(r16)
  80e1f0:	d8002785 	stb	zero,158(sp)
  80e1f4:	000d883a 	mov	r6,zero
  80e1f8:	027fffc4 	movi	r9,-1
  80e1fc:	d8002e15 	stw	zero,184(sp)
  80e200:	0023883a 	mov	r17,zero
  80e204:	01001604 	movi	r4,88
  80e208:	01400244 	movi	r5,9
  80e20c:	02800a84 	movi	r10,42
  80e210:	01c01b04 	movi	r7,108
  80e214:	10c00044 	addi	r3,r2,1
  80e218:	80bff804 	addi	r2,r16,-32
  80e21c:	2082cd36 	bltu	r4,r2,80ed54 <___vfprintf_internal_r+0xcd4>
  80e220:	100490ba 	slli	r2,r2,2
  80e224:	02c02074 	movhi	r11,129
  80e228:	5af88e04 	addi	r11,r11,-7624
  80e22c:	12c5883a 	add	r2,r2,r11
  80e230:	10800017 	ldw	r2,0(r2)
  80e234:	1000683a 	jmp	r2
  80e238:	0080eb6c 	andhi	r2,zero,941
  80e23c:	0080ed54 	movui	r2,949
  80e240:	0080ed54 	movui	r2,949
  80e244:	0080ecbc 	xorhi	r2,zero,946
  80e248:	0080ed54 	movui	r2,949
  80e24c:	0080ed54 	movui	r2,949
  80e250:	0080ed54 	movui	r2,949
  80e254:	0080ed54 	movui	r2,949
  80e258:	0080ed54 	movui	r2,949
  80e25c:	0080ed54 	movui	r2,949
  80e260:	0080eb8c 	andi	r2,zero,942
  80e264:	0080ebb8 	rdprs	r2,zero,942
  80e268:	0080ed54 	movui	r2,949
  80e26c:	0080e478 	rdprs	r2,zero,913
  80e270:	0080e488 	cmpgei	r2,zero,914
  80e274:	0080ed54 	movui	r2,949
  80e278:	0080e4c8 	cmpgei	r2,zero,915
  80e27c:	0080e4d8 	cmpnei	r2,zero,915
  80e280:	0080e4d8 	cmpnei	r2,zero,915
  80e284:	0080e4d8 	cmpnei	r2,zero,915
  80e288:	0080e4d8 	cmpnei	r2,zero,915
  80e28c:	0080e4d8 	cmpnei	r2,zero,915
  80e290:	0080e4d8 	cmpnei	r2,zero,915
  80e294:	0080e4d8 	cmpnei	r2,zero,915
  80e298:	0080e4d8 	cmpnei	r2,zero,915
  80e29c:	0080e4d8 	cmpnei	r2,zero,915
  80e2a0:	0080ed54 	movui	r2,949
  80e2a4:	0080ed54 	movui	r2,949
  80e2a8:	0080ed54 	movui	r2,949
  80e2ac:	0080ed54 	movui	r2,949
  80e2b0:	0080ed54 	movui	r2,949
  80e2b4:	0080ed54 	movui	r2,949
  80e2b8:	0080ed54 	movui	r2,949
  80e2bc:	0080ed54 	movui	r2,949
  80e2c0:	0080ed54 	movui	r2,949
  80e2c4:	0080ed54 	movui	r2,949
  80e2c8:	0080e50c 	andi	r2,zero,916
  80e2cc:	0080e97c 	xorhi	r2,zero,933
  80e2d0:	0080ed54 	movui	r2,949
  80e2d4:	0080e97c 	xorhi	r2,zero,933
  80e2d8:	0080ed54 	movui	r2,949
  80e2dc:	0080ed54 	movui	r2,949
  80e2e0:	0080ed54 	movui	r2,949
  80e2e4:	0080ed54 	movui	r2,949
  80e2e8:	0080ea68 	cmpgeui	r2,zero,937
  80e2ec:	0080ed54 	movui	r2,949
  80e2f0:	0080ed54 	movui	r2,949
  80e2f4:	0080e910 	cmplti	r2,zero,932
  80e2f8:	0080ed54 	movui	r2,949
  80e2fc:	0080ed54 	movui	r2,949
  80e300:	0080ed54 	movui	r2,949
  80e304:	0080ed54 	movui	r2,949
  80e308:	0080ed54 	movui	r2,949
  80e30c:	0080e94c 	andi	r2,zero,933
  80e310:	0080ed54 	movui	r2,949
  80e314:	0080ed54 	movui	r2,949
  80e318:	0080eb10 	cmplti	r2,zero,940
  80e31c:	0080ed54 	movui	r2,949
  80e320:	0080ed54 	movui	r2,949
  80e324:	0080ed54 	movui	r2,949
  80e328:	0080ed54 	movui	r2,949
  80e32c:	0080ed54 	movui	r2,949
  80e330:	0080ed54 	movui	r2,949
  80e334:	0080ed54 	movui	r2,949
  80e338:	0080ed54 	movui	r2,949
  80e33c:	0080ed54 	movui	r2,949
  80e340:	0080ed54 	movui	r2,949
  80e344:	0080ebc8 	cmpgei	r2,zero,943
  80e348:	0080ea78 	rdprs	r2,zero,937
  80e34c:	0080e97c 	xorhi	r2,zero,933
  80e350:	0080e97c 	xorhi	r2,zero,933
  80e354:	0080e97c 	xorhi	r2,zero,933
  80e358:	0080eab8 	rdprs	r2,zero,938
  80e35c:	0080ea78 	rdprs	r2,zero,937
  80e360:	0080ed54 	movui	r2,949
  80e364:	0080ed54 	movui	r2,949
  80e368:	0080eac8 	cmpgei	r2,zero,939
  80e36c:	0080ed54 	movui	r2,949
  80e370:	0080eadc 	xori	r2,zero,939
  80e374:	0080ed18 	cmpnei	r2,zero,948
  80e378:	0080ea20 	cmpeqi	r2,zero,936
  80e37c:	0080eccc 	andi	r2,zero,947
  80e380:	0080ed54 	movui	r2,949
  80e384:	0080ec08 	cmpgei	r2,zero,944
  80e388:	0080ed54 	movui	r2,949
  80e38c:	0080ecdc 	xori	r2,zero,947
  80e390:	0080ed54 	movui	r2,949
  80e394:	0080ed54 	movui	r2,949
  80e398:	0080ec7c 	xorhi	r2,zero,945
  80e39c:	db002a17 	ldw	r12,168(sp)
  80e3a0:	8323c83a 	sub	r17,r16,r12
  80e3a4:	003f7e06 	br	80e1a0 <__alt_data_end+0xff80e1a0>
  80e3a8:	b009883a 	mov	r4,r22
  80e3ac:	b80b883a 	mov	r5,r23
  80e3b0:	081010c0 	call	81010c <__swsetup_r>
  80e3b4:	10000c1e 	bne	r2,zero,80e3e8 <___vfprintf_internal_r+0x368>
  80e3b8:	b880030b 	ldhu	r2,12(r23)
  80e3bc:	00c00284 	movi	r3,10
  80e3c0:	1080068c 	andi	r2,r2,26
  80e3c4:	10ff561e 	bne	r2,r3,80e120 <__alt_data_end+0xff80e120>
  80e3c8:	b880038f 	ldh	r2,14(r23)
  80e3cc:	103f5416 	blt	r2,zero,80e120 <__alt_data_end+0xff80e120>
  80e3d0:	d9802a17 	ldw	r6,168(sp)
  80e3d4:	d9c02d17 	ldw	r7,180(sp)
  80e3d8:	b009883a 	mov	r4,r22
  80e3dc:	b80b883a 	mov	r5,r23
  80e3e0:	080fff40 	call	80fff4 <__sbprintf>
  80e3e4:	00000106 	br	80e3ec <___vfprintf_internal_r+0x36c>
  80e3e8:	00bfffc4 	movi	r2,-1
  80e3ec:	dfc04917 	ldw	ra,292(sp)
  80e3f0:	df004817 	ldw	fp,288(sp)
  80e3f4:	ddc04717 	ldw	r23,284(sp)
  80e3f8:	dd804617 	ldw	r22,280(sp)
  80e3fc:	dd404517 	ldw	r21,276(sp)
  80e400:	dd004417 	ldw	r20,272(sp)
  80e404:	dcc04317 	ldw	r19,268(sp)
  80e408:	dc804217 	ldw	r18,264(sp)
  80e40c:	dc404117 	ldw	r17,260(sp)
  80e410:	dc004017 	ldw	r16,256(sp)
  80e414:	dec04a04 	addi	sp,sp,296
  80e418:	f800283a 	ret
  80e41c:	b009883a 	mov	r4,r22
  80e420:	b80b883a 	mov	r5,r23
  80e424:	d9801e04 	addi	r6,sp,120
  80e428:	081513c0 	call	81513c <__sprint_r>
  80e42c:	1000081e 	bne	r2,zero,80e450 <___vfprintf_internal_r+0x3d0>
  80e430:	da000404 	addi	r8,sp,16
  80e434:	003f6706 	br	80e1d4 <__alt_data_end+0xff80e1d4>
  80e438:	d8802017 	ldw	r2,128(sp)
  80e43c:	10000426 	beq	r2,zero,80e450 <___vfprintf_internal_r+0x3d0>
  80e440:	b009883a 	mov	r4,r22
  80e444:	b80b883a 	mov	r5,r23
  80e448:	d9801e04 	addi	r6,sp,120
  80e44c:	081513c0 	call	81513c <__sprint_r>
  80e450:	b880030b 	ldhu	r2,12(r23)
  80e454:	1080100c 	andi	r2,r2,64
  80e458:	103fe31e 	bne	r2,zero,80e3e8 <__alt_data_end+0xff80e3e8>
  80e45c:	d8802f17 	ldw	r2,188(sp)
  80e460:	003fe206 	br	80e3ec <__alt_data_end+0xff80e3ec>
  80e464:	b009883a 	mov	r4,r22
  80e468:	080a1b40 	call	80a1b4 <__sinit>
  80e46c:	003f1c06 	br	80e0e0 <__alt_data_end+0xff80e0e0>
  80e470:	dc002a17 	ldw	r16,168(sp)
  80e474:	003f5a06 	br	80e1e0 <__alt_data_end+0xff80e1e0>
  80e478:	1805883a 	mov	r2,r3
  80e47c:	8c400114 	ori	r17,r17,4
  80e480:	1c000007 	ldb	r16,0(r3)
  80e484:	003f6306 	br	80e214 <__alt_data_end+0xff80e214>
  80e488:	1c000007 	ldb	r16,0(r3)
  80e48c:	18800044 	addi	r2,r3,1
  80e490:	8286ad26 	beq	r16,r10,80ff48 <___vfprintf_internal_r+0x1ec8>
  80e494:	82fff404 	addi	r11,r16,-48
  80e498:	1007883a 	mov	r3,r2
  80e49c:	0013883a 	mov	r9,zero
  80e4a0:	2aff5d36 	bltu	r5,r11,80e218 <__alt_data_end+0xff80e218>
  80e4a4:	1c000007 	ldb	r16,0(r3)
  80e4a8:	4a4002a4 	muli	r9,r9,10
  80e4ac:	18c00044 	addi	r3,r3,1
  80e4b0:	5a53883a 	add	r9,r11,r9
  80e4b4:	82fff404 	addi	r11,r16,-48
  80e4b8:	2afffa2e 	bgeu	r5,r11,80e4a4 <__alt_data_end+0xff80e4a4>
  80e4bc:	483f560e 	bge	r9,zero,80e218 <__alt_data_end+0xff80e218>
  80e4c0:	027fffc4 	movi	r9,-1
  80e4c4:	003f5406 	br	80e218 <__alt_data_end+0xff80e218>
  80e4c8:	8c402014 	ori	r17,r17,128
  80e4cc:	1805883a 	mov	r2,r3
  80e4d0:	1c000007 	ldb	r16,0(r3)
  80e4d4:	003f4f06 	br	80e214 <__alt_data_end+0xff80e214>
  80e4d8:	1805883a 	mov	r2,r3
  80e4dc:	d8002e15 	stw	zero,184(sp)
  80e4e0:	82fff404 	addi	r11,r16,-48
  80e4e4:	0019883a 	mov	r12,zero
  80e4e8:	14000007 	ldb	r16,0(r2)
  80e4ec:	630002a4 	muli	r12,r12,10
  80e4f0:	18c00044 	addi	r3,r3,1
  80e4f4:	1805883a 	mov	r2,r3
  80e4f8:	62d9883a 	add	r12,r12,r11
  80e4fc:	82fff404 	addi	r11,r16,-48
  80e500:	2afff92e 	bgeu	r5,r11,80e4e8 <__alt_data_end+0xff80e4e8>
  80e504:	db002e15 	stw	r12,184(sp)
  80e508:	003f4306 	br	80e218 <__alt_data_end+0xff80e218>
  80e50c:	8c400414 	ori	r17,r17,16
  80e510:	d8c02a15 	stw	r3,168(sp)
  80e514:	d9802785 	stb	r6,158(sp)
  80e518:	8880080c 	andi	r2,r17,32
  80e51c:	d8c02d17 	ldw	r3,180(sp)
  80e520:	10015a26 	beq	r2,zero,80ea8c <___vfprintf_internal_r+0xa0c>
  80e524:	db002d17 	ldw	r12,180(sp)
  80e528:	18800117 	ldw	r2,4(r3)
  80e52c:	1cc00017 	ldw	r19,0(r3)
  80e530:	63000204 	addi	r12,r12,8
  80e534:	db002d15 	stw	r12,180(sp)
  80e538:	1039883a 	mov	fp,r2
  80e53c:	10044516 	blt	r2,zero,80f654 <___vfprintf_internal_r+0x15d4>
  80e540:	dd402783 	ldbu	r21,158(sp)
  80e544:	da403215 	stw	r9,200(sp)
  80e548:	00800044 	movi	r2,1
  80e54c:	9f06b03a 	or	r3,r19,fp
  80e550:	48000216 	blt	r9,zero,80e55c <___vfprintf_internal_r+0x4dc>
  80e554:	013fdfc4 	movi	r4,-129
  80e558:	8922703a 	and	r17,r17,r4
  80e55c:	1802071e 	bne	r3,zero,80ed7c <___vfprintf_internal_r+0xcfc>
  80e560:	4802fa26 	beq	r9,zero,80f14c <___vfprintf_internal_r+0x10cc>
  80e564:	10803fcc 	andi	r2,r2,255
  80e568:	00c00044 	movi	r3,1
  80e56c:	10c22926 	beq	r2,r3,80ee14 <___vfprintf_internal_r+0xd94>
  80e570:	00c00084 	movi	r3,2
  80e574:	10c31726 	beq	r2,r3,80f1d4 <___vfprintf_internal_r+0x1154>
  80e578:	d8c01e04 	addi	r3,sp,120
  80e57c:	9808d0fa 	srli	r4,r19,3
  80e580:	e00a977a 	slli	r5,fp,29
  80e584:	e038d0fa 	srli	fp,fp,3
  80e588:	9cc001cc 	andi	r19,r19,7
  80e58c:	98800c04 	addi	r2,r19,48
  80e590:	18ffffc4 	addi	r3,r3,-1
  80e594:	2926b03a 	or	r19,r5,r4
  80e598:	18800005 	stb	r2,0(r3)
  80e59c:	9f08b03a 	or	r4,r19,fp
  80e5a0:	203ff61e 	bne	r4,zero,80e57c <__alt_data_end+0xff80e57c>
  80e5a4:	8900004c 	andi	r4,r17,1
  80e5a8:	d8c03115 	stw	r3,196(sp)
  80e5ac:	2003931e 	bne	r4,zero,80f3fc <___vfprintf_internal_r+0x137c>
  80e5b0:	dac02817 	ldw	r11,160(sp)
  80e5b4:	58e5c83a 	sub	r18,r11,r3
  80e5b8:	9005883a 	mov	r2,r18
  80e5bc:	9240010e 	bge	r18,r9,80e5c4 <___vfprintf_internal_r+0x544>
  80e5c0:	4805883a 	mov	r2,r9
  80e5c4:	d8802b15 	stw	r2,172(sp)
  80e5c8:	d8003415 	stw	zero,208(sp)
  80e5cc:	a8803fcc 	andi	r2,r21,255
  80e5d0:	1080201c 	xori	r2,r2,128
  80e5d4:	10bfe004 	addi	r2,r2,-128
  80e5d8:	10000326 	beq	r2,zero,80e5e8 <___vfprintf_internal_r+0x568>
  80e5dc:	db002b17 	ldw	r12,172(sp)
  80e5e0:	63000044 	addi	r12,r12,1
  80e5e4:	db002b15 	stw	r12,172(sp)
  80e5e8:	88c0008c 	andi	r3,r17,2
  80e5ec:	d8c02c15 	stw	r3,176(sp)
  80e5f0:	18000326 	beq	r3,zero,80e600 <___vfprintf_internal_r+0x580>
  80e5f4:	dac02b17 	ldw	r11,172(sp)
  80e5f8:	5ac00084 	addi	r11,r11,2
  80e5fc:	dac02b15 	stw	r11,172(sp)
  80e600:	8b00210c 	andi	r12,r17,132
  80e604:	db003015 	stw	r12,192(sp)
  80e608:	6001da1e 	bne	r12,zero,80ed74 <___vfprintf_internal_r+0xcf4>
  80e60c:	dac02e17 	ldw	r11,184(sp)
  80e610:	db002b17 	ldw	r12,172(sp)
  80e614:	5b39c83a 	sub	fp,r11,r12
  80e618:	0701d60e 	bge	zero,fp,80ed74 <___vfprintf_internal_r+0xcf4>
  80e61c:	02400404 	movi	r9,16
  80e620:	d8c02017 	ldw	r3,128(sp)
  80e624:	d8801f17 	ldw	r2,124(sp)
  80e628:	4f053c0e 	bge	r9,fp,80fb1c <___vfprintf_internal_r+0x1a9c>
  80e62c:	014020b4 	movhi	r5,130
  80e630:	29791784 	addi	r5,r5,-7074
  80e634:	d9403615 	stw	r5,216(sp)
  80e638:	482b883a 	mov	r21,r9
  80e63c:	04c001c4 	movi	r19,7
  80e640:	00000306 	br	80e650 <___vfprintf_internal_r+0x5d0>
  80e644:	e73ffc04 	addi	fp,fp,-16
  80e648:	42000204 	addi	r8,r8,8
  80e64c:	af00130e 	bge	r21,fp,80e69c <___vfprintf_internal_r+0x61c>
  80e650:	02c020b4 	movhi	r11,130
  80e654:	18c00404 	addi	r3,r3,16
  80e658:	10800044 	addi	r2,r2,1
  80e65c:	5af91784 	addi	r11,r11,-7074
  80e660:	42c00015 	stw	r11,0(r8)
  80e664:	45400115 	stw	r21,4(r8)
  80e668:	d8c02015 	stw	r3,128(sp)
  80e66c:	d8801f15 	stw	r2,124(sp)
  80e670:	98bff40e 	bge	r19,r2,80e644 <__alt_data_end+0xff80e644>
  80e674:	b009883a 	mov	r4,r22
  80e678:	b80b883a 	mov	r5,r23
  80e67c:	d9801e04 	addi	r6,sp,120
  80e680:	081513c0 	call	81513c <__sprint_r>
  80e684:	103f721e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80e688:	e73ffc04 	addi	fp,fp,-16
  80e68c:	d8c02017 	ldw	r3,128(sp)
  80e690:	d8801f17 	ldw	r2,124(sp)
  80e694:	da000404 	addi	r8,sp,16
  80e698:	af3fed16 	blt	r21,fp,80e650 <__alt_data_end+0xff80e650>
  80e69c:	db003617 	ldw	r12,216(sp)
  80e6a0:	e0c7883a 	add	r3,fp,r3
  80e6a4:	10800044 	addi	r2,r2,1
  80e6a8:	43000015 	stw	r12,0(r8)
  80e6ac:	47000115 	stw	fp,4(r8)
  80e6b0:	d8c02015 	stw	r3,128(sp)
  80e6b4:	d8801f15 	stw	r2,124(sp)
  80e6b8:	010001c4 	movi	r4,7
  80e6bc:	20830e16 	blt	r4,r2,80f2f8 <___vfprintf_internal_r+0x1278>
  80e6c0:	d8802787 	ldb	r2,158(sp)
  80e6c4:	42000204 	addi	r8,r8,8
  80e6c8:	10000c26 	beq	r2,zero,80e6fc <___vfprintf_internal_r+0x67c>
  80e6cc:	d8801f17 	ldw	r2,124(sp)
  80e6d0:	d9002784 	addi	r4,sp,158
  80e6d4:	18c00044 	addi	r3,r3,1
  80e6d8:	10800044 	addi	r2,r2,1
  80e6dc:	41000015 	stw	r4,0(r8)
  80e6e0:	01000044 	movi	r4,1
  80e6e4:	41000115 	stw	r4,4(r8)
  80e6e8:	d8c02015 	stw	r3,128(sp)
  80e6ec:	d8801f15 	stw	r2,124(sp)
  80e6f0:	010001c4 	movi	r4,7
  80e6f4:	2082a716 	blt	r4,r2,80f194 <___vfprintf_internal_r+0x1114>
  80e6f8:	42000204 	addi	r8,r8,8
  80e6fc:	dac02c17 	ldw	r11,176(sp)
  80e700:	58000c26 	beq	r11,zero,80e734 <___vfprintf_internal_r+0x6b4>
  80e704:	d8801f17 	ldw	r2,124(sp)
  80e708:	d9002704 	addi	r4,sp,156
  80e70c:	18c00084 	addi	r3,r3,2
  80e710:	10800044 	addi	r2,r2,1
  80e714:	41000015 	stw	r4,0(r8)
  80e718:	01000084 	movi	r4,2
  80e71c:	41000115 	stw	r4,4(r8)
  80e720:	d8c02015 	stw	r3,128(sp)
  80e724:	d8801f15 	stw	r2,124(sp)
  80e728:	010001c4 	movi	r4,7
  80e72c:	2082a116 	blt	r4,r2,80f1b4 <___vfprintf_internal_r+0x1134>
  80e730:	42000204 	addi	r8,r8,8
  80e734:	db003017 	ldw	r12,192(sp)
  80e738:	00802004 	movi	r2,128
  80e73c:	60820326 	beq	r12,r2,80ef4c <___vfprintf_internal_r+0xecc>
  80e740:	db003217 	ldw	r12,200(sp)
  80e744:	64abc83a 	sub	r21,r12,r18
  80e748:	0540260e 	bge	zero,r21,80e7e4 <___vfprintf_internal_r+0x764>
  80e74c:	07000404 	movi	fp,16
  80e750:	d8801f17 	ldw	r2,124(sp)
  80e754:	e544570e 	bge	fp,r21,80f8b4 <___vfprintf_internal_r+0x1834>
  80e758:	014020b4 	movhi	r5,130
  80e75c:	29791384 	addi	r5,r5,-7090
  80e760:	d9402c15 	stw	r5,176(sp)
  80e764:	04c001c4 	movi	r19,7
  80e768:	00000306 	br	80e778 <___vfprintf_internal_r+0x6f8>
  80e76c:	ad7ffc04 	addi	r21,r21,-16
  80e770:	42000204 	addi	r8,r8,8
  80e774:	e540110e 	bge	fp,r21,80e7bc <___vfprintf_internal_r+0x73c>
  80e778:	18c00404 	addi	r3,r3,16
  80e77c:	10800044 	addi	r2,r2,1
  80e780:	45000015 	stw	r20,0(r8)
  80e784:	47000115 	stw	fp,4(r8)
  80e788:	d8c02015 	stw	r3,128(sp)
  80e78c:	d8801f15 	stw	r2,124(sp)
  80e790:	98bff60e 	bge	r19,r2,80e76c <__alt_data_end+0xff80e76c>
  80e794:	b009883a 	mov	r4,r22
  80e798:	b80b883a 	mov	r5,r23
  80e79c:	d9801e04 	addi	r6,sp,120
  80e7a0:	081513c0 	call	81513c <__sprint_r>
  80e7a4:	103f2a1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80e7a8:	ad7ffc04 	addi	r21,r21,-16
  80e7ac:	d8c02017 	ldw	r3,128(sp)
  80e7b0:	d8801f17 	ldw	r2,124(sp)
  80e7b4:	da000404 	addi	r8,sp,16
  80e7b8:	e57fef16 	blt	fp,r21,80e778 <__alt_data_end+0xff80e778>
  80e7bc:	dac02c17 	ldw	r11,176(sp)
  80e7c0:	1d47883a 	add	r3,r3,r21
  80e7c4:	10800044 	addi	r2,r2,1
  80e7c8:	42c00015 	stw	r11,0(r8)
  80e7cc:	45400115 	stw	r21,4(r8)
  80e7d0:	d8c02015 	stw	r3,128(sp)
  80e7d4:	d8801f15 	stw	r2,124(sp)
  80e7d8:	010001c4 	movi	r4,7
  80e7dc:	20826516 	blt	r4,r2,80f174 <___vfprintf_internal_r+0x10f4>
  80e7e0:	42000204 	addi	r8,r8,8
  80e7e4:	8880400c 	andi	r2,r17,256
  80e7e8:	1001901e 	bne	r2,zero,80ee2c <___vfprintf_internal_r+0xdac>
  80e7ec:	d8801f17 	ldw	r2,124(sp)
  80e7f0:	db003117 	ldw	r12,196(sp)
  80e7f4:	1c87883a 	add	r3,r3,r18
  80e7f8:	10800044 	addi	r2,r2,1
  80e7fc:	43000015 	stw	r12,0(r8)
  80e800:	44800115 	stw	r18,4(r8)
  80e804:	d8c02015 	stw	r3,128(sp)
  80e808:	d8801f15 	stw	r2,124(sp)
  80e80c:	010001c4 	movi	r4,7
  80e810:	20824016 	blt	r4,r2,80f114 <___vfprintf_internal_r+0x1094>
  80e814:	42000204 	addi	r8,r8,8
  80e818:	8c40010c 	andi	r17,r17,4
  80e81c:	88003126 	beq	r17,zero,80e8e4 <___vfprintf_internal_r+0x864>
  80e820:	db002e17 	ldw	r12,184(sp)
  80e824:	dac02b17 	ldw	r11,172(sp)
  80e828:	62e1c83a 	sub	r16,r12,r11
  80e82c:	04002d0e 	bge	zero,r16,80e8e4 <___vfprintf_internal_r+0x864>
  80e830:	04400404 	movi	r17,16
  80e834:	d8801f17 	ldw	r2,124(sp)
  80e838:	8c05150e 	bge	r17,r16,80fc90 <___vfprintf_internal_r+0x1c10>
  80e83c:	010020b4 	movhi	r4,130
  80e840:	21391784 	addi	r4,r4,-7074
  80e844:	d9003615 	stw	r4,216(sp)
  80e848:	048001c4 	movi	r18,7
  80e84c:	00000306 	br	80e85c <___vfprintf_internal_r+0x7dc>
  80e850:	843ffc04 	addi	r16,r16,-16
  80e854:	42000204 	addi	r8,r8,8
  80e858:	8c00130e 	bge	r17,r16,80e8a8 <___vfprintf_internal_r+0x828>
  80e85c:	014020b4 	movhi	r5,130
  80e860:	18c00404 	addi	r3,r3,16
  80e864:	10800044 	addi	r2,r2,1
  80e868:	29791784 	addi	r5,r5,-7074
  80e86c:	41400015 	stw	r5,0(r8)
  80e870:	44400115 	stw	r17,4(r8)
  80e874:	d8c02015 	stw	r3,128(sp)
  80e878:	d8801f15 	stw	r2,124(sp)
  80e87c:	90bff40e 	bge	r18,r2,80e850 <__alt_data_end+0xff80e850>
  80e880:	b009883a 	mov	r4,r22
  80e884:	b80b883a 	mov	r5,r23
  80e888:	d9801e04 	addi	r6,sp,120
  80e88c:	081513c0 	call	81513c <__sprint_r>
  80e890:	103eef1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80e894:	843ffc04 	addi	r16,r16,-16
  80e898:	d8c02017 	ldw	r3,128(sp)
  80e89c:	d8801f17 	ldw	r2,124(sp)
  80e8a0:	da000404 	addi	r8,sp,16
  80e8a4:	8c3fed16 	blt	r17,r16,80e85c <__alt_data_end+0xff80e85c>
  80e8a8:	dac03617 	ldw	r11,216(sp)
  80e8ac:	1c07883a 	add	r3,r3,r16
  80e8b0:	10800044 	addi	r2,r2,1
  80e8b4:	42c00015 	stw	r11,0(r8)
  80e8b8:	44000115 	stw	r16,4(r8)
  80e8bc:	d8c02015 	stw	r3,128(sp)
  80e8c0:	d8801f15 	stw	r2,124(sp)
  80e8c4:	010001c4 	movi	r4,7
  80e8c8:	2080060e 	bge	r4,r2,80e8e4 <___vfprintf_internal_r+0x864>
  80e8cc:	b009883a 	mov	r4,r22
  80e8d0:	b80b883a 	mov	r5,r23
  80e8d4:	d9801e04 	addi	r6,sp,120
  80e8d8:	081513c0 	call	81513c <__sprint_r>
  80e8dc:	103edc1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80e8e0:	d8c02017 	ldw	r3,128(sp)
  80e8e4:	d8802b17 	ldw	r2,172(sp)
  80e8e8:	db002e17 	ldw	r12,184(sp)
  80e8ec:	1300010e 	bge	r2,r12,80e8f4 <___vfprintf_internal_r+0x874>
  80e8f0:	6005883a 	mov	r2,r12
  80e8f4:	dac02f17 	ldw	r11,188(sp)
  80e8f8:	5897883a 	add	r11,r11,r2
  80e8fc:	dac02f15 	stw	r11,188(sp)
  80e900:	18020c1e 	bne	r3,zero,80f134 <___vfprintf_internal_r+0x10b4>
  80e904:	d8001f15 	stw	zero,124(sp)
  80e908:	da000404 	addi	r8,sp,16
  80e90c:	003e1706 	br	80e16c <__alt_data_end+0xff80e16c>
  80e910:	8c400414 	ori	r17,r17,16
  80e914:	d8c02a15 	stw	r3,168(sp)
  80e918:	8880080c 	andi	r2,r17,32
  80e91c:	10010126 	beq	r2,zero,80ed24 <___vfprintf_internal_r+0xca4>
  80e920:	db002d17 	ldw	r12,180(sp)
  80e924:	0005883a 	mov	r2,zero
  80e928:	64c00017 	ldw	r19,0(r12)
  80e92c:	67000117 	ldw	fp,4(r12)
  80e930:	63000204 	addi	r12,r12,8
  80e934:	db002d15 	stw	r12,180(sp)
  80e938:	9f06b03a 	or	r3,r19,fp
  80e93c:	d8002785 	stb	zero,158(sp)
  80e940:	da403215 	stw	r9,200(sp)
  80e944:	002b883a 	mov	r21,zero
  80e948:	003f0106 	br	80e550 <__alt_data_end+0xff80e550>
  80e94c:	8c400414 	ori	r17,r17,16
  80e950:	d8c02a15 	stw	r3,168(sp)
  80e954:	8880080c 	andi	r2,r17,32
  80e958:	1000e326 	beq	r2,zero,80ece8 <___vfprintf_internal_r+0xc68>
  80e95c:	dac02d17 	ldw	r11,180(sp)
  80e960:	00800044 	movi	r2,1
  80e964:	5cc00017 	ldw	r19,0(r11)
  80e968:	5f000117 	ldw	fp,4(r11)
  80e96c:	5ac00204 	addi	r11,r11,8
  80e970:	dac02d15 	stw	r11,180(sp)
  80e974:	9f06b03a 	or	r3,r19,fp
  80e978:	003ff006 	br	80e93c <__alt_data_end+0xff80e93c>
  80e97c:	db002d17 	ldw	r12,180(sp)
  80e980:	dac02d17 	ldw	r11,180(sp)
  80e984:	d8c02a15 	stw	r3,168(sp)
  80e988:	63000017 	ldw	r12,0(r12)
  80e98c:	5ac00117 	ldw	r11,4(r11)
  80e990:	d9802785 	stb	r6,158(sp)
  80e994:	6009883a 	mov	r4,r12
  80e998:	580b883a 	mov	r5,r11
  80e99c:	db003715 	stw	r12,220(sp)
  80e9a0:	da003f15 	stw	r8,252(sp)
  80e9a4:	da403e15 	stw	r9,248(sp)
  80e9a8:	dac03915 	stw	r11,228(sp)
  80e9ac:	0813d240 	call	813d24 <__fpclassifyd>
  80e9b0:	db002d17 	ldw	r12,180(sp)
  80e9b4:	04800044 	movi	r18,1
  80e9b8:	da003f17 	ldw	r8,252(sp)
  80e9bc:	64c00204 	addi	r19,r12,8
  80e9c0:	da403e17 	ldw	r9,248(sp)
  80e9c4:	d9003717 	ldw	r4,220(sp)
  80e9c8:	d9403917 	ldw	r5,228(sp)
  80e9cc:	14832b1e 	bne	r2,r18,80f67c <___vfprintf_internal_r+0x15fc>
  80e9d0:	000d883a 	mov	r6,zero
  80e9d4:	000f883a 	mov	r7,zero
  80e9d8:	08189000 	call	818900 <__ledf2>
  80e9dc:	da003f17 	ldw	r8,252(sp)
  80e9e0:	1004b716 	blt	r2,zero,80fcc0 <___vfprintf_internal_r+0x1c40>
  80e9e4:	dd402783 	ldbu	r21,158(sp)
  80e9e8:	008011c4 	movi	r2,71
  80e9ec:	14040e0e 	bge	r2,r16,80fa28 <___vfprintf_internal_r+0x19a8>
  80e9f0:	00c020b4 	movhi	r3,130
  80e9f4:	18f8fc04 	addi	r3,r3,-7184
  80e9f8:	d8c03115 	stw	r3,196(sp)
  80e9fc:	02c000c4 	movi	r11,3
  80ea00:	00bfdfc4 	movi	r2,-129
  80ea04:	dac02b15 	stw	r11,172(sp)
  80ea08:	88a2703a 	and	r17,r17,r2
  80ea0c:	dcc02d15 	stw	r19,180(sp)
  80ea10:	5825883a 	mov	r18,r11
  80ea14:	d8003215 	stw	zero,200(sp)
  80ea18:	d8003415 	stw	zero,208(sp)
  80ea1c:	003eeb06 	br	80e5cc <__alt_data_end+0xff80e5cc>
  80ea20:	db002d17 	ldw	r12,180(sp)
  80ea24:	00800c04 	movi	r2,48
  80ea28:	d8802705 	stb	r2,156(sp)
  80ea2c:	64c00017 	ldw	r19,0(r12)
  80ea30:	00801e04 	movi	r2,120
  80ea34:	d8802745 	stb	r2,157(sp)
  80ea38:	008020b4 	movhi	r2,130
  80ea3c:	10b90404 	addi	r2,r2,-7152
  80ea40:	63000104 	addi	r12,r12,4
  80ea44:	d8c02a15 	stw	r3,168(sp)
  80ea48:	d8803b15 	stw	r2,236(sp)
  80ea4c:	0039883a 	mov	fp,zero
  80ea50:	8c400094 	ori	r17,r17,2
  80ea54:	db002d15 	stw	r12,180(sp)
  80ea58:	00800084 	movi	r2,2
  80ea5c:	04001e04 	movi	r16,120
  80ea60:	9807883a 	mov	r3,r19
  80ea64:	003fb506 	br	80e93c <__alt_data_end+0xff80e93c>
  80ea68:	8c400214 	ori	r17,r17,8
  80ea6c:	1805883a 	mov	r2,r3
  80ea70:	1c000007 	ldb	r16,0(r3)
  80ea74:	003de706 	br	80e214 <__alt_data_end+0xff80e214>
  80ea78:	d8c02a15 	stw	r3,168(sp)
  80ea7c:	d9802785 	stb	r6,158(sp)
  80ea80:	8880080c 	andi	r2,r17,32
  80ea84:	d8c02d17 	ldw	r3,180(sp)
  80ea88:	103ea61e 	bne	r2,zero,80e524 <__alt_data_end+0xff80e524>
  80ea8c:	8880040c 	andi	r2,r17,16
  80ea90:	1002221e 	bne	r2,zero,80f31c <___vfprintf_internal_r+0x129c>
  80ea94:	8880100c 	andi	r2,r17,64
  80ea98:	10022026 	beq	r2,zero,80f31c <___vfprintf_internal_r+0x129c>
  80ea9c:	1cc0000f 	ldh	r19,0(r3)
  80eaa0:	db002d17 	ldw	r12,180(sp)
  80eaa4:	9839d7fa 	srai	fp,r19,31
  80eaa8:	63000104 	addi	r12,r12,4
  80eaac:	db002d15 	stw	r12,180(sp)
  80eab0:	e005883a 	mov	r2,fp
  80eab4:	003ea106 	br	80e53c <__alt_data_end+0xff80e53c>
  80eab8:	8c401014 	ori	r17,r17,64
  80eabc:	1805883a 	mov	r2,r3
  80eac0:	1c000007 	ldb	r16,0(r3)
  80eac4:	003dd306 	br	80e214 <__alt_data_end+0xff80e214>
  80eac8:	1c000007 	ldb	r16,0(r3)
  80eacc:	81c3e926 	beq	r16,r7,80fa74 <___vfprintf_internal_r+0x19f4>
  80ead0:	8c400414 	ori	r17,r17,16
  80ead4:	1805883a 	mov	r2,r3
  80ead8:	003dce06 	br	80e214 <__alt_data_end+0xff80e214>
  80eadc:	d8c02a15 	stw	r3,168(sp)
  80eae0:	d9802785 	stb	r6,158(sp)
  80eae4:	8880080c 	andi	r2,r17,32
  80eae8:	10034726 	beq	r2,zero,80f808 <___vfprintf_internal_r+0x1788>
  80eaec:	db002d17 	ldw	r12,180(sp)
  80eaf0:	dac02f17 	ldw	r11,188(sp)
  80eaf4:	60800017 	ldw	r2,0(r12)
  80eaf8:	5807d7fa 	srai	r3,r11,31
  80eafc:	63000104 	addi	r12,r12,4
  80eb00:	db002d15 	stw	r12,180(sp)
  80eb04:	12c00015 	stw	r11,0(r2)
  80eb08:	10c00115 	stw	r3,4(r2)
  80eb0c:	003d9706 	br	80e16c <__alt_data_end+0xff80e16c>
  80eb10:	030020b4 	movhi	r12,130
  80eb14:	6338ff04 	addi	r12,r12,-7172
  80eb18:	d8c02a15 	stw	r3,168(sp)
  80eb1c:	d9802785 	stb	r6,158(sp)
  80eb20:	db003b15 	stw	r12,236(sp)
  80eb24:	88c0080c 	andi	r3,r17,32
  80eb28:	d8802d17 	ldw	r2,180(sp)
  80eb2c:	18005b26 	beq	r3,zero,80ec9c <___vfprintf_internal_r+0xc1c>
  80eb30:	dac02d17 	ldw	r11,180(sp)
  80eb34:	14c00017 	ldw	r19,0(r2)
  80eb38:	17000117 	ldw	fp,4(r2)
  80eb3c:	5ac00204 	addi	r11,r11,8
  80eb40:	dac02d15 	stw	r11,180(sp)
  80eb44:	8880004c 	andi	r2,r17,1
  80eb48:	10022926 	beq	r2,zero,80f3f0 <___vfprintf_internal_r+0x1370>
  80eb4c:	9f06b03a 	or	r3,r19,fp
  80eb50:	18032b26 	beq	r3,zero,80f800 <___vfprintf_internal_r+0x1780>
  80eb54:	00800c04 	movi	r2,48
  80eb58:	d8802705 	stb	r2,156(sp)
  80eb5c:	dc002745 	stb	r16,157(sp)
  80eb60:	8c400094 	ori	r17,r17,2
  80eb64:	00800084 	movi	r2,2
  80eb68:	003f7406 	br	80e93c <__alt_data_end+0xff80e93c>
  80eb6c:	30803fcc 	andi	r2,r6,255
  80eb70:	1080201c 	xori	r2,r2,128
  80eb74:	10bfe004 	addi	r2,r2,-128
  80eb78:	1003351e 	bne	r2,zero,80f850 <___vfprintf_internal_r+0x17d0>
  80eb7c:	1805883a 	mov	r2,r3
  80eb80:	01800804 	movi	r6,32
  80eb84:	1c000007 	ldb	r16,0(r3)
  80eb88:	003da206 	br	80e214 <__alt_data_end+0xff80e214>
  80eb8c:	dac02d17 	ldw	r11,180(sp)
  80eb90:	db002d17 	ldw	r12,180(sp)
  80eb94:	5ac00017 	ldw	r11,0(r11)
  80eb98:	dac02e15 	stw	r11,184(sp)
  80eb9c:	62c00104 	addi	r11,r12,4
  80eba0:	db002e17 	ldw	r12,184(sp)
  80eba4:	6003ad16 	blt	r12,zero,80fa5c <___vfprintf_internal_r+0x19dc>
  80eba8:	dac02d15 	stw	r11,180(sp)
  80ebac:	1805883a 	mov	r2,r3
  80ebb0:	1c000007 	ldb	r16,0(r3)
  80ebb4:	003d9706 	br	80e214 <__alt_data_end+0xff80e214>
  80ebb8:	1805883a 	mov	r2,r3
  80ebbc:	01800ac4 	movi	r6,43
  80ebc0:	1c000007 	ldb	r16,0(r3)
  80ebc4:	003d9306 	br	80e214 <__alt_data_end+0xff80e214>
  80ebc8:	db002d17 	ldw	r12,180(sp)
  80ebcc:	d8c02a15 	stw	r3,168(sp)
  80ebd0:	00c00044 	movi	r3,1
  80ebd4:	60800017 	ldw	r2,0(r12)
  80ebd8:	63000104 	addi	r12,r12,4
  80ebdc:	d8c02b15 	stw	r3,172(sp)
  80ebe0:	d8002785 	stb	zero,158(sp)
  80ebe4:	d8801405 	stb	r2,80(sp)
  80ebe8:	db002d15 	stw	r12,180(sp)
  80ebec:	dac01404 	addi	r11,sp,80
  80ebf0:	1825883a 	mov	r18,r3
  80ebf4:	d8003215 	stw	zero,200(sp)
  80ebf8:	d8003415 	stw	zero,208(sp)
  80ebfc:	dac03115 	stw	r11,196(sp)
  80ec00:	0005883a 	mov	r2,zero
  80ec04:	003e7806 	br	80e5e8 <__alt_data_end+0xff80e5e8>
  80ec08:	dac02d17 	ldw	r11,180(sp)
  80ec0c:	db002d17 	ldw	r12,180(sp)
  80ec10:	d8c02a15 	stw	r3,168(sp)
  80ec14:	5ac00017 	ldw	r11,0(r11)
  80ec18:	d8002785 	stb	zero,158(sp)
  80ec1c:	64c00104 	addi	r19,r12,4
  80ec20:	dac03115 	stw	r11,196(sp)
  80ec24:	5803fe26 	beq	r11,zero,80fc20 <___vfprintf_internal_r+0x1ba0>
  80ec28:	d9003117 	ldw	r4,196(sp)
  80ec2c:	4803b416 	blt	r9,zero,80fb00 <___vfprintf_internal_r+0x1a80>
  80ec30:	480d883a 	mov	r6,r9
  80ec34:	000b883a 	mov	r5,zero
  80ec38:	da003f15 	stw	r8,252(sp)
  80ec3c:	da403e15 	stw	r9,248(sp)
  80ec40:	08122d80 	call	8122d8 <memchr>
  80ec44:	da003f17 	ldw	r8,252(sp)
  80ec48:	da403e17 	ldw	r9,248(sp)
  80ec4c:	10043026 	beq	r2,zero,80fd10 <___vfprintf_internal_r+0x1c90>
  80ec50:	d8c03117 	ldw	r3,196(sp)
  80ec54:	10e5c83a 	sub	r18,r2,r3
  80ec58:	4c836b16 	blt	r9,r18,80fa08 <___vfprintf_internal_r+0x1988>
  80ec5c:	9005883a 	mov	r2,r18
  80ec60:	9003ac16 	blt	r18,zero,80fb14 <___vfprintf_internal_r+0x1a94>
  80ec64:	dd402783 	ldbu	r21,158(sp)
  80ec68:	d8802b15 	stw	r2,172(sp)
  80ec6c:	dcc02d15 	stw	r19,180(sp)
  80ec70:	d8003215 	stw	zero,200(sp)
  80ec74:	d8003415 	stw	zero,208(sp)
  80ec78:	003e5406 	br	80e5cc <__alt_data_end+0xff80e5cc>
  80ec7c:	008020b4 	movhi	r2,130
  80ec80:	10b90404 	addi	r2,r2,-7152
  80ec84:	d8c02a15 	stw	r3,168(sp)
  80ec88:	d8803b15 	stw	r2,236(sp)
  80ec8c:	d9802785 	stb	r6,158(sp)
  80ec90:	88c0080c 	andi	r3,r17,32
  80ec94:	d8802d17 	ldw	r2,180(sp)
  80ec98:	183fa51e 	bne	r3,zero,80eb30 <__alt_data_end+0xff80eb30>
  80ec9c:	88c0040c 	andi	r3,r17,16
  80eca0:	1802ee26 	beq	r3,zero,80f85c <___vfprintf_internal_r+0x17dc>
  80eca4:	db002d17 	ldw	r12,180(sp)
  80eca8:	14c00017 	ldw	r19,0(r2)
  80ecac:	0039883a 	mov	fp,zero
  80ecb0:	63000104 	addi	r12,r12,4
  80ecb4:	db002d15 	stw	r12,180(sp)
  80ecb8:	003fa206 	br	80eb44 <__alt_data_end+0xff80eb44>
  80ecbc:	8c400054 	ori	r17,r17,1
  80ecc0:	1805883a 	mov	r2,r3
  80ecc4:	1c000007 	ldb	r16,0(r3)
  80ecc8:	003d5206 	br	80e214 <__alt_data_end+0xff80e214>
  80eccc:	8c400814 	ori	r17,r17,32
  80ecd0:	1805883a 	mov	r2,r3
  80ecd4:	1c000007 	ldb	r16,0(r3)
  80ecd8:	003d4e06 	br	80e214 <__alt_data_end+0xff80e214>
  80ecdc:	d8c02a15 	stw	r3,168(sp)
  80ece0:	8880080c 	andi	r2,r17,32
  80ece4:	103f1d1e 	bne	r2,zero,80e95c <__alt_data_end+0xff80e95c>
  80ece8:	8880040c 	andi	r2,r17,16
  80ecec:	1001b81e 	bne	r2,zero,80f3d0 <___vfprintf_internal_r+0x1350>
  80ecf0:	8880100c 	andi	r2,r17,64
  80ecf4:	1001b626 	beq	r2,zero,80f3d0 <___vfprintf_internal_r+0x1350>
  80ecf8:	dac02d17 	ldw	r11,180(sp)
  80ecfc:	0039883a 	mov	fp,zero
  80ed00:	00800044 	movi	r2,1
  80ed04:	5cc0000b 	ldhu	r19,0(r11)
  80ed08:	5ac00104 	addi	r11,r11,4
  80ed0c:	dac02d15 	stw	r11,180(sp)
  80ed10:	9807883a 	mov	r3,r19
  80ed14:	003f0906 	br	80e93c <__alt_data_end+0xff80e93c>
  80ed18:	d8c02a15 	stw	r3,168(sp)
  80ed1c:	8880080c 	andi	r2,r17,32
  80ed20:	103eff1e 	bne	r2,zero,80e920 <__alt_data_end+0xff80e920>
  80ed24:	8880040c 	andi	r2,r17,16
  80ed28:	1001a11e 	bne	r2,zero,80f3b0 <___vfprintf_internal_r+0x1330>
  80ed2c:	8880100c 	andi	r2,r17,64
  80ed30:	10019f26 	beq	r2,zero,80f3b0 <___vfprintf_internal_r+0x1330>
  80ed34:	db002d17 	ldw	r12,180(sp)
  80ed38:	0039883a 	mov	fp,zero
  80ed3c:	0005883a 	mov	r2,zero
  80ed40:	64c0000b 	ldhu	r19,0(r12)
  80ed44:	63000104 	addi	r12,r12,4
  80ed48:	db002d15 	stw	r12,180(sp)
  80ed4c:	9807883a 	mov	r3,r19
  80ed50:	003efa06 	br	80e93c <__alt_data_end+0xff80e93c>
  80ed54:	d8c02a15 	stw	r3,168(sp)
  80ed58:	d9802785 	stb	r6,158(sp)
  80ed5c:	803db626 	beq	r16,zero,80e438 <__alt_data_end+0xff80e438>
  80ed60:	00c00044 	movi	r3,1
  80ed64:	d8c02b15 	stw	r3,172(sp)
  80ed68:	dc001405 	stb	r16,80(sp)
  80ed6c:	d8002785 	stb	zero,158(sp)
  80ed70:	003f9e06 	br	80ebec <__alt_data_end+0xff80ebec>
  80ed74:	d8c02017 	ldw	r3,128(sp)
  80ed78:	003e5306 	br	80e6c8 <__alt_data_end+0xff80e6c8>
  80ed7c:	10803fcc 	andi	r2,r2,255
  80ed80:	00c00044 	movi	r3,1
  80ed84:	10fdfa1e 	bne	r2,r3,80e570 <__alt_data_end+0xff80e570>
  80ed88:	e000021e 	bne	fp,zero,80ed94 <___vfprintf_internal_r+0xd14>
  80ed8c:	00800244 	movi	r2,9
  80ed90:	14c0202e 	bgeu	r2,r19,80ee14 <___vfprintf_internal_r+0xd94>
  80ed94:	dc002b15 	stw	r16,172(sp)
  80ed98:	dc402c15 	stw	r17,176(sp)
  80ed9c:	9821883a 	mov	r16,r19
  80eda0:	e023883a 	mov	r17,fp
  80eda4:	dc801e04 	addi	r18,sp,120
  80eda8:	4827883a 	mov	r19,r9
  80edac:	4039883a 	mov	fp,r8
  80edb0:	8009883a 	mov	r4,r16
  80edb4:	880b883a 	mov	r5,r17
  80edb8:	01800284 	movi	r6,10
  80edbc:	000f883a 	mov	r7,zero
  80edc0:	08170a40 	call	8170a4 <__umoddi3>
  80edc4:	10800c04 	addi	r2,r2,48
  80edc8:	94bfffc4 	addi	r18,r18,-1
  80edcc:	8009883a 	mov	r4,r16
  80edd0:	880b883a 	mov	r5,r17
  80edd4:	01800284 	movi	r6,10
  80edd8:	000f883a 	mov	r7,zero
  80eddc:	90800005 	stb	r2,0(r18)
  80ede0:	0816ae40 	call	816ae4 <__udivdi3>
  80ede4:	1021883a 	mov	r16,r2
  80ede8:	10c4b03a 	or	r2,r2,r3
  80edec:	1823883a 	mov	r17,r3
  80edf0:	103fef1e 	bne	r2,zero,80edb0 <__alt_data_end+0xff80edb0>
  80edf4:	dac02817 	ldw	r11,160(sp)
  80edf8:	dc803115 	stw	r18,196(sp)
  80edfc:	dc002b17 	ldw	r16,172(sp)
  80ee00:	dc402c17 	ldw	r17,176(sp)
  80ee04:	9813883a 	mov	r9,r19
  80ee08:	e011883a 	mov	r8,fp
  80ee0c:	5ca5c83a 	sub	r18,r11,r18
  80ee10:	003de906 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80ee14:	9cc00c04 	addi	r19,r19,48
  80ee18:	d8c01dc4 	addi	r3,sp,119
  80ee1c:	dcc01dc5 	stb	r19,119(sp)
  80ee20:	dc803c17 	ldw	r18,240(sp)
  80ee24:	d8c03115 	stw	r3,196(sp)
  80ee28:	003de306 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80ee2c:	00801944 	movi	r2,101
  80ee30:	1400710e 	bge	r2,r16,80eff8 <___vfprintf_internal_r+0xf78>
  80ee34:	d9003717 	ldw	r4,220(sp)
  80ee38:	d9403917 	ldw	r5,228(sp)
  80ee3c:	000d883a 	mov	r6,zero
  80ee40:	000f883a 	mov	r7,zero
  80ee44:	d8c03d15 	stw	r3,244(sp)
  80ee48:	da003f15 	stw	r8,252(sp)
  80ee4c:	081879c0 	call	81879c <__eqdf2>
  80ee50:	d8c03d17 	ldw	r3,244(sp)
  80ee54:	da003f17 	ldw	r8,252(sp)
  80ee58:	1000ef1e 	bne	r2,zero,80f218 <___vfprintf_internal_r+0x1198>
  80ee5c:	d8801f17 	ldw	r2,124(sp)
  80ee60:	010020b4 	movhi	r4,130
  80ee64:	21390b04 	addi	r4,r4,-7124
  80ee68:	18c00044 	addi	r3,r3,1
  80ee6c:	10800044 	addi	r2,r2,1
  80ee70:	41000015 	stw	r4,0(r8)
  80ee74:	01000044 	movi	r4,1
  80ee78:	41000115 	stw	r4,4(r8)
  80ee7c:	d8c02015 	stw	r3,128(sp)
  80ee80:	d8801f15 	stw	r2,124(sp)
  80ee84:	010001c4 	movi	r4,7
  80ee88:	20828e16 	blt	r4,r2,80f8c4 <___vfprintf_internal_r+0x1844>
  80ee8c:	42000204 	addi	r8,r8,8
  80ee90:	d8802617 	ldw	r2,152(sp)
  80ee94:	dac03317 	ldw	r11,204(sp)
  80ee98:	12c00216 	blt	r2,r11,80eea4 <___vfprintf_internal_r+0xe24>
  80ee9c:	8880004c 	andi	r2,r17,1
  80eea0:	103e5d26 	beq	r2,zero,80e818 <__alt_data_end+0xff80e818>
  80eea4:	db003817 	ldw	r12,224(sp)
  80eea8:	d8801f17 	ldw	r2,124(sp)
  80eeac:	dac03517 	ldw	r11,212(sp)
  80eeb0:	1b07883a 	add	r3,r3,r12
  80eeb4:	10800044 	addi	r2,r2,1
  80eeb8:	42c00015 	stw	r11,0(r8)
  80eebc:	43000115 	stw	r12,4(r8)
  80eec0:	d8c02015 	stw	r3,128(sp)
  80eec4:	d8801f15 	stw	r2,124(sp)
  80eec8:	010001c4 	movi	r4,7
  80eecc:	2082ed16 	blt	r4,r2,80fa84 <___vfprintf_internal_r+0x1a04>
  80eed0:	42000204 	addi	r8,r8,8
  80eed4:	db003317 	ldw	r12,204(sp)
  80eed8:	643fffc4 	addi	r16,r12,-1
  80eedc:	043e4e0e 	bge	zero,r16,80e818 <__alt_data_end+0xff80e818>
  80eee0:	04800404 	movi	r18,16
  80eee4:	d8801f17 	ldw	r2,124(sp)
  80eee8:	94007e0e 	bge	r18,r16,80f0e4 <___vfprintf_internal_r+0x1064>
  80eeec:	014020b4 	movhi	r5,130
  80eef0:	29791384 	addi	r5,r5,-7090
  80eef4:	d9402c15 	stw	r5,176(sp)
  80eef8:	054001c4 	movi	r21,7
  80eefc:	00000306 	br	80ef0c <___vfprintf_internal_r+0xe8c>
  80ef00:	42000204 	addi	r8,r8,8
  80ef04:	843ffc04 	addi	r16,r16,-16
  80ef08:	9400790e 	bge	r18,r16,80f0f0 <___vfprintf_internal_r+0x1070>
  80ef0c:	18c00404 	addi	r3,r3,16
  80ef10:	10800044 	addi	r2,r2,1
  80ef14:	45000015 	stw	r20,0(r8)
  80ef18:	44800115 	stw	r18,4(r8)
  80ef1c:	d8c02015 	stw	r3,128(sp)
  80ef20:	d8801f15 	stw	r2,124(sp)
  80ef24:	a8bff60e 	bge	r21,r2,80ef00 <__alt_data_end+0xff80ef00>
  80ef28:	b009883a 	mov	r4,r22
  80ef2c:	b80b883a 	mov	r5,r23
  80ef30:	d9801e04 	addi	r6,sp,120
  80ef34:	081513c0 	call	81513c <__sprint_r>
  80ef38:	103d451e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80ef3c:	d8c02017 	ldw	r3,128(sp)
  80ef40:	d8801f17 	ldw	r2,124(sp)
  80ef44:	da000404 	addi	r8,sp,16
  80ef48:	003fee06 	br	80ef04 <__alt_data_end+0xff80ef04>
  80ef4c:	dac02e17 	ldw	r11,184(sp)
  80ef50:	db002b17 	ldw	r12,172(sp)
  80ef54:	5b2bc83a 	sub	r21,r11,r12
  80ef58:	057df90e 	bge	zero,r21,80e740 <__alt_data_end+0xff80e740>
  80ef5c:	07000404 	movi	fp,16
  80ef60:	d8801f17 	ldw	r2,124(sp)
  80ef64:	e543640e 	bge	fp,r21,80fcf8 <___vfprintf_internal_r+0x1c78>
  80ef68:	014020b4 	movhi	r5,130
  80ef6c:	29791384 	addi	r5,r5,-7090
  80ef70:	d9402c15 	stw	r5,176(sp)
  80ef74:	04c001c4 	movi	r19,7
  80ef78:	00000306 	br	80ef88 <___vfprintf_internal_r+0xf08>
  80ef7c:	ad7ffc04 	addi	r21,r21,-16
  80ef80:	42000204 	addi	r8,r8,8
  80ef84:	e540110e 	bge	fp,r21,80efcc <___vfprintf_internal_r+0xf4c>
  80ef88:	18c00404 	addi	r3,r3,16
  80ef8c:	10800044 	addi	r2,r2,1
  80ef90:	45000015 	stw	r20,0(r8)
  80ef94:	47000115 	stw	fp,4(r8)
  80ef98:	d8c02015 	stw	r3,128(sp)
  80ef9c:	d8801f15 	stw	r2,124(sp)
  80efa0:	98bff60e 	bge	r19,r2,80ef7c <__alt_data_end+0xff80ef7c>
  80efa4:	b009883a 	mov	r4,r22
  80efa8:	b80b883a 	mov	r5,r23
  80efac:	d9801e04 	addi	r6,sp,120
  80efb0:	081513c0 	call	81513c <__sprint_r>
  80efb4:	103d261e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80efb8:	ad7ffc04 	addi	r21,r21,-16
  80efbc:	d8c02017 	ldw	r3,128(sp)
  80efc0:	d8801f17 	ldw	r2,124(sp)
  80efc4:	da000404 	addi	r8,sp,16
  80efc8:	e57fef16 	blt	fp,r21,80ef88 <__alt_data_end+0xff80ef88>
  80efcc:	dac02c17 	ldw	r11,176(sp)
  80efd0:	1d47883a 	add	r3,r3,r21
  80efd4:	10800044 	addi	r2,r2,1
  80efd8:	42c00015 	stw	r11,0(r8)
  80efdc:	45400115 	stw	r21,4(r8)
  80efe0:	d8c02015 	stw	r3,128(sp)
  80efe4:	d8801f15 	stw	r2,124(sp)
  80efe8:	010001c4 	movi	r4,7
  80efec:	20819116 	blt	r4,r2,80f634 <___vfprintf_internal_r+0x15b4>
  80eff0:	42000204 	addi	r8,r8,8
  80eff4:	003dd206 	br	80e740 <__alt_data_end+0xff80e740>
  80eff8:	db003317 	ldw	r12,204(sp)
  80effc:	00800044 	movi	r2,1
  80f000:	18c00044 	addi	r3,r3,1
  80f004:	1301530e 	bge	r2,r12,80f554 <___vfprintf_internal_r+0x14d4>
  80f008:	dc001f17 	ldw	r16,124(sp)
  80f00c:	dac03117 	ldw	r11,196(sp)
  80f010:	00800044 	movi	r2,1
  80f014:	84000044 	addi	r16,r16,1
  80f018:	40800115 	stw	r2,4(r8)
  80f01c:	42c00015 	stw	r11,0(r8)
  80f020:	d8c02015 	stw	r3,128(sp)
  80f024:	dc001f15 	stw	r16,124(sp)
  80f028:	008001c4 	movi	r2,7
  80f02c:	14016b16 	blt	r2,r16,80f5dc <___vfprintf_internal_r+0x155c>
  80f030:	42000204 	addi	r8,r8,8
  80f034:	db003817 	ldw	r12,224(sp)
  80f038:	dac03517 	ldw	r11,212(sp)
  80f03c:	84000044 	addi	r16,r16,1
  80f040:	1b07883a 	add	r3,r3,r12
  80f044:	42c00015 	stw	r11,0(r8)
  80f048:	43000115 	stw	r12,4(r8)
  80f04c:	d8c02015 	stw	r3,128(sp)
  80f050:	dc001f15 	stw	r16,124(sp)
  80f054:	008001c4 	movi	r2,7
  80f058:	14016916 	blt	r2,r16,80f600 <___vfprintf_internal_r+0x1580>
  80f05c:	44800204 	addi	r18,r8,8
  80f060:	d9003717 	ldw	r4,220(sp)
  80f064:	d9403917 	ldw	r5,228(sp)
  80f068:	000d883a 	mov	r6,zero
  80f06c:	000f883a 	mov	r7,zero
  80f070:	d8c03d15 	stw	r3,244(sp)
  80f074:	081879c0 	call	81879c <__eqdf2>
  80f078:	d8c03d17 	ldw	r3,244(sp)
  80f07c:	db003317 	ldw	r12,204(sp)
  80f080:	1000ad26 	beq	r2,zero,80f338 <___vfprintf_internal_r+0x12b8>
  80f084:	dac03117 	ldw	r11,196(sp)
  80f088:	60bfffc4 	addi	r2,r12,-1
  80f08c:	1887883a 	add	r3,r3,r2
  80f090:	59000044 	addi	r4,r11,1
  80f094:	84000044 	addi	r16,r16,1
  80f098:	90800115 	stw	r2,4(r18)
  80f09c:	91000015 	stw	r4,0(r18)
  80f0a0:	d8c02015 	stw	r3,128(sp)
  80f0a4:	dc001f15 	stw	r16,124(sp)
  80f0a8:	008001c4 	movi	r2,7
  80f0ac:	14014216 	blt	r2,r16,80f5b8 <___vfprintf_internal_r+0x1538>
  80f0b0:	94800204 	addi	r18,r18,8
  80f0b4:	dac03a17 	ldw	r11,232(sp)
  80f0b8:	dd4022c4 	addi	r21,sp,139
  80f0bc:	84000044 	addi	r16,r16,1
  80f0c0:	1ac7883a 	add	r3,r3,r11
  80f0c4:	95400015 	stw	r21,0(r18)
  80f0c8:	92c00115 	stw	r11,4(r18)
  80f0cc:	d8c02015 	stw	r3,128(sp)
  80f0d0:	dc001f15 	stw	r16,124(sp)
  80f0d4:	008001c4 	movi	r2,7
  80f0d8:	14000e16 	blt	r2,r16,80f114 <___vfprintf_internal_r+0x1094>
  80f0dc:	92000204 	addi	r8,r18,8
  80f0e0:	003dcd06 	br	80e818 <__alt_data_end+0xff80e818>
  80f0e4:	010020b4 	movhi	r4,130
  80f0e8:	21391384 	addi	r4,r4,-7090
  80f0ec:	d9002c15 	stw	r4,176(sp)
  80f0f0:	dac02c17 	ldw	r11,176(sp)
  80f0f4:	1c07883a 	add	r3,r3,r16
  80f0f8:	44000115 	stw	r16,4(r8)
  80f0fc:	42c00015 	stw	r11,0(r8)
  80f100:	10800044 	addi	r2,r2,1
  80f104:	d8c02015 	stw	r3,128(sp)
  80f108:	d8801f15 	stw	r2,124(sp)
  80f10c:	010001c4 	movi	r4,7
  80f110:	20bdc00e 	bge	r4,r2,80e814 <__alt_data_end+0xff80e814>
  80f114:	b009883a 	mov	r4,r22
  80f118:	b80b883a 	mov	r5,r23
  80f11c:	d9801e04 	addi	r6,sp,120
  80f120:	081513c0 	call	81513c <__sprint_r>
  80f124:	103cca1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f128:	d8c02017 	ldw	r3,128(sp)
  80f12c:	da000404 	addi	r8,sp,16
  80f130:	003db906 	br	80e818 <__alt_data_end+0xff80e818>
  80f134:	b009883a 	mov	r4,r22
  80f138:	b80b883a 	mov	r5,r23
  80f13c:	d9801e04 	addi	r6,sp,120
  80f140:	081513c0 	call	81513c <__sprint_r>
  80f144:	103def26 	beq	r2,zero,80e904 <__alt_data_end+0xff80e904>
  80f148:	003cc106 	br	80e450 <__alt_data_end+0xff80e450>
  80f14c:	10803fcc 	andi	r2,r2,255
  80f150:	1000651e 	bne	r2,zero,80f2e8 <___vfprintf_internal_r+0x1268>
  80f154:	8880004c 	andi	r2,r17,1
  80f158:	10013226 	beq	r2,zero,80f624 <___vfprintf_internal_r+0x15a4>
  80f15c:	00800c04 	movi	r2,48
  80f160:	d8c01dc4 	addi	r3,sp,119
  80f164:	d8801dc5 	stb	r2,119(sp)
  80f168:	dc803c17 	ldw	r18,240(sp)
  80f16c:	d8c03115 	stw	r3,196(sp)
  80f170:	003d1106 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80f174:	b009883a 	mov	r4,r22
  80f178:	b80b883a 	mov	r5,r23
  80f17c:	d9801e04 	addi	r6,sp,120
  80f180:	081513c0 	call	81513c <__sprint_r>
  80f184:	103cb21e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f188:	d8c02017 	ldw	r3,128(sp)
  80f18c:	da000404 	addi	r8,sp,16
  80f190:	003d9406 	br	80e7e4 <__alt_data_end+0xff80e7e4>
  80f194:	b009883a 	mov	r4,r22
  80f198:	b80b883a 	mov	r5,r23
  80f19c:	d9801e04 	addi	r6,sp,120
  80f1a0:	081513c0 	call	81513c <__sprint_r>
  80f1a4:	103caa1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f1a8:	d8c02017 	ldw	r3,128(sp)
  80f1ac:	da000404 	addi	r8,sp,16
  80f1b0:	003d5206 	br	80e6fc <__alt_data_end+0xff80e6fc>
  80f1b4:	b009883a 	mov	r4,r22
  80f1b8:	b80b883a 	mov	r5,r23
  80f1bc:	d9801e04 	addi	r6,sp,120
  80f1c0:	081513c0 	call	81513c <__sprint_r>
  80f1c4:	103ca21e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f1c8:	d8c02017 	ldw	r3,128(sp)
  80f1cc:	da000404 	addi	r8,sp,16
  80f1d0:	003d5806 	br	80e734 <__alt_data_end+0xff80e734>
  80f1d4:	d9403b17 	ldw	r5,236(sp)
  80f1d8:	d8c01e04 	addi	r3,sp,120
  80f1dc:	988003cc 	andi	r2,r19,15
  80f1e0:	e008973a 	slli	r4,fp,28
  80f1e4:	2885883a 	add	r2,r5,r2
  80f1e8:	9826d13a 	srli	r19,r19,4
  80f1ec:	10800003 	ldbu	r2,0(r2)
  80f1f0:	e038d13a 	srli	fp,fp,4
  80f1f4:	18ffffc4 	addi	r3,r3,-1
  80f1f8:	24e6b03a 	or	r19,r4,r19
  80f1fc:	18800005 	stb	r2,0(r3)
  80f200:	9f04b03a 	or	r2,r19,fp
  80f204:	103ff51e 	bne	r2,zero,80f1dc <__alt_data_end+0xff80f1dc>
  80f208:	db002817 	ldw	r12,160(sp)
  80f20c:	d8c03115 	stw	r3,196(sp)
  80f210:	60e5c83a 	sub	r18,r12,r3
  80f214:	003ce806 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80f218:	dc002617 	ldw	r16,152(sp)
  80f21c:	0401b10e 	bge	zero,r16,80f8e4 <___vfprintf_internal_r+0x1864>
  80f220:	db003117 	ldw	r12,196(sp)
  80f224:	dac03317 	ldw	r11,204(sp)
  80f228:	62e1883a 	add	r16,r12,r11
  80f22c:	db003417 	ldw	r12,208(sp)
  80f230:	5825883a 	mov	r18,r11
  80f234:	62c0010e 	bge	r12,r11,80f23c <___vfprintf_internal_r+0x11bc>
  80f238:	6025883a 	mov	r18,r12
  80f23c:	04800b0e 	bge	zero,r18,80f26c <___vfprintf_internal_r+0x11ec>
  80f240:	d8801f17 	ldw	r2,124(sp)
  80f244:	dac03117 	ldw	r11,196(sp)
  80f248:	1c87883a 	add	r3,r3,r18
  80f24c:	10800044 	addi	r2,r2,1
  80f250:	42c00015 	stw	r11,0(r8)
  80f254:	44800115 	stw	r18,4(r8)
  80f258:	d8c02015 	stw	r3,128(sp)
  80f25c:	d8801f15 	stw	r2,124(sp)
  80f260:	010001c4 	movi	r4,7
  80f264:	20824f16 	blt	r4,r2,80fba4 <___vfprintf_internal_r+0x1b24>
  80f268:	42000204 	addi	r8,r8,8
  80f26c:	90024b16 	blt	r18,zero,80fb9c <___vfprintf_internal_r+0x1b1c>
  80f270:	db003417 	ldw	r12,208(sp)
  80f274:	64a5c83a 	sub	r18,r12,r18
  80f278:	0480730e 	bge	zero,r18,80f448 <___vfprintf_internal_r+0x13c8>
  80f27c:	05400404 	movi	r21,16
  80f280:	d8801f17 	ldw	r2,124(sp)
  80f284:	ac817d0e 	bge	r21,r18,80f87c <___vfprintf_internal_r+0x17fc>
  80f288:	014020b4 	movhi	r5,130
  80f28c:	29791384 	addi	r5,r5,-7090
  80f290:	d9402c15 	stw	r5,176(sp)
  80f294:	070001c4 	movi	fp,7
  80f298:	00000306 	br	80f2a8 <___vfprintf_internal_r+0x1228>
  80f29c:	42000204 	addi	r8,r8,8
  80f2a0:	94bffc04 	addi	r18,r18,-16
  80f2a4:	ac81780e 	bge	r21,r18,80f888 <___vfprintf_internal_r+0x1808>
  80f2a8:	18c00404 	addi	r3,r3,16
  80f2ac:	10800044 	addi	r2,r2,1
  80f2b0:	45000015 	stw	r20,0(r8)
  80f2b4:	45400115 	stw	r21,4(r8)
  80f2b8:	d8c02015 	stw	r3,128(sp)
  80f2bc:	d8801f15 	stw	r2,124(sp)
  80f2c0:	e0bff60e 	bge	fp,r2,80f29c <__alt_data_end+0xff80f29c>
  80f2c4:	b009883a 	mov	r4,r22
  80f2c8:	b80b883a 	mov	r5,r23
  80f2cc:	d9801e04 	addi	r6,sp,120
  80f2d0:	081513c0 	call	81513c <__sprint_r>
  80f2d4:	103c5e1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f2d8:	d8c02017 	ldw	r3,128(sp)
  80f2dc:	d8801f17 	ldw	r2,124(sp)
  80f2e0:	da000404 	addi	r8,sp,16
  80f2e4:	003fee06 	br	80f2a0 <__alt_data_end+0xff80f2a0>
  80f2e8:	dac01e04 	addi	r11,sp,120
  80f2ec:	0025883a 	mov	r18,zero
  80f2f0:	dac03115 	stw	r11,196(sp)
  80f2f4:	003cb006 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80f2f8:	b009883a 	mov	r4,r22
  80f2fc:	b80b883a 	mov	r5,r23
  80f300:	d9801e04 	addi	r6,sp,120
  80f304:	081513c0 	call	81513c <__sprint_r>
  80f308:	103c511e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f30c:	d8c02017 	ldw	r3,128(sp)
  80f310:	d8802787 	ldb	r2,158(sp)
  80f314:	da000404 	addi	r8,sp,16
  80f318:	003ceb06 	br	80e6c8 <__alt_data_end+0xff80e6c8>
  80f31c:	1cc00017 	ldw	r19,0(r3)
  80f320:	dac02d17 	ldw	r11,180(sp)
  80f324:	9839d7fa 	srai	fp,r19,31
  80f328:	5ac00104 	addi	r11,r11,4
  80f32c:	dac02d15 	stw	r11,180(sp)
  80f330:	e005883a 	mov	r2,fp
  80f334:	003c8106 	br	80e53c <__alt_data_end+0xff80e53c>
  80f338:	657fffc4 	addi	r21,r12,-1
  80f33c:	057f5d0e 	bge	zero,r21,80f0b4 <__alt_data_end+0xff80f0b4>
  80f340:	07000404 	movi	fp,16
  80f344:	e540900e 	bge	fp,r21,80f588 <___vfprintf_internal_r+0x1508>
  80f348:	010020b4 	movhi	r4,130
  80f34c:	21391384 	addi	r4,r4,-7090
  80f350:	d9002c15 	stw	r4,176(sp)
  80f354:	01c001c4 	movi	r7,7
  80f358:	00000306 	br	80f368 <___vfprintf_internal_r+0x12e8>
  80f35c:	94800204 	addi	r18,r18,8
  80f360:	ad7ffc04 	addi	r21,r21,-16
  80f364:	e5408b0e 	bge	fp,r21,80f594 <___vfprintf_internal_r+0x1514>
  80f368:	18c00404 	addi	r3,r3,16
  80f36c:	84000044 	addi	r16,r16,1
  80f370:	95000015 	stw	r20,0(r18)
  80f374:	97000115 	stw	fp,4(r18)
  80f378:	d8c02015 	stw	r3,128(sp)
  80f37c:	dc001f15 	stw	r16,124(sp)
  80f380:	3c3ff60e 	bge	r7,r16,80f35c <__alt_data_end+0xff80f35c>
  80f384:	b009883a 	mov	r4,r22
  80f388:	b80b883a 	mov	r5,r23
  80f38c:	d9801e04 	addi	r6,sp,120
  80f390:	d9c03d15 	stw	r7,244(sp)
  80f394:	081513c0 	call	81513c <__sprint_r>
  80f398:	d9c03d17 	ldw	r7,244(sp)
  80f39c:	103c2c1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f3a0:	d8c02017 	ldw	r3,128(sp)
  80f3a4:	dc001f17 	ldw	r16,124(sp)
  80f3a8:	dc800404 	addi	r18,sp,16
  80f3ac:	003fec06 	br	80f360 <__alt_data_end+0xff80f360>
  80f3b0:	dac02d17 	ldw	r11,180(sp)
  80f3b4:	0039883a 	mov	fp,zero
  80f3b8:	0005883a 	mov	r2,zero
  80f3bc:	5cc00017 	ldw	r19,0(r11)
  80f3c0:	5ac00104 	addi	r11,r11,4
  80f3c4:	dac02d15 	stw	r11,180(sp)
  80f3c8:	9807883a 	mov	r3,r19
  80f3cc:	003d5b06 	br	80e93c <__alt_data_end+0xff80e93c>
  80f3d0:	db002d17 	ldw	r12,180(sp)
  80f3d4:	0039883a 	mov	fp,zero
  80f3d8:	00800044 	movi	r2,1
  80f3dc:	64c00017 	ldw	r19,0(r12)
  80f3e0:	63000104 	addi	r12,r12,4
  80f3e4:	db002d15 	stw	r12,180(sp)
  80f3e8:	9807883a 	mov	r3,r19
  80f3ec:	003d5306 	br	80e93c <__alt_data_end+0xff80e93c>
  80f3f0:	00800084 	movi	r2,2
  80f3f4:	9f06b03a 	or	r3,r19,fp
  80f3f8:	003d5006 	br	80e93c <__alt_data_end+0xff80e93c>
  80f3fc:	10803fcc 	andi	r2,r2,255
  80f400:	1080201c 	xori	r2,r2,128
  80f404:	10bfe004 	addi	r2,r2,-128
  80f408:	01000c04 	movi	r4,48
  80f40c:	1101a526 	beq	r2,r4,80faa4 <___vfprintf_internal_r+0x1a24>
  80f410:	dac03117 	ldw	r11,196(sp)
  80f414:	db002817 	ldw	r12,160(sp)
  80f418:	193fffc5 	stb	r4,-1(r3)
  80f41c:	5affffc4 	addi	r11,r11,-1
  80f420:	dac03115 	stw	r11,196(sp)
  80f424:	62e5c83a 	sub	r18,r12,r11
  80f428:	003c6306 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80f42c:	b009883a 	mov	r4,r22
  80f430:	b80b883a 	mov	r5,r23
  80f434:	d9801e04 	addi	r6,sp,120
  80f438:	081513c0 	call	81513c <__sprint_r>
  80f43c:	103c041e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f440:	d8c02017 	ldw	r3,128(sp)
  80f444:	da000404 	addi	r8,sp,16
  80f448:	db003117 	ldw	r12,196(sp)
  80f44c:	dac03417 	ldw	r11,208(sp)
  80f450:	d8802617 	ldw	r2,152(sp)
  80f454:	62e5883a 	add	r18,r12,r11
  80f458:	db003317 	ldw	r12,204(sp)
  80f45c:	13000216 	blt	r2,r12,80f468 <___vfprintf_internal_r+0x13e8>
  80f460:	8900004c 	andi	r4,r17,1
  80f464:	20000c26 	beq	r4,zero,80f498 <___vfprintf_internal_r+0x1418>
  80f468:	dac03817 	ldw	r11,224(sp)
  80f46c:	d9001f17 	ldw	r4,124(sp)
  80f470:	db003517 	ldw	r12,212(sp)
  80f474:	1ac7883a 	add	r3,r3,r11
  80f478:	21000044 	addi	r4,r4,1
  80f47c:	43000015 	stw	r12,0(r8)
  80f480:	42c00115 	stw	r11,4(r8)
  80f484:	d8c02015 	stw	r3,128(sp)
  80f488:	d9001f15 	stw	r4,124(sp)
  80f48c:	014001c4 	movi	r5,7
  80f490:	2901cc16 	blt	r5,r4,80fbc4 <___vfprintf_internal_r+0x1b44>
  80f494:	42000204 	addi	r8,r8,8
  80f498:	dac03317 	ldw	r11,204(sp)
  80f49c:	8489c83a 	sub	r4,r16,r18
  80f4a0:	5885c83a 	sub	r2,r11,r2
  80f4a4:	1021883a 	mov	r16,r2
  80f4a8:	2080010e 	bge	r4,r2,80f4b0 <___vfprintf_internal_r+0x1430>
  80f4ac:	2021883a 	mov	r16,r4
  80f4b0:	04000a0e 	bge	zero,r16,80f4dc <___vfprintf_internal_r+0x145c>
  80f4b4:	d9001f17 	ldw	r4,124(sp)
  80f4b8:	1c07883a 	add	r3,r3,r16
  80f4bc:	44800015 	stw	r18,0(r8)
  80f4c0:	21000044 	addi	r4,r4,1
  80f4c4:	44000115 	stw	r16,4(r8)
  80f4c8:	d8c02015 	stw	r3,128(sp)
  80f4cc:	d9001f15 	stw	r4,124(sp)
  80f4d0:	014001c4 	movi	r5,7
  80f4d4:	2901e316 	blt	r5,r4,80fc64 <___vfprintf_internal_r+0x1be4>
  80f4d8:	42000204 	addi	r8,r8,8
  80f4dc:	8001df16 	blt	r16,zero,80fc5c <___vfprintf_internal_r+0x1bdc>
  80f4e0:	1421c83a 	sub	r16,r2,r16
  80f4e4:	043ccc0e 	bge	zero,r16,80e818 <__alt_data_end+0xff80e818>
  80f4e8:	04800404 	movi	r18,16
  80f4ec:	d8801f17 	ldw	r2,124(sp)
  80f4f0:	943efc0e 	bge	r18,r16,80f0e4 <__alt_data_end+0xff80f0e4>
  80f4f4:	014020b4 	movhi	r5,130
  80f4f8:	29791384 	addi	r5,r5,-7090
  80f4fc:	d9402c15 	stw	r5,176(sp)
  80f500:	054001c4 	movi	r21,7
  80f504:	00000306 	br	80f514 <___vfprintf_internal_r+0x1494>
  80f508:	42000204 	addi	r8,r8,8
  80f50c:	843ffc04 	addi	r16,r16,-16
  80f510:	943ef70e 	bge	r18,r16,80f0f0 <__alt_data_end+0xff80f0f0>
  80f514:	18c00404 	addi	r3,r3,16
  80f518:	10800044 	addi	r2,r2,1
  80f51c:	45000015 	stw	r20,0(r8)
  80f520:	44800115 	stw	r18,4(r8)
  80f524:	d8c02015 	stw	r3,128(sp)
  80f528:	d8801f15 	stw	r2,124(sp)
  80f52c:	a8bff60e 	bge	r21,r2,80f508 <__alt_data_end+0xff80f508>
  80f530:	b009883a 	mov	r4,r22
  80f534:	b80b883a 	mov	r5,r23
  80f538:	d9801e04 	addi	r6,sp,120
  80f53c:	081513c0 	call	81513c <__sprint_r>
  80f540:	103bc31e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f544:	d8c02017 	ldw	r3,128(sp)
  80f548:	d8801f17 	ldw	r2,124(sp)
  80f54c:	da000404 	addi	r8,sp,16
  80f550:	003fee06 	br	80f50c <__alt_data_end+0xff80f50c>
  80f554:	8888703a 	and	r4,r17,r2
  80f558:	203eab1e 	bne	r4,zero,80f008 <__alt_data_end+0xff80f008>
  80f55c:	dc001f17 	ldw	r16,124(sp)
  80f560:	db003117 	ldw	r12,196(sp)
  80f564:	40800115 	stw	r2,4(r8)
  80f568:	84000044 	addi	r16,r16,1
  80f56c:	43000015 	stw	r12,0(r8)
  80f570:	d8c02015 	stw	r3,128(sp)
  80f574:	dc001f15 	stw	r16,124(sp)
  80f578:	008001c4 	movi	r2,7
  80f57c:	14000e16 	blt	r2,r16,80f5b8 <___vfprintf_internal_r+0x1538>
  80f580:	44800204 	addi	r18,r8,8
  80f584:	003ecb06 	br	80f0b4 <__alt_data_end+0xff80f0b4>
  80f588:	008020b4 	movhi	r2,130
  80f58c:	10b91384 	addi	r2,r2,-7090
  80f590:	d8802c15 	stw	r2,176(sp)
  80f594:	dac02c17 	ldw	r11,176(sp)
  80f598:	1d47883a 	add	r3,r3,r21
  80f59c:	84000044 	addi	r16,r16,1
  80f5a0:	92c00015 	stw	r11,0(r18)
  80f5a4:	95400115 	stw	r21,4(r18)
  80f5a8:	d8c02015 	stw	r3,128(sp)
  80f5ac:	dc001f15 	stw	r16,124(sp)
  80f5b0:	008001c4 	movi	r2,7
  80f5b4:	143ebe0e 	bge	r2,r16,80f0b0 <__alt_data_end+0xff80f0b0>
  80f5b8:	b009883a 	mov	r4,r22
  80f5bc:	b80b883a 	mov	r5,r23
  80f5c0:	d9801e04 	addi	r6,sp,120
  80f5c4:	081513c0 	call	81513c <__sprint_r>
  80f5c8:	103ba11e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f5cc:	d8c02017 	ldw	r3,128(sp)
  80f5d0:	dc001f17 	ldw	r16,124(sp)
  80f5d4:	dc800404 	addi	r18,sp,16
  80f5d8:	003eb606 	br	80f0b4 <__alt_data_end+0xff80f0b4>
  80f5dc:	b009883a 	mov	r4,r22
  80f5e0:	b80b883a 	mov	r5,r23
  80f5e4:	d9801e04 	addi	r6,sp,120
  80f5e8:	081513c0 	call	81513c <__sprint_r>
  80f5ec:	103b981e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f5f0:	d8c02017 	ldw	r3,128(sp)
  80f5f4:	dc001f17 	ldw	r16,124(sp)
  80f5f8:	da000404 	addi	r8,sp,16
  80f5fc:	003e8d06 	br	80f034 <__alt_data_end+0xff80f034>
  80f600:	b009883a 	mov	r4,r22
  80f604:	b80b883a 	mov	r5,r23
  80f608:	d9801e04 	addi	r6,sp,120
  80f60c:	081513c0 	call	81513c <__sprint_r>
  80f610:	103b8f1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f614:	d8c02017 	ldw	r3,128(sp)
  80f618:	dc001f17 	ldw	r16,124(sp)
  80f61c:	dc800404 	addi	r18,sp,16
  80f620:	003e8f06 	br	80f060 <__alt_data_end+0xff80f060>
  80f624:	db001e04 	addi	r12,sp,120
  80f628:	0025883a 	mov	r18,zero
  80f62c:	db003115 	stw	r12,196(sp)
  80f630:	003be106 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80f634:	b009883a 	mov	r4,r22
  80f638:	b80b883a 	mov	r5,r23
  80f63c:	d9801e04 	addi	r6,sp,120
  80f640:	081513c0 	call	81513c <__sprint_r>
  80f644:	103b821e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f648:	d8c02017 	ldw	r3,128(sp)
  80f64c:	da000404 	addi	r8,sp,16
  80f650:	003c3b06 	br	80e740 <__alt_data_end+0xff80e740>
  80f654:	04e7c83a 	sub	r19,zero,r19
  80f658:	9804c03a 	cmpne	r2,r19,zero
  80f65c:	0739c83a 	sub	fp,zero,fp
  80f660:	e0b9c83a 	sub	fp,fp,r2
  80f664:	05400b44 	movi	r21,45
  80f668:	dd402785 	stb	r21,158(sp)
  80f66c:	da403215 	stw	r9,200(sp)
  80f670:	00800044 	movi	r2,1
  80f674:	9f06b03a 	or	r3,r19,fp
  80f678:	003bb506 	br	80e550 <__alt_data_end+0xff80e550>
  80f67c:	da003f15 	stw	r8,252(sp)
  80f680:	da403e15 	stw	r9,248(sp)
  80f684:	0813d240 	call	813d24 <__fpclassifyd>
  80f688:	da003f17 	ldw	r8,252(sp)
  80f68c:	da403e17 	ldw	r9,248(sp)
  80f690:	1000ce26 	beq	r2,zero,80f9cc <___vfprintf_internal_r+0x194c>
  80f694:	057ff7c4 	movi	r21,-33
  80f698:	00bfffc4 	movi	r2,-1
  80f69c:	856a703a 	and	r21,r16,r21
  80f6a0:	4881e826 	beq	r9,r2,80fe44 <___vfprintf_internal_r+0x1dc4>
  80f6a4:	008011c4 	movi	r2,71
  80f6a8:	a881e326 	beq	r21,r2,80fe38 <___vfprintf_internal_r+0x1db8>
  80f6ac:	db003917 	ldw	r12,228(sp)
  80f6b0:	8ac04014 	ori	r11,r17,256
  80f6b4:	dac02d15 	stw	r11,180(sp)
  80f6b8:	6001ed16 	blt	r12,zero,80fe70 <___vfprintf_internal_r+0x1df0>
  80f6bc:	dc803917 	ldw	r18,228(sp)
  80f6c0:	d8002b05 	stb	zero,172(sp)
  80f6c4:	00801984 	movi	r2,102
  80f6c8:	80811826 	beq	r16,r2,80fb2c <___vfprintf_internal_r+0x1aac>
  80f6cc:	00801184 	movi	r2,70
  80f6d0:	80811626 	beq	r16,r2,80fb2c <___vfprintf_internal_r+0x1aac>
  80f6d4:	00801144 	movi	r2,69
  80f6d8:	a881e926 	beq	r21,r2,80fe80 <___vfprintf_internal_r+0x1e00>
  80f6dc:	4839883a 	mov	fp,r9
  80f6e0:	d8802604 	addi	r2,sp,152
  80f6e4:	d8800115 	stw	r2,4(sp)
  80f6e8:	d9403717 	ldw	r5,220(sp)
  80f6ec:	d8802504 	addi	r2,sp,148
  80f6f0:	d8800215 	stw	r2,8(sp)
  80f6f4:	d8802104 	addi	r2,sp,132
  80f6f8:	df000015 	stw	fp,0(sp)
  80f6fc:	d8800315 	stw	r2,12(sp)
  80f700:	b009883a 	mov	r4,r22
  80f704:	900d883a 	mov	r6,r18
  80f708:	01c00084 	movi	r7,2
  80f70c:	da003f15 	stw	r8,252(sp)
  80f710:	da403e15 	stw	r9,248(sp)
  80f714:	08104b40 	call	8104b4 <_dtoa_r>
  80f718:	d8803115 	stw	r2,196(sp)
  80f71c:	008019c4 	movi	r2,103
  80f720:	da003f17 	ldw	r8,252(sp)
  80f724:	da403e17 	ldw	r9,248(sp)
  80f728:	80800226 	beq	r16,r2,80f734 <___vfprintf_internal_r+0x16b4>
  80f72c:	008011c4 	movi	r2,71
  80f730:	8081101e 	bne	r16,r2,80fb74 <___vfprintf_internal_r+0x1af4>
  80f734:	8880004c 	andi	r2,r17,1
  80f738:	1001dd26 	beq	r2,zero,80feb0 <___vfprintf_internal_r+0x1e30>
  80f73c:	db003117 	ldw	r12,196(sp)
  80f740:	6715883a 	add	r10,r12,fp
  80f744:	d9003717 	ldw	r4,220(sp)
  80f748:	900b883a 	mov	r5,r18
  80f74c:	000d883a 	mov	r6,zero
  80f750:	000f883a 	mov	r7,zero
  80f754:	da003f15 	stw	r8,252(sp)
  80f758:	da403e15 	stw	r9,248(sp)
  80f75c:	da803d15 	stw	r10,244(sp)
  80f760:	081879c0 	call	81879c <__eqdf2>
  80f764:	da003f17 	ldw	r8,252(sp)
  80f768:	da403e17 	ldw	r9,248(sp)
  80f76c:	da803d17 	ldw	r10,244(sp)
  80f770:	10016526 	beq	r2,zero,80fd08 <___vfprintf_internal_r+0x1c88>
  80f774:	d8802117 	ldw	r2,132(sp)
  80f778:	1280062e 	bgeu	r2,r10,80f794 <___vfprintf_internal_r+0x1714>
  80f77c:	01000c04 	movi	r4,48
  80f780:	10c00044 	addi	r3,r2,1
  80f784:	d8c02115 	stw	r3,132(sp)
  80f788:	11000005 	stb	r4,0(r2)
  80f78c:	d8802117 	ldw	r2,132(sp)
  80f790:	12bffb36 	bltu	r2,r10,80f780 <__alt_data_end+0xff80f780>
  80f794:	db003117 	ldw	r12,196(sp)
  80f798:	1305c83a 	sub	r2,r2,r12
  80f79c:	d8803315 	stw	r2,204(sp)
  80f7a0:	008011c4 	movi	r2,71
  80f7a4:	a8814d26 	beq	r21,r2,80fcdc <___vfprintf_internal_r+0x1c5c>
  80f7a8:	00801944 	movi	r2,101
  80f7ac:	1402060e 	bge	r2,r16,80ffc8 <___vfprintf_internal_r+0x1f48>
  80f7b0:	00801984 	movi	r2,102
  80f7b4:	8081b426 	beq	r16,r2,80fe88 <___vfprintf_internal_r+0x1e08>
  80f7b8:	db002617 	ldw	r12,152(sp)
  80f7bc:	db003415 	stw	r12,208(sp)
  80f7c0:	db003417 	ldw	r12,208(sp)
  80f7c4:	dac03317 	ldw	r11,204(sp)
  80f7c8:	62c1a016 	blt	r12,r11,80fe4c <___vfprintf_internal_r+0x1dcc>
  80f7cc:	8c40004c 	andi	r17,r17,1
  80f7d0:	8801bf1e 	bne	r17,zero,80fed0 <___vfprintf_internal_r+0x1e50>
  80f7d4:	6005883a 	mov	r2,r12
  80f7d8:	6001b316 	blt	r12,zero,80fea8 <___vfprintf_internal_r+0x1e28>
  80f7dc:	dc803417 	ldw	r18,208(sp)
  80f7e0:	df002b07 	ldb	fp,172(sp)
  80f7e4:	e0012e1e 	bne	fp,zero,80fca0 <___vfprintf_internal_r+0x1c20>
  80f7e8:	dc402d17 	ldw	r17,180(sp)
  80f7ec:	dd402783 	ldbu	r21,158(sp)
  80f7f0:	d8802b15 	stw	r2,172(sp)
  80f7f4:	dcc02d15 	stw	r19,180(sp)
  80f7f8:	d8003215 	stw	zero,200(sp)
  80f7fc:	003b7306 	br	80e5cc <__alt_data_end+0xff80e5cc>
  80f800:	00800084 	movi	r2,2
  80f804:	003c4d06 	br	80e93c <__alt_data_end+0xff80e93c>
  80f808:	8880040c 	andi	r2,r17,16
  80f80c:	1000091e 	bne	r2,zero,80f834 <___vfprintf_internal_r+0x17b4>
  80f810:	8c40100c 	andi	r17,r17,64
  80f814:	88000726 	beq	r17,zero,80f834 <___vfprintf_internal_r+0x17b4>
  80f818:	db002d17 	ldw	r12,180(sp)
  80f81c:	dac02f17 	ldw	r11,188(sp)
  80f820:	60800017 	ldw	r2,0(r12)
  80f824:	63000104 	addi	r12,r12,4
  80f828:	db002d15 	stw	r12,180(sp)
  80f82c:	12c0000d 	sth	r11,0(r2)
  80f830:	003a4e06 	br	80e16c <__alt_data_end+0xff80e16c>
  80f834:	db002d17 	ldw	r12,180(sp)
  80f838:	dac02f17 	ldw	r11,188(sp)
  80f83c:	60800017 	ldw	r2,0(r12)
  80f840:	63000104 	addi	r12,r12,4
  80f844:	db002d15 	stw	r12,180(sp)
  80f848:	12c00015 	stw	r11,0(r2)
  80f84c:	003a4706 	br	80e16c <__alt_data_end+0xff80e16c>
  80f850:	1c000007 	ldb	r16,0(r3)
  80f854:	1805883a 	mov	r2,r3
  80f858:	003a6e06 	br	80e214 <__alt_data_end+0xff80e214>
  80f85c:	88c0100c 	andi	r3,r17,64
  80f860:	18006b26 	beq	r3,zero,80fa10 <___vfprintf_internal_r+0x1990>
  80f864:	dac02d17 	ldw	r11,180(sp)
  80f868:	14c0000b 	ldhu	r19,0(r2)
  80f86c:	0039883a 	mov	fp,zero
  80f870:	5ac00104 	addi	r11,r11,4
  80f874:	dac02d15 	stw	r11,180(sp)
  80f878:	003cb206 	br	80eb44 <__alt_data_end+0xff80eb44>
  80f87c:	010020b4 	movhi	r4,130
  80f880:	21391384 	addi	r4,r4,-7090
  80f884:	d9002c15 	stw	r4,176(sp)
  80f888:	dac02c17 	ldw	r11,176(sp)
  80f88c:	1c87883a 	add	r3,r3,r18
  80f890:	10800044 	addi	r2,r2,1
  80f894:	42c00015 	stw	r11,0(r8)
  80f898:	44800115 	stw	r18,4(r8)
  80f89c:	d8c02015 	stw	r3,128(sp)
  80f8a0:	d8801f15 	stw	r2,124(sp)
  80f8a4:	010001c4 	movi	r4,7
  80f8a8:	20bee016 	blt	r4,r2,80f42c <__alt_data_end+0xff80f42c>
  80f8ac:	42000204 	addi	r8,r8,8
  80f8b0:	003ee506 	br	80f448 <__alt_data_end+0xff80f448>
  80f8b4:	010020b4 	movhi	r4,130
  80f8b8:	21391384 	addi	r4,r4,-7090
  80f8bc:	d9002c15 	stw	r4,176(sp)
  80f8c0:	003bbe06 	br	80e7bc <__alt_data_end+0xff80e7bc>
  80f8c4:	b009883a 	mov	r4,r22
  80f8c8:	b80b883a 	mov	r5,r23
  80f8cc:	d9801e04 	addi	r6,sp,120
  80f8d0:	081513c0 	call	81513c <__sprint_r>
  80f8d4:	103ade1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f8d8:	d8c02017 	ldw	r3,128(sp)
  80f8dc:	da000404 	addi	r8,sp,16
  80f8e0:	003d6b06 	br	80ee90 <__alt_data_end+0xff80ee90>
  80f8e4:	d8801f17 	ldw	r2,124(sp)
  80f8e8:	030020b4 	movhi	r12,130
  80f8ec:	01000044 	movi	r4,1
  80f8f0:	18c00044 	addi	r3,r3,1
  80f8f4:	10800044 	addi	r2,r2,1
  80f8f8:	63390b04 	addi	r12,r12,-7124
  80f8fc:	41000115 	stw	r4,4(r8)
  80f900:	43000015 	stw	r12,0(r8)
  80f904:	d8c02015 	stw	r3,128(sp)
  80f908:	d8801f15 	stw	r2,124(sp)
  80f90c:	010001c4 	movi	r4,7
  80f910:	20804916 	blt	r4,r2,80fa38 <___vfprintf_internal_r+0x19b8>
  80f914:	42000204 	addi	r8,r8,8
  80f918:	8000041e 	bne	r16,zero,80f92c <___vfprintf_internal_r+0x18ac>
  80f91c:	dac03317 	ldw	r11,204(sp)
  80f920:	5800021e 	bne	r11,zero,80f92c <___vfprintf_internal_r+0x18ac>
  80f924:	8880004c 	andi	r2,r17,1
  80f928:	103bbb26 	beq	r2,zero,80e818 <__alt_data_end+0xff80e818>
  80f92c:	db003817 	ldw	r12,224(sp)
  80f930:	d8801f17 	ldw	r2,124(sp)
  80f934:	dac03517 	ldw	r11,212(sp)
  80f938:	1b07883a 	add	r3,r3,r12
  80f93c:	10800044 	addi	r2,r2,1
  80f940:	42c00015 	stw	r11,0(r8)
  80f944:	43000115 	stw	r12,4(r8)
  80f948:	d8c02015 	stw	r3,128(sp)
  80f94c:	d8801f15 	stw	r2,124(sp)
  80f950:	010001c4 	movi	r4,7
  80f954:	20812e16 	blt	r4,r2,80fe10 <___vfprintf_internal_r+0x1d90>
  80f958:	42000204 	addi	r8,r8,8
  80f95c:	0421c83a 	sub	r16,zero,r16
  80f960:	04005c0e 	bge	zero,r16,80fad4 <___vfprintf_internal_r+0x1a54>
  80f964:	04800404 	movi	r18,16
  80f968:	94009f0e 	bge	r18,r16,80fbe8 <___vfprintf_internal_r+0x1b68>
  80f96c:	010020b4 	movhi	r4,130
  80f970:	21391384 	addi	r4,r4,-7090
  80f974:	d9002c15 	stw	r4,176(sp)
  80f978:	054001c4 	movi	r21,7
  80f97c:	00000306 	br	80f98c <___vfprintf_internal_r+0x190c>
  80f980:	42000204 	addi	r8,r8,8
  80f984:	843ffc04 	addi	r16,r16,-16
  80f988:	94009a0e 	bge	r18,r16,80fbf4 <___vfprintf_internal_r+0x1b74>
  80f98c:	18c00404 	addi	r3,r3,16
  80f990:	10800044 	addi	r2,r2,1
  80f994:	45000015 	stw	r20,0(r8)
  80f998:	44800115 	stw	r18,4(r8)
  80f99c:	d8c02015 	stw	r3,128(sp)
  80f9a0:	d8801f15 	stw	r2,124(sp)
  80f9a4:	a8bff60e 	bge	r21,r2,80f980 <__alt_data_end+0xff80f980>
  80f9a8:	b009883a 	mov	r4,r22
  80f9ac:	b80b883a 	mov	r5,r23
  80f9b0:	d9801e04 	addi	r6,sp,120
  80f9b4:	081513c0 	call	81513c <__sprint_r>
  80f9b8:	103aa51e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80f9bc:	d8c02017 	ldw	r3,128(sp)
  80f9c0:	d8801f17 	ldw	r2,124(sp)
  80f9c4:	da000404 	addi	r8,sp,16
  80f9c8:	003fee06 	br	80f984 <__alt_data_end+0xff80f984>
  80f9cc:	008011c4 	movi	r2,71
  80f9d0:	1400be16 	blt	r2,r16,80fccc <___vfprintf_internal_r+0x1c4c>
  80f9d4:	030020b4 	movhi	r12,130
  80f9d8:	6338fd04 	addi	r12,r12,-7180
  80f9dc:	db003115 	stw	r12,196(sp)
  80f9e0:	00c000c4 	movi	r3,3
  80f9e4:	00bfdfc4 	movi	r2,-129
  80f9e8:	d8c02b15 	stw	r3,172(sp)
  80f9ec:	88a2703a 	and	r17,r17,r2
  80f9f0:	dd402783 	ldbu	r21,158(sp)
  80f9f4:	dcc02d15 	stw	r19,180(sp)
  80f9f8:	1825883a 	mov	r18,r3
  80f9fc:	d8003215 	stw	zero,200(sp)
  80fa00:	d8003415 	stw	zero,208(sp)
  80fa04:	003af106 	br	80e5cc <__alt_data_end+0xff80e5cc>
  80fa08:	4825883a 	mov	r18,r9
  80fa0c:	003c9306 	br	80ec5c <__alt_data_end+0xff80ec5c>
  80fa10:	db002d17 	ldw	r12,180(sp)
  80fa14:	14c00017 	ldw	r19,0(r2)
  80fa18:	0039883a 	mov	fp,zero
  80fa1c:	63000104 	addi	r12,r12,4
  80fa20:	db002d15 	stw	r12,180(sp)
  80fa24:	003c4706 	br	80eb44 <__alt_data_end+0xff80eb44>
  80fa28:	008020b4 	movhi	r2,130
  80fa2c:	10b8fb04 	addi	r2,r2,-7188
  80fa30:	d8803115 	stw	r2,196(sp)
  80fa34:	003bf106 	br	80e9fc <__alt_data_end+0xff80e9fc>
  80fa38:	b009883a 	mov	r4,r22
  80fa3c:	b80b883a 	mov	r5,r23
  80fa40:	d9801e04 	addi	r6,sp,120
  80fa44:	081513c0 	call	81513c <__sprint_r>
  80fa48:	103a811e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fa4c:	dc002617 	ldw	r16,152(sp)
  80fa50:	d8c02017 	ldw	r3,128(sp)
  80fa54:	da000404 	addi	r8,sp,16
  80fa58:	003faf06 	br	80f918 <__alt_data_end+0xff80f918>
  80fa5c:	db002e17 	ldw	r12,184(sp)
  80fa60:	1805883a 	mov	r2,r3
  80fa64:	dac02d15 	stw	r11,180(sp)
  80fa68:	0319c83a 	sub	r12,zero,r12
  80fa6c:	db002e15 	stw	r12,184(sp)
  80fa70:	003a8206 	br	80e47c <__alt_data_end+0xff80e47c>
  80fa74:	18800044 	addi	r2,r3,1
  80fa78:	8c400814 	ori	r17,r17,32
  80fa7c:	1c000047 	ldb	r16,1(r3)
  80fa80:	0039e406 	br	80e214 <__alt_data_end+0xff80e214>
  80fa84:	b009883a 	mov	r4,r22
  80fa88:	b80b883a 	mov	r5,r23
  80fa8c:	d9801e04 	addi	r6,sp,120
  80fa90:	081513c0 	call	81513c <__sprint_r>
  80fa94:	103a6e1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fa98:	d8c02017 	ldw	r3,128(sp)
  80fa9c:	da000404 	addi	r8,sp,16
  80faa0:	003d0c06 	br	80eed4 <__alt_data_end+0xff80eed4>
  80faa4:	db002817 	ldw	r12,160(sp)
  80faa8:	d8c03117 	ldw	r3,196(sp)
  80faac:	60e5c83a 	sub	r18,r12,r3
  80fab0:	003ac106 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80fab4:	b009883a 	mov	r4,r22
  80fab8:	b80b883a 	mov	r5,r23
  80fabc:	d9801e04 	addi	r6,sp,120
  80fac0:	081513c0 	call	81513c <__sprint_r>
  80fac4:	103a621e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fac8:	d8c02017 	ldw	r3,128(sp)
  80facc:	d8801f17 	ldw	r2,124(sp)
  80fad0:	da000404 	addi	r8,sp,16
  80fad4:	db003317 	ldw	r12,204(sp)
  80fad8:	dac03117 	ldw	r11,196(sp)
  80fadc:	10800044 	addi	r2,r2,1
  80fae0:	1b07883a 	add	r3,r3,r12
  80fae4:	42c00015 	stw	r11,0(r8)
  80fae8:	43000115 	stw	r12,4(r8)
  80faec:	d8c02015 	stw	r3,128(sp)
  80faf0:	d8801f15 	stw	r2,124(sp)
  80faf4:	010001c4 	movi	r4,7
  80faf8:	20bb460e 	bge	r4,r2,80e814 <__alt_data_end+0xff80e814>
  80fafc:	003d8506 	br	80f114 <__alt_data_end+0xff80f114>
  80fb00:	da003f15 	stw	r8,252(sp)
  80fb04:	080c0580 	call	80c058 <strlen>
  80fb08:	1025883a 	mov	r18,r2
  80fb0c:	da003f17 	ldw	r8,252(sp)
  80fb10:	903c540e 	bge	r18,zero,80ec64 <__alt_data_end+0xff80ec64>
  80fb14:	0005883a 	mov	r2,zero
  80fb18:	003c5206 	br	80ec64 <__alt_data_end+0xff80ec64>
  80fb1c:	010020b4 	movhi	r4,130
  80fb20:	21391784 	addi	r4,r4,-7074
  80fb24:	d9003615 	stw	r4,216(sp)
  80fb28:	003adc06 	br	80e69c <__alt_data_end+0xff80e69c>
  80fb2c:	d8802604 	addi	r2,sp,152
  80fb30:	d8800115 	stw	r2,4(sp)
  80fb34:	d9403717 	ldw	r5,220(sp)
  80fb38:	d8802504 	addi	r2,sp,148
  80fb3c:	d8800215 	stw	r2,8(sp)
  80fb40:	d8802104 	addi	r2,sp,132
  80fb44:	da400015 	stw	r9,0(sp)
  80fb48:	d8800315 	stw	r2,12(sp)
  80fb4c:	b009883a 	mov	r4,r22
  80fb50:	900d883a 	mov	r6,r18
  80fb54:	01c000c4 	movi	r7,3
  80fb58:	da003f15 	stw	r8,252(sp)
  80fb5c:	da403e15 	stw	r9,248(sp)
  80fb60:	08104b40 	call	8104b4 <_dtoa_r>
  80fb64:	da403e17 	ldw	r9,248(sp)
  80fb68:	da003f17 	ldw	r8,252(sp)
  80fb6c:	d8803115 	stw	r2,196(sp)
  80fb70:	4839883a 	mov	fp,r9
  80fb74:	dac03117 	ldw	r11,196(sp)
  80fb78:	00801184 	movi	r2,70
  80fb7c:	5f15883a 	add	r10,r11,fp
  80fb80:	a8bef01e 	bne	r21,r2,80f744 <__alt_data_end+0xff80f744>
  80fb84:	59000007 	ldb	r4,0(r11)
  80fb88:	00800c04 	movi	r2,48
  80fb8c:	2080d526 	beq	r4,r2,80fee4 <___vfprintf_internal_r+0x1e64>
  80fb90:	d8c02617 	ldw	r3,152(sp)
  80fb94:	50d5883a 	add	r10,r10,r3
  80fb98:	003eea06 	br	80f744 <__alt_data_end+0xff80f744>
  80fb9c:	0025883a 	mov	r18,zero
  80fba0:	003db306 	br	80f270 <__alt_data_end+0xff80f270>
  80fba4:	b009883a 	mov	r4,r22
  80fba8:	b80b883a 	mov	r5,r23
  80fbac:	d9801e04 	addi	r6,sp,120
  80fbb0:	081513c0 	call	81513c <__sprint_r>
  80fbb4:	103a261e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fbb8:	d8c02017 	ldw	r3,128(sp)
  80fbbc:	da000404 	addi	r8,sp,16
  80fbc0:	003daa06 	br	80f26c <__alt_data_end+0xff80f26c>
  80fbc4:	b009883a 	mov	r4,r22
  80fbc8:	b80b883a 	mov	r5,r23
  80fbcc:	d9801e04 	addi	r6,sp,120
  80fbd0:	081513c0 	call	81513c <__sprint_r>
  80fbd4:	103a1e1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fbd8:	d8802617 	ldw	r2,152(sp)
  80fbdc:	d8c02017 	ldw	r3,128(sp)
  80fbe0:	da000404 	addi	r8,sp,16
  80fbe4:	003e2c06 	br	80f498 <__alt_data_end+0xff80f498>
  80fbe8:	030020b4 	movhi	r12,130
  80fbec:	63391384 	addi	r12,r12,-7090
  80fbf0:	db002c15 	stw	r12,176(sp)
  80fbf4:	dac02c17 	ldw	r11,176(sp)
  80fbf8:	1c07883a 	add	r3,r3,r16
  80fbfc:	10800044 	addi	r2,r2,1
  80fc00:	42c00015 	stw	r11,0(r8)
  80fc04:	44000115 	stw	r16,4(r8)
  80fc08:	d8c02015 	stw	r3,128(sp)
  80fc0c:	d8801f15 	stw	r2,124(sp)
  80fc10:	010001c4 	movi	r4,7
  80fc14:	20bfa716 	blt	r4,r2,80fab4 <__alt_data_end+0xff80fab4>
  80fc18:	42000204 	addi	r8,r8,8
  80fc1c:	003fad06 	br	80fad4 <__alt_data_end+0xff80fad4>
  80fc20:	00800184 	movi	r2,6
  80fc24:	1240012e 	bgeu	r2,r9,80fc2c <___vfprintf_internal_r+0x1bac>
  80fc28:	1013883a 	mov	r9,r2
  80fc2c:	4825883a 	mov	r18,r9
  80fc30:	4805883a 	mov	r2,r9
  80fc34:	4800c216 	blt	r9,zero,80ff40 <___vfprintf_internal_r+0x1ec0>
  80fc38:	d8802b15 	stw	r2,172(sp)
  80fc3c:	008020b4 	movhi	r2,130
  80fc40:	10b90904 	addi	r2,r2,-7132
  80fc44:	d8803115 	stw	r2,196(sp)
  80fc48:	dcc02d15 	stw	r19,180(sp)
  80fc4c:	d8003215 	stw	zero,200(sp)
  80fc50:	d8003415 	stw	zero,208(sp)
  80fc54:	0005883a 	mov	r2,zero
  80fc58:	003a6306 	br	80e5e8 <__alt_data_end+0xff80e5e8>
  80fc5c:	0021883a 	mov	r16,zero
  80fc60:	003e1f06 	br	80f4e0 <__alt_data_end+0xff80f4e0>
  80fc64:	b009883a 	mov	r4,r22
  80fc68:	b80b883a 	mov	r5,r23
  80fc6c:	d9801e04 	addi	r6,sp,120
  80fc70:	081513c0 	call	81513c <__sprint_r>
  80fc74:	1039f61e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fc78:	d8802617 	ldw	r2,152(sp)
  80fc7c:	db003317 	ldw	r12,204(sp)
  80fc80:	d8c02017 	ldw	r3,128(sp)
  80fc84:	da000404 	addi	r8,sp,16
  80fc88:	6085c83a 	sub	r2,r12,r2
  80fc8c:	003e1306 	br	80f4dc <__alt_data_end+0xff80f4dc>
  80fc90:	030020b4 	movhi	r12,130
  80fc94:	63391784 	addi	r12,r12,-7074
  80fc98:	db003615 	stw	r12,216(sp)
  80fc9c:	003b0206 	br	80e8a8 <__alt_data_end+0xff80e8a8>
  80fca0:	00c00b44 	movi	r3,45
  80fca4:	d8802b15 	stw	r2,172(sp)
  80fca8:	dc402d17 	ldw	r17,180(sp)
  80fcac:	d8c02785 	stb	r3,158(sp)
  80fcb0:	dcc02d15 	stw	r19,180(sp)
  80fcb4:	d8003215 	stw	zero,200(sp)
  80fcb8:	00800b44 	movi	r2,45
  80fcbc:	003a4706 	br	80e5dc <__alt_data_end+0xff80e5dc>
  80fcc0:	05400b44 	movi	r21,45
  80fcc4:	dd402785 	stb	r21,158(sp)
  80fcc8:	003b4706 	br	80e9e8 <__alt_data_end+0xff80e9e8>
  80fccc:	008020b4 	movhi	r2,130
  80fcd0:	10b8fe04 	addi	r2,r2,-7176
  80fcd4:	d8803115 	stw	r2,196(sp)
  80fcd8:	003f4106 	br	80f9e0 <__alt_data_end+0xff80f9e0>
  80fcdc:	d8c02617 	ldw	r3,152(sp)
  80fce0:	00bfff44 	movi	r2,-3
  80fce4:	18801116 	blt	r3,r2,80fd2c <___vfprintf_internal_r+0x1cac>
  80fce8:	48c01016 	blt	r9,r3,80fd2c <___vfprintf_internal_r+0x1cac>
  80fcec:	d8c03415 	stw	r3,208(sp)
  80fcf0:	040019c4 	movi	r16,103
  80fcf4:	003eb206 	br	80f7c0 <__alt_data_end+0xff80f7c0>
  80fcf8:	010020b4 	movhi	r4,130
  80fcfc:	21391384 	addi	r4,r4,-7090
  80fd00:	d9002c15 	stw	r4,176(sp)
  80fd04:	003cb106 	br	80efcc <__alt_data_end+0xff80efcc>
  80fd08:	5005883a 	mov	r2,r10
  80fd0c:	003ea106 	br	80f794 <__alt_data_end+0xff80f794>
  80fd10:	da402b15 	stw	r9,172(sp)
  80fd14:	dd402783 	ldbu	r21,158(sp)
  80fd18:	4825883a 	mov	r18,r9
  80fd1c:	dcc02d15 	stw	r19,180(sp)
  80fd20:	d8003215 	stw	zero,200(sp)
  80fd24:	d8003415 	stw	zero,208(sp)
  80fd28:	003a2806 	br	80e5cc <__alt_data_end+0xff80e5cc>
  80fd2c:	843fff84 	addi	r16,r16,-2
  80fd30:	1f3fffc4 	addi	fp,r3,-1
  80fd34:	df002615 	stw	fp,152(sp)
  80fd38:	dc0022c5 	stb	r16,139(sp)
  80fd3c:	e0009816 	blt	fp,zero,80ffa0 <___vfprintf_internal_r+0x1f20>
  80fd40:	00800ac4 	movi	r2,43
  80fd44:	d8802305 	stb	r2,140(sp)
  80fd48:	00800244 	movi	r2,9
  80fd4c:	1700750e 	bge	r2,fp,80ff24 <___vfprintf_internal_r+0x1ea4>
  80fd50:	dd4022c4 	addi	r21,sp,139
  80fd54:	dc002c15 	stw	r16,176(sp)
  80fd58:	4025883a 	mov	r18,r8
  80fd5c:	a821883a 	mov	r16,r21
  80fd60:	e009883a 	mov	r4,fp
  80fd64:	01400284 	movi	r5,10
  80fd68:	0809a600 	call	809a60 <__modsi3>
  80fd6c:	10800c04 	addi	r2,r2,48
  80fd70:	843fffc4 	addi	r16,r16,-1
  80fd74:	e009883a 	mov	r4,fp
  80fd78:	01400284 	movi	r5,10
  80fd7c:	80800005 	stb	r2,0(r16)
  80fd80:	0809a0c0 	call	809a0c <__divsi3>
  80fd84:	1039883a 	mov	fp,r2
  80fd88:	00800244 	movi	r2,9
  80fd8c:	173ff416 	blt	r2,fp,80fd60 <__alt_data_end+0xff80fd60>
  80fd90:	9011883a 	mov	r8,r18
  80fd94:	e0800c04 	addi	r2,fp,48
  80fd98:	8025883a 	mov	r18,r16
  80fd9c:	913fffc4 	addi	r4,r18,-1
  80fda0:	90bfffc5 	stb	r2,-1(r18)
  80fda4:	dc002c17 	ldw	r16,176(sp)
  80fda8:	2540852e 	bgeu	r4,r21,80ffc0 <___vfprintf_internal_r+0x1f40>
  80fdac:	d9402384 	addi	r5,sp,142
  80fdb0:	2c8bc83a 	sub	r5,r5,r18
  80fdb4:	d8c02344 	addi	r3,sp,141
  80fdb8:	a94b883a 	add	r5,r21,r5
  80fdbc:	00000106 	br	80fdc4 <___vfprintf_internal_r+0x1d44>
  80fdc0:	20800003 	ldbu	r2,0(r4)
  80fdc4:	18800005 	stb	r2,0(r3)
  80fdc8:	18c00044 	addi	r3,r3,1
  80fdcc:	21000044 	addi	r4,r4,1
  80fdd0:	197ffb1e 	bne	r3,r5,80fdc0 <__alt_data_end+0xff80fdc0>
  80fdd4:	d8802304 	addi	r2,sp,140
  80fdd8:	1485c83a 	sub	r2,r2,r18
  80fddc:	d8c02344 	addi	r3,sp,141
  80fde0:	1885883a 	add	r2,r3,r2
  80fde4:	dac03317 	ldw	r11,204(sp)
  80fde8:	156bc83a 	sub	r21,r2,r21
  80fdec:	dd403a15 	stw	r21,232(sp)
  80fdf0:	00800044 	movi	r2,1
  80fdf4:	5d65883a 	add	r18,r11,r21
  80fdf8:	12c0660e 	bge	r2,r11,80ff94 <___vfprintf_internal_r+0x1f14>
  80fdfc:	94800044 	addi	r18,r18,1
  80fe00:	9005883a 	mov	r2,r18
  80fe04:	90006116 	blt	r18,zero,80ff8c <___vfprintf_internal_r+0x1f0c>
  80fe08:	d8003415 	stw	zero,208(sp)
  80fe0c:	003e7406 	br	80f7e0 <__alt_data_end+0xff80f7e0>
  80fe10:	b009883a 	mov	r4,r22
  80fe14:	b80b883a 	mov	r5,r23
  80fe18:	d9801e04 	addi	r6,sp,120
  80fe1c:	081513c0 	call	81513c <__sprint_r>
  80fe20:	10398b1e 	bne	r2,zero,80e450 <__alt_data_end+0xff80e450>
  80fe24:	dc002617 	ldw	r16,152(sp)
  80fe28:	d8c02017 	ldw	r3,128(sp)
  80fe2c:	d8801f17 	ldw	r2,124(sp)
  80fe30:	da000404 	addi	r8,sp,16
  80fe34:	003ec906 	br	80f95c <__alt_data_end+0xff80f95c>
  80fe38:	483e1c1e 	bne	r9,zero,80f6ac <__alt_data_end+0xff80f6ac>
  80fe3c:	9013883a 	mov	r9,r18
  80fe40:	003e1a06 	br	80f6ac <__alt_data_end+0xff80f6ac>
  80fe44:	02400184 	movi	r9,6
  80fe48:	003e1806 	br	80f6ac <__alt_data_end+0xff80f6ac>
  80fe4c:	d8c03417 	ldw	r3,208(sp)
  80fe50:	00c04b0e 	bge	zero,r3,80ff80 <___vfprintf_internal_r+0x1f00>
  80fe54:	04800044 	movi	r18,1
  80fe58:	dac03317 	ldw	r11,204(sp)
  80fe5c:	92e5883a 	add	r18,r18,r11
  80fe60:	9005883a 	mov	r2,r18
  80fe64:	903e5e0e 	bge	r18,zero,80f7e0 <__alt_data_end+0xff80f7e0>
  80fe68:	0005883a 	mov	r2,zero
  80fe6c:	003e5c06 	br	80f7e0 <__alt_data_end+0xff80f7e0>
  80fe70:	00c00b44 	movi	r3,45
  80fe74:	64a0003c 	xorhi	r18,r12,32768
  80fe78:	d8c02b05 	stb	r3,172(sp)
  80fe7c:	003e1106 	br	80f6c4 <__alt_data_end+0xff80f6c4>
  80fe80:	4f000044 	addi	fp,r9,1
  80fe84:	003e1606 	br	80f6e0 <__alt_data_end+0xff80f6e0>
  80fe88:	d8c02617 	ldw	r3,152(sp)
  80fe8c:	d8c03415 	stw	r3,208(sp)
  80fe90:	00c0350e 	bge	zero,r3,80ff68 <___vfprintf_internal_r+0x1ee8>
  80fe94:	4800081e 	bne	r9,zero,80feb8 <___vfprintf_internal_r+0x1e38>
  80fe98:	8c40004c 	andi	r17,r17,1
  80fe9c:	8800061e 	bne	r17,zero,80feb8 <___vfprintf_internal_r+0x1e38>
  80fea0:	1805883a 	mov	r2,r3
  80fea4:	183e4d0e 	bge	r3,zero,80f7dc <__alt_data_end+0xff80f7dc>
  80fea8:	0005883a 	mov	r2,zero
  80feac:	003e4b06 	br	80f7dc <__alt_data_end+0xff80f7dc>
  80feb0:	d8802117 	ldw	r2,132(sp)
  80feb4:	003e3706 	br	80f794 <__alt_data_end+0xff80f794>
  80feb8:	dac03417 	ldw	r11,208(sp)
  80febc:	4a400044 	addi	r9,r9,1
  80fec0:	5a65883a 	add	r18,r11,r9
  80fec4:	9005883a 	mov	r2,r18
  80fec8:	903e450e 	bge	r18,zero,80f7e0 <__alt_data_end+0xff80f7e0>
  80fecc:	003fe606 	br	80fe68 <__alt_data_end+0xff80fe68>
  80fed0:	db003417 	ldw	r12,208(sp)
  80fed4:	64800044 	addi	r18,r12,1
  80fed8:	9005883a 	mov	r2,r18
  80fedc:	903e400e 	bge	r18,zero,80f7e0 <__alt_data_end+0xff80f7e0>
  80fee0:	003fe106 	br	80fe68 <__alt_data_end+0xff80fe68>
  80fee4:	d9003717 	ldw	r4,220(sp)
  80fee8:	900b883a 	mov	r5,r18
  80feec:	000d883a 	mov	r6,zero
  80fef0:	000f883a 	mov	r7,zero
  80fef4:	da003f15 	stw	r8,252(sp)
  80fef8:	da403e15 	stw	r9,248(sp)
  80fefc:	da803d15 	stw	r10,244(sp)
  80ff00:	081879c0 	call	81879c <__eqdf2>
  80ff04:	da003f17 	ldw	r8,252(sp)
  80ff08:	da403e17 	ldw	r9,248(sp)
  80ff0c:	da803d17 	ldw	r10,244(sp)
  80ff10:	103f1f26 	beq	r2,zero,80fb90 <__alt_data_end+0xff80fb90>
  80ff14:	00800044 	movi	r2,1
  80ff18:	1707c83a 	sub	r3,r2,fp
  80ff1c:	d8c02615 	stw	r3,152(sp)
  80ff20:	003f1c06 	br	80fb94 <__alt_data_end+0xff80fb94>
  80ff24:	00800c04 	movi	r2,48
  80ff28:	e0c00c04 	addi	r3,fp,48
  80ff2c:	d8802345 	stb	r2,141(sp)
  80ff30:	d8c02385 	stb	r3,142(sp)
  80ff34:	d88023c4 	addi	r2,sp,143
  80ff38:	dd4022c4 	addi	r21,sp,139
  80ff3c:	003fa906 	br	80fde4 <__alt_data_end+0xff80fde4>
  80ff40:	0005883a 	mov	r2,zero
  80ff44:	003f3c06 	br	80fc38 <__alt_data_end+0xff80fc38>
  80ff48:	dac02d17 	ldw	r11,180(sp)
  80ff4c:	5a400017 	ldw	r9,0(r11)
  80ff50:	5ac00104 	addi	r11,r11,4
  80ff54:	dac02d15 	stw	r11,180(sp)
  80ff58:	483ec80e 	bge	r9,zero,80fa7c <__alt_data_end+0xff80fa7c>
  80ff5c:	027fffc4 	movi	r9,-1
  80ff60:	1c000047 	ldb	r16,1(r3)
  80ff64:	0038ab06 	br	80e214 <__alt_data_end+0xff80e214>
  80ff68:	4800111e 	bne	r9,zero,80ffb0 <___vfprintf_internal_r+0x1f30>
  80ff6c:	8c40004c 	andi	r17,r17,1
  80ff70:	88000f1e 	bne	r17,zero,80ffb0 <___vfprintf_internal_r+0x1f30>
  80ff74:	00800044 	movi	r2,1
  80ff78:	1025883a 	mov	r18,r2
  80ff7c:	003e1806 	br	80f7e0 <__alt_data_end+0xff80f7e0>
  80ff80:	04800084 	movi	r18,2
  80ff84:	90e5c83a 	sub	r18,r18,r3
  80ff88:	003fb306 	br	80fe58 <__alt_data_end+0xff80fe58>
  80ff8c:	0005883a 	mov	r2,zero
  80ff90:	003f9d06 	br	80fe08 <__alt_data_end+0xff80fe08>
  80ff94:	88a2703a 	and	r17,r17,r2
  80ff98:	883f9926 	beq	r17,zero,80fe00 <__alt_data_end+0xff80fe00>
  80ff9c:	003f9706 	br	80fdfc <__alt_data_end+0xff80fdfc>
  80ffa0:	00800b44 	movi	r2,45
  80ffa4:	0739c83a 	sub	fp,zero,fp
  80ffa8:	d8802305 	stb	r2,140(sp)
  80ffac:	003f6606 	br	80fd48 <__alt_data_end+0xff80fd48>
  80ffb0:	4c800084 	addi	r18,r9,2
  80ffb4:	9005883a 	mov	r2,r18
  80ffb8:	903e090e 	bge	r18,zero,80f7e0 <__alt_data_end+0xff80f7e0>
  80ffbc:	003faa06 	br	80fe68 <__alt_data_end+0xff80fe68>
  80ffc0:	d8802344 	addi	r2,sp,141
  80ffc4:	003f8706 	br	80fde4 <__alt_data_end+0xff80fde4>
  80ffc8:	d8c02617 	ldw	r3,152(sp)
  80ffcc:	003f5806 	br	80fd30 <__alt_data_end+0xff80fd30>

0080ffd0 <__vfprintf_internal>:
  80ffd0:	2007883a 	mov	r3,r4
  80ffd4:	010020b4 	movhi	r4,130
  80ffd8:	213db104 	addi	r4,r4,-2364
  80ffdc:	21000017 	ldw	r4,0(r4)
  80ffe0:	2805883a 	mov	r2,r5
  80ffe4:	300f883a 	mov	r7,r6
  80ffe8:	180b883a 	mov	r5,r3
  80ffec:	100d883a 	mov	r6,r2
  80fff0:	080e0801 	jmpi	80e080 <___vfprintf_internal_r>

0080fff4 <__sbprintf>:
  80fff4:	2880030b 	ldhu	r2,12(r5)
  80fff8:	2ac01917 	ldw	r11,100(r5)
  80fffc:	2a80038b 	ldhu	r10,14(r5)
  810000:	2a400717 	ldw	r9,28(r5)
  810004:	2a000917 	ldw	r8,36(r5)
  810008:	defee204 	addi	sp,sp,-1144
  81000c:	00c10004 	movi	r3,1024
  810010:	dc011a15 	stw	r16,1128(sp)
  810014:	10bfff4c 	andi	r2,r2,65533
  810018:	2821883a 	mov	r16,r5
  81001c:	d8cb883a 	add	r5,sp,r3
  810020:	dc811c15 	stw	r18,1136(sp)
  810024:	dc411b15 	stw	r17,1132(sp)
  810028:	dfc11d15 	stw	ra,1140(sp)
  81002c:	2025883a 	mov	r18,r4
  810030:	d881030d 	sth	r2,1036(sp)
  810034:	dac11915 	stw	r11,1124(sp)
  810038:	da81038d 	sth	r10,1038(sp)
  81003c:	da410715 	stw	r9,1052(sp)
  810040:	da010915 	stw	r8,1060(sp)
  810044:	dec10015 	stw	sp,1024(sp)
  810048:	dec10415 	stw	sp,1040(sp)
  81004c:	d8c10215 	stw	r3,1032(sp)
  810050:	d8c10515 	stw	r3,1044(sp)
  810054:	d8010615 	stw	zero,1048(sp)
  810058:	080e0800 	call	80e080 <___vfprintf_internal_r>
  81005c:	1023883a 	mov	r17,r2
  810060:	10000416 	blt	r2,zero,810074 <__sbprintf+0x80>
  810064:	9009883a 	mov	r4,r18
  810068:	d9410004 	addi	r5,sp,1024
  81006c:	0809dd80 	call	809dd8 <_fflush_r>
  810070:	10000d1e 	bne	r2,zero,8100a8 <__sbprintf+0xb4>
  810074:	d8c1030b 	ldhu	r3,1036(sp)
  810078:	18c0100c 	andi	r3,r3,64
  81007c:	18000326 	beq	r3,zero,81008c <__sbprintf+0x98>
  810080:	8080030b 	ldhu	r2,12(r16)
  810084:	10801014 	ori	r2,r2,64
  810088:	8080030d 	sth	r2,12(r16)
  81008c:	8805883a 	mov	r2,r17
  810090:	dfc11d17 	ldw	ra,1140(sp)
  810094:	dc811c17 	ldw	r18,1136(sp)
  810098:	dc411b17 	ldw	r17,1132(sp)
  81009c:	dc011a17 	ldw	r16,1128(sp)
  8100a0:	dec11e04 	addi	sp,sp,1144
  8100a4:	f800283a 	ret
  8100a8:	047fffc4 	movi	r17,-1
  8100ac:	003ff106 	br	810074 <__alt_data_end+0xff810074>

008100b0 <_write_r>:
  8100b0:	defffd04 	addi	sp,sp,-12
  8100b4:	dc000015 	stw	r16,0(sp)
  8100b8:	040020b4 	movhi	r16,130
  8100bc:	dc400115 	stw	r17,4(sp)
  8100c0:	84011e04 	addi	r16,r16,1144
  8100c4:	2023883a 	mov	r17,r4
  8100c8:	2809883a 	mov	r4,r5
  8100cc:	300b883a 	mov	r5,r6
  8100d0:	380d883a 	mov	r6,r7
  8100d4:	dfc00215 	stw	ra,8(sp)
  8100d8:	80000015 	stw	zero,0(r16)
  8100dc:	081ae7c0 	call	81ae7c <write>
  8100e0:	00ffffc4 	movi	r3,-1
  8100e4:	10c00526 	beq	r2,r3,8100fc <_write_r+0x4c>
  8100e8:	dfc00217 	ldw	ra,8(sp)
  8100ec:	dc400117 	ldw	r17,4(sp)
  8100f0:	dc000017 	ldw	r16,0(sp)
  8100f4:	dec00304 	addi	sp,sp,12
  8100f8:	f800283a 	ret
  8100fc:	80c00017 	ldw	r3,0(r16)
  810100:	183ff926 	beq	r3,zero,8100e8 <__alt_data_end+0xff8100e8>
  810104:	88c00015 	stw	r3,0(r17)
  810108:	003ff706 	br	8100e8 <__alt_data_end+0xff8100e8>

0081010c <__swsetup_r>:
  81010c:	008020b4 	movhi	r2,130
  810110:	defffd04 	addi	sp,sp,-12
  810114:	10bdb104 	addi	r2,r2,-2364
  810118:	dc400115 	stw	r17,4(sp)
  81011c:	2023883a 	mov	r17,r4
  810120:	11000017 	ldw	r4,0(r2)
  810124:	dc000015 	stw	r16,0(sp)
  810128:	dfc00215 	stw	ra,8(sp)
  81012c:	2821883a 	mov	r16,r5
  810130:	20000226 	beq	r4,zero,81013c <__swsetup_r+0x30>
  810134:	20c00e17 	ldw	r3,56(r4)
  810138:	18003126 	beq	r3,zero,810200 <__swsetup_r+0xf4>
  81013c:	8080030b 	ldhu	r2,12(r16)
  810140:	10c0020c 	andi	r3,r2,8
  810144:	100d883a 	mov	r6,r2
  810148:	18000f26 	beq	r3,zero,810188 <__swsetup_r+0x7c>
  81014c:	80c00417 	ldw	r3,16(r16)
  810150:	18001526 	beq	r3,zero,8101a8 <__swsetup_r+0x9c>
  810154:	1100004c 	andi	r4,r2,1
  810158:	20001c1e 	bne	r4,zero,8101cc <__swsetup_r+0xc0>
  81015c:	1080008c 	andi	r2,r2,2
  810160:	1000291e 	bne	r2,zero,810208 <__swsetup_r+0xfc>
  810164:	80800517 	ldw	r2,20(r16)
  810168:	80800215 	stw	r2,8(r16)
  81016c:	18001c26 	beq	r3,zero,8101e0 <__swsetup_r+0xd4>
  810170:	0005883a 	mov	r2,zero
  810174:	dfc00217 	ldw	ra,8(sp)
  810178:	dc400117 	ldw	r17,4(sp)
  81017c:	dc000017 	ldw	r16,0(sp)
  810180:	dec00304 	addi	sp,sp,12
  810184:	f800283a 	ret
  810188:	3080040c 	andi	r2,r6,16
  81018c:	10002e26 	beq	r2,zero,810248 <__swsetup_r+0x13c>
  810190:	3080010c 	andi	r2,r6,4
  810194:	10001e1e 	bne	r2,zero,810210 <__swsetup_r+0x104>
  810198:	80c00417 	ldw	r3,16(r16)
  81019c:	30800214 	ori	r2,r6,8
  8101a0:	8080030d 	sth	r2,12(r16)
  8101a4:	183feb1e 	bne	r3,zero,810154 <__alt_data_end+0xff810154>
  8101a8:	1140a00c 	andi	r5,r2,640
  8101ac:	01008004 	movi	r4,512
  8101b0:	293fe826 	beq	r5,r4,810154 <__alt_data_end+0xff810154>
  8101b4:	8809883a 	mov	r4,r17
  8101b8:	800b883a 	mov	r5,r16
  8101bc:	080aed80 	call	80aed8 <__smakebuf_r>
  8101c0:	8080030b 	ldhu	r2,12(r16)
  8101c4:	80c00417 	ldw	r3,16(r16)
  8101c8:	003fe206 	br	810154 <__alt_data_end+0xff810154>
  8101cc:	80800517 	ldw	r2,20(r16)
  8101d0:	80000215 	stw	zero,8(r16)
  8101d4:	0085c83a 	sub	r2,zero,r2
  8101d8:	80800615 	stw	r2,24(r16)
  8101dc:	183fe41e 	bne	r3,zero,810170 <__alt_data_end+0xff810170>
  8101e0:	80c0030b 	ldhu	r3,12(r16)
  8101e4:	0005883a 	mov	r2,zero
  8101e8:	1900200c 	andi	r4,r3,128
  8101ec:	203fe126 	beq	r4,zero,810174 <__alt_data_end+0xff810174>
  8101f0:	18c01014 	ori	r3,r3,64
  8101f4:	80c0030d 	sth	r3,12(r16)
  8101f8:	00bfffc4 	movi	r2,-1
  8101fc:	003fdd06 	br	810174 <__alt_data_end+0xff810174>
  810200:	080a1b40 	call	80a1b4 <__sinit>
  810204:	003fcd06 	br	81013c <__alt_data_end+0xff81013c>
  810208:	0005883a 	mov	r2,zero
  81020c:	003fd606 	br	810168 <__alt_data_end+0xff810168>
  810210:	81400c17 	ldw	r5,48(r16)
  810214:	28000626 	beq	r5,zero,810230 <__swsetup_r+0x124>
  810218:	80801004 	addi	r2,r16,64
  81021c:	28800326 	beq	r5,r2,81022c <__swsetup_r+0x120>
  810220:	8809883a 	mov	r4,r17
  810224:	080a4800 	call	80a480 <_free_r>
  810228:	8180030b 	ldhu	r6,12(r16)
  81022c:	80000c15 	stw	zero,48(r16)
  810230:	80c00417 	ldw	r3,16(r16)
  810234:	00bff6c4 	movi	r2,-37
  810238:	118c703a 	and	r6,r2,r6
  81023c:	80000115 	stw	zero,4(r16)
  810240:	80c00015 	stw	r3,0(r16)
  810244:	003fd506 	br	81019c <__alt_data_end+0xff81019c>
  810248:	00800244 	movi	r2,9
  81024c:	88800015 	stw	r2,0(r17)
  810250:	30801014 	ori	r2,r6,64
  810254:	8080030d 	sth	r2,12(r16)
  810258:	00bfffc4 	movi	r2,-1
  81025c:	003fc506 	br	810174 <__alt_data_end+0xff810174>

00810260 <_close_r>:
  810260:	defffd04 	addi	sp,sp,-12
  810264:	dc000015 	stw	r16,0(sp)
  810268:	040020b4 	movhi	r16,130
  81026c:	dc400115 	stw	r17,4(sp)
  810270:	84011e04 	addi	r16,r16,1144
  810274:	2023883a 	mov	r17,r4
  810278:	2809883a 	mov	r4,r5
  81027c:	dfc00215 	stw	ra,8(sp)
  810280:	80000015 	stw	zero,0(r16)
  810284:	0819dc40 	call	819dc4 <close>
  810288:	00ffffc4 	movi	r3,-1
  81028c:	10c00526 	beq	r2,r3,8102a4 <_close_r+0x44>
  810290:	dfc00217 	ldw	ra,8(sp)
  810294:	dc400117 	ldw	r17,4(sp)
  810298:	dc000017 	ldw	r16,0(sp)
  81029c:	dec00304 	addi	sp,sp,12
  8102a0:	f800283a 	ret
  8102a4:	80c00017 	ldw	r3,0(r16)
  8102a8:	183ff926 	beq	r3,zero,810290 <__alt_data_end+0xff810290>
  8102ac:	88c00015 	stw	r3,0(r17)
  8102b0:	003ff706 	br	810290 <__alt_data_end+0xff810290>

008102b4 <quorem>:
  8102b4:	defff704 	addi	sp,sp,-36
  8102b8:	dc800215 	stw	r18,8(sp)
  8102bc:	20800417 	ldw	r2,16(r4)
  8102c0:	2c800417 	ldw	r18,16(r5)
  8102c4:	dfc00815 	stw	ra,32(sp)
  8102c8:	ddc00715 	stw	r23,28(sp)
  8102cc:	dd800615 	stw	r22,24(sp)
  8102d0:	dd400515 	stw	r21,20(sp)
  8102d4:	dd000415 	stw	r20,16(sp)
  8102d8:	dcc00315 	stw	r19,12(sp)
  8102dc:	dc400115 	stw	r17,4(sp)
  8102e0:	dc000015 	stw	r16,0(sp)
  8102e4:	14807116 	blt	r2,r18,8104ac <quorem+0x1f8>
  8102e8:	94bfffc4 	addi	r18,r18,-1
  8102ec:	94ad883a 	add	r22,r18,r18
  8102f0:	b5ad883a 	add	r22,r22,r22
  8102f4:	2c400504 	addi	r17,r5,20
  8102f8:	8da9883a 	add	r20,r17,r22
  8102fc:	25400504 	addi	r21,r4,20
  810300:	282f883a 	mov	r23,r5
  810304:	adad883a 	add	r22,r21,r22
  810308:	a1400017 	ldw	r5,0(r20)
  81030c:	2021883a 	mov	r16,r4
  810310:	b1000017 	ldw	r4,0(r22)
  810314:	29400044 	addi	r5,r5,1
  810318:	0809abc0 	call	809abc <__udivsi3>
  81031c:	1027883a 	mov	r19,r2
  810320:	10002c26 	beq	r2,zero,8103d4 <quorem+0x120>
  810324:	a813883a 	mov	r9,r21
  810328:	8811883a 	mov	r8,r17
  81032c:	0009883a 	mov	r4,zero
  810330:	000d883a 	mov	r6,zero
  810334:	41c00017 	ldw	r7,0(r8)
  810338:	49400017 	ldw	r5,0(r9)
  81033c:	42000104 	addi	r8,r8,4
  810340:	38bfffcc 	andi	r2,r7,65535
  810344:	14c5383a 	mul	r2,r2,r19
  810348:	380ed43a 	srli	r7,r7,16
  81034c:	28ffffcc 	andi	r3,r5,65535
  810350:	2085883a 	add	r2,r4,r2
  810354:	1008d43a 	srli	r4,r2,16
  810358:	3ccf383a 	mul	r7,r7,r19
  81035c:	198d883a 	add	r6,r3,r6
  810360:	10ffffcc 	andi	r3,r2,65535
  810364:	30c7c83a 	sub	r3,r6,r3
  810368:	280ad43a 	srli	r5,r5,16
  81036c:	21c9883a 	add	r4,r4,r7
  810370:	180dd43a 	srai	r6,r3,16
  810374:	20bfffcc 	andi	r2,r4,65535
  810378:	288bc83a 	sub	r5,r5,r2
  81037c:	298b883a 	add	r5,r5,r6
  810380:	280e943a 	slli	r7,r5,16
  810384:	18ffffcc 	andi	r3,r3,65535
  810388:	2008d43a 	srli	r4,r4,16
  81038c:	38ceb03a 	or	r7,r7,r3
  810390:	49c00015 	stw	r7,0(r9)
  810394:	280dd43a 	srai	r6,r5,16
  810398:	4a400104 	addi	r9,r9,4
  81039c:	a23fe52e 	bgeu	r20,r8,810334 <__alt_data_end+0xff810334>
  8103a0:	b0800017 	ldw	r2,0(r22)
  8103a4:	10000b1e 	bne	r2,zero,8103d4 <quorem+0x120>
  8103a8:	b0bfff04 	addi	r2,r22,-4
  8103ac:	a880082e 	bgeu	r21,r2,8103d0 <quorem+0x11c>
  8103b0:	b0ffff17 	ldw	r3,-4(r22)
  8103b4:	18000326 	beq	r3,zero,8103c4 <quorem+0x110>
  8103b8:	00000506 	br	8103d0 <quorem+0x11c>
  8103bc:	10c00017 	ldw	r3,0(r2)
  8103c0:	1800031e 	bne	r3,zero,8103d0 <quorem+0x11c>
  8103c4:	10bfff04 	addi	r2,r2,-4
  8103c8:	94bfffc4 	addi	r18,r18,-1
  8103cc:	a8bffb36 	bltu	r21,r2,8103bc <__alt_data_end+0xff8103bc>
  8103d0:	84800415 	stw	r18,16(r16)
  8103d4:	8009883a 	mov	r4,r16
  8103d8:	b80b883a 	mov	r5,r23
  8103dc:	0812f280 	call	812f28 <__mcmp>
  8103e0:	10002616 	blt	r2,zero,81047c <quorem+0x1c8>
  8103e4:	9cc00044 	addi	r19,r19,1
  8103e8:	a80d883a 	mov	r6,r21
  8103ec:	000b883a 	mov	r5,zero
  8103f0:	31000017 	ldw	r4,0(r6)
  8103f4:	88800017 	ldw	r2,0(r17)
  8103f8:	31800104 	addi	r6,r6,4
  8103fc:	20ffffcc 	andi	r3,r4,65535
  810400:	194b883a 	add	r5,r3,r5
  810404:	10ffffcc 	andi	r3,r2,65535
  810408:	28c7c83a 	sub	r3,r5,r3
  81040c:	1004d43a 	srli	r2,r2,16
  810410:	2008d43a 	srli	r4,r4,16
  810414:	180bd43a 	srai	r5,r3,16
  810418:	18ffffcc 	andi	r3,r3,65535
  81041c:	2089c83a 	sub	r4,r4,r2
  810420:	2149883a 	add	r4,r4,r5
  810424:	2004943a 	slli	r2,r4,16
  810428:	8c400104 	addi	r17,r17,4
  81042c:	200bd43a 	srai	r5,r4,16
  810430:	10c6b03a 	or	r3,r2,r3
  810434:	30ffff15 	stw	r3,-4(r6)
  810438:	a47fed2e 	bgeu	r20,r17,8103f0 <__alt_data_end+0xff8103f0>
  81043c:	9485883a 	add	r2,r18,r18
  810440:	1085883a 	add	r2,r2,r2
  810444:	a887883a 	add	r3,r21,r2
  810448:	18800017 	ldw	r2,0(r3)
  81044c:	10000b1e 	bne	r2,zero,81047c <quorem+0x1c8>
  810450:	18bfff04 	addi	r2,r3,-4
  810454:	a880082e 	bgeu	r21,r2,810478 <quorem+0x1c4>
  810458:	18ffff17 	ldw	r3,-4(r3)
  81045c:	18000326 	beq	r3,zero,81046c <quorem+0x1b8>
  810460:	00000506 	br	810478 <quorem+0x1c4>
  810464:	10c00017 	ldw	r3,0(r2)
  810468:	1800031e 	bne	r3,zero,810478 <quorem+0x1c4>
  81046c:	10bfff04 	addi	r2,r2,-4
  810470:	94bfffc4 	addi	r18,r18,-1
  810474:	a8bffb36 	bltu	r21,r2,810464 <__alt_data_end+0xff810464>
  810478:	84800415 	stw	r18,16(r16)
  81047c:	9805883a 	mov	r2,r19
  810480:	dfc00817 	ldw	ra,32(sp)
  810484:	ddc00717 	ldw	r23,28(sp)
  810488:	dd800617 	ldw	r22,24(sp)
  81048c:	dd400517 	ldw	r21,20(sp)
  810490:	dd000417 	ldw	r20,16(sp)
  810494:	dcc00317 	ldw	r19,12(sp)
  810498:	dc800217 	ldw	r18,8(sp)
  81049c:	dc400117 	ldw	r17,4(sp)
  8104a0:	dc000017 	ldw	r16,0(sp)
  8104a4:	dec00904 	addi	sp,sp,36
  8104a8:	f800283a 	ret
  8104ac:	0005883a 	mov	r2,zero
  8104b0:	003ff306 	br	810480 <__alt_data_end+0xff810480>

008104b4 <_dtoa_r>:
  8104b4:	20801017 	ldw	r2,64(r4)
  8104b8:	deffde04 	addi	sp,sp,-136
  8104bc:	dd401d15 	stw	r21,116(sp)
  8104c0:	dcc01b15 	stw	r19,108(sp)
  8104c4:	dc801a15 	stw	r18,104(sp)
  8104c8:	dc401915 	stw	r17,100(sp)
  8104cc:	dc001815 	stw	r16,96(sp)
  8104d0:	dfc02115 	stw	ra,132(sp)
  8104d4:	df002015 	stw	fp,128(sp)
  8104d8:	ddc01f15 	stw	r23,124(sp)
  8104dc:	dd801e15 	stw	r22,120(sp)
  8104e0:	dd001c15 	stw	r20,112(sp)
  8104e4:	d9c00315 	stw	r7,12(sp)
  8104e8:	2021883a 	mov	r16,r4
  8104ec:	302b883a 	mov	r21,r6
  8104f0:	2825883a 	mov	r18,r5
  8104f4:	dc402417 	ldw	r17,144(sp)
  8104f8:	3027883a 	mov	r19,r6
  8104fc:	10000826 	beq	r2,zero,810520 <_dtoa_r+0x6c>
  810500:	21801117 	ldw	r6,68(r4)
  810504:	00c00044 	movi	r3,1
  810508:	100b883a 	mov	r5,r2
  81050c:	1986983a 	sll	r3,r3,r6
  810510:	11800115 	stw	r6,4(r2)
  810514:	10c00215 	stw	r3,8(r2)
  810518:	08126fc0 	call	8126fc <_Bfree>
  81051c:	80001015 	stw	zero,64(r16)
  810520:	a8002d16 	blt	r21,zero,8105d8 <_dtoa_r+0x124>
  810524:	88000015 	stw	zero,0(r17)
  810528:	a8dffc2c 	andhi	r3,r21,32752
  81052c:	009ffc34 	movhi	r2,32752
  810530:	18801b26 	beq	r3,r2,8105a0 <_dtoa_r+0xec>
  810534:	9009883a 	mov	r4,r18
  810538:	980b883a 	mov	r5,r19
  81053c:	000d883a 	mov	r6,zero
  810540:	000f883a 	mov	r7,zero
  810544:	081879c0 	call	81879c <__eqdf2>
  810548:	10002a1e 	bne	r2,zero,8105f4 <_dtoa_r+0x140>
  81054c:	d8c02317 	ldw	r3,140(sp)
  810550:	d9002517 	ldw	r4,148(sp)
  810554:	00800044 	movi	r2,1
  810558:	18800015 	stw	r2,0(r3)
  81055c:	2001a226 	beq	r4,zero,810be8 <_dtoa_r+0x734>
  810560:	008020b4 	movhi	r2,130
  810564:	10b90b44 	addi	r2,r2,-7123
  810568:	20800015 	stw	r2,0(r4)
  81056c:	10bfffc4 	addi	r2,r2,-1
  810570:	dfc02117 	ldw	ra,132(sp)
  810574:	df002017 	ldw	fp,128(sp)
  810578:	ddc01f17 	ldw	r23,124(sp)
  81057c:	dd801e17 	ldw	r22,120(sp)
  810580:	dd401d17 	ldw	r21,116(sp)
  810584:	dd001c17 	ldw	r20,112(sp)
  810588:	dcc01b17 	ldw	r19,108(sp)
  81058c:	dc801a17 	ldw	r18,104(sp)
  810590:	dc401917 	ldw	r17,100(sp)
  810594:	dc001817 	ldw	r16,96(sp)
  810598:	dec02204 	addi	sp,sp,136
  81059c:	f800283a 	ret
  8105a0:	d8c02317 	ldw	r3,140(sp)
  8105a4:	0089c3c4 	movi	r2,9999
  8105a8:	18800015 	stw	r2,0(r3)
  8105ac:	90017c26 	beq	r18,zero,810ba0 <_dtoa_r+0x6ec>
  8105b0:	008020b4 	movhi	r2,130
  8105b4:	10b91f04 	addi	r2,r2,-7044
  8105b8:	d9002517 	ldw	r4,148(sp)
  8105bc:	203fec26 	beq	r4,zero,810570 <__alt_data_end+0xff810570>
  8105c0:	10c000c7 	ldb	r3,3(r2)
  8105c4:	18017d1e 	bne	r3,zero,810bbc <_dtoa_r+0x708>
  8105c8:	10c000c4 	addi	r3,r2,3
  8105cc:	d9802517 	ldw	r6,148(sp)
  8105d0:	30c00015 	stw	r3,0(r6)
  8105d4:	003fe606 	br	810570 <__alt_data_end+0xff810570>
  8105d8:	04e00034 	movhi	r19,32768
  8105dc:	9cffffc4 	addi	r19,r19,-1
  8105e0:	00800044 	movi	r2,1
  8105e4:	ace6703a 	and	r19,r21,r19
  8105e8:	88800015 	stw	r2,0(r17)
  8105ec:	982b883a 	mov	r21,r19
  8105f0:	003fcd06 	br	810528 <__alt_data_end+0xff810528>
  8105f4:	d8800204 	addi	r2,sp,8
  8105f8:	a822d53a 	srli	r17,r21,20
  8105fc:	d8800015 	stw	r2,0(sp)
  810600:	8009883a 	mov	r4,r16
  810604:	900b883a 	mov	r5,r18
  810608:	980d883a 	mov	r6,r19
  81060c:	d9c00104 	addi	r7,sp,4
  810610:	081329c0 	call	81329c <__d2b>
  810614:	1039883a 	mov	fp,r2
  810618:	88016a1e 	bne	r17,zero,810bc4 <_dtoa_r+0x710>
  81061c:	dd000217 	ldw	r20,8(sp)
  810620:	dc400117 	ldw	r17,4(sp)
  810624:	00befbc4 	movi	r2,-1041
  810628:	a463883a 	add	r17,r20,r17
  81062c:	8882ea16 	blt	r17,r2,8111d8 <_dtoa_r+0xd24>
  810630:	00bf0384 	movi	r2,-1010
  810634:	1445c83a 	sub	r2,r2,r17
  810638:	89010484 	addi	r4,r17,1042
  81063c:	a8aa983a 	sll	r21,r21,r2
  810640:	9108d83a 	srl	r4,r18,r4
  810644:	a908b03a 	or	r4,r21,r4
  810648:	0819b2c0 	call	819b2c <__floatunsidf>
  81064c:	017f8434 	movhi	r5,65040
  810650:	01800044 	movi	r6,1
  810654:	1009883a 	mov	r4,r2
  810658:	194b883a 	add	r5,r3,r5
  81065c:	8c7fffc4 	addi	r17,r17,-1
  810660:	d9800f15 	stw	r6,60(sp)
  810664:	000d883a 	mov	r6,zero
  810668:	01cffe34 	movhi	r7,16376
  81066c:	08191040 	call	819104 <__subdf3>
  810670:	0198dbf4 	movhi	r6,25455
  810674:	01cff4f4 	movhi	r7,16339
  810678:	1009883a 	mov	r4,r2
  81067c:	180b883a 	mov	r5,r3
  810680:	3190d844 	addi	r6,r6,17249
  810684:	39e1e9c4 	addi	r7,r7,-30809
  810688:	08189e00 	call	8189e0 <__muldf3>
  81068c:	01a2d874 	movhi	r6,35681
  810690:	01cff1f4 	movhi	r7,16327
  810694:	180b883a 	mov	r5,r3
  810698:	31b22cc4 	addi	r6,r6,-14157
  81069c:	39e28a04 	addi	r7,r7,-30168
  8106a0:	1009883a 	mov	r4,r2
  8106a4:	08176340 	call	817634 <__adddf3>
  8106a8:	8809883a 	mov	r4,r17
  8106ac:	102d883a 	mov	r22,r2
  8106b0:	182b883a 	mov	r21,r3
  8106b4:	0819a5c0 	call	819a5c <__floatsidf>
  8106b8:	019427f4 	movhi	r6,20639
  8106bc:	01cff4f4 	movhi	r7,16339
  8106c0:	1009883a 	mov	r4,r2
  8106c4:	180b883a 	mov	r5,r3
  8106c8:	319e7ec4 	addi	r6,r6,31227
  8106cc:	39d104c4 	addi	r7,r7,17427
  8106d0:	08189e00 	call	8189e0 <__muldf3>
  8106d4:	b009883a 	mov	r4,r22
  8106d8:	a80b883a 	mov	r5,r21
  8106dc:	100d883a 	mov	r6,r2
  8106e0:	180f883a 	mov	r7,r3
  8106e4:	08176340 	call	817634 <__adddf3>
  8106e8:	1009883a 	mov	r4,r2
  8106ec:	180b883a 	mov	r5,r3
  8106f0:	102d883a 	mov	r22,r2
  8106f4:	182b883a 	mov	r21,r3
  8106f8:	08199d40 	call	8199d4 <__fixdfsi>
  8106fc:	b009883a 	mov	r4,r22
  810700:	a80b883a 	mov	r5,r21
  810704:	000d883a 	mov	r6,zero
  810708:	000f883a 	mov	r7,zero
  81070c:	d8800515 	stw	r2,20(sp)
  810710:	08189000 	call	818900 <__ledf2>
  810714:	10023116 	blt	r2,zero,810fdc <_dtoa_r+0xb28>
  810718:	d8c00517 	ldw	r3,20(sp)
  81071c:	00800584 	movi	r2,22
  810720:	10c21f36 	bltu	r2,r3,810fa0 <_dtoa_r+0xaec>
  810724:	180490fa 	slli	r2,r3,3
  810728:	00c020b4 	movhi	r3,130
  81072c:	18f93a04 	addi	r3,r3,-6936
  810730:	1885883a 	add	r2,r3,r2
  810734:	11000017 	ldw	r4,0(r2)
  810738:	11400117 	ldw	r5,4(r2)
  81073c:	900d883a 	mov	r6,r18
  810740:	980f883a 	mov	r7,r19
  810744:	08188200 	call	818820 <__gedf2>
  810748:	0082a70e 	bge	zero,r2,8111e8 <_dtoa_r+0xd34>
  81074c:	d9000517 	ldw	r4,20(sp)
  810750:	d8000d15 	stw	zero,52(sp)
  810754:	213fffc4 	addi	r4,r4,-1
  810758:	d9000515 	stw	r4,20(sp)
  81075c:	a463c83a 	sub	r17,r20,r17
  810760:	8dbfffc4 	addi	r22,r17,-1
  810764:	b0021916 	blt	r22,zero,810fcc <_dtoa_r+0xb18>
  810768:	d8000815 	stw	zero,32(sp)
  81076c:	d8800517 	ldw	r2,20(sp)
  810770:	10020e16 	blt	r2,zero,810fac <_dtoa_r+0xaf8>
  810774:	b0ad883a 	add	r22,r22,r2
  810778:	d8800a15 	stw	r2,40(sp)
  81077c:	d8000915 	stw	zero,36(sp)
  810780:	d8c00317 	ldw	r3,12(sp)
  810784:	00800244 	movi	r2,9
  810788:	10c11a36 	bltu	r2,r3,810bf4 <_dtoa_r+0x740>
  81078c:	00800144 	movi	r2,5
  810790:	10c4fc0e 	bge	r2,r3,811b84 <_dtoa_r+0x16d0>
  810794:	18ffff04 	addi	r3,r3,-4
  810798:	d8c00315 	stw	r3,12(sp)
  81079c:	0029883a 	mov	r20,zero
  8107a0:	d9800317 	ldw	r6,12(sp)
  8107a4:	008000c4 	movi	r2,3
  8107a8:	3083bd26 	beq	r6,r2,8116a0 <_dtoa_r+0x11ec>
  8107ac:	1183670e 	bge	r2,r6,81154c <_dtoa_r+0x1098>
  8107b0:	d8c00317 	ldw	r3,12(sp)
  8107b4:	00800104 	movi	r2,4
  8107b8:	1882e726 	beq	r3,r2,811358 <_dtoa_r+0xea4>
  8107bc:	00800144 	movi	r2,5
  8107c0:	1884f21e 	bne	r3,r2,811b8c <_dtoa_r+0x16d8>
  8107c4:	00800044 	movi	r2,1
  8107c8:	d8800b15 	stw	r2,44(sp)
  8107cc:	d8c02217 	ldw	r3,136(sp)
  8107d0:	d9000517 	ldw	r4,20(sp)
  8107d4:	1907883a 	add	r3,r3,r4
  8107d8:	19800044 	addi	r6,r3,1
  8107dc:	d8c00c15 	stw	r3,48(sp)
  8107e0:	d9800615 	stw	r6,24(sp)
  8107e4:	0183c30e 	bge	zero,r6,8116f4 <_dtoa_r+0x1240>
  8107e8:	d9800617 	ldw	r6,24(sp)
  8107ec:	3023883a 	mov	r17,r6
  8107f0:	80001115 	stw	zero,68(r16)
  8107f4:	008005c4 	movi	r2,23
  8107f8:	1184f62e 	bgeu	r2,r6,811bd4 <_dtoa_r+0x1720>
  8107fc:	00c00044 	movi	r3,1
  810800:	00800104 	movi	r2,4
  810804:	1085883a 	add	r2,r2,r2
  810808:	11000504 	addi	r4,r2,20
  81080c:	180b883a 	mov	r5,r3
  810810:	18c00044 	addi	r3,r3,1
  810814:	313ffb2e 	bgeu	r6,r4,810804 <__alt_data_end+0xff810804>
  810818:	81401115 	stw	r5,68(r16)
  81081c:	8009883a 	mov	r4,r16
  810820:	08126540 	call	812654 <_Balloc>
  810824:	d8800715 	stw	r2,28(sp)
  810828:	80801015 	stw	r2,64(r16)
  81082c:	00800384 	movi	r2,14
  810830:	1440fd36 	bltu	r2,r17,810c28 <_dtoa_r+0x774>
  810834:	a000fc26 	beq	r20,zero,810c28 <_dtoa_r+0x774>
  810838:	d8800517 	ldw	r2,20(sp)
  81083c:	0083b90e 	bge	zero,r2,811724 <_dtoa_r+0x1270>
  810840:	d8c00517 	ldw	r3,20(sp)
  810844:	108003cc 	andi	r2,r2,15
  810848:	100490fa 	slli	r2,r2,3
  81084c:	182fd13a 	srai	r23,r3,4
  810850:	00c020b4 	movhi	r3,130
  810854:	18f93a04 	addi	r3,r3,-6936
  810858:	1885883a 	add	r2,r3,r2
  81085c:	b8c0040c 	andi	r3,r23,16
  810860:	12c00017 	ldw	r11,0(r2)
  810864:	12800117 	ldw	r10,4(r2)
  810868:	18039726 	beq	r3,zero,8116c8 <_dtoa_r+0x1214>
  81086c:	008020b4 	movhi	r2,130
  810870:	10b93004 	addi	r2,r2,-6976
  810874:	11800817 	ldw	r6,32(r2)
  810878:	11c00917 	ldw	r7,36(r2)
  81087c:	9009883a 	mov	r4,r18
  810880:	980b883a 	mov	r5,r19
  810884:	da801615 	stw	r10,88(sp)
  810888:	dac01515 	stw	r11,84(sp)
  81088c:	0817ed00 	call	817ed0 <__divdf3>
  810890:	da801617 	ldw	r10,88(sp)
  810894:	dac01517 	ldw	r11,84(sp)
  810898:	bdc003cc 	andi	r23,r23,15
  81089c:	044000c4 	movi	r17,3
  8108a0:	d8800e15 	stw	r2,56(sp)
  8108a4:	182b883a 	mov	r21,r3
  8108a8:	b8001126 	beq	r23,zero,8108f0 <_dtoa_r+0x43c>
  8108ac:	050020b4 	movhi	r20,130
  8108b0:	a5393004 	addi	r20,r20,-6976
  8108b4:	5805883a 	mov	r2,r11
  8108b8:	5007883a 	mov	r3,r10
  8108bc:	b980004c 	andi	r6,r23,1
  8108c0:	1009883a 	mov	r4,r2
  8108c4:	b82fd07a 	srai	r23,r23,1
  8108c8:	180b883a 	mov	r5,r3
  8108cc:	30000426 	beq	r6,zero,8108e0 <_dtoa_r+0x42c>
  8108d0:	a1800017 	ldw	r6,0(r20)
  8108d4:	a1c00117 	ldw	r7,4(r20)
  8108d8:	8c400044 	addi	r17,r17,1
  8108dc:	08189e00 	call	8189e0 <__muldf3>
  8108e0:	a5000204 	addi	r20,r20,8
  8108e4:	b83ff51e 	bne	r23,zero,8108bc <__alt_data_end+0xff8108bc>
  8108e8:	1017883a 	mov	r11,r2
  8108ec:	1815883a 	mov	r10,r3
  8108f0:	d9000e17 	ldw	r4,56(sp)
  8108f4:	a80b883a 	mov	r5,r21
  8108f8:	580d883a 	mov	r6,r11
  8108fc:	500f883a 	mov	r7,r10
  810900:	0817ed00 	call	817ed0 <__divdf3>
  810904:	1029883a 	mov	r20,r2
  810908:	182b883a 	mov	r21,r3
  81090c:	d9800d17 	ldw	r6,52(sp)
  810910:	30000626 	beq	r6,zero,81092c <_dtoa_r+0x478>
  810914:	a009883a 	mov	r4,r20
  810918:	a80b883a 	mov	r5,r21
  81091c:	000d883a 	mov	r6,zero
  810920:	01cffc34 	movhi	r7,16368
  810924:	08189000 	call	818900 <__ledf2>
  810928:	10043216 	blt	r2,zero,8119f4 <_dtoa_r+0x1540>
  81092c:	8809883a 	mov	r4,r17
  810930:	0819a5c0 	call	819a5c <__floatsidf>
  810934:	1009883a 	mov	r4,r2
  810938:	180b883a 	mov	r5,r3
  81093c:	a00d883a 	mov	r6,r20
  810940:	a80f883a 	mov	r7,r21
  810944:	08189e00 	call	8189e0 <__muldf3>
  810948:	000d883a 	mov	r6,zero
  81094c:	1009883a 	mov	r4,r2
  810950:	180b883a 	mov	r5,r3
  810954:	01d00734 	movhi	r7,16412
  810958:	08176340 	call	817634 <__adddf3>
  81095c:	1023883a 	mov	r17,r2
  810960:	d9800617 	ldw	r6,24(sp)
  810964:	00bf3034 	movhi	r2,64704
  810968:	1885883a 	add	r2,r3,r2
  81096c:	d8800e15 	stw	r2,56(sp)
  810970:	30032e26 	beq	r6,zero,81162c <_dtoa_r+0x1178>
  810974:	d8c00517 	ldw	r3,20(sp)
  810978:	da800617 	ldw	r10,24(sp)
  81097c:	d8c01215 	stw	r3,72(sp)
  810980:	d9000b17 	ldw	r4,44(sp)
  810984:	2003b026 	beq	r4,zero,811848 <_dtoa_r+0x1394>
  810988:	50bfffc4 	addi	r2,r10,-1
  81098c:	100490fa 	slli	r2,r2,3
  810990:	00c020b4 	movhi	r3,130
  810994:	18f93a04 	addi	r3,r3,-6936
  810998:	1885883a 	add	r2,r3,r2
  81099c:	11800017 	ldw	r6,0(r2)
  8109a0:	11c00117 	ldw	r7,4(r2)
  8109a4:	d8800717 	ldw	r2,28(sp)
  8109a8:	0009883a 	mov	r4,zero
  8109ac:	014ff834 	movhi	r5,16352
  8109b0:	da801615 	stw	r10,88(sp)
  8109b4:	15c00044 	addi	r23,r2,1
  8109b8:	0817ed00 	call	817ed0 <__divdf3>
  8109bc:	d9c00e17 	ldw	r7,56(sp)
  8109c0:	880d883a 	mov	r6,r17
  8109c4:	1009883a 	mov	r4,r2
  8109c8:	180b883a 	mov	r5,r3
  8109cc:	08191040 	call	819104 <__subdf3>
  8109d0:	a80b883a 	mov	r5,r21
  8109d4:	a009883a 	mov	r4,r20
  8109d8:	d8c01015 	stw	r3,64(sp)
  8109dc:	d8800e15 	stw	r2,56(sp)
  8109e0:	08199d40 	call	8199d4 <__fixdfsi>
  8109e4:	1009883a 	mov	r4,r2
  8109e8:	d8801715 	stw	r2,92(sp)
  8109ec:	0819a5c0 	call	819a5c <__floatsidf>
  8109f0:	a009883a 	mov	r4,r20
  8109f4:	a80b883a 	mov	r5,r21
  8109f8:	100d883a 	mov	r6,r2
  8109fc:	180f883a 	mov	r7,r3
  810a00:	08191040 	call	819104 <__subdf3>
  810a04:	da001717 	ldw	r8,92(sp)
  810a08:	1829883a 	mov	r20,r3
  810a0c:	d8c00717 	ldw	r3,28(sp)
  810a10:	d9000e17 	ldw	r4,56(sp)
  810a14:	d9401017 	ldw	r5,64(sp)
  810a18:	42000c04 	addi	r8,r8,48
  810a1c:	1023883a 	mov	r17,r2
  810a20:	1a000005 	stb	r8,0(r3)
  810a24:	880d883a 	mov	r6,r17
  810a28:	a00f883a 	mov	r7,r20
  810a2c:	402b883a 	mov	r21,r8
  810a30:	08188200 	call	818820 <__gedf2>
  810a34:	00844516 	blt	zero,r2,811b4c <_dtoa_r+0x1698>
  810a38:	0009883a 	mov	r4,zero
  810a3c:	014ffc34 	movhi	r5,16368
  810a40:	880d883a 	mov	r6,r17
  810a44:	a00f883a 	mov	r7,r20
  810a48:	08191040 	call	819104 <__subdf3>
  810a4c:	d9000e17 	ldw	r4,56(sp)
  810a50:	d9401017 	ldw	r5,64(sp)
  810a54:	100d883a 	mov	r6,r2
  810a58:	180f883a 	mov	r7,r3
  810a5c:	08188200 	call	818820 <__gedf2>
  810a60:	da801617 	ldw	r10,88(sp)
  810a64:	00843616 	blt	zero,r2,811b40 <_dtoa_r+0x168c>
  810a68:	00800044 	movi	r2,1
  810a6c:	12806e0e 	bge	r2,r10,810c28 <_dtoa_r+0x774>
  810a70:	d9000717 	ldw	r4,28(sp)
  810a74:	dd801315 	stw	r22,76(sp)
  810a78:	dc001115 	stw	r16,68(sp)
  810a7c:	2295883a 	add	r10,r4,r10
  810a80:	dcc01415 	stw	r19,80(sp)
  810a84:	502d883a 	mov	r22,r10
  810a88:	dcc01017 	ldw	r19,64(sp)
  810a8c:	b821883a 	mov	r16,r23
  810a90:	dc801015 	stw	r18,64(sp)
  810a94:	dc800e17 	ldw	r18,56(sp)
  810a98:	00000906 	br	810ac0 <_dtoa_r+0x60c>
  810a9c:	08191040 	call	819104 <__subdf3>
  810aa0:	1009883a 	mov	r4,r2
  810aa4:	180b883a 	mov	r5,r3
  810aa8:	900d883a 	mov	r6,r18
  810aac:	980f883a 	mov	r7,r19
  810ab0:	08189000 	call	818900 <__ledf2>
  810ab4:	10040e16 	blt	r2,zero,811af0 <_dtoa_r+0x163c>
  810ab8:	b821883a 	mov	r16,r23
  810abc:	bd841026 	beq	r23,r22,811b00 <_dtoa_r+0x164c>
  810ac0:	9009883a 	mov	r4,r18
  810ac4:	980b883a 	mov	r5,r19
  810ac8:	000d883a 	mov	r6,zero
  810acc:	01d00934 	movhi	r7,16420
  810ad0:	08189e00 	call	8189e0 <__muldf3>
  810ad4:	000d883a 	mov	r6,zero
  810ad8:	01d00934 	movhi	r7,16420
  810adc:	8809883a 	mov	r4,r17
  810ae0:	a00b883a 	mov	r5,r20
  810ae4:	1025883a 	mov	r18,r2
  810ae8:	1827883a 	mov	r19,r3
  810aec:	08189e00 	call	8189e0 <__muldf3>
  810af0:	180b883a 	mov	r5,r3
  810af4:	1009883a 	mov	r4,r2
  810af8:	1823883a 	mov	r17,r3
  810afc:	1029883a 	mov	r20,r2
  810b00:	08199d40 	call	8199d4 <__fixdfsi>
  810b04:	1009883a 	mov	r4,r2
  810b08:	102b883a 	mov	r21,r2
  810b0c:	0819a5c0 	call	819a5c <__floatsidf>
  810b10:	a009883a 	mov	r4,r20
  810b14:	880b883a 	mov	r5,r17
  810b18:	100d883a 	mov	r6,r2
  810b1c:	180f883a 	mov	r7,r3
  810b20:	08191040 	call	819104 <__subdf3>
  810b24:	ad400c04 	addi	r21,r21,48
  810b28:	1009883a 	mov	r4,r2
  810b2c:	180b883a 	mov	r5,r3
  810b30:	900d883a 	mov	r6,r18
  810b34:	980f883a 	mov	r7,r19
  810b38:	85400005 	stb	r21,0(r16)
  810b3c:	1023883a 	mov	r17,r2
  810b40:	1829883a 	mov	r20,r3
  810b44:	08189000 	call	818900 <__ledf2>
  810b48:	bdc00044 	addi	r23,r23,1
  810b4c:	0009883a 	mov	r4,zero
  810b50:	014ffc34 	movhi	r5,16368
  810b54:	880d883a 	mov	r6,r17
  810b58:	a00f883a 	mov	r7,r20
  810b5c:	103fcf0e 	bge	r2,zero,810a9c <__alt_data_end+0xff810a9c>
  810b60:	d9801217 	ldw	r6,72(sp)
  810b64:	dc001117 	ldw	r16,68(sp)
  810b68:	d9800515 	stw	r6,20(sp)
  810b6c:	8009883a 	mov	r4,r16
  810b70:	e00b883a 	mov	r5,fp
  810b74:	08126fc0 	call	8126fc <_Bfree>
  810b78:	d8c00517 	ldw	r3,20(sp)
  810b7c:	d9002317 	ldw	r4,140(sp)
  810b80:	d9802517 	ldw	r6,148(sp)
  810b84:	b8000005 	stb	zero,0(r23)
  810b88:	18800044 	addi	r2,r3,1
  810b8c:	20800015 	stw	r2,0(r4)
  810b90:	30027226 	beq	r6,zero,81155c <_dtoa_r+0x10a8>
  810b94:	35c00015 	stw	r23,0(r6)
  810b98:	d8800717 	ldw	r2,28(sp)
  810b9c:	003e7406 	br	810570 <__alt_data_end+0xff810570>
  810ba0:	00800434 	movhi	r2,16
  810ba4:	10bfffc4 	addi	r2,r2,-1
  810ba8:	a8aa703a 	and	r21,r21,r2
  810bac:	a83e801e 	bne	r21,zero,8105b0 <__alt_data_end+0xff8105b0>
  810bb0:	008020b4 	movhi	r2,130
  810bb4:	10b91c04 	addi	r2,r2,-7056
  810bb8:	003e7f06 	br	8105b8 <__alt_data_end+0xff8105b8>
  810bbc:	10c00204 	addi	r3,r2,8
  810bc0:	003e8206 	br	8105cc <__alt_data_end+0xff8105cc>
  810bc4:	01400434 	movhi	r5,16
  810bc8:	297fffc4 	addi	r5,r5,-1
  810bcc:	994a703a 	and	r5,r19,r5
  810bd0:	9009883a 	mov	r4,r18
  810bd4:	8c7f0044 	addi	r17,r17,-1023
  810bd8:	294ffc34 	orhi	r5,r5,16368
  810bdc:	dd000217 	ldw	r20,8(sp)
  810be0:	d8000f15 	stw	zero,60(sp)
  810be4:	003e9f06 	br	810664 <__alt_data_end+0xff810664>
  810be8:	008020b4 	movhi	r2,130
  810bec:	10b90b04 	addi	r2,r2,-7124
  810bf0:	003e5f06 	br	810570 <__alt_data_end+0xff810570>
  810bf4:	80001115 	stw	zero,68(r16)
  810bf8:	8009883a 	mov	r4,r16
  810bfc:	000b883a 	mov	r5,zero
  810c00:	08126540 	call	812654 <_Balloc>
  810c04:	01bfffc4 	movi	r6,-1
  810c08:	d8800715 	stw	r2,28(sp)
  810c0c:	80801015 	stw	r2,64(r16)
  810c10:	00800044 	movi	r2,1
  810c14:	d9800c15 	stw	r6,48(sp)
  810c18:	d8800b15 	stw	r2,44(sp)
  810c1c:	d9800615 	stw	r6,24(sp)
  810c20:	d8002215 	stw	zero,136(sp)
  810c24:	d8000315 	stw	zero,12(sp)
  810c28:	d8800117 	ldw	r2,4(sp)
  810c2c:	10008e16 	blt	r2,zero,810e68 <_dtoa_r+0x9b4>
  810c30:	d9000517 	ldw	r4,20(sp)
  810c34:	00c00384 	movi	r3,14
  810c38:	19008b16 	blt	r3,r4,810e68 <_dtoa_r+0x9b4>
  810c3c:	200490fa 	slli	r2,r4,3
  810c40:	00c020b4 	movhi	r3,130
  810c44:	d9802217 	ldw	r6,136(sp)
  810c48:	18f93a04 	addi	r3,r3,-6936
  810c4c:	1885883a 	add	r2,r3,r2
  810c50:	14400017 	ldw	r17,0(r2)
  810c54:	15000117 	ldw	r20,4(r2)
  810c58:	3001c716 	blt	r6,zero,811378 <_dtoa_r+0xec4>
  810c5c:	880d883a 	mov	r6,r17
  810c60:	a00f883a 	mov	r7,r20
  810c64:	9009883a 	mov	r4,r18
  810c68:	980b883a 	mov	r5,r19
  810c6c:	0817ed00 	call	817ed0 <__divdf3>
  810c70:	180b883a 	mov	r5,r3
  810c74:	1009883a 	mov	r4,r2
  810c78:	08199d40 	call	8199d4 <__fixdfsi>
  810c7c:	1009883a 	mov	r4,r2
  810c80:	102d883a 	mov	r22,r2
  810c84:	0819a5c0 	call	819a5c <__floatsidf>
  810c88:	1009883a 	mov	r4,r2
  810c8c:	180b883a 	mov	r5,r3
  810c90:	880d883a 	mov	r6,r17
  810c94:	a00f883a 	mov	r7,r20
  810c98:	08189e00 	call	8189e0 <__muldf3>
  810c9c:	9009883a 	mov	r4,r18
  810ca0:	980b883a 	mov	r5,r19
  810ca4:	100d883a 	mov	r6,r2
  810ca8:	180f883a 	mov	r7,r3
  810cac:	08191040 	call	819104 <__subdf3>
  810cb0:	d9000717 	ldw	r4,28(sp)
  810cb4:	d9800617 	ldw	r6,24(sp)
  810cb8:	180b883a 	mov	r5,r3
  810cbc:	b0c00c04 	addi	r3,r22,48
  810cc0:	20c00005 	stb	r3,0(r4)
  810cc4:	25c00044 	addi	r23,r4,1
  810cc8:	01000044 	movi	r4,1
  810ccc:	1011883a 	mov	r8,r2
  810cd0:	2807883a 	mov	r3,r5
  810cd4:	31003d26 	beq	r6,r4,810dcc <_dtoa_r+0x918>
  810cd8:	000d883a 	mov	r6,zero
  810cdc:	01d00934 	movhi	r7,16420
  810ce0:	1009883a 	mov	r4,r2
  810ce4:	08189e00 	call	8189e0 <__muldf3>
  810ce8:	1009883a 	mov	r4,r2
  810cec:	180b883a 	mov	r5,r3
  810cf0:	000d883a 	mov	r6,zero
  810cf4:	000f883a 	mov	r7,zero
  810cf8:	1027883a 	mov	r19,r2
  810cfc:	182b883a 	mov	r21,r3
  810d00:	081879c0 	call	81879c <__eqdf2>
  810d04:	103f9926 	beq	r2,zero,810b6c <__alt_data_end+0xff810b6c>
  810d08:	d8c00617 	ldw	r3,24(sp)
  810d0c:	d9000717 	ldw	r4,28(sp)
  810d10:	b825883a 	mov	r18,r23
  810d14:	18bfffc4 	addi	r2,r3,-1
  810d18:	20ad883a 	add	r22,r4,r2
  810d1c:	dc000315 	stw	r16,12(sp)
  810d20:	00000a06 	br	810d4c <_dtoa_r+0x898>
  810d24:	08189e00 	call	8189e0 <__muldf3>
  810d28:	1009883a 	mov	r4,r2
  810d2c:	180b883a 	mov	r5,r3
  810d30:	000d883a 	mov	r6,zero
  810d34:	000f883a 	mov	r7,zero
  810d38:	1027883a 	mov	r19,r2
  810d3c:	182b883a 	mov	r21,r3
  810d40:	b825883a 	mov	r18,r23
  810d44:	081879c0 	call	81879c <__eqdf2>
  810d48:	10022626 	beq	r2,zero,8115e4 <_dtoa_r+0x1130>
  810d4c:	880d883a 	mov	r6,r17
  810d50:	a00f883a 	mov	r7,r20
  810d54:	9809883a 	mov	r4,r19
  810d58:	a80b883a 	mov	r5,r21
  810d5c:	0817ed00 	call	817ed0 <__divdf3>
  810d60:	180b883a 	mov	r5,r3
  810d64:	1009883a 	mov	r4,r2
  810d68:	08199d40 	call	8199d4 <__fixdfsi>
  810d6c:	1009883a 	mov	r4,r2
  810d70:	1021883a 	mov	r16,r2
  810d74:	0819a5c0 	call	819a5c <__floatsidf>
  810d78:	1009883a 	mov	r4,r2
  810d7c:	180b883a 	mov	r5,r3
  810d80:	880d883a 	mov	r6,r17
  810d84:	a00f883a 	mov	r7,r20
  810d88:	08189e00 	call	8189e0 <__muldf3>
  810d8c:	9809883a 	mov	r4,r19
  810d90:	a80b883a 	mov	r5,r21
  810d94:	100d883a 	mov	r6,r2
  810d98:	180f883a 	mov	r7,r3
  810d9c:	08191040 	call	819104 <__subdf3>
  810da0:	82000c04 	addi	r8,r16,48
  810da4:	92000005 	stb	r8,0(r18)
  810da8:	1009883a 	mov	r4,r2
  810dac:	180b883a 	mov	r5,r3
  810db0:	000d883a 	mov	r6,zero
  810db4:	01d00934 	movhi	r7,16420
  810db8:	1011883a 	mov	r8,r2
  810dbc:	bdc00044 	addi	r23,r23,1
  810dc0:	95bfd81e 	bne	r18,r22,810d24 <__alt_data_end+0xff810d24>
  810dc4:	802d883a 	mov	r22,r16
  810dc8:	dc000317 	ldw	r16,12(sp)
  810dcc:	4009883a 	mov	r4,r8
  810dd0:	180b883a 	mov	r5,r3
  810dd4:	400d883a 	mov	r6,r8
  810dd8:	180f883a 	mov	r7,r3
  810ddc:	08176340 	call	817634 <__adddf3>
  810de0:	8809883a 	mov	r4,r17
  810de4:	a00b883a 	mov	r5,r20
  810de8:	100d883a 	mov	r6,r2
  810dec:	180f883a 	mov	r7,r3
  810df0:	1027883a 	mov	r19,r2
  810df4:	1825883a 	mov	r18,r3
  810df8:	08189000 	call	818900 <__ledf2>
  810dfc:	10000816 	blt	r2,zero,810e20 <_dtoa_r+0x96c>
  810e00:	8809883a 	mov	r4,r17
  810e04:	a00b883a 	mov	r5,r20
  810e08:	980d883a 	mov	r6,r19
  810e0c:	900f883a 	mov	r7,r18
  810e10:	081879c0 	call	81879c <__eqdf2>
  810e14:	103f551e 	bne	r2,zero,810b6c <__alt_data_end+0xff810b6c>
  810e18:	b580004c 	andi	r22,r22,1
  810e1c:	b03f5326 	beq	r22,zero,810b6c <__alt_data_end+0xff810b6c>
  810e20:	bd7fffc3 	ldbu	r21,-1(r23)
  810e24:	b8bfffc4 	addi	r2,r23,-1
  810e28:	1007883a 	mov	r3,r2
  810e2c:	01400e44 	movi	r5,57
  810e30:	d9800717 	ldw	r6,28(sp)
  810e34:	00000506 	br	810e4c <_dtoa_r+0x998>
  810e38:	18ffffc4 	addi	r3,r3,-1
  810e3c:	30825e26 	beq	r6,r2,8117b8 <_dtoa_r+0x1304>
  810e40:	1d400003 	ldbu	r21,0(r3)
  810e44:	102f883a 	mov	r23,r2
  810e48:	10bfffc4 	addi	r2,r2,-1
  810e4c:	a9003fcc 	andi	r4,r21,255
  810e50:	2100201c 	xori	r4,r4,128
  810e54:	213fe004 	addi	r4,r4,-128
  810e58:	217ff726 	beq	r4,r5,810e38 <__alt_data_end+0xff810e38>
  810e5c:	aa000044 	addi	r8,r21,1
  810e60:	12000005 	stb	r8,0(r2)
  810e64:	003f4106 	br	810b6c <__alt_data_end+0xff810b6c>
  810e68:	d8c00b17 	ldw	r3,44(sp)
  810e6c:	18006726 	beq	r3,zero,81100c <_dtoa_r+0xb58>
  810e70:	d9000317 	ldw	r4,12(sp)
  810e74:	00c00044 	movi	r3,1
  810e78:	19016a0e 	bge	r3,r4,811424 <_dtoa_r+0xf70>
  810e7c:	d8800617 	ldw	r2,24(sp)
  810e80:	d8c00917 	ldw	r3,36(sp)
  810e84:	157fffc4 	addi	r21,r2,-1
  810e88:	1d420716 	blt	r3,r21,8116a8 <_dtoa_r+0x11f4>
  810e8c:	1d6bc83a 	sub	r21,r3,r21
  810e90:	d8800617 	ldw	r2,24(sp)
  810e94:	1002c716 	blt	r2,zero,8119b4 <_dtoa_r+0x1500>
  810e98:	dd000817 	ldw	r20,32(sp)
  810e9c:	d8800617 	ldw	r2,24(sp)
  810ea0:	d9800817 	ldw	r6,32(sp)
  810ea4:	8009883a 	mov	r4,r16
  810ea8:	01400044 	movi	r5,1
  810eac:	308d883a 	add	r6,r6,r2
  810eb0:	d9800815 	stw	r6,32(sp)
  810eb4:	b0ad883a 	add	r22,r22,r2
  810eb8:	0812a600 	call	812a60 <__i2b>
  810ebc:	1023883a 	mov	r17,r2
  810ec0:	a0000826 	beq	r20,zero,810ee4 <_dtoa_r+0xa30>
  810ec4:	0580070e 	bge	zero,r22,810ee4 <_dtoa_r+0xa30>
  810ec8:	b005883a 	mov	r2,r22
  810ecc:	a5812016 	blt	r20,r22,811350 <_dtoa_r+0xe9c>
  810ed0:	d8c00817 	ldw	r3,32(sp)
  810ed4:	a0a9c83a 	sub	r20,r20,r2
  810ed8:	b0adc83a 	sub	r22,r22,r2
  810edc:	1887c83a 	sub	r3,r3,r2
  810ee0:	d8c00815 	stw	r3,32(sp)
  810ee4:	d9000917 	ldw	r4,36(sp)
  810ee8:	0100140e 	bge	zero,r4,810f3c <_dtoa_r+0xa88>
  810eec:	d9800b17 	ldw	r6,44(sp)
  810ef0:	3001e526 	beq	r6,zero,811688 <_dtoa_r+0x11d4>
  810ef4:	05400e0e 	bge	zero,r21,810f30 <_dtoa_r+0xa7c>
  810ef8:	880b883a 	mov	r5,r17
  810efc:	8009883a 	mov	r4,r16
  810f00:	a80d883a 	mov	r6,r21
  810f04:	0812c980 	call	812c98 <__pow5mult>
  810f08:	e00d883a 	mov	r6,fp
  810f0c:	8009883a 	mov	r4,r16
  810f10:	100b883a 	mov	r5,r2
  810f14:	1023883a 	mov	r17,r2
  810f18:	0812a9c0 	call	812a9c <__multiply>
  810f1c:	102f883a 	mov	r23,r2
  810f20:	e00b883a 	mov	r5,fp
  810f24:	8009883a 	mov	r4,r16
  810f28:	08126fc0 	call	8126fc <_Bfree>
  810f2c:	b839883a 	mov	fp,r23
  810f30:	d8800917 	ldw	r2,36(sp)
  810f34:	154dc83a 	sub	r6,r2,r21
  810f38:	3001281e 	bne	r6,zero,8113dc <_dtoa_r+0xf28>
  810f3c:	05c00044 	movi	r23,1
  810f40:	8009883a 	mov	r4,r16
  810f44:	b80b883a 	mov	r5,r23
  810f48:	0812a600 	call	812a60 <__i2b>
  810f4c:	d8c00a17 	ldw	r3,40(sp)
  810f50:	102b883a 	mov	r21,r2
  810f54:	00c0310e 	bge	zero,r3,81101c <_dtoa_r+0xb68>
  810f58:	8009883a 	mov	r4,r16
  810f5c:	100b883a 	mov	r5,r2
  810f60:	180d883a 	mov	r6,r3
  810f64:	0812c980 	call	812c98 <__pow5mult>
  810f68:	d9000317 	ldw	r4,12(sp)
  810f6c:	102b883a 	mov	r21,r2
  810f70:	b9011f0e 	bge	r23,r4,8113f0 <_dtoa_r+0xf3c>
  810f74:	0027883a 	mov	r19,zero
  810f78:	a8800417 	ldw	r2,16(r21)
  810f7c:	10800104 	addi	r2,r2,4
  810f80:	1085883a 	add	r2,r2,r2
  810f84:	1085883a 	add	r2,r2,r2
  810f88:	a885883a 	add	r2,r21,r2
  810f8c:	11000017 	ldw	r4,0(r2)
  810f90:	08129480 	call	812948 <__hi0bits>
  810f94:	00c00804 	movi	r3,32
  810f98:	1885c83a 	sub	r2,r3,r2
  810f9c:	00002506 	br	811034 <_dtoa_r+0xb80>
  810fa0:	01800044 	movi	r6,1
  810fa4:	d9800d15 	stw	r6,52(sp)
  810fa8:	003dec06 	br	81075c <__alt_data_end+0xff81075c>
  810fac:	d8c00817 	ldw	r3,32(sp)
  810fb0:	d9000517 	ldw	r4,20(sp)
  810fb4:	d8000a15 	stw	zero,40(sp)
  810fb8:	1907c83a 	sub	r3,r3,r4
  810fbc:	010dc83a 	sub	r6,zero,r4
  810fc0:	d8c00815 	stw	r3,32(sp)
  810fc4:	d9800915 	stw	r6,36(sp)
  810fc8:	003ded06 	br	810780 <__alt_data_end+0xff810780>
  810fcc:	05adc83a 	sub	r22,zero,r22
  810fd0:	dd800815 	stw	r22,32(sp)
  810fd4:	002d883a 	mov	r22,zero
  810fd8:	003de406 	br	81076c <__alt_data_end+0xff81076c>
  810fdc:	d9000517 	ldw	r4,20(sp)
  810fe0:	0819a5c0 	call	819a5c <__floatsidf>
  810fe4:	1009883a 	mov	r4,r2
  810fe8:	180b883a 	mov	r5,r3
  810fec:	b00d883a 	mov	r6,r22
  810ff0:	a80f883a 	mov	r7,r21
  810ff4:	081879c0 	call	81879c <__eqdf2>
  810ff8:	103dc726 	beq	r2,zero,810718 <__alt_data_end+0xff810718>
  810ffc:	d8800517 	ldw	r2,20(sp)
  811000:	10bfffc4 	addi	r2,r2,-1
  811004:	d8800515 	stw	r2,20(sp)
  811008:	003dc306 	br	810718 <__alt_data_end+0xff810718>
  81100c:	dd400917 	ldw	r21,36(sp)
  811010:	dd000817 	ldw	r20,32(sp)
  811014:	0023883a 	mov	r17,zero
  811018:	003fa906 	br	810ec0 <__alt_data_end+0xff810ec0>
  81101c:	d9800317 	ldw	r6,12(sp)
  811020:	b981670e 	bge	r23,r6,8115c0 <_dtoa_r+0x110c>
  811024:	0027883a 	mov	r19,zero
  811028:	d8c00a17 	ldw	r3,40(sp)
  81102c:	183fd21e 	bne	r3,zero,810f78 <__alt_data_end+0xff810f78>
  811030:	00800044 	movi	r2,1
  811034:	1585883a 	add	r2,r2,r22
  811038:	108007cc 	andi	r2,r2,31
  81103c:	10005f26 	beq	r2,zero,8111bc <_dtoa_r+0xd08>
  811040:	00c00804 	movi	r3,32
  811044:	1887c83a 	sub	r3,r3,r2
  811048:	01000104 	movi	r4,4
  81104c:	20c2dd0e 	bge	r4,r3,811bc4 <_dtoa_r+0x1710>
  811050:	d9000817 	ldw	r4,32(sp)
  811054:	00c00704 	movi	r3,28
  811058:	1885c83a 	sub	r2,r3,r2
  81105c:	2089883a 	add	r4,r4,r2
  811060:	d9000815 	stw	r4,32(sp)
  811064:	a0a9883a 	add	r20,r20,r2
  811068:	b0ad883a 	add	r22,r22,r2
  81106c:	d8800817 	ldw	r2,32(sp)
  811070:	0080050e 	bge	zero,r2,811088 <_dtoa_r+0xbd4>
  811074:	e00b883a 	mov	r5,fp
  811078:	8009883a 	mov	r4,r16
  81107c:	100d883a 	mov	r6,r2
  811080:	0812dd80 	call	812dd8 <__lshift>
  811084:	1039883a 	mov	fp,r2
  811088:	0580050e 	bge	zero,r22,8110a0 <_dtoa_r+0xbec>
  81108c:	a80b883a 	mov	r5,r21
  811090:	8009883a 	mov	r4,r16
  811094:	b00d883a 	mov	r6,r22
  811098:	0812dd80 	call	812dd8 <__lshift>
  81109c:	102b883a 	mov	r21,r2
  8110a0:	d8c00d17 	ldw	r3,52(sp)
  8110a4:	1801161e 	bne	r3,zero,811500 <_dtoa_r+0x104c>
  8110a8:	d8c00617 	ldw	r3,24(sp)
  8110ac:	00c12d0e 	bge	zero,r3,811564 <_dtoa_r+0x10b0>
  8110b0:	d8c00b17 	ldw	r3,44(sp)
  8110b4:	1800571e 	bne	r3,zero,811214 <_dtoa_r+0xd60>
  8110b8:	dc800717 	ldw	r18,28(sp)
  8110bc:	dcc00617 	ldw	r19,24(sp)
  8110c0:	9029883a 	mov	r20,r18
  8110c4:	00000206 	br	8110d0 <_dtoa_r+0xc1c>
  8110c8:	08127240 	call	812724 <__multadd>
  8110cc:	1039883a 	mov	fp,r2
  8110d0:	e009883a 	mov	r4,fp
  8110d4:	a80b883a 	mov	r5,r21
  8110d8:	08102b40 	call	8102b4 <quorem>
  8110dc:	10800c04 	addi	r2,r2,48
  8110e0:	90800005 	stb	r2,0(r18)
  8110e4:	94800044 	addi	r18,r18,1
  8110e8:	9507c83a 	sub	r3,r18,r20
  8110ec:	8009883a 	mov	r4,r16
  8110f0:	e00b883a 	mov	r5,fp
  8110f4:	01800284 	movi	r6,10
  8110f8:	000f883a 	mov	r7,zero
  8110fc:	1cfff216 	blt	r3,r19,8110c8 <__alt_data_end+0xff8110c8>
  811100:	1011883a 	mov	r8,r2
  811104:	d8800617 	ldw	r2,24(sp)
  811108:	00822e0e 	bge	zero,r2,8119c4 <_dtoa_r+0x1510>
  81110c:	d9000717 	ldw	r4,28(sp)
  811110:	0025883a 	mov	r18,zero
  811114:	20af883a 	add	r23,r4,r2
  811118:	e00b883a 	mov	r5,fp
  81111c:	01800044 	movi	r6,1
  811120:	8009883a 	mov	r4,r16
  811124:	da001715 	stw	r8,92(sp)
  811128:	0812dd80 	call	812dd8 <__lshift>
  81112c:	1009883a 	mov	r4,r2
  811130:	a80b883a 	mov	r5,r21
  811134:	1039883a 	mov	fp,r2
  811138:	0812f280 	call	812f28 <__mcmp>
  81113c:	da001717 	ldw	r8,92(sp)
  811140:	00816e0e 	bge	zero,r2,8116fc <_dtoa_r+0x1248>
  811144:	b93fffc3 	ldbu	r4,-1(r23)
  811148:	b8bfffc4 	addi	r2,r23,-1
  81114c:	1007883a 	mov	r3,r2
  811150:	01800e44 	movi	r6,57
  811154:	d9c00717 	ldw	r7,28(sp)
  811158:	00000506 	br	811170 <_dtoa_r+0xcbc>
  81115c:	18ffffc4 	addi	r3,r3,-1
  811160:	38811926 	beq	r7,r2,8115c8 <_dtoa_r+0x1114>
  811164:	19000003 	ldbu	r4,0(r3)
  811168:	102f883a 	mov	r23,r2
  81116c:	10bfffc4 	addi	r2,r2,-1
  811170:	21403fcc 	andi	r5,r4,255
  811174:	2940201c 	xori	r5,r5,128
  811178:	297fe004 	addi	r5,r5,-128
  81117c:	29bff726 	beq	r5,r6,81115c <__alt_data_end+0xff81115c>
  811180:	21000044 	addi	r4,r4,1
  811184:	11000005 	stb	r4,0(r2)
  811188:	8009883a 	mov	r4,r16
  81118c:	a80b883a 	mov	r5,r21
  811190:	08126fc0 	call	8126fc <_Bfree>
  811194:	883e7526 	beq	r17,zero,810b6c <__alt_data_end+0xff810b6c>
  811198:	90000426 	beq	r18,zero,8111ac <_dtoa_r+0xcf8>
  81119c:	94400326 	beq	r18,r17,8111ac <_dtoa_r+0xcf8>
  8111a0:	8009883a 	mov	r4,r16
  8111a4:	900b883a 	mov	r5,r18
  8111a8:	08126fc0 	call	8126fc <_Bfree>
  8111ac:	8009883a 	mov	r4,r16
  8111b0:	880b883a 	mov	r5,r17
  8111b4:	08126fc0 	call	8126fc <_Bfree>
  8111b8:	003e6c06 	br	810b6c <__alt_data_end+0xff810b6c>
  8111bc:	00800704 	movi	r2,28
  8111c0:	d9800817 	ldw	r6,32(sp)
  8111c4:	a0a9883a 	add	r20,r20,r2
  8111c8:	b0ad883a 	add	r22,r22,r2
  8111cc:	308d883a 	add	r6,r6,r2
  8111d0:	d9800815 	stw	r6,32(sp)
  8111d4:	003fa506 	br	81106c <__alt_data_end+0xff81106c>
  8111d8:	013efb84 	movi	r4,-1042
  8111dc:	246bc83a 	sub	r21,r4,r17
  8111e0:	9548983a 	sll	r4,r18,r21
  8111e4:	003d1806 	br	810648 <__alt_data_end+0xff810648>
  8111e8:	d8000d15 	stw	zero,52(sp)
  8111ec:	003d5b06 	br	81075c <__alt_data_end+0xff81075c>
  8111f0:	880b883a 	mov	r5,r17
  8111f4:	8009883a 	mov	r4,r16
  8111f8:	01800284 	movi	r6,10
  8111fc:	000f883a 	mov	r7,zero
  811200:	08127240 	call	812724 <__multadd>
  811204:	1023883a 	mov	r17,r2
  811208:	d8800c17 	ldw	r2,48(sp)
  81120c:	0082550e 	bge	zero,r2,811b64 <_dtoa_r+0x16b0>
  811210:	d8800615 	stw	r2,24(sp)
  811214:	0500050e 	bge	zero,r20,81122c <_dtoa_r+0xd78>
  811218:	880b883a 	mov	r5,r17
  81121c:	8009883a 	mov	r4,r16
  811220:	a00d883a 	mov	r6,r20
  811224:	0812dd80 	call	812dd8 <__lshift>
  811228:	1023883a 	mov	r17,r2
  81122c:	98016a1e 	bne	r19,zero,8117d8 <_dtoa_r+0x1324>
  811230:	8829883a 	mov	r20,r17
  811234:	d9000617 	ldw	r4,24(sp)
  811238:	dcc00717 	ldw	r19,28(sp)
  81123c:	9480004c 	andi	r18,r18,1
  811240:	20bfffc4 	addi	r2,r4,-1
  811244:	9885883a 	add	r2,r19,r2
  811248:	d8800415 	stw	r2,16(sp)
  81124c:	dc800615 	stw	r18,24(sp)
  811250:	e009883a 	mov	r4,fp
  811254:	a80b883a 	mov	r5,r21
  811258:	08102b40 	call	8102b4 <quorem>
  81125c:	e009883a 	mov	r4,fp
  811260:	880b883a 	mov	r5,r17
  811264:	102f883a 	mov	r23,r2
  811268:	0812f280 	call	812f28 <__mcmp>
  81126c:	8009883a 	mov	r4,r16
  811270:	a80b883a 	mov	r5,r21
  811274:	a00d883a 	mov	r6,r20
  811278:	102d883a 	mov	r22,r2
  81127c:	0812f880 	call	812f88 <__mdiff>
  811280:	1007883a 	mov	r3,r2
  811284:	10800317 	ldw	r2,12(r2)
  811288:	bc800c04 	addi	r18,r23,48
  81128c:	1000971e 	bne	r2,zero,8114ec <_dtoa_r+0x1038>
  811290:	180b883a 	mov	r5,r3
  811294:	e009883a 	mov	r4,fp
  811298:	d8c01515 	stw	r3,84(sp)
  81129c:	0812f280 	call	812f28 <__mcmp>
  8112a0:	d8c01517 	ldw	r3,84(sp)
  8112a4:	8009883a 	mov	r4,r16
  8112a8:	d8801515 	stw	r2,84(sp)
  8112ac:	180b883a 	mov	r5,r3
  8112b0:	08126fc0 	call	8126fc <_Bfree>
  8112b4:	d8801517 	ldw	r2,84(sp)
  8112b8:	1000041e 	bne	r2,zero,8112cc <_dtoa_r+0xe18>
  8112bc:	d9800317 	ldw	r6,12(sp)
  8112c0:	3000021e 	bne	r6,zero,8112cc <_dtoa_r+0xe18>
  8112c4:	d8c00617 	ldw	r3,24(sp)
  8112c8:	18007626 	beq	r3,zero,8114a4 <_dtoa_r+0xff0>
  8112cc:	b0005b16 	blt	r22,zero,81143c <_dtoa_r+0xf88>
  8112d0:	b000041e 	bne	r22,zero,8112e4 <_dtoa_r+0xe30>
  8112d4:	d9000317 	ldw	r4,12(sp)
  8112d8:	2000021e 	bne	r4,zero,8112e4 <_dtoa_r+0xe30>
  8112dc:	d8c00617 	ldw	r3,24(sp)
  8112e0:	18005626 	beq	r3,zero,81143c <_dtoa_r+0xf88>
  8112e4:	00814d16 	blt	zero,r2,81181c <_dtoa_r+0x1368>
  8112e8:	d8c00417 	ldw	r3,16(sp)
  8112ec:	9d800044 	addi	r22,r19,1
  8112f0:	9c800005 	stb	r18,0(r19)
  8112f4:	b02f883a 	mov	r23,r22
  8112f8:	98c14c26 	beq	r19,r3,81182c <_dtoa_r+0x1378>
  8112fc:	e00b883a 	mov	r5,fp
  811300:	8009883a 	mov	r4,r16
  811304:	01800284 	movi	r6,10
  811308:	000f883a 	mov	r7,zero
  81130c:	08127240 	call	812724 <__multadd>
  811310:	1039883a 	mov	fp,r2
  811314:	8d006d26 	beq	r17,r20,8114cc <_dtoa_r+0x1018>
  811318:	880b883a 	mov	r5,r17
  81131c:	01800284 	movi	r6,10
  811320:	000f883a 	mov	r7,zero
  811324:	8009883a 	mov	r4,r16
  811328:	08127240 	call	812724 <__multadd>
  81132c:	a00b883a 	mov	r5,r20
  811330:	8009883a 	mov	r4,r16
  811334:	01800284 	movi	r6,10
  811338:	000f883a 	mov	r7,zero
  81133c:	1023883a 	mov	r17,r2
  811340:	08127240 	call	812724 <__multadd>
  811344:	1029883a 	mov	r20,r2
  811348:	b027883a 	mov	r19,r22
  81134c:	003fc006 	br	811250 <__alt_data_end+0xff811250>
  811350:	a005883a 	mov	r2,r20
  811354:	003ede06 	br	810ed0 <__alt_data_end+0xff810ed0>
  811358:	01000044 	movi	r4,1
  81135c:	d9000b15 	stw	r4,44(sp)
  811360:	d9802217 	ldw	r6,136(sp)
  811364:	0180dc0e 	bge	zero,r6,8116d8 <_dtoa_r+0x1224>
  811368:	3023883a 	mov	r17,r6
  81136c:	d9800c15 	stw	r6,48(sp)
  811370:	d9800615 	stw	r6,24(sp)
  811374:	003d1e06 	br	8107f0 <__alt_data_end+0xff8107f0>
  811378:	d8800617 	ldw	r2,24(sp)
  81137c:	00be3716 	blt	zero,r2,810c5c <__alt_data_end+0xff810c5c>
  811380:	1000be1e 	bne	r2,zero,81167c <_dtoa_r+0x11c8>
  811384:	8809883a 	mov	r4,r17
  811388:	a00b883a 	mov	r5,r20
  81138c:	000d883a 	mov	r6,zero
  811390:	01d00534 	movhi	r7,16404
  811394:	08189e00 	call	8189e0 <__muldf3>
  811398:	1009883a 	mov	r4,r2
  81139c:	180b883a 	mov	r5,r3
  8113a0:	900d883a 	mov	r6,r18
  8113a4:	980f883a 	mov	r7,r19
  8113a8:	08188200 	call	818820 <__gedf2>
  8113ac:	002b883a 	mov	r21,zero
  8113b0:	0023883a 	mov	r17,zero
  8113b4:	10007a16 	blt	r2,zero,8115a0 <_dtoa_r+0x10ec>
  8113b8:	d9002217 	ldw	r4,136(sp)
  8113bc:	ddc00717 	ldw	r23,28(sp)
  8113c0:	0108303a 	nor	r4,zero,r4
  8113c4:	d9000515 	stw	r4,20(sp)
  8113c8:	8009883a 	mov	r4,r16
  8113cc:	a80b883a 	mov	r5,r21
  8113d0:	08126fc0 	call	8126fc <_Bfree>
  8113d4:	883f751e 	bne	r17,zero,8111ac <__alt_data_end+0xff8111ac>
  8113d8:	003de406 	br	810b6c <__alt_data_end+0xff810b6c>
  8113dc:	e00b883a 	mov	r5,fp
  8113e0:	8009883a 	mov	r4,r16
  8113e4:	0812c980 	call	812c98 <__pow5mult>
  8113e8:	1039883a 	mov	fp,r2
  8113ec:	003ed306 	br	810f3c <__alt_data_end+0xff810f3c>
  8113f0:	903ee01e 	bne	r18,zero,810f74 <__alt_data_end+0xff810f74>
  8113f4:	00800434 	movhi	r2,16
  8113f8:	10bfffc4 	addi	r2,r2,-1
  8113fc:	9884703a 	and	r2,r19,r2
  811400:	103f081e 	bne	r2,zero,811024 <__alt_data_end+0xff811024>
  811404:	9cdffc2c 	andhi	r19,r19,32752
  811408:	983f0626 	beq	r19,zero,811024 <__alt_data_end+0xff811024>
  81140c:	d8800817 	ldw	r2,32(sp)
  811410:	b5800044 	addi	r22,r22,1
  811414:	04c00044 	movi	r19,1
  811418:	10800044 	addi	r2,r2,1
  81141c:	d8800815 	stw	r2,32(sp)
  811420:	003f0106 	br	811028 <__alt_data_end+0xff811028>
  811424:	d9800f17 	ldw	r6,60(sp)
  811428:	30016826 	beq	r6,zero,8119cc <_dtoa_r+0x1518>
  81142c:	10810cc4 	addi	r2,r2,1075
  811430:	dd400917 	ldw	r21,36(sp)
  811434:	dd000817 	ldw	r20,32(sp)
  811438:	003e9906 	br	810ea0 <__alt_data_end+0xff810ea0>
  81143c:	9011883a 	mov	r8,r18
  811440:	4007883a 	mov	r3,r8
  811444:	e02d883a 	mov	r22,fp
  811448:	0080100e 	bge	zero,r2,81148c <_dtoa_r+0xfd8>
  81144c:	01800044 	movi	r6,1
  811450:	8009883a 	mov	r4,r16
  811454:	e00b883a 	mov	r5,fp
  811458:	da001515 	stw	r8,84(sp)
  81145c:	da001715 	stw	r8,92(sp)
  811460:	0812dd80 	call	812dd8 <__lshift>
  811464:	1009883a 	mov	r4,r2
  811468:	a80b883a 	mov	r5,r21
  81146c:	102d883a 	mov	r22,r2
  811470:	0812f280 	call	812f28 <__mcmp>
  811474:	d8c01517 	ldw	r3,84(sp)
  811478:	da001717 	ldw	r8,92(sp)
  81147c:	0081a50e 	bge	zero,r2,811b14 <_dtoa_r+0x1660>
  811480:	00800e44 	movi	r2,57
  811484:	40817b26 	beq	r8,r2,811a74 <_dtoa_r+0x15c0>
  811488:	40c00044 	addi	r3,r8,1
  81148c:	8825883a 	mov	r18,r17
  811490:	9dc00044 	addi	r23,r19,1
  811494:	98c00005 	stb	r3,0(r19)
  811498:	a023883a 	mov	r17,r20
  81149c:	b039883a 	mov	fp,r22
  8114a0:	003f3906 	br	811188 <__alt_data_end+0xff811188>
  8114a4:	00800e44 	movi	r2,57
  8114a8:	9011883a 	mov	r8,r18
  8114ac:	90817226 	beq	r18,r2,811a78 <_dtoa_r+0x15c4>
  8114b0:	0580010e 	bge	zero,r22,8114b8 <_dtoa_r+0x1004>
  8114b4:	ba000c44 	addi	r8,r23,49
  8114b8:	8825883a 	mov	r18,r17
  8114bc:	9dc00044 	addi	r23,r19,1
  8114c0:	9a000005 	stb	r8,0(r19)
  8114c4:	a023883a 	mov	r17,r20
  8114c8:	003f2f06 	br	811188 <__alt_data_end+0xff811188>
  8114cc:	880b883a 	mov	r5,r17
  8114d0:	8009883a 	mov	r4,r16
  8114d4:	01800284 	movi	r6,10
  8114d8:	000f883a 	mov	r7,zero
  8114dc:	08127240 	call	812724 <__multadd>
  8114e0:	1023883a 	mov	r17,r2
  8114e4:	1029883a 	mov	r20,r2
  8114e8:	003f9706 	br	811348 <__alt_data_end+0xff811348>
  8114ec:	8009883a 	mov	r4,r16
  8114f0:	180b883a 	mov	r5,r3
  8114f4:	08126fc0 	call	8126fc <_Bfree>
  8114f8:	00800044 	movi	r2,1
  8114fc:	003f7306 	br	8112cc <__alt_data_end+0xff8112cc>
  811500:	e009883a 	mov	r4,fp
  811504:	a80b883a 	mov	r5,r21
  811508:	0812f280 	call	812f28 <__mcmp>
  81150c:	103ee60e 	bge	r2,zero,8110a8 <__alt_data_end+0xff8110a8>
  811510:	8009883a 	mov	r4,r16
  811514:	e00b883a 	mov	r5,fp
  811518:	01800284 	movi	r6,10
  81151c:	000f883a 	mov	r7,zero
  811520:	08127240 	call	812724 <__multadd>
  811524:	d9000517 	ldw	r4,20(sp)
  811528:	d9800b17 	ldw	r6,44(sp)
  81152c:	1039883a 	mov	fp,r2
  811530:	213fffc4 	addi	r4,r4,-1
  811534:	d9000515 	stw	r4,20(sp)
  811538:	303f2d1e 	bne	r6,zero,8111f0 <__alt_data_end+0xff8111f0>
  81153c:	d9000c17 	ldw	r4,48(sp)
  811540:	0101780e 	bge	zero,r4,811b24 <_dtoa_r+0x1670>
  811544:	d9000615 	stw	r4,24(sp)
  811548:	003edb06 	br	8110b8 <__alt_data_end+0xff8110b8>
  81154c:	00800084 	movi	r2,2
  811550:	30818e1e 	bne	r6,r2,811b8c <_dtoa_r+0x16d8>
  811554:	d8000b15 	stw	zero,44(sp)
  811558:	003f8106 	br	811360 <__alt_data_end+0xff811360>
  81155c:	d8800717 	ldw	r2,28(sp)
  811560:	003c0306 	br	810570 <__alt_data_end+0xff810570>
  811564:	d9000317 	ldw	r4,12(sp)
  811568:	00800084 	movi	r2,2
  81156c:	113ed00e 	bge	r2,r4,8110b0 <__alt_data_end+0xff8110b0>
  811570:	d8c00617 	ldw	r3,24(sp)
  811574:	183f901e 	bne	r3,zero,8113b8 <__alt_data_end+0xff8113b8>
  811578:	a80b883a 	mov	r5,r21
  81157c:	8009883a 	mov	r4,r16
  811580:	01800144 	movi	r6,5
  811584:	000f883a 	mov	r7,zero
  811588:	08127240 	call	812724 <__multadd>
  81158c:	e009883a 	mov	r4,fp
  811590:	100b883a 	mov	r5,r2
  811594:	102b883a 	mov	r21,r2
  811598:	0812f280 	call	812f28 <__mcmp>
  81159c:	00bf860e 	bge	zero,r2,8113b8 <__alt_data_end+0xff8113b8>
  8115a0:	d9800717 	ldw	r6,28(sp)
  8115a4:	00800c44 	movi	r2,49
  8115a8:	30800005 	stb	r2,0(r6)
  8115ac:	d8800517 	ldw	r2,20(sp)
  8115b0:	35c00044 	addi	r23,r6,1
  8115b4:	10800044 	addi	r2,r2,1
  8115b8:	d8800515 	stw	r2,20(sp)
  8115bc:	003f8206 	br	8113c8 <__alt_data_end+0xff8113c8>
  8115c0:	903e981e 	bne	r18,zero,811024 <__alt_data_end+0xff811024>
  8115c4:	003f8b06 	br	8113f4 <__alt_data_end+0xff8113f4>
  8115c8:	d9800517 	ldw	r6,20(sp)
  8115cc:	d8c00717 	ldw	r3,28(sp)
  8115d0:	00800c44 	movi	r2,49
  8115d4:	31800044 	addi	r6,r6,1
  8115d8:	d9800515 	stw	r6,20(sp)
  8115dc:	18800005 	stb	r2,0(r3)
  8115e0:	003ee906 	br	811188 <__alt_data_end+0xff811188>
  8115e4:	dc000317 	ldw	r16,12(sp)
  8115e8:	003d6006 	br	810b6c <__alt_data_end+0xff810b6c>
  8115ec:	8809883a 	mov	r4,r17
  8115f0:	0819a5c0 	call	819a5c <__floatsidf>
  8115f4:	a009883a 	mov	r4,r20
  8115f8:	a80b883a 	mov	r5,r21
  8115fc:	100d883a 	mov	r6,r2
  811600:	180f883a 	mov	r7,r3
  811604:	08189e00 	call	8189e0 <__muldf3>
  811608:	1009883a 	mov	r4,r2
  81160c:	180b883a 	mov	r5,r3
  811610:	000d883a 	mov	r6,zero
  811614:	01d00734 	movhi	r7,16412
  811618:	08176340 	call	817634 <__adddf3>
  81161c:	1023883a 	mov	r17,r2
  811620:	00bf3034 	movhi	r2,64704
  811624:	1885883a 	add	r2,r3,r2
  811628:	d8800e15 	stw	r2,56(sp)
  81162c:	a009883a 	mov	r4,r20
  811630:	a80b883a 	mov	r5,r21
  811634:	000d883a 	mov	r6,zero
  811638:	01d00534 	movhi	r7,16404
  81163c:	08191040 	call	819104 <__subdf3>
  811640:	d9c00e17 	ldw	r7,56(sp)
  811644:	1009883a 	mov	r4,r2
  811648:	180b883a 	mov	r5,r3
  81164c:	880d883a 	mov	r6,r17
  811650:	102b883a 	mov	r21,r2
  811654:	1829883a 	mov	r20,r3
  811658:	08188200 	call	818820 <__gedf2>
  81165c:	00807716 	blt	zero,r2,81183c <_dtoa_r+0x1388>
  811660:	d8800e17 	ldw	r2,56(sp)
  811664:	a809883a 	mov	r4,r21
  811668:	a00b883a 	mov	r5,r20
  81166c:	11e0003c 	xorhi	r7,r2,32768
  811670:	880d883a 	mov	r6,r17
  811674:	08189000 	call	818900 <__ledf2>
  811678:	103d6b0e 	bge	r2,zero,810c28 <__alt_data_end+0xff810c28>
  81167c:	002b883a 	mov	r21,zero
  811680:	0023883a 	mov	r17,zero
  811684:	003f4c06 	br	8113b8 <__alt_data_end+0xff8113b8>
  811688:	d9800917 	ldw	r6,36(sp)
  81168c:	e00b883a 	mov	r5,fp
  811690:	8009883a 	mov	r4,r16
  811694:	0812c980 	call	812c98 <__pow5mult>
  811698:	1039883a 	mov	fp,r2
  81169c:	003e2706 	br	810f3c <__alt_data_end+0xff810f3c>
  8116a0:	d8000b15 	stw	zero,44(sp)
  8116a4:	003c4906 	br	8107cc <__alt_data_end+0xff8107cc>
  8116a8:	d9000917 	ldw	r4,36(sp)
  8116ac:	d9800a17 	ldw	r6,40(sp)
  8116b0:	dd400915 	stw	r21,36(sp)
  8116b4:	a905c83a 	sub	r2,r21,r4
  8116b8:	308d883a 	add	r6,r6,r2
  8116bc:	d9800a15 	stw	r6,40(sp)
  8116c0:	002b883a 	mov	r21,zero
  8116c4:	003df206 	br	810e90 <__alt_data_end+0xff810e90>
  8116c8:	dc800e15 	stw	r18,56(sp)
  8116cc:	982b883a 	mov	r21,r19
  8116d0:	04400084 	movi	r17,2
  8116d4:	003c7406 	br	8108a8 <__alt_data_end+0xff8108a8>
  8116d8:	04400044 	movi	r17,1
  8116dc:	dc400c15 	stw	r17,48(sp)
  8116e0:	dc400615 	stw	r17,24(sp)
  8116e4:	dc402215 	stw	r17,136(sp)
  8116e8:	80001115 	stw	zero,68(r16)
  8116ec:	000b883a 	mov	r5,zero
  8116f0:	003c4a06 	br	81081c <__alt_data_end+0xff81081c>
  8116f4:	3023883a 	mov	r17,r6
  8116f8:	003ffb06 	br	8116e8 <__alt_data_end+0xff8116e8>
  8116fc:	1000021e 	bne	r2,zero,811708 <_dtoa_r+0x1254>
  811700:	4200004c 	andi	r8,r8,1
  811704:	403e8f1e 	bne	r8,zero,811144 <__alt_data_end+0xff811144>
  811708:	01000c04 	movi	r4,48
  81170c:	00000106 	br	811714 <_dtoa_r+0x1260>
  811710:	102f883a 	mov	r23,r2
  811714:	b8bfffc4 	addi	r2,r23,-1
  811718:	10c00007 	ldb	r3,0(r2)
  81171c:	193ffc26 	beq	r3,r4,811710 <__alt_data_end+0xff811710>
  811720:	003e9906 	br	811188 <__alt_data_end+0xff811188>
  811724:	d9000517 	ldw	r4,20(sp)
  811728:	012fc83a 	sub	r23,zero,r4
  81172c:	b800ad26 	beq	r23,zero,8119e4 <_dtoa_r+0x1530>
  811730:	b88003cc 	andi	r2,r23,15
  811734:	100490fa 	slli	r2,r2,3
  811738:	00c020b4 	movhi	r3,130
  81173c:	18f93a04 	addi	r3,r3,-6936
  811740:	1885883a 	add	r2,r3,r2
  811744:	11800017 	ldw	r6,0(r2)
  811748:	11c00117 	ldw	r7,4(r2)
  81174c:	b82fd13a 	srai	r23,r23,4
  811750:	9009883a 	mov	r4,r18
  811754:	980b883a 	mov	r5,r19
  811758:	08189e00 	call	8189e0 <__muldf3>
  81175c:	1029883a 	mov	r20,r2
  811760:	182b883a 	mov	r21,r3
  811764:	b800f426 	beq	r23,zero,811b38 <_dtoa_r+0x1684>
  811768:	020020b4 	movhi	r8,130
  81176c:	42393004 	addi	r8,r8,-6976
  811770:	8029883a 	mov	r20,r16
  811774:	04400084 	movi	r17,2
  811778:	4021883a 	mov	r16,r8
  81177c:	b980004c 	andi	r6,r23,1
  811780:	1009883a 	mov	r4,r2
  811784:	b82fd07a 	srai	r23,r23,1
  811788:	180b883a 	mov	r5,r3
  81178c:	30000426 	beq	r6,zero,8117a0 <_dtoa_r+0x12ec>
  811790:	81800017 	ldw	r6,0(r16)
  811794:	81c00117 	ldw	r7,4(r16)
  811798:	8c400044 	addi	r17,r17,1
  81179c:	08189e00 	call	8189e0 <__muldf3>
  8117a0:	84000204 	addi	r16,r16,8
  8117a4:	b83ff51e 	bne	r23,zero,81177c <__alt_data_end+0xff81177c>
  8117a8:	a021883a 	mov	r16,r20
  8117ac:	182b883a 	mov	r21,r3
  8117b0:	1029883a 	mov	r20,r2
  8117b4:	003c5506 	br	81090c <__alt_data_end+0xff81090c>
  8117b8:	d9800517 	ldw	r6,20(sp)
  8117bc:	d9000717 	ldw	r4,28(sp)
  8117c0:	00c00c04 	movi	r3,48
  8117c4:	31800044 	addi	r6,r6,1
  8117c8:	d9800515 	stw	r6,20(sp)
  8117cc:	20c00005 	stb	r3,0(r4)
  8117d0:	02000c44 	movi	r8,49
  8117d4:	003da206 	br	810e60 <__alt_data_end+0xff810e60>
  8117d8:	89400117 	ldw	r5,4(r17)
  8117dc:	8009883a 	mov	r4,r16
  8117e0:	08126540 	call	812654 <_Balloc>
  8117e4:	89800417 	ldw	r6,16(r17)
  8117e8:	11000304 	addi	r4,r2,12
  8117ec:	89400304 	addi	r5,r17,12
  8117f0:	31800084 	addi	r6,r6,2
  8117f4:	318d883a 	add	r6,r6,r6
  8117f8:	318d883a 	add	r6,r6,r6
  8117fc:	1027883a 	mov	r19,r2
  811800:	08123c00 	call	8123c0 <memcpy>
  811804:	8009883a 	mov	r4,r16
  811808:	980b883a 	mov	r5,r19
  81180c:	01800044 	movi	r6,1
  811810:	0812dd80 	call	812dd8 <__lshift>
  811814:	1029883a 	mov	r20,r2
  811818:	003e8606 	br	811234 <__alt_data_end+0xff811234>
  81181c:	00800e44 	movi	r2,57
  811820:	90809526 	beq	r18,r2,811a78 <_dtoa_r+0x15c4>
  811824:	92000044 	addi	r8,r18,1
  811828:	003f2306 	br	8114b8 <__alt_data_end+0xff8114b8>
  81182c:	9011883a 	mov	r8,r18
  811830:	8825883a 	mov	r18,r17
  811834:	a023883a 	mov	r17,r20
  811838:	003e3706 	br	811118 <__alt_data_end+0xff811118>
  81183c:	002b883a 	mov	r21,zero
  811840:	0023883a 	mov	r17,zero
  811844:	003f5606 	br	8115a0 <__alt_data_end+0xff8115a0>
  811848:	51bfffc4 	addi	r6,r10,-1
  81184c:	300490fa 	slli	r2,r6,3
  811850:	00c020b4 	movhi	r3,130
  811854:	18f93a04 	addi	r3,r3,-6936
  811858:	1885883a 	add	r2,r3,r2
  81185c:	d9c00e17 	ldw	r7,56(sp)
  811860:	11000017 	ldw	r4,0(r2)
  811864:	11400117 	ldw	r5,4(r2)
  811868:	d8800717 	ldw	r2,28(sp)
  81186c:	d9801015 	stw	r6,64(sp)
  811870:	880d883a 	mov	r6,r17
  811874:	da801615 	stw	r10,88(sp)
  811878:	15c00044 	addi	r23,r2,1
  81187c:	08189e00 	call	8189e0 <__muldf3>
  811880:	a80b883a 	mov	r5,r21
  811884:	a009883a 	mov	r4,r20
  811888:	d8c01115 	stw	r3,68(sp)
  81188c:	d8800e15 	stw	r2,56(sp)
  811890:	08199d40 	call	8199d4 <__fixdfsi>
  811894:	1009883a 	mov	r4,r2
  811898:	1023883a 	mov	r17,r2
  81189c:	0819a5c0 	call	819a5c <__floatsidf>
  8118a0:	a009883a 	mov	r4,r20
  8118a4:	a80b883a 	mov	r5,r21
  8118a8:	100d883a 	mov	r6,r2
  8118ac:	180f883a 	mov	r7,r3
  8118b0:	08191040 	call	819104 <__subdf3>
  8118b4:	1813883a 	mov	r9,r3
  8118b8:	d8c00717 	ldw	r3,28(sp)
  8118bc:	8c400c04 	addi	r17,r17,48
  8118c0:	1011883a 	mov	r8,r2
  8118c4:	1c400005 	stb	r17,0(r3)
  8118c8:	da801617 	ldw	r10,88(sp)
  8118cc:	00800044 	movi	r2,1
  8118d0:	50802326 	beq	r10,r2,811960 <_dtoa_r+0x14ac>
  8118d4:	d8800717 	ldw	r2,28(sp)
  8118d8:	b82b883a 	mov	r21,r23
  8118dc:	dc001315 	stw	r16,76(sp)
  8118e0:	12a9883a 	add	r20,r2,r10
  8118e4:	4807883a 	mov	r3,r9
  8118e8:	4005883a 	mov	r2,r8
  8118ec:	dc801415 	stw	r18,80(sp)
  8118f0:	000d883a 	mov	r6,zero
  8118f4:	01d00934 	movhi	r7,16420
  8118f8:	1009883a 	mov	r4,r2
  8118fc:	180b883a 	mov	r5,r3
  811900:	08189e00 	call	8189e0 <__muldf3>
  811904:	180b883a 	mov	r5,r3
  811908:	1009883a 	mov	r4,r2
  81190c:	1821883a 	mov	r16,r3
  811910:	1025883a 	mov	r18,r2
  811914:	08199d40 	call	8199d4 <__fixdfsi>
  811918:	1009883a 	mov	r4,r2
  81191c:	1023883a 	mov	r17,r2
  811920:	0819a5c0 	call	819a5c <__floatsidf>
  811924:	9009883a 	mov	r4,r18
  811928:	800b883a 	mov	r5,r16
  81192c:	100d883a 	mov	r6,r2
  811930:	180f883a 	mov	r7,r3
  811934:	8c400c04 	addi	r17,r17,48
  811938:	08191040 	call	819104 <__subdf3>
  81193c:	ad400044 	addi	r21,r21,1
  811940:	ac7fffc5 	stb	r17,-1(r21)
  811944:	ad3fea1e 	bne	r21,r20,8118f0 <__alt_data_end+0xff8118f0>
  811948:	1813883a 	mov	r9,r3
  81194c:	d8c01017 	ldw	r3,64(sp)
  811950:	dc001317 	ldw	r16,76(sp)
  811954:	dc801417 	ldw	r18,80(sp)
  811958:	1011883a 	mov	r8,r2
  81195c:	b8ef883a 	add	r23,r23,r3
  811960:	d9000e17 	ldw	r4,56(sp)
  811964:	d9401117 	ldw	r5,68(sp)
  811968:	000d883a 	mov	r6,zero
  81196c:	01cff834 	movhi	r7,16352
  811970:	da001715 	stw	r8,92(sp)
  811974:	da401515 	stw	r9,84(sp)
  811978:	08176340 	call	817634 <__adddf3>
  81197c:	da001717 	ldw	r8,92(sp)
  811980:	da401517 	ldw	r9,84(sp)
  811984:	1009883a 	mov	r4,r2
  811988:	400d883a 	mov	r6,r8
  81198c:	480f883a 	mov	r7,r9
  811990:	180b883a 	mov	r5,r3
  811994:	08189000 	call	818900 <__ledf2>
  811998:	da001717 	ldw	r8,92(sp)
  81199c:	da401517 	ldw	r9,84(sp)
  8119a0:	10003b0e 	bge	r2,zero,811a90 <_dtoa_r+0x15dc>
  8119a4:	d9001217 	ldw	r4,72(sp)
  8119a8:	bd7fffc3 	ldbu	r21,-1(r23)
  8119ac:	d9000515 	stw	r4,20(sp)
  8119b0:	003d1c06 	br	810e24 <__alt_data_end+0xff810e24>
  8119b4:	d8c00817 	ldw	r3,32(sp)
  8119b8:	18a9c83a 	sub	r20,r3,r2
  8119bc:	0005883a 	mov	r2,zero
  8119c0:	003d3706 	br	810ea0 <__alt_data_end+0xff810ea0>
  8119c4:	00800044 	movi	r2,1
  8119c8:	003dd006 	br	81110c <__alt_data_end+0xff81110c>
  8119cc:	d8c00217 	ldw	r3,8(sp)
  8119d0:	00800d84 	movi	r2,54
  8119d4:	dd400917 	ldw	r21,36(sp)
  8119d8:	10c5c83a 	sub	r2,r2,r3
  8119dc:	dd000817 	ldw	r20,32(sp)
  8119e0:	003d2f06 	br	810ea0 <__alt_data_end+0xff810ea0>
  8119e4:	9029883a 	mov	r20,r18
  8119e8:	982b883a 	mov	r21,r19
  8119ec:	04400084 	movi	r17,2
  8119f0:	003bc606 	br	81090c <__alt_data_end+0xff81090c>
  8119f4:	d8800617 	ldw	r2,24(sp)
  8119f8:	103efc26 	beq	r2,zero,8115ec <__alt_data_end+0xff8115ec>
  8119fc:	d8c00c17 	ldw	r3,48(sp)
  811a00:	00fc890e 	bge	zero,r3,810c28 <__alt_data_end+0xff810c28>
  811a04:	a80b883a 	mov	r5,r21
  811a08:	a009883a 	mov	r4,r20
  811a0c:	000d883a 	mov	r6,zero
  811a10:	01d00934 	movhi	r7,16420
  811a14:	08189e00 	call	8189e0 <__muldf3>
  811a18:	89000044 	addi	r4,r17,1
  811a1c:	1029883a 	mov	r20,r2
  811a20:	182b883a 	mov	r21,r3
  811a24:	0819a5c0 	call	819a5c <__floatsidf>
  811a28:	a009883a 	mov	r4,r20
  811a2c:	a80b883a 	mov	r5,r21
  811a30:	100d883a 	mov	r6,r2
  811a34:	180f883a 	mov	r7,r3
  811a38:	08189e00 	call	8189e0 <__muldf3>
  811a3c:	1009883a 	mov	r4,r2
  811a40:	180b883a 	mov	r5,r3
  811a44:	000d883a 	mov	r6,zero
  811a48:	01d00734 	movhi	r7,16412
  811a4c:	08176340 	call	817634 <__adddf3>
  811a50:	d9000517 	ldw	r4,20(sp)
  811a54:	1023883a 	mov	r17,r2
  811a58:	00bf3034 	movhi	r2,64704
  811a5c:	213fffc4 	addi	r4,r4,-1
  811a60:	1885883a 	add	r2,r3,r2
  811a64:	d9001215 	stw	r4,72(sp)
  811a68:	d8800e15 	stw	r2,56(sp)
  811a6c:	da800c17 	ldw	r10,48(sp)
  811a70:	003bc306 	br	810980 <__alt_data_end+0xff810980>
  811a74:	b039883a 	mov	fp,r22
  811a78:	01000e44 	movi	r4,57
  811a7c:	8825883a 	mov	r18,r17
  811a80:	9dc00044 	addi	r23,r19,1
  811a84:	99000005 	stb	r4,0(r19)
  811a88:	a023883a 	mov	r17,r20
  811a8c:	003dae06 	br	811148 <__alt_data_end+0xff811148>
  811a90:	d9800e17 	ldw	r6,56(sp)
  811a94:	d9c01117 	ldw	r7,68(sp)
  811a98:	0009883a 	mov	r4,zero
  811a9c:	014ff834 	movhi	r5,16352
  811aa0:	da001715 	stw	r8,92(sp)
  811aa4:	da401515 	stw	r9,84(sp)
  811aa8:	08191040 	call	819104 <__subdf3>
  811aac:	da001717 	ldw	r8,92(sp)
  811ab0:	da401517 	ldw	r9,84(sp)
  811ab4:	1009883a 	mov	r4,r2
  811ab8:	180b883a 	mov	r5,r3
  811abc:	400d883a 	mov	r6,r8
  811ac0:	480f883a 	mov	r7,r9
  811ac4:	08188200 	call	818820 <__gedf2>
  811ac8:	00bc570e 	bge	zero,r2,810c28 <__alt_data_end+0xff810c28>
  811acc:	01000c04 	movi	r4,48
  811ad0:	00000106 	br	811ad8 <_dtoa_r+0x1624>
  811ad4:	102f883a 	mov	r23,r2
  811ad8:	b8bfffc4 	addi	r2,r23,-1
  811adc:	10c00007 	ldb	r3,0(r2)
  811ae0:	193ffc26 	beq	r3,r4,811ad4 <__alt_data_end+0xff811ad4>
  811ae4:	d9801217 	ldw	r6,72(sp)
  811ae8:	d9800515 	stw	r6,20(sp)
  811aec:	003c1f06 	br	810b6c <__alt_data_end+0xff810b6c>
  811af0:	d8801217 	ldw	r2,72(sp)
  811af4:	dc001117 	ldw	r16,68(sp)
  811af8:	d8800515 	stw	r2,20(sp)
  811afc:	003cc906 	br	810e24 <__alt_data_end+0xff810e24>
  811b00:	dd801317 	ldw	r22,76(sp)
  811b04:	dc001117 	ldw	r16,68(sp)
  811b08:	dcc01417 	ldw	r19,80(sp)
  811b0c:	dc801017 	ldw	r18,64(sp)
  811b10:	003c4506 	br	810c28 <__alt_data_end+0xff810c28>
  811b14:	103e5d1e 	bne	r2,zero,81148c <__alt_data_end+0xff81148c>
  811b18:	4080004c 	andi	r2,r8,1
  811b1c:	103e5b26 	beq	r2,zero,81148c <__alt_data_end+0xff81148c>
  811b20:	003e5706 	br	811480 <__alt_data_end+0xff811480>
  811b24:	d8c00317 	ldw	r3,12(sp)
  811b28:	00800084 	movi	r2,2
  811b2c:	10c00a16 	blt	r2,r3,811b58 <_dtoa_r+0x16a4>
  811b30:	d9000c17 	ldw	r4,48(sp)
  811b34:	003e8306 	br	811544 <__alt_data_end+0xff811544>
  811b38:	04400084 	movi	r17,2
  811b3c:	003b7306 	br	81090c <__alt_data_end+0xff81090c>
  811b40:	d9801217 	ldw	r6,72(sp)
  811b44:	d9800515 	stw	r6,20(sp)
  811b48:	003cb606 	br	810e24 <__alt_data_end+0xff810e24>
  811b4c:	d9001217 	ldw	r4,72(sp)
  811b50:	d9000515 	stw	r4,20(sp)
  811b54:	003c0506 	br	810b6c <__alt_data_end+0xff810b6c>
  811b58:	d9800c17 	ldw	r6,48(sp)
  811b5c:	d9800615 	stw	r6,24(sp)
  811b60:	003e8306 	br	811570 <__alt_data_end+0xff811570>
  811b64:	d9800317 	ldw	r6,12(sp)
  811b68:	00800084 	movi	r2,2
  811b6c:	11800216 	blt	r2,r6,811b78 <_dtoa_r+0x16c4>
  811b70:	d8800c17 	ldw	r2,48(sp)
  811b74:	003da606 	br	811210 <__alt_data_end+0xff811210>
  811b78:	d8800c17 	ldw	r2,48(sp)
  811b7c:	d8800615 	stw	r2,24(sp)
  811b80:	003e7b06 	br	811570 <__alt_data_end+0xff811570>
  811b84:	05000044 	movi	r20,1
  811b88:	003b0506 	br	8107a0 <__alt_data_end+0xff8107a0>
  811b8c:	8009883a 	mov	r4,r16
  811b90:	80001115 	stw	zero,68(r16)
  811b94:	000b883a 	mov	r5,zero
  811b98:	08126540 	call	812654 <_Balloc>
  811b9c:	d8800715 	stw	r2,28(sp)
  811ba0:	d8c00717 	ldw	r3,28(sp)
  811ba4:	00bfffc4 	movi	r2,-1
  811ba8:	01000044 	movi	r4,1
  811bac:	d8800c15 	stw	r2,48(sp)
  811bb0:	80c01015 	stw	r3,64(r16)
  811bb4:	d9000b15 	stw	r4,44(sp)
  811bb8:	d8800615 	stw	r2,24(sp)
  811bbc:	d8002215 	stw	zero,136(sp)
  811bc0:	003c1906 	br	810c28 <__alt_data_end+0xff810c28>
  811bc4:	193d2926 	beq	r3,r4,81106c <__alt_data_end+0xff81106c>
  811bc8:	00c00f04 	movi	r3,60
  811bcc:	1885c83a 	sub	r2,r3,r2
  811bd0:	003d7b06 	br	8111c0 <__alt_data_end+0xff8111c0>
  811bd4:	000b883a 	mov	r5,zero
  811bd8:	003b1006 	br	81081c <__alt_data_end+0xff81081c>

00811bdc <__sflags>:
  811bdc:	28800007 	ldb	r2,0(r5)
  811be0:	00c01c84 	movi	r3,114
  811be4:	10c02426 	beq	r2,r3,811c78 <__sflags+0x9c>
  811be8:	00c01dc4 	movi	r3,119
  811bec:	10c01e26 	beq	r2,r3,811c68 <__sflags+0x8c>
  811bf0:	00c01844 	movi	r3,97
  811bf4:	10c00426 	beq	r2,r3,811c08 <__sflags+0x2c>
  811bf8:	00800584 	movi	r2,22
  811bfc:	20800015 	stw	r2,0(r4)
  811c00:	0005883a 	mov	r2,zero
  811c04:	f800283a 	ret
  811c08:	02c08204 	movi	r11,520
  811c0c:	01000044 	movi	r4,1
  811c10:	00804204 	movi	r2,264
  811c14:	01c00ac4 	movi	r7,43
  811c18:	02bff8c4 	movi	r10,-29
  811c1c:	027fff04 	movi	r9,-4
  811c20:	02001e04 	movi	r8,120
  811c24:	29400044 	addi	r5,r5,1
  811c28:	28c00007 	ldb	r3,0(r5)
  811c2c:	18000626 	beq	r3,zero,811c48 <__sflags+0x6c>
  811c30:	19c00826 	beq	r3,r7,811c54 <__sflags+0x78>
  811c34:	1a3ffb1e 	bne	r3,r8,811c24 <__alt_data_end+0xff811c24>
  811c38:	29400044 	addi	r5,r5,1
  811c3c:	28c00007 	ldb	r3,0(r5)
  811c40:	21020014 	ori	r4,r4,2048
  811c44:	183ffa1e 	bne	r3,zero,811c30 <__alt_data_end+0xff811c30>
  811c48:	22c8b03a 	or	r4,r4,r11
  811c4c:	31000015 	stw	r4,0(r6)
  811c50:	f800283a 	ret
  811c54:	1284703a 	and	r2,r2,r10
  811c58:	2248703a 	and	r4,r4,r9
  811c5c:	10800414 	ori	r2,r2,16
  811c60:	21000094 	ori	r4,r4,2
  811c64:	003fef06 	br	811c24 <__alt_data_end+0xff811c24>
  811c68:	02c18004 	movi	r11,1536
  811c6c:	01000044 	movi	r4,1
  811c70:	00800204 	movi	r2,8
  811c74:	003fe706 	br	811c14 <__alt_data_end+0xff811c14>
  811c78:	0017883a 	mov	r11,zero
  811c7c:	0009883a 	mov	r4,zero
  811c80:	00800104 	movi	r2,4
  811c84:	003fe306 	br	811c14 <__alt_data_end+0xff811c14>

00811c88 <__sfvwrite_r>:
  811c88:	30800217 	ldw	r2,8(r6)
  811c8c:	10006726 	beq	r2,zero,811e2c <__sfvwrite_r+0x1a4>
  811c90:	defff404 	addi	sp,sp,-48
  811c94:	dd000615 	stw	r20,24(sp)
  811c98:	2029883a 	mov	r20,r4
  811c9c:	2900030b 	ldhu	r4,12(r5)
  811ca0:	ddc00915 	stw	r23,36(sp)
  811ca4:	dc000215 	stw	r16,8(sp)
  811ca8:	dfc00b15 	stw	ra,44(sp)
  811cac:	df000a15 	stw	fp,40(sp)
  811cb0:	dd800815 	stw	r22,32(sp)
  811cb4:	dd400715 	stw	r21,28(sp)
  811cb8:	dcc00515 	stw	r19,20(sp)
  811cbc:	dc800415 	stw	r18,16(sp)
  811cc0:	dc400315 	stw	r17,12(sp)
  811cc4:	2080020c 	andi	r2,r4,8
  811cc8:	2821883a 	mov	r16,r5
  811ccc:	302f883a 	mov	r23,r6
  811cd0:	10002726 	beq	r2,zero,811d70 <__sfvwrite_r+0xe8>
  811cd4:	28800417 	ldw	r2,16(r5)
  811cd8:	10002526 	beq	r2,zero,811d70 <__sfvwrite_r+0xe8>
  811cdc:	2080008c 	andi	r2,r4,2
  811ce0:	bc400017 	ldw	r17,0(r23)
  811ce4:	10002a26 	beq	r2,zero,811d90 <__sfvwrite_r+0x108>
  811ce8:	05600034 	movhi	r21,32768
  811cec:	0027883a 	mov	r19,zero
  811cf0:	0025883a 	mov	r18,zero
  811cf4:	ad7f0004 	addi	r21,r21,-1024
  811cf8:	980d883a 	mov	r6,r19
  811cfc:	a009883a 	mov	r4,r20
  811d00:	90004626 	beq	r18,zero,811e1c <__sfvwrite_r+0x194>
  811d04:	900f883a 	mov	r7,r18
  811d08:	81400717 	ldw	r5,28(r16)
  811d0c:	ac80022e 	bgeu	r21,r18,811d18 <__sfvwrite_r+0x90>
  811d10:	01e00034 	movhi	r7,32768
  811d14:	39ff0004 	addi	r7,r7,-1024
  811d18:	80800917 	ldw	r2,36(r16)
  811d1c:	103ee83a 	callr	r2
  811d20:	0080520e 	bge	zero,r2,811e6c <__sfvwrite_r+0x1e4>
  811d24:	b8c00217 	ldw	r3,8(r23)
  811d28:	98a7883a 	add	r19,r19,r2
  811d2c:	90a5c83a 	sub	r18,r18,r2
  811d30:	1885c83a 	sub	r2,r3,r2
  811d34:	b8800215 	stw	r2,8(r23)
  811d38:	103fef1e 	bne	r2,zero,811cf8 <__alt_data_end+0xff811cf8>
  811d3c:	0005883a 	mov	r2,zero
  811d40:	dfc00b17 	ldw	ra,44(sp)
  811d44:	df000a17 	ldw	fp,40(sp)
  811d48:	ddc00917 	ldw	r23,36(sp)
  811d4c:	dd800817 	ldw	r22,32(sp)
  811d50:	dd400717 	ldw	r21,28(sp)
  811d54:	dd000617 	ldw	r20,24(sp)
  811d58:	dcc00517 	ldw	r19,20(sp)
  811d5c:	dc800417 	ldw	r18,16(sp)
  811d60:	dc400317 	ldw	r17,12(sp)
  811d64:	dc000217 	ldw	r16,8(sp)
  811d68:	dec00c04 	addi	sp,sp,48
  811d6c:	f800283a 	ret
  811d70:	a009883a 	mov	r4,r20
  811d74:	800b883a 	mov	r5,r16
  811d78:	081010c0 	call	81010c <__swsetup_r>
  811d7c:	1000ec1e 	bne	r2,zero,812130 <__sfvwrite_r+0x4a8>
  811d80:	8100030b 	ldhu	r4,12(r16)
  811d84:	bc400017 	ldw	r17,0(r23)
  811d88:	2080008c 	andi	r2,r4,2
  811d8c:	103fd61e 	bne	r2,zero,811ce8 <__alt_data_end+0xff811ce8>
  811d90:	2080004c 	andi	r2,r4,1
  811d94:	10003a1e 	bne	r2,zero,811e80 <__sfvwrite_r+0x1f8>
  811d98:	0039883a 	mov	fp,zero
  811d9c:	0025883a 	mov	r18,zero
  811da0:	90001a26 	beq	r18,zero,811e0c <__sfvwrite_r+0x184>
  811da4:	2080800c 	andi	r2,r4,512
  811da8:	85800217 	ldw	r22,8(r16)
  811dac:	10007626 	beq	r2,zero,811f88 <__sfvwrite_r+0x300>
  811db0:	b027883a 	mov	r19,r22
  811db4:	95809436 	bltu	r18,r22,812008 <__sfvwrite_r+0x380>
  811db8:	2081200c 	andi	r2,r4,1152
  811dbc:	10009f1e 	bne	r2,zero,81203c <__sfvwrite_r+0x3b4>
  811dc0:	81000017 	ldw	r4,0(r16)
  811dc4:	e00b883a 	mov	r5,fp
  811dc8:	980d883a 	mov	r6,r19
  811dcc:	08124f80 	call	8124f8 <memmove>
  811dd0:	81000217 	ldw	r4,8(r16)
  811dd4:	81400017 	ldw	r5,0(r16)
  811dd8:	9005883a 	mov	r2,r18
  811ddc:	2587c83a 	sub	r3,r4,r22
  811de0:	2ce7883a 	add	r19,r5,r19
  811de4:	80c00215 	stw	r3,8(r16)
  811de8:	84c00015 	stw	r19,0(r16)
  811dec:	b8c00217 	ldw	r3,8(r23)
  811df0:	e0b9883a 	add	fp,fp,r2
  811df4:	90a5c83a 	sub	r18,r18,r2
  811df8:	1885c83a 	sub	r2,r3,r2
  811dfc:	b8800215 	stw	r2,8(r23)
  811e00:	103fce26 	beq	r2,zero,811d3c <__alt_data_end+0xff811d3c>
  811e04:	8100030b 	ldhu	r4,12(r16)
  811e08:	903fe61e 	bne	r18,zero,811da4 <__alt_data_end+0xff811da4>
  811e0c:	8f000017 	ldw	fp,0(r17)
  811e10:	8c800117 	ldw	r18,4(r17)
  811e14:	8c400204 	addi	r17,r17,8
  811e18:	003fe106 	br	811da0 <__alt_data_end+0xff811da0>
  811e1c:	8cc00017 	ldw	r19,0(r17)
  811e20:	8c800117 	ldw	r18,4(r17)
  811e24:	8c400204 	addi	r17,r17,8
  811e28:	003fb306 	br	811cf8 <__alt_data_end+0xff811cf8>
  811e2c:	0005883a 	mov	r2,zero
  811e30:	f800283a 	ret
  811e34:	00a00034 	movhi	r2,32768
  811e38:	10bfffc4 	addi	r2,r2,-1
  811e3c:	9009883a 	mov	r4,r18
  811e40:	1480012e 	bgeu	r2,r18,811e48 <__sfvwrite_r+0x1c0>
  811e44:	1009883a 	mov	r4,r2
  811e48:	980b883a 	mov	r5,r19
  811e4c:	0809a0c0 	call	809a0c <__divsi3>
  811e50:	81400717 	ldw	r5,28(r16)
  811e54:	80c00917 	ldw	r3,36(r16)
  811e58:	988f383a 	mul	r7,r19,r2
  811e5c:	a009883a 	mov	r4,r20
  811e60:	e00d883a 	mov	r6,fp
  811e64:	183ee83a 	callr	r3
  811e68:	00bfe016 	blt	zero,r2,811dec <__alt_data_end+0xff811dec>
  811e6c:	8080030b 	ldhu	r2,12(r16)
  811e70:	10801014 	ori	r2,r2,64
  811e74:	8080030d 	sth	r2,12(r16)
  811e78:	00bfffc4 	movi	r2,-1
  811e7c:	003fb006 	br	811d40 <__alt_data_end+0xff811d40>
  811e80:	0027883a 	mov	r19,zero
  811e84:	0011883a 	mov	r8,zero
  811e88:	0039883a 	mov	fp,zero
  811e8c:	0025883a 	mov	r18,zero
  811e90:	90001f26 	beq	r18,zero,811f10 <__sfvwrite_r+0x288>
  811e94:	40006026 	beq	r8,zero,812018 <__sfvwrite_r+0x390>
  811e98:	982b883a 	mov	r21,r19
  811e9c:	94c0012e 	bgeu	r18,r19,811ea4 <__sfvwrite_r+0x21c>
  811ea0:	902b883a 	mov	r21,r18
  811ea4:	81000017 	ldw	r4,0(r16)
  811ea8:	80800417 	ldw	r2,16(r16)
  811eac:	a82d883a 	mov	r22,r21
  811eb0:	81800217 	ldw	r6,8(r16)
  811eb4:	81c00517 	ldw	r7,20(r16)
  811eb8:	1100022e 	bgeu	r2,r4,811ec4 <__sfvwrite_r+0x23c>
  811ebc:	31c7883a 	add	r3,r6,r7
  811ec0:	1d401816 	blt	r3,r21,811f24 <__sfvwrite_r+0x29c>
  811ec4:	a9c04416 	blt	r21,r7,811fd8 <__sfvwrite_r+0x350>
  811ec8:	80800917 	ldw	r2,36(r16)
  811ecc:	81400717 	ldw	r5,28(r16)
  811ed0:	a009883a 	mov	r4,r20
  811ed4:	da000115 	stw	r8,4(sp)
  811ed8:	e00d883a 	mov	r6,fp
  811edc:	103ee83a 	callr	r2
  811ee0:	102d883a 	mov	r22,r2
  811ee4:	da000117 	ldw	r8,4(sp)
  811ee8:	00bfe00e 	bge	zero,r2,811e6c <__alt_data_end+0xff811e6c>
  811eec:	9da7c83a 	sub	r19,r19,r22
  811ef0:	98001f26 	beq	r19,zero,811f70 <__sfvwrite_r+0x2e8>
  811ef4:	b8800217 	ldw	r2,8(r23)
  811ef8:	e5b9883a 	add	fp,fp,r22
  811efc:	95a5c83a 	sub	r18,r18,r22
  811f00:	15adc83a 	sub	r22,r2,r22
  811f04:	bd800215 	stw	r22,8(r23)
  811f08:	b03f8c26 	beq	r22,zero,811d3c <__alt_data_end+0xff811d3c>
  811f0c:	903fe11e 	bne	r18,zero,811e94 <__alt_data_end+0xff811e94>
  811f10:	8f000017 	ldw	fp,0(r17)
  811f14:	8c800117 	ldw	r18,4(r17)
  811f18:	0011883a 	mov	r8,zero
  811f1c:	8c400204 	addi	r17,r17,8
  811f20:	003fdb06 	br	811e90 <__alt_data_end+0xff811e90>
  811f24:	180d883a 	mov	r6,r3
  811f28:	e00b883a 	mov	r5,fp
  811f2c:	da000115 	stw	r8,4(sp)
  811f30:	d8c00015 	stw	r3,0(sp)
  811f34:	08124f80 	call	8124f8 <memmove>
  811f38:	d8c00017 	ldw	r3,0(sp)
  811f3c:	80800017 	ldw	r2,0(r16)
  811f40:	a009883a 	mov	r4,r20
  811f44:	800b883a 	mov	r5,r16
  811f48:	10c5883a 	add	r2,r2,r3
  811f4c:	80800015 	stw	r2,0(r16)
  811f50:	d8c00015 	stw	r3,0(sp)
  811f54:	0809dd80 	call	809dd8 <_fflush_r>
  811f58:	d8c00017 	ldw	r3,0(sp)
  811f5c:	da000117 	ldw	r8,4(sp)
  811f60:	103fc21e 	bne	r2,zero,811e6c <__alt_data_end+0xff811e6c>
  811f64:	182d883a 	mov	r22,r3
  811f68:	9da7c83a 	sub	r19,r19,r22
  811f6c:	983fe11e 	bne	r19,zero,811ef4 <__alt_data_end+0xff811ef4>
  811f70:	a009883a 	mov	r4,r20
  811f74:	800b883a 	mov	r5,r16
  811f78:	0809dd80 	call	809dd8 <_fflush_r>
  811f7c:	103fbb1e 	bne	r2,zero,811e6c <__alt_data_end+0xff811e6c>
  811f80:	0011883a 	mov	r8,zero
  811f84:	003fdb06 	br	811ef4 <__alt_data_end+0xff811ef4>
  811f88:	81000017 	ldw	r4,0(r16)
  811f8c:	80800417 	ldw	r2,16(r16)
  811f90:	11000236 	bltu	r2,r4,811f9c <__sfvwrite_r+0x314>
  811f94:	84c00517 	ldw	r19,20(r16)
  811f98:	94ffa62e 	bgeu	r18,r19,811e34 <__alt_data_end+0xff811e34>
  811f9c:	9027883a 	mov	r19,r18
  811fa0:	b480012e 	bgeu	r22,r18,811fa8 <__sfvwrite_r+0x320>
  811fa4:	b027883a 	mov	r19,r22
  811fa8:	e00b883a 	mov	r5,fp
  811fac:	980d883a 	mov	r6,r19
  811fb0:	08124f80 	call	8124f8 <memmove>
  811fb4:	80800217 	ldw	r2,8(r16)
  811fb8:	80c00017 	ldw	r3,0(r16)
  811fbc:	14c5c83a 	sub	r2,r2,r19
  811fc0:	1cc7883a 	add	r3,r3,r19
  811fc4:	80800215 	stw	r2,8(r16)
  811fc8:	80c00015 	stw	r3,0(r16)
  811fcc:	10004326 	beq	r2,zero,8120dc <__sfvwrite_r+0x454>
  811fd0:	9805883a 	mov	r2,r19
  811fd4:	003f8506 	br	811dec <__alt_data_end+0xff811dec>
  811fd8:	a80d883a 	mov	r6,r21
  811fdc:	e00b883a 	mov	r5,fp
  811fe0:	da000115 	stw	r8,4(sp)
  811fe4:	08124f80 	call	8124f8 <memmove>
  811fe8:	80800217 	ldw	r2,8(r16)
  811fec:	80c00017 	ldw	r3,0(r16)
  811ff0:	da000117 	ldw	r8,4(sp)
  811ff4:	1545c83a 	sub	r2,r2,r21
  811ff8:	1d6b883a 	add	r21,r3,r21
  811ffc:	80800215 	stw	r2,8(r16)
  812000:	85400015 	stw	r21,0(r16)
  812004:	003fb906 	br	811eec <__alt_data_end+0xff811eec>
  812008:	81000017 	ldw	r4,0(r16)
  81200c:	902d883a 	mov	r22,r18
  812010:	9027883a 	mov	r19,r18
  812014:	003f6b06 	br	811dc4 <__alt_data_end+0xff811dc4>
  812018:	e009883a 	mov	r4,fp
  81201c:	01400284 	movi	r5,10
  812020:	900d883a 	mov	r6,r18
  812024:	08122d80 	call	8122d8 <memchr>
  812028:	10003e26 	beq	r2,zero,812124 <__sfvwrite_r+0x49c>
  81202c:	10800044 	addi	r2,r2,1
  812030:	1727c83a 	sub	r19,r2,fp
  812034:	02000044 	movi	r8,1
  812038:	003f9706 	br	811e98 <__alt_data_end+0xff811e98>
  81203c:	80800517 	ldw	r2,20(r16)
  812040:	81400417 	ldw	r5,16(r16)
  812044:	80c00017 	ldw	r3,0(r16)
  812048:	10a7883a 	add	r19,r2,r2
  81204c:	9885883a 	add	r2,r19,r2
  812050:	1026d7fa 	srli	r19,r2,31
  812054:	196bc83a 	sub	r21,r3,r5
  812058:	a9800044 	addi	r6,r21,1
  81205c:	9885883a 	add	r2,r19,r2
  812060:	1027d07a 	srai	r19,r2,1
  812064:	3485883a 	add	r2,r6,r18
  812068:	980d883a 	mov	r6,r19
  81206c:	9880022e 	bgeu	r19,r2,812078 <__sfvwrite_r+0x3f0>
  812070:	1027883a 	mov	r19,r2
  812074:	100d883a 	mov	r6,r2
  812078:	2101000c 	andi	r4,r4,1024
  81207c:	20001c26 	beq	r4,zero,8120f0 <__sfvwrite_r+0x468>
  812080:	a009883a 	mov	r4,r20
  812084:	300b883a 	mov	r5,r6
  812088:	080b0900 	call	80b090 <_malloc_r>
  81208c:	102d883a 	mov	r22,r2
  812090:	10002926 	beq	r2,zero,812138 <__sfvwrite_r+0x4b0>
  812094:	81400417 	ldw	r5,16(r16)
  812098:	1009883a 	mov	r4,r2
  81209c:	a80d883a 	mov	r6,r21
  8120a0:	08123c00 	call	8123c0 <memcpy>
  8120a4:	8080030b 	ldhu	r2,12(r16)
  8120a8:	00fedfc4 	movi	r3,-1153
  8120ac:	10c4703a 	and	r2,r2,r3
  8120b0:	10802014 	ori	r2,r2,128
  8120b4:	8080030d 	sth	r2,12(r16)
  8120b8:	b549883a 	add	r4,r22,r21
  8120bc:	9d4bc83a 	sub	r5,r19,r21
  8120c0:	85800415 	stw	r22,16(r16)
  8120c4:	84c00515 	stw	r19,20(r16)
  8120c8:	81000015 	stw	r4,0(r16)
  8120cc:	902d883a 	mov	r22,r18
  8120d0:	81400215 	stw	r5,8(r16)
  8120d4:	9027883a 	mov	r19,r18
  8120d8:	003f3a06 	br	811dc4 <__alt_data_end+0xff811dc4>
  8120dc:	a009883a 	mov	r4,r20
  8120e0:	800b883a 	mov	r5,r16
  8120e4:	0809dd80 	call	809dd8 <_fflush_r>
  8120e8:	103fb926 	beq	r2,zero,811fd0 <__alt_data_end+0xff811fd0>
  8120ec:	003f5f06 	br	811e6c <__alt_data_end+0xff811e6c>
  8120f0:	a009883a 	mov	r4,r20
  8120f4:	08137bc0 	call	8137bc <_realloc_r>
  8120f8:	102d883a 	mov	r22,r2
  8120fc:	103fee1e 	bne	r2,zero,8120b8 <__alt_data_end+0xff8120b8>
  812100:	81400417 	ldw	r5,16(r16)
  812104:	a009883a 	mov	r4,r20
  812108:	080a4800 	call	80a480 <_free_r>
  81210c:	8080030b 	ldhu	r2,12(r16)
  812110:	00ffdfc4 	movi	r3,-129
  812114:	1884703a 	and	r2,r3,r2
  812118:	00c00304 	movi	r3,12
  81211c:	a0c00015 	stw	r3,0(r20)
  812120:	003f5306 	br	811e70 <__alt_data_end+0xff811e70>
  812124:	94c00044 	addi	r19,r18,1
  812128:	02000044 	movi	r8,1
  81212c:	003f5a06 	br	811e98 <__alt_data_end+0xff811e98>
  812130:	00bfffc4 	movi	r2,-1
  812134:	003f0206 	br	811d40 <__alt_data_end+0xff811d40>
  812138:	00800304 	movi	r2,12
  81213c:	a0800015 	stw	r2,0(r20)
  812140:	8080030b 	ldhu	r2,12(r16)
  812144:	003f4a06 	br	811e70 <__alt_data_end+0xff811e70>

00812148 <_isatty_r>:
  812148:	defffd04 	addi	sp,sp,-12
  81214c:	dc000015 	stw	r16,0(sp)
  812150:	040020b4 	movhi	r16,130
  812154:	dc400115 	stw	r17,4(sp)
  812158:	84011e04 	addi	r16,r16,1144
  81215c:	2023883a 	mov	r17,r4
  812160:	2809883a 	mov	r4,r5
  812164:	dfc00215 	stw	ra,8(sp)
  812168:	80000015 	stw	zero,0(r16)
  81216c:	081a1c00 	call	81a1c0 <isatty>
  812170:	00ffffc4 	movi	r3,-1
  812174:	10c00526 	beq	r2,r3,81218c <_isatty_r+0x44>
  812178:	dfc00217 	ldw	ra,8(sp)
  81217c:	dc400117 	ldw	r17,4(sp)
  812180:	dc000017 	ldw	r16,0(sp)
  812184:	dec00304 	addi	sp,sp,12
  812188:	f800283a 	ret
  81218c:	80c00017 	ldw	r3,0(r16)
  812190:	183ff926 	beq	r3,zero,812178 <__alt_data_end+0xff812178>
  812194:	88c00015 	stw	r3,0(r17)
  812198:	003ff706 	br	812178 <__alt_data_end+0xff812178>

0081219c <_setlocale_r>:
  81219c:	30001b26 	beq	r6,zero,81220c <_setlocale_r+0x70>
  8121a0:	014020b4 	movhi	r5,130
  8121a4:	defffe04 	addi	sp,sp,-8
  8121a8:	29792004 	addi	r5,r5,-7040
  8121ac:	3009883a 	mov	r4,r6
  8121b0:	dc000015 	stw	r16,0(sp)
  8121b4:	dfc00115 	stw	ra,4(sp)
  8121b8:	3021883a 	mov	r16,r6
  8121bc:	0813d980 	call	813d98 <strcmp>
  8121c0:	1000061e 	bne	r2,zero,8121dc <_setlocale_r+0x40>
  8121c4:	008020b4 	movhi	r2,130
  8121c8:	10b8f904 	addi	r2,r2,-7196
  8121cc:	dfc00117 	ldw	ra,4(sp)
  8121d0:	dc000017 	ldw	r16,0(sp)
  8121d4:	dec00204 	addi	sp,sp,8
  8121d8:	f800283a 	ret
  8121dc:	014020b4 	movhi	r5,130
  8121e0:	2978f904 	addi	r5,r5,-7196
  8121e4:	8009883a 	mov	r4,r16
  8121e8:	0813d980 	call	813d98 <strcmp>
  8121ec:	103ff526 	beq	r2,zero,8121c4 <__alt_data_end+0xff8121c4>
  8121f0:	014020b4 	movhi	r5,130
  8121f4:	29790304 	addi	r5,r5,-7156
  8121f8:	8009883a 	mov	r4,r16
  8121fc:	0813d980 	call	813d98 <strcmp>
  812200:	103ff026 	beq	r2,zero,8121c4 <__alt_data_end+0xff8121c4>
  812204:	0005883a 	mov	r2,zero
  812208:	003ff006 	br	8121cc <__alt_data_end+0xff8121cc>
  81220c:	008020b4 	movhi	r2,130
  812210:	10b8f904 	addi	r2,r2,-7196
  812214:	f800283a 	ret

00812218 <__locale_charset>:
  812218:	008020b4 	movhi	r2,130
  81221c:	10bc8e04 	addi	r2,r2,-3528
  812220:	f800283a 	ret

00812224 <__locale_mb_cur_max>:
  812224:	008020b4 	movhi	r2,130
  812228:	10bdb404 	addi	r2,r2,-2352
  81222c:	10800017 	ldw	r2,0(r2)
  812230:	f800283a 	ret

00812234 <__locale_msgcharset>:
  812234:	008020b4 	movhi	r2,130
  812238:	10bc8604 	addi	r2,r2,-3560
  81223c:	f800283a 	ret

00812240 <__locale_cjk_lang>:
  812240:	0005883a 	mov	r2,zero
  812244:	f800283a 	ret

00812248 <_localeconv_r>:
  812248:	008020b4 	movhi	r2,130
  81224c:	10bc9604 	addi	r2,r2,-3496
  812250:	f800283a 	ret

00812254 <setlocale>:
  812254:	00c020b4 	movhi	r3,130
  812258:	18fdb104 	addi	r3,r3,-2364
  81225c:	2005883a 	mov	r2,r4
  812260:	19000017 	ldw	r4,0(r3)
  812264:	280d883a 	mov	r6,r5
  812268:	100b883a 	mov	r5,r2
  81226c:	081219c1 	jmpi	81219c <_setlocale_r>

00812270 <localeconv>:
  812270:	008020b4 	movhi	r2,130
  812274:	10bc9604 	addi	r2,r2,-3496
  812278:	f800283a 	ret

0081227c <_lseek_r>:
  81227c:	defffd04 	addi	sp,sp,-12
  812280:	dc000015 	stw	r16,0(sp)
  812284:	040020b4 	movhi	r16,130
  812288:	dc400115 	stw	r17,4(sp)
  81228c:	84011e04 	addi	r16,r16,1144
  812290:	2023883a 	mov	r17,r4
  812294:	2809883a 	mov	r4,r5
  812298:	300b883a 	mov	r5,r6
  81229c:	380d883a 	mov	r6,r7
  8122a0:	dfc00215 	stw	ra,8(sp)
  8122a4:	80000015 	stw	zero,0(r16)
  8122a8:	081a3980 	call	81a398 <lseek>
  8122ac:	00ffffc4 	movi	r3,-1
  8122b0:	10c00526 	beq	r2,r3,8122c8 <_lseek_r+0x4c>
  8122b4:	dfc00217 	ldw	ra,8(sp)
  8122b8:	dc400117 	ldw	r17,4(sp)
  8122bc:	dc000017 	ldw	r16,0(sp)
  8122c0:	dec00304 	addi	sp,sp,12
  8122c4:	f800283a 	ret
  8122c8:	80c00017 	ldw	r3,0(r16)
  8122cc:	183ff926 	beq	r3,zero,8122b4 <__alt_data_end+0xff8122b4>
  8122d0:	88c00015 	stw	r3,0(r17)
  8122d4:	003ff706 	br	8122b4 <__alt_data_end+0xff8122b4>

008122d8 <memchr>:
  8122d8:	208000cc 	andi	r2,r4,3
  8122dc:	280f883a 	mov	r7,r5
  8122e0:	10003526 	beq	r2,zero,8123b8 <memchr+0xe0>
  8122e4:	30bfffc4 	addi	r2,r6,-1
  8122e8:	30001b26 	beq	r6,zero,812358 <memchr+0x80>
  8122ec:	21800003 	ldbu	r6,0(r4)
  8122f0:	28c03fcc 	andi	r3,r5,255
  8122f4:	30c01a26 	beq	r6,r3,812360 <memchr+0x88>
  8122f8:	180d883a 	mov	r6,r3
  8122fc:	00000406 	br	812310 <memchr+0x38>
  812300:	10001526 	beq	r2,zero,812358 <memchr+0x80>
  812304:	20c00003 	ldbu	r3,0(r4)
  812308:	10bfffc4 	addi	r2,r2,-1
  81230c:	19801426 	beq	r3,r6,812360 <memchr+0x88>
  812310:	21000044 	addi	r4,r4,1
  812314:	20c000cc 	andi	r3,r4,3
  812318:	183ff91e 	bne	r3,zero,812300 <__alt_data_end+0xff812300>
  81231c:	024000c4 	movi	r9,3
  812320:	48801136 	bltu	r9,r2,812368 <memchr+0x90>
  812324:	10000c26 	beq	r2,zero,812358 <memchr+0x80>
  812328:	20c00003 	ldbu	r3,0(r4)
  81232c:	29403fcc 	andi	r5,r5,255
  812330:	19400b26 	beq	r3,r5,812360 <memchr+0x88>
  812334:	20c00044 	addi	r3,r4,1
  812338:	2085883a 	add	r2,r4,r2
  81233c:	39803fcc 	andi	r6,r7,255
  812340:	00000306 	br	812350 <memchr+0x78>
  812344:	18c00044 	addi	r3,r3,1
  812348:	197fffc3 	ldbu	r5,-1(r3)
  81234c:	29800426 	beq	r5,r6,812360 <memchr+0x88>
  812350:	1809883a 	mov	r4,r3
  812354:	18bffb1e 	bne	r3,r2,812344 <__alt_data_end+0xff812344>
  812358:	0005883a 	mov	r2,zero
  81235c:	f800283a 	ret
  812360:	2005883a 	mov	r2,r4
  812364:	f800283a 	ret
  812368:	28c03fcc 	andi	r3,r5,255
  81236c:	1810923a 	slli	r8,r3,8
  812370:	02ffbff4 	movhi	r11,65279
  812374:	02a02074 	movhi	r10,32897
  812378:	40c6b03a 	or	r3,r8,r3
  81237c:	1810943a 	slli	r8,r3,16
  812380:	5affbfc4 	addi	r11,r11,-257
  812384:	52a02004 	addi	r10,r10,-32640
  812388:	40d0b03a 	or	r8,r8,r3
  81238c:	20c00017 	ldw	r3,0(r4)
  812390:	40c6f03a 	xor	r3,r8,r3
  812394:	1acd883a 	add	r6,r3,r11
  812398:	00c6303a 	nor	r3,zero,r3
  81239c:	30c6703a 	and	r3,r6,r3
  8123a0:	1a86703a 	and	r3,r3,r10
  8123a4:	183fdf1e 	bne	r3,zero,812324 <__alt_data_end+0xff812324>
  8123a8:	10bfff04 	addi	r2,r2,-4
  8123ac:	21000104 	addi	r4,r4,4
  8123b0:	48bff636 	bltu	r9,r2,81238c <__alt_data_end+0xff81238c>
  8123b4:	003fdb06 	br	812324 <__alt_data_end+0xff812324>
  8123b8:	3005883a 	mov	r2,r6
  8123bc:	003fd706 	br	81231c <__alt_data_end+0xff81231c>

008123c0 <memcpy>:
  8123c0:	deffff04 	addi	sp,sp,-4
  8123c4:	dc000015 	stw	r16,0(sp)
  8123c8:	00c003c4 	movi	r3,15
  8123cc:	2005883a 	mov	r2,r4
  8123d0:	1980432e 	bgeu	r3,r6,8124e0 <memcpy+0x120>
  8123d4:	2146b03a 	or	r3,r4,r5
  8123d8:	18c000cc 	andi	r3,r3,3
  8123dc:	1800421e 	bne	r3,zero,8124e8 <memcpy+0x128>
  8123e0:	343ffc04 	addi	r16,r6,-16
  8123e4:	8020d13a 	srli	r16,r16,4
  8123e8:	28c00104 	addi	r3,r5,4
  8123ec:	23400104 	addi	r13,r4,4
  8123f0:	801e913a 	slli	r15,r16,4
  8123f4:	2b000204 	addi	r12,r5,8
  8123f8:	22c00204 	addi	r11,r4,8
  8123fc:	7bc00504 	addi	r15,r15,20
  812400:	2a800304 	addi	r10,r5,12
  812404:	22400304 	addi	r9,r4,12
  812408:	2bdf883a 	add	r15,r5,r15
  81240c:	2811883a 	mov	r8,r5
  812410:	200f883a 	mov	r7,r4
  812414:	41000017 	ldw	r4,0(r8)
  812418:	39c00404 	addi	r7,r7,16
  81241c:	18c00404 	addi	r3,r3,16
  812420:	393ffc15 	stw	r4,-16(r7)
  812424:	1bbffc17 	ldw	r14,-16(r3)
  812428:	6b400404 	addi	r13,r13,16
  81242c:	5ac00404 	addi	r11,r11,16
  812430:	6bbffc15 	stw	r14,-16(r13)
  812434:	63800017 	ldw	r14,0(r12)
  812438:	4a400404 	addi	r9,r9,16
  81243c:	42000404 	addi	r8,r8,16
  812440:	5bbffc15 	stw	r14,-16(r11)
  812444:	53800017 	ldw	r14,0(r10)
  812448:	63000404 	addi	r12,r12,16
  81244c:	52800404 	addi	r10,r10,16
  812450:	4bbffc15 	stw	r14,-16(r9)
  812454:	1bffef1e 	bne	r3,r15,812414 <__alt_data_end+0xff812414>
  812458:	81c00044 	addi	r7,r16,1
  81245c:	380e913a 	slli	r7,r7,4
  812460:	310003cc 	andi	r4,r6,15
  812464:	02c000c4 	movi	r11,3
  812468:	11c7883a 	add	r3,r2,r7
  81246c:	29cb883a 	add	r5,r5,r7
  812470:	59001f2e 	bgeu	r11,r4,8124f0 <memcpy+0x130>
  812474:	1813883a 	mov	r9,r3
  812478:	2811883a 	mov	r8,r5
  81247c:	200f883a 	mov	r7,r4
  812480:	42800017 	ldw	r10,0(r8)
  812484:	4a400104 	addi	r9,r9,4
  812488:	39ffff04 	addi	r7,r7,-4
  81248c:	4abfff15 	stw	r10,-4(r9)
  812490:	42000104 	addi	r8,r8,4
  812494:	59fffa36 	bltu	r11,r7,812480 <__alt_data_end+0xff812480>
  812498:	213fff04 	addi	r4,r4,-4
  81249c:	2008d0ba 	srli	r4,r4,2
  8124a0:	318000cc 	andi	r6,r6,3
  8124a4:	21000044 	addi	r4,r4,1
  8124a8:	2109883a 	add	r4,r4,r4
  8124ac:	2109883a 	add	r4,r4,r4
  8124b0:	1907883a 	add	r3,r3,r4
  8124b4:	290b883a 	add	r5,r5,r4
  8124b8:	30000626 	beq	r6,zero,8124d4 <memcpy+0x114>
  8124bc:	198d883a 	add	r6,r3,r6
  8124c0:	29c00003 	ldbu	r7,0(r5)
  8124c4:	18c00044 	addi	r3,r3,1
  8124c8:	29400044 	addi	r5,r5,1
  8124cc:	19ffffc5 	stb	r7,-1(r3)
  8124d0:	19bffb1e 	bne	r3,r6,8124c0 <__alt_data_end+0xff8124c0>
  8124d4:	dc000017 	ldw	r16,0(sp)
  8124d8:	dec00104 	addi	sp,sp,4
  8124dc:	f800283a 	ret
  8124e0:	2007883a 	mov	r3,r4
  8124e4:	003ff406 	br	8124b8 <__alt_data_end+0xff8124b8>
  8124e8:	2007883a 	mov	r3,r4
  8124ec:	003ff306 	br	8124bc <__alt_data_end+0xff8124bc>
  8124f0:	200d883a 	mov	r6,r4
  8124f4:	003ff006 	br	8124b8 <__alt_data_end+0xff8124b8>

008124f8 <memmove>:
  8124f8:	2005883a 	mov	r2,r4
  8124fc:	29000b2e 	bgeu	r5,r4,81252c <memmove+0x34>
  812500:	298f883a 	add	r7,r5,r6
  812504:	21c0092e 	bgeu	r4,r7,81252c <memmove+0x34>
  812508:	2187883a 	add	r3,r4,r6
  81250c:	198bc83a 	sub	r5,r3,r6
  812510:	30004b26 	beq	r6,zero,812640 <memmove+0x148>
  812514:	39ffffc4 	addi	r7,r7,-1
  812518:	39000003 	ldbu	r4,0(r7)
  81251c:	18ffffc4 	addi	r3,r3,-1
  812520:	19000005 	stb	r4,0(r3)
  812524:	197ffb1e 	bne	r3,r5,812514 <__alt_data_end+0xff812514>
  812528:	f800283a 	ret
  81252c:	00c003c4 	movi	r3,15
  812530:	1980412e 	bgeu	r3,r6,812638 <memmove+0x140>
  812534:	1146b03a 	or	r3,r2,r5
  812538:	18c000cc 	andi	r3,r3,3
  81253c:	1800411e 	bne	r3,zero,812644 <memmove+0x14c>
  812540:	33fffc04 	addi	r15,r6,-16
  812544:	781ed13a 	srli	r15,r15,4
  812548:	28c00104 	addi	r3,r5,4
  81254c:	13400104 	addi	r13,r2,4
  812550:	781c913a 	slli	r14,r15,4
  812554:	2b000204 	addi	r12,r5,8
  812558:	12c00204 	addi	r11,r2,8
  81255c:	73800504 	addi	r14,r14,20
  812560:	2a800304 	addi	r10,r5,12
  812564:	12400304 	addi	r9,r2,12
  812568:	2b9d883a 	add	r14,r5,r14
  81256c:	2811883a 	mov	r8,r5
  812570:	100f883a 	mov	r7,r2
  812574:	41000017 	ldw	r4,0(r8)
  812578:	39c00404 	addi	r7,r7,16
  81257c:	18c00404 	addi	r3,r3,16
  812580:	393ffc15 	stw	r4,-16(r7)
  812584:	193ffc17 	ldw	r4,-16(r3)
  812588:	6b400404 	addi	r13,r13,16
  81258c:	5ac00404 	addi	r11,r11,16
  812590:	693ffc15 	stw	r4,-16(r13)
  812594:	61000017 	ldw	r4,0(r12)
  812598:	4a400404 	addi	r9,r9,16
  81259c:	42000404 	addi	r8,r8,16
  8125a0:	593ffc15 	stw	r4,-16(r11)
  8125a4:	51000017 	ldw	r4,0(r10)
  8125a8:	63000404 	addi	r12,r12,16
  8125ac:	52800404 	addi	r10,r10,16
  8125b0:	493ffc15 	stw	r4,-16(r9)
  8125b4:	1bbfef1e 	bne	r3,r14,812574 <__alt_data_end+0xff812574>
  8125b8:	79000044 	addi	r4,r15,1
  8125bc:	2008913a 	slli	r4,r4,4
  8125c0:	328003cc 	andi	r10,r6,15
  8125c4:	02c000c4 	movi	r11,3
  8125c8:	1107883a 	add	r3,r2,r4
  8125cc:	290b883a 	add	r5,r5,r4
  8125d0:	5a801e2e 	bgeu	r11,r10,81264c <memmove+0x154>
  8125d4:	1813883a 	mov	r9,r3
  8125d8:	2811883a 	mov	r8,r5
  8125dc:	500f883a 	mov	r7,r10
  8125e0:	41000017 	ldw	r4,0(r8)
  8125e4:	4a400104 	addi	r9,r9,4
  8125e8:	39ffff04 	addi	r7,r7,-4
  8125ec:	493fff15 	stw	r4,-4(r9)
  8125f0:	42000104 	addi	r8,r8,4
  8125f4:	59fffa36 	bltu	r11,r7,8125e0 <__alt_data_end+0xff8125e0>
  8125f8:	513fff04 	addi	r4,r10,-4
  8125fc:	2008d0ba 	srli	r4,r4,2
  812600:	318000cc 	andi	r6,r6,3
  812604:	21000044 	addi	r4,r4,1
  812608:	2109883a 	add	r4,r4,r4
  81260c:	2109883a 	add	r4,r4,r4
  812610:	1907883a 	add	r3,r3,r4
  812614:	290b883a 	add	r5,r5,r4
  812618:	30000926 	beq	r6,zero,812640 <memmove+0x148>
  81261c:	198d883a 	add	r6,r3,r6
  812620:	29c00003 	ldbu	r7,0(r5)
  812624:	18c00044 	addi	r3,r3,1
  812628:	29400044 	addi	r5,r5,1
  81262c:	19ffffc5 	stb	r7,-1(r3)
  812630:	19bffb1e 	bne	r3,r6,812620 <__alt_data_end+0xff812620>
  812634:	f800283a 	ret
  812638:	1007883a 	mov	r3,r2
  81263c:	003ff606 	br	812618 <__alt_data_end+0xff812618>
  812640:	f800283a 	ret
  812644:	1007883a 	mov	r3,r2
  812648:	003ff406 	br	81261c <__alt_data_end+0xff81261c>
  81264c:	500d883a 	mov	r6,r10
  812650:	003ff106 	br	812618 <__alt_data_end+0xff812618>

00812654 <_Balloc>:
  812654:	20801317 	ldw	r2,76(r4)
  812658:	defffc04 	addi	sp,sp,-16
  81265c:	dc400115 	stw	r17,4(sp)
  812660:	dc000015 	stw	r16,0(sp)
  812664:	dfc00315 	stw	ra,12(sp)
  812668:	dc800215 	stw	r18,8(sp)
  81266c:	2023883a 	mov	r17,r4
  812670:	2821883a 	mov	r16,r5
  812674:	10000f26 	beq	r2,zero,8126b4 <_Balloc+0x60>
  812678:	8407883a 	add	r3,r16,r16
  81267c:	18c7883a 	add	r3,r3,r3
  812680:	10c7883a 	add	r3,r2,r3
  812684:	18800017 	ldw	r2,0(r3)
  812688:	10001126 	beq	r2,zero,8126d0 <_Balloc+0x7c>
  81268c:	11000017 	ldw	r4,0(r2)
  812690:	19000015 	stw	r4,0(r3)
  812694:	10000415 	stw	zero,16(r2)
  812698:	10000315 	stw	zero,12(r2)
  81269c:	dfc00317 	ldw	ra,12(sp)
  8126a0:	dc800217 	ldw	r18,8(sp)
  8126a4:	dc400117 	ldw	r17,4(sp)
  8126a8:	dc000017 	ldw	r16,0(sp)
  8126ac:	dec00404 	addi	sp,sp,16
  8126b0:	f800283a 	ret
  8126b4:	01400104 	movi	r5,4
  8126b8:	01800844 	movi	r6,33
  8126bc:	08166580 	call	816658 <_calloc_r>
  8126c0:	88801315 	stw	r2,76(r17)
  8126c4:	103fec1e 	bne	r2,zero,812678 <__alt_data_end+0xff812678>
  8126c8:	0005883a 	mov	r2,zero
  8126cc:	003ff306 	br	81269c <__alt_data_end+0xff81269c>
  8126d0:	01400044 	movi	r5,1
  8126d4:	2c24983a 	sll	r18,r5,r16
  8126d8:	8809883a 	mov	r4,r17
  8126dc:	91800144 	addi	r6,r18,5
  8126e0:	318d883a 	add	r6,r6,r6
  8126e4:	318d883a 	add	r6,r6,r6
  8126e8:	08166580 	call	816658 <_calloc_r>
  8126ec:	103ff626 	beq	r2,zero,8126c8 <__alt_data_end+0xff8126c8>
  8126f0:	14000115 	stw	r16,4(r2)
  8126f4:	14800215 	stw	r18,8(r2)
  8126f8:	003fe606 	br	812694 <__alt_data_end+0xff812694>

008126fc <_Bfree>:
  8126fc:	28000826 	beq	r5,zero,812720 <_Bfree+0x24>
  812700:	28c00117 	ldw	r3,4(r5)
  812704:	20801317 	ldw	r2,76(r4)
  812708:	18c7883a 	add	r3,r3,r3
  81270c:	18c7883a 	add	r3,r3,r3
  812710:	10c5883a 	add	r2,r2,r3
  812714:	10c00017 	ldw	r3,0(r2)
  812718:	28c00015 	stw	r3,0(r5)
  81271c:	11400015 	stw	r5,0(r2)
  812720:	f800283a 	ret

00812724 <__multadd>:
  812724:	defffa04 	addi	sp,sp,-24
  812728:	dc000115 	stw	r16,4(sp)
  81272c:	2c000417 	ldw	r16,16(r5)
  812730:	dc800315 	stw	r18,12(sp)
  812734:	dc400215 	stw	r17,8(sp)
  812738:	dfc00515 	stw	ra,20(sp)
  81273c:	dcc00415 	stw	r19,16(sp)
  812740:	2823883a 	mov	r17,r5
  812744:	2025883a 	mov	r18,r4
  812748:	2a400504 	addi	r9,r5,20
  81274c:	0015883a 	mov	r10,zero
  812750:	4a000017 	ldw	r8,0(r9)
  812754:	4a400104 	addi	r9,r9,4
  812758:	52800044 	addi	r10,r10,1
  81275c:	40ffffcc 	andi	r3,r8,65535
  812760:	1987383a 	mul	r3,r3,r6
  812764:	4010d43a 	srli	r8,r8,16
  812768:	19cf883a 	add	r7,r3,r7
  81276c:	4191383a 	mul	r8,r8,r6
  812770:	3816d43a 	srli	r11,r7,16
  812774:	38ffffcc 	andi	r3,r7,65535
  812778:	5a0f883a 	add	r7,r11,r8
  81277c:	3810943a 	slli	r8,r7,16
  812780:	380ed43a 	srli	r7,r7,16
  812784:	40c7883a 	add	r3,r8,r3
  812788:	48ffff15 	stw	r3,-4(r9)
  81278c:	543ff016 	blt	r10,r16,812750 <__alt_data_end+0xff812750>
  812790:	38000926 	beq	r7,zero,8127b8 <__multadd+0x94>
  812794:	88800217 	ldw	r2,8(r17)
  812798:	80800f0e 	bge	r16,r2,8127d8 <__multadd+0xb4>
  81279c:	80800144 	addi	r2,r16,5
  8127a0:	1085883a 	add	r2,r2,r2
  8127a4:	1085883a 	add	r2,r2,r2
  8127a8:	8885883a 	add	r2,r17,r2
  8127ac:	11c00015 	stw	r7,0(r2)
  8127b0:	84000044 	addi	r16,r16,1
  8127b4:	8c000415 	stw	r16,16(r17)
  8127b8:	8805883a 	mov	r2,r17
  8127bc:	dfc00517 	ldw	ra,20(sp)
  8127c0:	dcc00417 	ldw	r19,16(sp)
  8127c4:	dc800317 	ldw	r18,12(sp)
  8127c8:	dc400217 	ldw	r17,8(sp)
  8127cc:	dc000117 	ldw	r16,4(sp)
  8127d0:	dec00604 	addi	sp,sp,24
  8127d4:	f800283a 	ret
  8127d8:	89400117 	ldw	r5,4(r17)
  8127dc:	9009883a 	mov	r4,r18
  8127e0:	d9c00015 	stw	r7,0(sp)
  8127e4:	29400044 	addi	r5,r5,1
  8127e8:	08126540 	call	812654 <_Balloc>
  8127ec:	89800417 	ldw	r6,16(r17)
  8127f0:	11000304 	addi	r4,r2,12
  8127f4:	89400304 	addi	r5,r17,12
  8127f8:	31800084 	addi	r6,r6,2
  8127fc:	318d883a 	add	r6,r6,r6
  812800:	318d883a 	add	r6,r6,r6
  812804:	1027883a 	mov	r19,r2
  812808:	08123c00 	call	8123c0 <memcpy>
  81280c:	d9c00017 	ldw	r7,0(sp)
  812810:	88000a26 	beq	r17,zero,81283c <__multadd+0x118>
  812814:	89000117 	ldw	r4,4(r17)
  812818:	90c01317 	ldw	r3,76(r18)
  81281c:	2109883a 	add	r4,r4,r4
  812820:	2109883a 	add	r4,r4,r4
  812824:	1907883a 	add	r3,r3,r4
  812828:	18800017 	ldw	r2,0(r3)
  81282c:	88800015 	stw	r2,0(r17)
  812830:	1c400015 	stw	r17,0(r3)
  812834:	9823883a 	mov	r17,r19
  812838:	003fd806 	br	81279c <__alt_data_end+0xff81279c>
  81283c:	9823883a 	mov	r17,r19
  812840:	003fd606 	br	81279c <__alt_data_end+0xff81279c>

00812844 <__s2b>:
  812844:	defff904 	addi	sp,sp,-28
  812848:	dc400115 	stw	r17,4(sp)
  81284c:	dc000015 	stw	r16,0(sp)
  812850:	2023883a 	mov	r17,r4
  812854:	2821883a 	mov	r16,r5
  812858:	39000204 	addi	r4,r7,8
  81285c:	01400244 	movi	r5,9
  812860:	dcc00315 	stw	r19,12(sp)
  812864:	dc800215 	stw	r18,8(sp)
  812868:	dfc00615 	stw	ra,24(sp)
  81286c:	dd400515 	stw	r21,20(sp)
  812870:	dd000415 	stw	r20,16(sp)
  812874:	3825883a 	mov	r18,r7
  812878:	3027883a 	mov	r19,r6
  81287c:	0809a0c0 	call	809a0c <__divsi3>
  812880:	00c00044 	movi	r3,1
  812884:	000b883a 	mov	r5,zero
  812888:	1880030e 	bge	r3,r2,812898 <__s2b+0x54>
  81288c:	18c7883a 	add	r3,r3,r3
  812890:	29400044 	addi	r5,r5,1
  812894:	18bffd16 	blt	r3,r2,81288c <__alt_data_end+0xff81288c>
  812898:	8809883a 	mov	r4,r17
  81289c:	08126540 	call	812654 <_Balloc>
  8128a0:	d8c00717 	ldw	r3,28(sp)
  8128a4:	10c00515 	stw	r3,20(r2)
  8128a8:	00c00044 	movi	r3,1
  8128ac:	10c00415 	stw	r3,16(r2)
  8128b0:	00c00244 	movi	r3,9
  8128b4:	1cc0210e 	bge	r3,r19,81293c <__s2b+0xf8>
  8128b8:	80eb883a 	add	r21,r16,r3
  8128bc:	a829883a 	mov	r20,r21
  8128c0:	84e1883a 	add	r16,r16,r19
  8128c4:	a1c00007 	ldb	r7,0(r20)
  8128c8:	8809883a 	mov	r4,r17
  8128cc:	a5000044 	addi	r20,r20,1
  8128d0:	100b883a 	mov	r5,r2
  8128d4:	01800284 	movi	r6,10
  8128d8:	39fff404 	addi	r7,r7,-48
  8128dc:	08127240 	call	812724 <__multadd>
  8128e0:	a43ff81e 	bne	r20,r16,8128c4 <__alt_data_end+0xff8128c4>
  8128e4:	ace1883a 	add	r16,r21,r19
  8128e8:	843ffe04 	addi	r16,r16,-8
  8128ec:	9c800a0e 	bge	r19,r18,812918 <__s2b+0xd4>
  8128f0:	94e5c83a 	sub	r18,r18,r19
  8128f4:	84a5883a 	add	r18,r16,r18
  8128f8:	81c00007 	ldb	r7,0(r16)
  8128fc:	8809883a 	mov	r4,r17
  812900:	84000044 	addi	r16,r16,1
  812904:	100b883a 	mov	r5,r2
  812908:	01800284 	movi	r6,10
  81290c:	39fff404 	addi	r7,r7,-48
  812910:	08127240 	call	812724 <__multadd>
  812914:	84bff81e 	bne	r16,r18,8128f8 <__alt_data_end+0xff8128f8>
  812918:	dfc00617 	ldw	ra,24(sp)
  81291c:	dd400517 	ldw	r21,20(sp)
  812920:	dd000417 	ldw	r20,16(sp)
  812924:	dcc00317 	ldw	r19,12(sp)
  812928:	dc800217 	ldw	r18,8(sp)
  81292c:	dc400117 	ldw	r17,4(sp)
  812930:	dc000017 	ldw	r16,0(sp)
  812934:	dec00704 	addi	sp,sp,28
  812938:	f800283a 	ret
  81293c:	84000284 	addi	r16,r16,10
  812940:	1827883a 	mov	r19,r3
  812944:	003fe906 	br	8128ec <__alt_data_end+0xff8128ec>

00812948 <__hi0bits>:
  812948:	20bfffec 	andhi	r2,r4,65535
  81294c:	1000141e 	bne	r2,zero,8129a0 <__hi0bits+0x58>
  812950:	2008943a 	slli	r4,r4,16
  812954:	00800404 	movi	r2,16
  812958:	20ffc02c 	andhi	r3,r4,65280
  81295c:	1800021e 	bne	r3,zero,812968 <__hi0bits+0x20>
  812960:	2008923a 	slli	r4,r4,8
  812964:	10800204 	addi	r2,r2,8
  812968:	20fc002c 	andhi	r3,r4,61440
  81296c:	1800021e 	bne	r3,zero,812978 <__hi0bits+0x30>
  812970:	2008913a 	slli	r4,r4,4
  812974:	10800104 	addi	r2,r2,4
  812978:	20f0002c 	andhi	r3,r4,49152
  81297c:	1800031e 	bne	r3,zero,81298c <__hi0bits+0x44>
  812980:	2109883a 	add	r4,r4,r4
  812984:	10800084 	addi	r2,r2,2
  812988:	2109883a 	add	r4,r4,r4
  81298c:	20000316 	blt	r4,zero,81299c <__hi0bits+0x54>
  812990:	2110002c 	andhi	r4,r4,16384
  812994:	2000041e 	bne	r4,zero,8129a8 <__hi0bits+0x60>
  812998:	00800804 	movi	r2,32
  81299c:	f800283a 	ret
  8129a0:	0005883a 	mov	r2,zero
  8129a4:	003fec06 	br	812958 <__alt_data_end+0xff812958>
  8129a8:	10800044 	addi	r2,r2,1
  8129ac:	f800283a 	ret

008129b0 <__lo0bits>:
  8129b0:	20c00017 	ldw	r3,0(r4)
  8129b4:	188001cc 	andi	r2,r3,7
  8129b8:	10000826 	beq	r2,zero,8129dc <__lo0bits+0x2c>
  8129bc:	1880004c 	andi	r2,r3,1
  8129c0:	1000211e 	bne	r2,zero,812a48 <__lo0bits+0x98>
  8129c4:	1880008c 	andi	r2,r3,2
  8129c8:	1000211e 	bne	r2,zero,812a50 <__lo0bits+0xa0>
  8129cc:	1806d0ba 	srli	r3,r3,2
  8129d0:	00800084 	movi	r2,2
  8129d4:	20c00015 	stw	r3,0(r4)
  8129d8:	f800283a 	ret
  8129dc:	18bfffcc 	andi	r2,r3,65535
  8129e0:	10001326 	beq	r2,zero,812a30 <__lo0bits+0x80>
  8129e4:	0005883a 	mov	r2,zero
  8129e8:	19403fcc 	andi	r5,r3,255
  8129ec:	2800021e 	bne	r5,zero,8129f8 <__lo0bits+0x48>
  8129f0:	1806d23a 	srli	r3,r3,8
  8129f4:	10800204 	addi	r2,r2,8
  8129f8:	194003cc 	andi	r5,r3,15
  8129fc:	2800021e 	bne	r5,zero,812a08 <__lo0bits+0x58>
  812a00:	1806d13a 	srli	r3,r3,4
  812a04:	10800104 	addi	r2,r2,4
  812a08:	194000cc 	andi	r5,r3,3
  812a0c:	2800021e 	bne	r5,zero,812a18 <__lo0bits+0x68>
  812a10:	1806d0ba 	srli	r3,r3,2
  812a14:	10800084 	addi	r2,r2,2
  812a18:	1940004c 	andi	r5,r3,1
  812a1c:	2800081e 	bne	r5,zero,812a40 <__lo0bits+0x90>
  812a20:	1806d07a 	srli	r3,r3,1
  812a24:	1800051e 	bne	r3,zero,812a3c <__lo0bits+0x8c>
  812a28:	00800804 	movi	r2,32
  812a2c:	f800283a 	ret
  812a30:	1806d43a 	srli	r3,r3,16
  812a34:	00800404 	movi	r2,16
  812a38:	003feb06 	br	8129e8 <__alt_data_end+0xff8129e8>
  812a3c:	10800044 	addi	r2,r2,1
  812a40:	20c00015 	stw	r3,0(r4)
  812a44:	f800283a 	ret
  812a48:	0005883a 	mov	r2,zero
  812a4c:	f800283a 	ret
  812a50:	1806d07a 	srli	r3,r3,1
  812a54:	00800044 	movi	r2,1
  812a58:	20c00015 	stw	r3,0(r4)
  812a5c:	f800283a 	ret

00812a60 <__i2b>:
  812a60:	defffd04 	addi	sp,sp,-12
  812a64:	dc000015 	stw	r16,0(sp)
  812a68:	04000044 	movi	r16,1
  812a6c:	dc400115 	stw	r17,4(sp)
  812a70:	2823883a 	mov	r17,r5
  812a74:	800b883a 	mov	r5,r16
  812a78:	dfc00215 	stw	ra,8(sp)
  812a7c:	08126540 	call	812654 <_Balloc>
  812a80:	14400515 	stw	r17,20(r2)
  812a84:	14000415 	stw	r16,16(r2)
  812a88:	dfc00217 	ldw	ra,8(sp)
  812a8c:	dc400117 	ldw	r17,4(sp)
  812a90:	dc000017 	ldw	r16,0(sp)
  812a94:	dec00304 	addi	sp,sp,12
  812a98:	f800283a 	ret

00812a9c <__multiply>:
  812a9c:	defffa04 	addi	sp,sp,-24
  812aa0:	dcc00315 	stw	r19,12(sp)
  812aa4:	dc800215 	stw	r18,8(sp)
  812aa8:	2cc00417 	ldw	r19,16(r5)
  812aac:	34800417 	ldw	r18,16(r6)
  812ab0:	dd000415 	stw	r20,16(sp)
  812ab4:	dc400115 	stw	r17,4(sp)
  812ab8:	dfc00515 	stw	ra,20(sp)
  812abc:	dc000015 	stw	r16,0(sp)
  812ac0:	2829883a 	mov	r20,r5
  812ac4:	3023883a 	mov	r17,r6
  812ac8:	9c807016 	blt	r19,r18,812c8c <__multiply+0x1f0>
  812acc:	9005883a 	mov	r2,r18
  812ad0:	9825883a 	mov	r18,r19
  812ad4:	1027883a 	mov	r19,r2
  812ad8:	a0800217 	ldw	r2,8(r20)
  812adc:	94e1883a 	add	r16,r18,r19
  812ae0:	a1400117 	ldw	r5,4(r20)
  812ae4:	1400010e 	bge	r2,r16,812aec <__multiply+0x50>
  812ae8:	29400044 	addi	r5,r5,1
  812aec:	08126540 	call	812654 <_Balloc>
  812af0:	8417883a 	add	r11,r16,r16
  812af4:	13000504 	addi	r12,r2,20
  812af8:	5ad7883a 	add	r11,r11,r11
  812afc:	62d7883a 	add	r11,r12,r11
  812b00:	6007883a 	mov	r3,r12
  812b04:	62c0032e 	bgeu	r12,r11,812b14 <__multiply+0x78>
  812b08:	18000015 	stw	zero,0(r3)
  812b0c:	18c00104 	addi	r3,r3,4
  812b10:	1afffd36 	bltu	r3,r11,812b08 <__alt_data_end+0xff812b08>
  812b14:	9ce7883a 	add	r19,r19,r19
  812b18:	94a5883a 	add	r18,r18,r18
  812b1c:	89800504 	addi	r6,r17,20
  812b20:	9ce7883a 	add	r19,r19,r19
  812b24:	a3800504 	addi	r14,r20,20
  812b28:	94a5883a 	add	r18,r18,r18
  812b2c:	34db883a 	add	r13,r6,r19
  812b30:	7495883a 	add	r10,r14,r18
  812b34:	3340422e 	bgeu	r6,r13,812c40 <__multiply+0x1a4>
  812b38:	34400017 	ldw	r17,0(r6)
  812b3c:	8cbfffcc 	andi	r18,r17,65535
  812b40:	90001b26 	beq	r18,zero,812bb0 <__multiply+0x114>
  812b44:	6013883a 	mov	r9,r12
  812b48:	7023883a 	mov	r17,r14
  812b4c:	0011883a 	mov	r8,zero
  812b50:	88c00017 	ldw	r3,0(r17)
  812b54:	4bc00017 	ldw	r15,0(r9)
  812b58:	8c400104 	addi	r17,r17,4
  812b5c:	19ffffcc 	andi	r7,r3,65535
  812b60:	3c8f383a 	mul	r7,r7,r18
  812b64:	1808d43a 	srli	r4,r3,16
  812b68:	797fffcc 	andi	r5,r15,65535
  812b6c:	29cb883a 	add	r5,r5,r7
  812b70:	2a0b883a 	add	r5,r5,r8
  812b74:	2489383a 	mul	r4,r4,r18
  812b78:	7806d43a 	srli	r3,r15,16
  812b7c:	2810d43a 	srli	r8,r5,16
  812b80:	297fffcc 	andi	r5,r5,65535
  812b84:	1907883a 	add	r3,r3,r4
  812b88:	1a07883a 	add	r3,r3,r8
  812b8c:	1808943a 	slli	r4,r3,16
  812b90:	480f883a 	mov	r7,r9
  812b94:	1810d43a 	srli	r8,r3,16
  812b98:	214ab03a 	or	r5,r4,r5
  812b9c:	49400015 	stw	r5,0(r9)
  812ba0:	4a400104 	addi	r9,r9,4
  812ba4:	8abfea36 	bltu	r17,r10,812b50 <__alt_data_end+0xff812b50>
  812ba8:	3a000115 	stw	r8,4(r7)
  812bac:	34400017 	ldw	r17,0(r6)
  812bb0:	8822d43a 	srli	r17,r17,16
  812bb4:	88001f26 	beq	r17,zero,812c34 <__multiply+0x198>
  812bb8:	60c00017 	ldw	r3,0(r12)
  812bbc:	7013883a 	mov	r9,r14
  812bc0:	601f883a 	mov	r15,r12
  812bc4:	1811883a 	mov	r8,r3
  812bc8:	6027883a 	mov	r19,r12
  812bcc:	000f883a 	mov	r7,zero
  812bd0:	00000106 	br	812bd8 <__multiply+0x13c>
  812bd4:	9027883a 	mov	r19,r18
  812bd8:	4940000b 	ldhu	r5,0(r9)
  812bdc:	4010d43a 	srli	r8,r8,16
  812be0:	193fffcc 	andi	r4,r3,65535
  812be4:	2c4b383a 	mul	r5,r5,r17
  812be8:	7bc00104 	addi	r15,r15,4
  812bec:	4a400104 	addi	r9,r9,4
  812bf0:	2a0b883a 	add	r5,r5,r8
  812bf4:	29cb883a 	add	r5,r5,r7
  812bf8:	2806943a 	slli	r3,r5,16
  812bfc:	9c800104 	addi	r18,r19,4
  812c00:	280ad43a 	srli	r5,r5,16
  812c04:	1908b03a 	or	r4,r3,r4
  812c08:	793fff15 	stw	r4,-4(r15)
  812c0c:	48ffff17 	ldw	r3,-4(r9)
  812c10:	92000017 	ldw	r8,0(r18)
  812c14:	1806d43a 	srli	r3,r3,16
  812c18:	413fffcc 	andi	r4,r8,65535
  812c1c:	1c47383a 	mul	r3,r3,r17
  812c20:	1907883a 	add	r3,r3,r4
  812c24:	1947883a 	add	r3,r3,r5
  812c28:	180ed43a 	srli	r7,r3,16
  812c2c:	4abfe936 	bltu	r9,r10,812bd4 <__alt_data_end+0xff812bd4>
  812c30:	98c00115 	stw	r3,4(r19)
  812c34:	31800104 	addi	r6,r6,4
  812c38:	63000104 	addi	r12,r12,4
  812c3c:	337fbe36 	bltu	r6,r13,812b38 <__alt_data_end+0xff812b38>
  812c40:	0400090e 	bge	zero,r16,812c68 <__multiply+0x1cc>
  812c44:	58ffff17 	ldw	r3,-4(r11)
  812c48:	5affff04 	addi	r11,r11,-4
  812c4c:	18000326 	beq	r3,zero,812c5c <__multiply+0x1c0>
  812c50:	00000506 	br	812c68 <__multiply+0x1cc>
  812c54:	58c00017 	ldw	r3,0(r11)
  812c58:	1800031e 	bne	r3,zero,812c68 <__multiply+0x1cc>
  812c5c:	843fffc4 	addi	r16,r16,-1
  812c60:	5affff04 	addi	r11,r11,-4
  812c64:	803ffb1e 	bne	r16,zero,812c54 <__alt_data_end+0xff812c54>
  812c68:	14000415 	stw	r16,16(r2)
  812c6c:	dfc00517 	ldw	ra,20(sp)
  812c70:	dd000417 	ldw	r20,16(sp)
  812c74:	dcc00317 	ldw	r19,12(sp)
  812c78:	dc800217 	ldw	r18,8(sp)
  812c7c:	dc400117 	ldw	r17,4(sp)
  812c80:	dc000017 	ldw	r16,0(sp)
  812c84:	dec00604 	addi	sp,sp,24
  812c88:	f800283a 	ret
  812c8c:	3029883a 	mov	r20,r6
  812c90:	2823883a 	mov	r17,r5
  812c94:	003f9006 	br	812ad8 <__alt_data_end+0xff812ad8>

00812c98 <__pow5mult>:
  812c98:	defffa04 	addi	sp,sp,-24
  812c9c:	dcc00315 	stw	r19,12(sp)
  812ca0:	dc800215 	stw	r18,8(sp)
  812ca4:	dc000015 	stw	r16,0(sp)
  812ca8:	dfc00515 	stw	ra,20(sp)
  812cac:	dd000415 	stw	r20,16(sp)
  812cb0:	dc400115 	stw	r17,4(sp)
  812cb4:	308000cc 	andi	r2,r6,3
  812cb8:	3021883a 	mov	r16,r6
  812cbc:	2027883a 	mov	r19,r4
  812cc0:	2825883a 	mov	r18,r5
  812cc4:	10002e1e 	bne	r2,zero,812d80 <__pow5mult+0xe8>
  812cc8:	8021d0ba 	srai	r16,r16,2
  812ccc:	80001a26 	beq	r16,zero,812d38 <__pow5mult+0xa0>
  812cd0:	9c401217 	ldw	r17,72(r19)
  812cd4:	8800061e 	bne	r17,zero,812cf0 <__pow5mult+0x58>
  812cd8:	00003406 	br	812dac <__pow5mult+0x114>
  812cdc:	8021d07a 	srai	r16,r16,1
  812ce0:	80001526 	beq	r16,zero,812d38 <__pow5mult+0xa0>
  812ce4:	88800017 	ldw	r2,0(r17)
  812ce8:	10001c26 	beq	r2,zero,812d5c <__pow5mult+0xc4>
  812cec:	1023883a 	mov	r17,r2
  812cf0:	80c0004c 	andi	r3,r16,1
  812cf4:	183ff926 	beq	r3,zero,812cdc <__alt_data_end+0xff812cdc>
  812cf8:	900b883a 	mov	r5,r18
  812cfc:	880d883a 	mov	r6,r17
  812d00:	9809883a 	mov	r4,r19
  812d04:	0812a9c0 	call	812a9c <__multiply>
  812d08:	90001b26 	beq	r18,zero,812d78 <__pow5mult+0xe0>
  812d0c:	91c00117 	ldw	r7,4(r18)
  812d10:	98c01317 	ldw	r3,76(r19)
  812d14:	8021d07a 	srai	r16,r16,1
  812d18:	39cf883a 	add	r7,r7,r7
  812d1c:	39cf883a 	add	r7,r7,r7
  812d20:	19c7883a 	add	r3,r3,r7
  812d24:	19000017 	ldw	r4,0(r3)
  812d28:	91000015 	stw	r4,0(r18)
  812d2c:	1c800015 	stw	r18,0(r3)
  812d30:	1025883a 	mov	r18,r2
  812d34:	803feb1e 	bne	r16,zero,812ce4 <__alt_data_end+0xff812ce4>
  812d38:	9005883a 	mov	r2,r18
  812d3c:	dfc00517 	ldw	ra,20(sp)
  812d40:	dd000417 	ldw	r20,16(sp)
  812d44:	dcc00317 	ldw	r19,12(sp)
  812d48:	dc800217 	ldw	r18,8(sp)
  812d4c:	dc400117 	ldw	r17,4(sp)
  812d50:	dc000017 	ldw	r16,0(sp)
  812d54:	dec00604 	addi	sp,sp,24
  812d58:	f800283a 	ret
  812d5c:	9809883a 	mov	r4,r19
  812d60:	880b883a 	mov	r5,r17
  812d64:	880d883a 	mov	r6,r17
  812d68:	0812a9c0 	call	812a9c <__multiply>
  812d6c:	88800015 	stw	r2,0(r17)
  812d70:	10000015 	stw	zero,0(r2)
  812d74:	003fdd06 	br	812cec <__alt_data_end+0xff812cec>
  812d78:	1025883a 	mov	r18,r2
  812d7c:	003fd706 	br	812cdc <__alt_data_end+0xff812cdc>
  812d80:	10bfffc4 	addi	r2,r2,-1
  812d84:	1085883a 	add	r2,r2,r2
  812d88:	00c020b4 	movhi	r3,130
  812d8c:	18f92304 	addi	r3,r3,-7028
  812d90:	1085883a 	add	r2,r2,r2
  812d94:	1885883a 	add	r2,r3,r2
  812d98:	11800017 	ldw	r6,0(r2)
  812d9c:	000f883a 	mov	r7,zero
  812da0:	08127240 	call	812724 <__multadd>
  812da4:	1025883a 	mov	r18,r2
  812da8:	003fc706 	br	812cc8 <__alt_data_end+0xff812cc8>
  812dac:	05000044 	movi	r20,1
  812db0:	9809883a 	mov	r4,r19
  812db4:	a00b883a 	mov	r5,r20
  812db8:	08126540 	call	812654 <_Balloc>
  812dbc:	1023883a 	mov	r17,r2
  812dc0:	00809c44 	movi	r2,625
  812dc4:	88800515 	stw	r2,20(r17)
  812dc8:	8d000415 	stw	r20,16(r17)
  812dcc:	9c401215 	stw	r17,72(r19)
  812dd0:	88000015 	stw	zero,0(r17)
  812dd4:	003fc606 	br	812cf0 <__alt_data_end+0xff812cf0>

00812dd8 <__lshift>:
  812dd8:	defff904 	addi	sp,sp,-28
  812ddc:	dd000415 	stw	r20,16(sp)
  812de0:	dcc00315 	stw	r19,12(sp)
  812de4:	3029d17a 	srai	r20,r6,5
  812de8:	2cc00417 	ldw	r19,16(r5)
  812dec:	28800217 	ldw	r2,8(r5)
  812df0:	dd400515 	stw	r21,20(sp)
  812df4:	a4e7883a 	add	r19,r20,r19
  812df8:	dc800215 	stw	r18,8(sp)
  812dfc:	dc400115 	stw	r17,4(sp)
  812e00:	dc000015 	stw	r16,0(sp)
  812e04:	dfc00615 	stw	ra,24(sp)
  812e08:	9c000044 	addi	r16,r19,1
  812e0c:	2823883a 	mov	r17,r5
  812e10:	302b883a 	mov	r21,r6
  812e14:	2025883a 	mov	r18,r4
  812e18:	29400117 	ldw	r5,4(r5)
  812e1c:	1400030e 	bge	r2,r16,812e2c <__lshift+0x54>
  812e20:	1085883a 	add	r2,r2,r2
  812e24:	29400044 	addi	r5,r5,1
  812e28:	143ffd16 	blt	r2,r16,812e20 <__alt_data_end+0xff812e20>
  812e2c:	9009883a 	mov	r4,r18
  812e30:	08126540 	call	812654 <_Balloc>
  812e34:	11c00504 	addi	r7,r2,20
  812e38:	0500090e 	bge	zero,r20,812e60 <__lshift+0x88>
  812e3c:	3811883a 	mov	r8,r7
  812e40:	0007883a 	mov	r3,zero
  812e44:	40000015 	stw	zero,0(r8)
  812e48:	18c00044 	addi	r3,r3,1
  812e4c:	42000104 	addi	r8,r8,4
  812e50:	1d3ffc1e 	bne	r3,r20,812e44 <__alt_data_end+0xff812e44>
  812e54:	18c7883a 	add	r3,r3,r3
  812e58:	18c7883a 	add	r3,r3,r3
  812e5c:	38cf883a 	add	r7,r7,r3
  812e60:	89000417 	ldw	r4,16(r17)
  812e64:	88c00504 	addi	r3,r17,20
  812e68:	a98007cc 	andi	r6,r21,31
  812e6c:	2109883a 	add	r4,r4,r4
  812e70:	2109883a 	add	r4,r4,r4
  812e74:	1909883a 	add	r4,r3,r4
  812e78:	30002326 	beq	r6,zero,812f08 <__lshift+0x130>
  812e7c:	01400804 	movi	r5,32
  812e80:	298bc83a 	sub	r5,r5,r6
  812e84:	0013883a 	mov	r9,zero
  812e88:	1a000017 	ldw	r8,0(r3)
  812e8c:	3815883a 	mov	r10,r7
  812e90:	39c00104 	addi	r7,r7,4
  812e94:	4190983a 	sll	r8,r8,r6
  812e98:	18c00104 	addi	r3,r3,4
  812e9c:	4a10b03a 	or	r8,r9,r8
  812ea0:	3a3fff15 	stw	r8,-4(r7)
  812ea4:	1a3fff17 	ldw	r8,-4(r3)
  812ea8:	4152d83a 	srl	r9,r8,r5
  812eac:	193ff636 	bltu	r3,r4,812e88 <__alt_data_end+0xff812e88>
  812eb0:	52400115 	stw	r9,4(r10)
  812eb4:	48001a1e 	bne	r9,zero,812f20 <__lshift+0x148>
  812eb8:	843fffc4 	addi	r16,r16,-1
  812ebc:	14000415 	stw	r16,16(r2)
  812ec0:	88000826 	beq	r17,zero,812ee4 <__lshift+0x10c>
  812ec4:	89000117 	ldw	r4,4(r17)
  812ec8:	90c01317 	ldw	r3,76(r18)
  812ecc:	2109883a 	add	r4,r4,r4
  812ed0:	2109883a 	add	r4,r4,r4
  812ed4:	1907883a 	add	r3,r3,r4
  812ed8:	19000017 	ldw	r4,0(r3)
  812edc:	89000015 	stw	r4,0(r17)
  812ee0:	1c400015 	stw	r17,0(r3)
  812ee4:	dfc00617 	ldw	ra,24(sp)
  812ee8:	dd400517 	ldw	r21,20(sp)
  812eec:	dd000417 	ldw	r20,16(sp)
  812ef0:	dcc00317 	ldw	r19,12(sp)
  812ef4:	dc800217 	ldw	r18,8(sp)
  812ef8:	dc400117 	ldw	r17,4(sp)
  812efc:	dc000017 	ldw	r16,0(sp)
  812f00:	dec00704 	addi	sp,sp,28
  812f04:	f800283a 	ret
  812f08:	19400017 	ldw	r5,0(r3)
  812f0c:	39c00104 	addi	r7,r7,4
  812f10:	18c00104 	addi	r3,r3,4
  812f14:	397fff15 	stw	r5,-4(r7)
  812f18:	193ffb36 	bltu	r3,r4,812f08 <__alt_data_end+0xff812f08>
  812f1c:	003fe606 	br	812eb8 <__alt_data_end+0xff812eb8>
  812f20:	9c000084 	addi	r16,r19,2
  812f24:	003fe406 	br	812eb8 <__alt_data_end+0xff812eb8>

00812f28 <__mcmp>:
  812f28:	20800417 	ldw	r2,16(r4)
  812f2c:	28c00417 	ldw	r3,16(r5)
  812f30:	10c5c83a 	sub	r2,r2,r3
  812f34:	1000111e 	bne	r2,zero,812f7c <__mcmp+0x54>
  812f38:	18c7883a 	add	r3,r3,r3
  812f3c:	18c7883a 	add	r3,r3,r3
  812f40:	21000504 	addi	r4,r4,20
  812f44:	29400504 	addi	r5,r5,20
  812f48:	20c5883a 	add	r2,r4,r3
  812f4c:	28cb883a 	add	r5,r5,r3
  812f50:	00000106 	br	812f58 <__mcmp+0x30>
  812f54:	20800a2e 	bgeu	r4,r2,812f80 <__mcmp+0x58>
  812f58:	10bfff04 	addi	r2,r2,-4
  812f5c:	297fff04 	addi	r5,r5,-4
  812f60:	11800017 	ldw	r6,0(r2)
  812f64:	28c00017 	ldw	r3,0(r5)
  812f68:	30fffa26 	beq	r6,r3,812f54 <__alt_data_end+0xff812f54>
  812f6c:	30c00236 	bltu	r6,r3,812f78 <__mcmp+0x50>
  812f70:	00800044 	movi	r2,1
  812f74:	f800283a 	ret
  812f78:	00bfffc4 	movi	r2,-1
  812f7c:	f800283a 	ret
  812f80:	0005883a 	mov	r2,zero
  812f84:	f800283a 	ret

00812f88 <__mdiff>:
  812f88:	defffb04 	addi	sp,sp,-20
  812f8c:	dc000015 	stw	r16,0(sp)
  812f90:	2821883a 	mov	r16,r5
  812f94:	dcc00315 	stw	r19,12(sp)
  812f98:	300b883a 	mov	r5,r6
  812f9c:	2027883a 	mov	r19,r4
  812fa0:	8009883a 	mov	r4,r16
  812fa4:	dc800215 	stw	r18,8(sp)
  812fa8:	dfc00415 	stw	ra,16(sp)
  812fac:	dc400115 	stw	r17,4(sp)
  812fb0:	3025883a 	mov	r18,r6
  812fb4:	0812f280 	call	812f28 <__mcmp>
  812fb8:	10005226 	beq	r2,zero,813104 <__mdiff+0x17c>
  812fbc:	10004c16 	blt	r2,zero,8130f0 <__mdiff+0x168>
  812fc0:	0023883a 	mov	r17,zero
  812fc4:	81400117 	ldw	r5,4(r16)
  812fc8:	9809883a 	mov	r4,r19
  812fcc:	08126540 	call	812654 <_Balloc>
  812fd0:	83400417 	ldw	r13,16(r16)
  812fd4:	93800417 	ldw	r14,16(r18)
  812fd8:	81000504 	addi	r4,r16,20
  812fdc:	6b59883a 	add	r12,r13,r13
  812fe0:	739d883a 	add	r14,r14,r14
  812fe4:	6319883a 	add	r12,r12,r12
  812fe8:	91800504 	addi	r6,r18,20
  812fec:	739d883a 	add	r14,r14,r14
  812ff0:	14400315 	stw	r17,12(r2)
  812ff4:	2319883a 	add	r12,r4,r12
  812ff8:	339d883a 	add	r14,r6,r14
  812ffc:	12400504 	addi	r9,r2,20
  813000:	0007883a 	mov	r3,zero
  813004:	22000017 	ldw	r8,0(r4)
  813008:	32800017 	ldw	r10,0(r6)
  81300c:	4ac00104 	addi	r11,r9,4
  813010:	41ffffcc 	andi	r7,r8,65535
  813014:	38c7883a 	add	r3,r7,r3
  813018:	51ffffcc 	andi	r7,r10,65535
  81301c:	19cfc83a 	sub	r7,r3,r7
  813020:	4010d43a 	srli	r8,r8,16
  813024:	5014d43a 	srli	r10,r10,16
  813028:	3807d43a 	srai	r3,r7,16
  81302c:	39ffffcc 	andi	r7,r7,65535
  813030:	4291c83a 	sub	r8,r8,r10
  813034:	40c7883a 	add	r3,r8,r3
  813038:	1810943a 	slli	r8,r3,16
  81303c:	31800104 	addi	r6,r6,4
  813040:	21000104 	addi	r4,r4,4
  813044:	41ceb03a 	or	r7,r8,r7
  813048:	49c00015 	stw	r7,0(r9)
  81304c:	1807d43a 	srai	r3,r3,16
  813050:	580b883a 	mov	r5,r11
  813054:	5813883a 	mov	r9,r11
  813058:	33bfea36 	bltu	r6,r14,813004 <__alt_data_end+0xff813004>
  81305c:	2011883a 	mov	r8,r4
  813060:	2300152e 	bgeu	r4,r12,8130b8 <__mdiff+0x130>
  813064:	21400017 	ldw	r5,0(r4)
  813068:	4a400104 	addi	r9,r9,4
  81306c:	21000104 	addi	r4,r4,4
  813070:	29ffffcc 	andi	r7,r5,65535
  813074:	38c7883a 	add	r3,r7,r3
  813078:	280ad43a 	srli	r5,r5,16
  81307c:	180dd43a 	srai	r6,r3,16
  813080:	19ffffcc 	andi	r7,r3,65535
  813084:	3147883a 	add	r3,r6,r5
  813088:	180a943a 	slli	r5,r3,16
  81308c:	1807d43a 	srai	r3,r3,16
  813090:	29ceb03a 	or	r7,r5,r7
  813094:	49ffff15 	stw	r7,-4(r9)
  813098:	233ff236 	bltu	r4,r12,813064 <__alt_data_end+0xff813064>
  81309c:	0206303a 	nor	r3,zero,r8
  8130a0:	1b07883a 	add	r3,r3,r12
  8130a4:	1806d0ba 	srli	r3,r3,2
  8130a8:	18c00044 	addi	r3,r3,1
  8130ac:	18c7883a 	add	r3,r3,r3
  8130b0:	18c7883a 	add	r3,r3,r3
  8130b4:	58cb883a 	add	r5,r11,r3
  8130b8:	28ffff04 	addi	r3,r5,-4
  8130bc:	3800041e 	bne	r7,zero,8130d0 <__mdiff+0x148>
  8130c0:	18ffff04 	addi	r3,r3,-4
  8130c4:	19000017 	ldw	r4,0(r3)
  8130c8:	6b7fffc4 	addi	r13,r13,-1
  8130cc:	203ffc26 	beq	r4,zero,8130c0 <__alt_data_end+0xff8130c0>
  8130d0:	13400415 	stw	r13,16(r2)
  8130d4:	dfc00417 	ldw	ra,16(sp)
  8130d8:	dcc00317 	ldw	r19,12(sp)
  8130dc:	dc800217 	ldw	r18,8(sp)
  8130e0:	dc400117 	ldw	r17,4(sp)
  8130e4:	dc000017 	ldw	r16,0(sp)
  8130e8:	dec00504 	addi	sp,sp,20
  8130ec:	f800283a 	ret
  8130f0:	8005883a 	mov	r2,r16
  8130f4:	04400044 	movi	r17,1
  8130f8:	9021883a 	mov	r16,r18
  8130fc:	1025883a 	mov	r18,r2
  813100:	003fb006 	br	812fc4 <__alt_data_end+0xff812fc4>
  813104:	9809883a 	mov	r4,r19
  813108:	000b883a 	mov	r5,zero
  81310c:	08126540 	call	812654 <_Balloc>
  813110:	00c00044 	movi	r3,1
  813114:	10c00415 	stw	r3,16(r2)
  813118:	10000515 	stw	zero,20(r2)
  81311c:	003fed06 	br	8130d4 <__alt_data_end+0xff8130d4>

00813120 <__ulp>:
  813120:	295ffc2c 	andhi	r5,r5,32752
  813124:	00bf3034 	movhi	r2,64704
  813128:	2887883a 	add	r3,r5,r2
  81312c:	00c0020e 	bge	zero,r3,813138 <__ulp+0x18>
  813130:	0005883a 	mov	r2,zero
  813134:	f800283a 	ret
  813138:	00c7c83a 	sub	r3,zero,r3
  81313c:	180bd53a 	srai	r5,r3,20
  813140:	008004c4 	movi	r2,19
  813144:	11400a0e 	bge	r2,r5,813170 <__ulp+0x50>
  813148:	00800c84 	movi	r2,50
  81314c:	0007883a 	mov	r3,zero
  813150:	11400516 	blt	r2,r5,813168 <__ulp+0x48>
  813154:	00800cc4 	movi	r2,51
  813158:	114bc83a 	sub	r5,r2,r5
  81315c:	00800044 	movi	r2,1
  813160:	1144983a 	sll	r2,r2,r5
  813164:	f800283a 	ret
  813168:	00800044 	movi	r2,1
  81316c:	f800283a 	ret
  813170:	00800234 	movhi	r2,8
  813174:	1147d83a 	sra	r3,r2,r5
  813178:	0005883a 	mov	r2,zero
  81317c:	f800283a 	ret

00813180 <__b2d>:
  813180:	defffa04 	addi	sp,sp,-24
  813184:	dc000015 	stw	r16,0(sp)
  813188:	24000417 	ldw	r16,16(r4)
  81318c:	dc400115 	stw	r17,4(sp)
  813190:	24400504 	addi	r17,r4,20
  813194:	8421883a 	add	r16,r16,r16
  813198:	8421883a 	add	r16,r16,r16
  81319c:	8c21883a 	add	r16,r17,r16
  8131a0:	dc800215 	stw	r18,8(sp)
  8131a4:	84bfff17 	ldw	r18,-4(r16)
  8131a8:	dd000415 	stw	r20,16(sp)
  8131ac:	dcc00315 	stw	r19,12(sp)
  8131b0:	9009883a 	mov	r4,r18
  8131b4:	2829883a 	mov	r20,r5
  8131b8:	dfc00515 	stw	ra,20(sp)
  8131bc:	08129480 	call	812948 <__hi0bits>
  8131c0:	00c00804 	movi	r3,32
  8131c4:	1887c83a 	sub	r3,r3,r2
  8131c8:	a0c00015 	stw	r3,0(r20)
  8131cc:	00c00284 	movi	r3,10
  8131d0:	84ffff04 	addi	r19,r16,-4
  8131d4:	18801216 	blt	r3,r2,813220 <__b2d+0xa0>
  8131d8:	014002c4 	movi	r5,11
  8131dc:	2889c83a 	sub	r4,r5,r2
  8131e0:	9106d83a 	srl	r3,r18,r4
  8131e4:	18cffc34 	orhi	r3,r3,16368
  8131e8:	8cc0282e 	bgeu	r17,r19,81328c <__b2d+0x10c>
  8131ec:	817ffe17 	ldw	r5,-8(r16)
  8131f0:	290ad83a 	srl	r5,r5,r4
  8131f4:	10800544 	addi	r2,r2,21
  8131f8:	9084983a 	sll	r2,r18,r2
  8131fc:	2884b03a 	or	r2,r5,r2
  813200:	dfc00517 	ldw	ra,20(sp)
  813204:	dd000417 	ldw	r20,16(sp)
  813208:	dcc00317 	ldw	r19,12(sp)
  81320c:	dc800217 	ldw	r18,8(sp)
  813210:	dc400117 	ldw	r17,4(sp)
  813214:	dc000017 	ldw	r16,0(sp)
  813218:	dec00604 	addi	sp,sp,24
  81321c:	f800283a 	ret
  813220:	113ffd44 	addi	r4,r2,-11
  813224:	8cc00f2e 	bgeu	r17,r19,813264 <__b2d+0xe4>
  813228:	81bffe04 	addi	r6,r16,-8
  81322c:	817ffe17 	ldw	r5,-8(r16)
  813230:	20001326 	beq	r4,zero,813280 <__b2d+0x100>
  813234:	00c00ac4 	movi	r3,43
  813238:	1885c83a 	sub	r2,r3,r2
  81323c:	2886d83a 	srl	r3,r5,r2
  813240:	9124983a 	sll	r18,r18,r4
  813244:	90e4b03a 	or	r18,r18,r3
  813248:	90cffc34 	orhi	r3,r18,16368
  81324c:	8980112e 	bgeu	r17,r6,813294 <__b2d+0x114>
  813250:	81bffd17 	ldw	r6,-12(r16)
  813254:	308cd83a 	srl	r6,r6,r2
  813258:	2904983a 	sll	r2,r5,r4
  81325c:	1184b03a 	or	r2,r2,r6
  813260:	003fe706 	br	813200 <__alt_data_end+0xff813200>
  813264:	20000526 	beq	r4,zero,81327c <__b2d+0xfc>
  813268:	9124983a 	sll	r18,r18,r4
  81326c:	000d883a 	mov	r6,zero
  813270:	000b883a 	mov	r5,zero
  813274:	90cffc34 	orhi	r3,r18,16368
  813278:	003ff706 	br	813258 <__alt_data_end+0xff813258>
  81327c:	000b883a 	mov	r5,zero
  813280:	90cffc34 	orhi	r3,r18,16368
  813284:	2805883a 	mov	r2,r5
  813288:	003fdd06 	br	813200 <__alt_data_end+0xff813200>
  81328c:	000b883a 	mov	r5,zero
  813290:	003fd806 	br	8131f4 <__alt_data_end+0xff8131f4>
  813294:	000d883a 	mov	r6,zero
  813298:	003fef06 	br	813258 <__alt_data_end+0xff813258>

0081329c <__d2b>:
  81329c:	defff704 	addi	sp,sp,-36
  8132a0:	dc000215 	stw	r16,8(sp)
  8132a4:	3021883a 	mov	r16,r6
  8132a8:	dc400315 	stw	r17,12(sp)
  8132ac:	8022907a 	slli	r17,r16,1
  8132b0:	dd400715 	stw	r21,28(sp)
  8132b4:	282b883a 	mov	r21,r5
  8132b8:	01400044 	movi	r5,1
  8132bc:	dd000615 	stw	r20,24(sp)
  8132c0:	dcc00515 	stw	r19,20(sp)
  8132c4:	dc800415 	stw	r18,16(sp)
  8132c8:	dfc00815 	stw	ra,32(sp)
  8132cc:	3829883a 	mov	r20,r7
  8132d0:	dc800917 	ldw	r18,36(sp)
  8132d4:	8822d57a 	srli	r17,r17,21
  8132d8:	08126540 	call	812654 <_Balloc>
  8132dc:	1027883a 	mov	r19,r2
  8132e0:	00800434 	movhi	r2,16
  8132e4:	10bfffc4 	addi	r2,r2,-1
  8132e8:	808c703a 	and	r6,r16,r2
  8132ec:	88000126 	beq	r17,zero,8132f4 <__d2b+0x58>
  8132f0:	31800434 	orhi	r6,r6,16
  8132f4:	d9800015 	stw	r6,0(sp)
  8132f8:	a8001f26 	beq	r21,zero,813378 <__d2b+0xdc>
  8132fc:	d9000104 	addi	r4,sp,4
  813300:	dd400115 	stw	r21,4(sp)
  813304:	08129b00 	call	8129b0 <__lo0bits>
  813308:	d8c00017 	ldw	r3,0(sp)
  81330c:	1000291e 	bne	r2,zero,8133b4 <__d2b+0x118>
  813310:	d9000117 	ldw	r4,4(sp)
  813314:	99000515 	stw	r4,20(r19)
  813318:	1820c03a 	cmpne	r16,r3,zero
  81331c:	84000044 	addi	r16,r16,1
  813320:	98c00615 	stw	r3,24(r19)
  813324:	9c000415 	stw	r16,16(r19)
  813328:	88001b1e 	bne	r17,zero,813398 <__d2b+0xfc>
  81332c:	800690ba 	slli	r3,r16,2
  813330:	10bef384 	addi	r2,r2,-1074
  813334:	a0800015 	stw	r2,0(r20)
  813338:	98c5883a 	add	r2,r19,r3
  81333c:	11000417 	ldw	r4,16(r2)
  813340:	8020917a 	slli	r16,r16,5
  813344:	08129480 	call	812948 <__hi0bits>
  813348:	8085c83a 	sub	r2,r16,r2
  81334c:	90800015 	stw	r2,0(r18)
  813350:	9805883a 	mov	r2,r19
  813354:	dfc00817 	ldw	ra,32(sp)
  813358:	dd400717 	ldw	r21,28(sp)
  81335c:	dd000617 	ldw	r20,24(sp)
  813360:	dcc00517 	ldw	r19,20(sp)
  813364:	dc800417 	ldw	r18,16(sp)
  813368:	dc400317 	ldw	r17,12(sp)
  81336c:	dc000217 	ldw	r16,8(sp)
  813370:	dec00904 	addi	sp,sp,36
  813374:	f800283a 	ret
  813378:	d809883a 	mov	r4,sp
  81337c:	08129b00 	call	8129b0 <__lo0bits>
  813380:	d8c00017 	ldw	r3,0(sp)
  813384:	04000044 	movi	r16,1
  813388:	9c000415 	stw	r16,16(r19)
  81338c:	98c00515 	stw	r3,20(r19)
  813390:	10800804 	addi	r2,r2,32
  813394:	883fe526 	beq	r17,zero,81332c <__alt_data_end+0xff81332c>
  813398:	8c7ef344 	addi	r17,r17,-1075
  81339c:	88a3883a 	add	r17,r17,r2
  8133a0:	00c00d44 	movi	r3,53
  8133a4:	a4400015 	stw	r17,0(r20)
  8133a8:	1885c83a 	sub	r2,r3,r2
  8133ac:	90800015 	stw	r2,0(r18)
  8133b0:	003fe706 	br	813350 <__alt_data_end+0xff813350>
  8133b4:	01000804 	movi	r4,32
  8133b8:	2089c83a 	sub	r4,r4,r2
  8133bc:	1908983a 	sll	r4,r3,r4
  8133c0:	d9400117 	ldw	r5,4(sp)
  8133c4:	1886d83a 	srl	r3,r3,r2
  8133c8:	2148b03a 	or	r4,r4,r5
  8133cc:	99000515 	stw	r4,20(r19)
  8133d0:	d8c00015 	stw	r3,0(sp)
  8133d4:	003fd006 	br	813318 <__alt_data_end+0xff813318>

008133d8 <__ratio>:
  8133d8:	defff904 	addi	sp,sp,-28
  8133dc:	dc400315 	stw	r17,12(sp)
  8133e0:	2823883a 	mov	r17,r5
  8133e4:	d9400104 	addi	r5,sp,4
  8133e8:	dfc00615 	stw	ra,24(sp)
  8133ec:	dcc00515 	stw	r19,20(sp)
  8133f0:	dc800415 	stw	r18,16(sp)
  8133f4:	2027883a 	mov	r19,r4
  8133f8:	dc000215 	stw	r16,8(sp)
  8133fc:	08131800 	call	813180 <__b2d>
  813400:	8809883a 	mov	r4,r17
  813404:	d80b883a 	mov	r5,sp
  813408:	1025883a 	mov	r18,r2
  81340c:	1821883a 	mov	r16,r3
  813410:	08131800 	call	813180 <__b2d>
  813414:	8a400417 	ldw	r9,16(r17)
  813418:	9a000417 	ldw	r8,16(r19)
  81341c:	100d883a 	mov	r6,r2
  813420:	d8800017 	ldw	r2,0(sp)
  813424:	4251c83a 	sub	r8,r8,r9
  813428:	4012917a 	slli	r9,r8,5
  81342c:	da000117 	ldw	r8,4(sp)
  813430:	4091c83a 	sub	r8,r8,r2
  813434:	4251883a 	add	r8,r8,r9
  813438:	02000d0e 	bge	zero,r8,813470 <__ratio+0x98>
  81343c:	4010953a 	slli	r8,r8,20
  813440:	4421883a 	add	r16,r8,r16
  813444:	9009883a 	mov	r4,r18
  813448:	800b883a 	mov	r5,r16
  81344c:	180f883a 	mov	r7,r3
  813450:	0817ed00 	call	817ed0 <__divdf3>
  813454:	dfc00617 	ldw	ra,24(sp)
  813458:	dcc00517 	ldw	r19,20(sp)
  81345c:	dc800417 	ldw	r18,16(sp)
  813460:	dc400317 	ldw	r17,12(sp)
  813464:	dc000217 	ldw	r16,8(sp)
  813468:	dec00704 	addi	sp,sp,28
  81346c:	f800283a 	ret
  813470:	4010953a 	slli	r8,r8,20
  813474:	1a07c83a 	sub	r3,r3,r8
  813478:	003ff206 	br	813444 <__alt_data_end+0xff813444>

0081347c <_mprec_log10>:
  81347c:	defffe04 	addi	sp,sp,-8
  813480:	dc000015 	stw	r16,0(sp)
  813484:	dfc00115 	stw	ra,4(sp)
  813488:	008005c4 	movi	r2,23
  81348c:	2021883a 	mov	r16,r4
  813490:	11000d0e 	bge	r2,r4,8134c8 <_mprec_log10+0x4c>
  813494:	0005883a 	mov	r2,zero
  813498:	00cffc34 	movhi	r3,16368
  81349c:	843fffc4 	addi	r16,r16,-1
  8134a0:	1009883a 	mov	r4,r2
  8134a4:	180b883a 	mov	r5,r3
  8134a8:	000d883a 	mov	r6,zero
  8134ac:	01d00934 	movhi	r7,16420
  8134b0:	08189e00 	call	8189e0 <__muldf3>
  8134b4:	803ff91e 	bne	r16,zero,81349c <__alt_data_end+0xff81349c>
  8134b8:	dfc00117 	ldw	ra,4(sp)
  8134bc:	dc000017 	ldw	r16,0(sp)
  8134c0:	dec00204 	addi	sp,sp,8
  8134c4:	f800283a 	ret
  8134c8:	202090fa 	slli	r16,r4,3
  8134cc:	008020b4 	movhi	r2,130
  8134d0:	10b93a04 	addi	r2,r2,-6936
  8134d4:	1421883a 	add	r16,r2,r16
  8134d8:	80800017 	ldw	r2,0(r16)
  8134dc:	80c00117 	ldw	r3,4(r16)
  8134e0:	dfc00117 	ldw	ra,4(sp)
  8134e4:	dc000017 	ldw	r16,0(sp)
  8134e8:	dec00204 	addi	sp,sp,8
  8134ec:	f800283a 	ret

008134f0 <__copybits>:
  8134f0:	297fffc4 	addi	r5,r5,-1
  8134f4:	280fd17a 	srai	r7,r5,5
  8134f8:	30c00417 	ldw	r3,16(r6)
  8134fc:	30800504 	addi	r2,r6,20
  813500:	39c00044 	addi	r7,r7,1
  813504:	18c7883a 	add	r3,r3,r3
  813508:	39cf883a 	add	r7,r7,r7
  81350c:	18c7883a 	add	r3,r3,r3
  813510:	39cf883a 	add	r7,r7,r7
  813514:	10c7883a 	add	r3,r2,r3
  813518:	21cf883a 	add	r7,r4,r7
  81351c:	10c00d2e 	bgeu	r2,r3,813554 <__copybits+0x64>
  813520:	200b883a 	mov	r5,r4
  813524:	12000017 	ldw	r8,0(r2)
  813528:	29400104 	addi	r5,r5,4
  81352c:	10800104 	addi	r2,r2,4
  813530:	2a3fff15 	stw	r8,-4(r5)
  813534:	10fffb36 	bltu	r2,r3,813524 <__alt_data_end+0xff813524>
  813538:	1985c83a 	sub	r2,r3,r6
  81353c:	10bffac4 	addi	r2,r2,-21
  813540:	1004d0ba 	srli	r2,r2,2
  813544:	10800044 	addi	r2,r2,1
  813548:	1085883a 	add	r2,r2,r2
  81354c:	1085883a 	add	r2,r2,r2
  813550:	2089883a 	add	r4,r4,r2
  813554:	21c0032e 	bgeu	r4,r7,813564 <__copybits+0x74>
  813558:	20000015 	stw	zero,0(r4)
  81355c:	21000104 	addi	r4,r4,4
  813560:	21fffd36 	bltu	r4,r7,813558 <__alt_data_end+0xff813558>
  813564:	f800283a 	ret

00813568 <__any_on>:
  813568:	20c00417 	ldw	r3,16(r4)
  81356c:	2805d17a 	srai	r2,r5,5
  813570:	21000504 	addi	r4,r4,20
  813574:	18800d0e 	bge	r3,r2,8135ac <__any_on+0x44>
  813578:	18c7883a 	add	r3,r3,r3
  81357c:	18c7883a 	add	r3,r3,r3
  813580:	20c7883a 	add	r3,r4,r3
  813584:	20c0192e 	bgeu	r4,r3,8135ec <__any_on+0x84>
  813588:	18bfff17 	ldw	r2,-4(r3)
  81358c:	18ffff04 	addi	r3,r3,-4
  813590:	1000041e 	bne	r2,zero,8135a4 <__any_on+0x3c>
  813594:	20c0142e 	bgeu	r4,r3,8135e8 <__any_on+0x80>
  813598:	18ffff04 	addi	r3,r3,-4
  81359c:	19400017 	ldw	r5,0(r3)
  8135a0:	283ffc26 	beq	r5,zero,813594 <__alt_data_end+0xff813594>
  8135a4:	00800044 	movi	r2,1
  8135a8:	f800283a 	ret
  8135ac:	10c00a0e 	bge	r2,r3,8135d8 <__any_on+0x70>
  8135b0:	1085883a 	add	r2,r2,r2
  8135b4:	1085883a 	add	r2,r2,r2
  8135b8:	294007cc 	andi	r5,r5,31
  8135bc:	2087883a 	add	r3,r4,r2
  8135c0:	283ff026 	beq	r5,zero,813584 <__alt_data_end+0xff813584>
  8135c4:	19800017 	ldw	r6,0(r3)
  8135c8:	3144d83a 	srl	r2,r6,r5
  8135cc:	114a983a 	sll	r5,r2,r5
  8135d0:	29bff41e 	bne	r5,r6,8135a4 <__alt_data_end+0xff8135a4>
  8135d4:	003feb06 	br	813584 <__alt_data_end+0xff813584>
  8135d8:	1085883a 	add	r2,r2,r2
  8135dc:	1085883a 	add	r2,r2,r2
  8135e0:	2087883a 	add	r3,r4,r2
  8135e4:	003fe706 	br	813584 <__alt_data_end+0xff813584>
  8135e8:	f800283a 	ret
  8135ec:	0005883a 	mov	r2,zero
  8135f0:	f800283a 	ret

008135f4 <_putc_r>:
  8135f4:	defffc04 	addi	sp,sp,-16
  8135f8:	dc000215 	stw	r16,8(sp)
  8135fc:	dfc00315 	stw	ra,12(sp)
  813600:	2021883a 	mov	r16,r4
  813604:	20000226 	beq	r4,zero,813610 <_putc_r+0x1c>
  813608:	20800e17 	ldw	r2,56(r4)
  81360c:	10001b26 	beq	r2,zero,81367c <_putc_r+0x88>
  813610:	30800217 	ldw	r2,8(r6)
  813614:	10bfffc4 	addi	r2,r2,-1
  813618:	30800215 	stw	r2,8(r6)
  81361c:	10000a16 	blt	r2,zero,813648 <_putc_r+0x54>
  813620:	30800017 	ldw	r2,0(r6)
  813624:	11400005 	stb	r5,0(r2)
  813628:	30800017 	ldw	r2,0(r6)
  81362c:	10c00044 	addi	r3,r2,1
  813630:	30c00015 	stw	r3,0(r6)
  813634:	10800003 	ldbu	r2,0(r2)
  813638:	dfc00317 	ldw	ra,12(sp)
  81363c:	dc000217 	ldw	r16,8(sp)
  813640:	dec00404 	addi	sp,sp,16
  813644:	f800283a 	ret
  813648:	30c00617 	ldw	r3,24(r6)
  81364c:	10c00616 	blt	r2,r3,813668 <_putc_r+0x74>
  813650:	30800017 	ldw	r2,0(r6)
  813654:	00c00284 	movi	r3,10
  813658:	11400005 	stb	r5,0(r2)
  81365c:	30800017 	ldw	r2,0(r6)
  813660:	11400003 	ldbu	r5,0(r2)
  813664:	28fff11e 	bne	r5,r3,81362c <__alt_data_end+0xff81362c>
  813668:	8009883a 	mov	r4,r16
  81366c:	dfc00317 	ldw	ra,12(sp)
  813670:	dc000217 	ldw	r16,8(sp)
  813674:	dec00404 	addi	sp,sp,16
  813678:	08165041 	jmpi	816504 <__swbuf_r>
  81367c:	d9400015 	stw	r5,0(sp)
  813680:	d9800115 	stw	r6,4(sp)
  813684:	080a1b40 	call	80a1b4 <__sinit>
  813688:	d9800117 	ldw	r6,4(sp)
  81368c:	d9400017 	ldw	r5,0(sp)
  813690:	003fdf06 	br	813610 <__alt_data_end+0xff813610>

00813694 <putc>:
  813694:	008020b4 	movhi	r2,130
  813698:	defffc04 	addi	sp,sp,-16
  81369c:	10bdb104 	addi	r2,r2,-2364
  8136a0:	dc400115 	stw	r17,4(sp)
  8136a4:	14400017 	ldw	r17,0(r2)
  8136a8:	dc800215 	stw	r18,8(sp)
  8136ac:	dc000015 	stw	r16,0(sp)
  8136b0:	dfc00315 	stw	ra,12(sp)
  8136b4:	2025883a 	mov	r18,r4
  8136b8:	2821883a 	mov	r16,r5
  8136bc:	88000226 	beq	r17,zero,8136c8 <putc+0x34>
  8136c0:	88800e17 	ldw	r2,56(r17)
  8136c4:	10001a26 	beq	r2,zero,813730 <putc+0x9c>
  8136c8:	80800217 	ldw	r2,8(r16)
  8136cc:	10bfffc4 	addi	r2,r2,-1
  8136d0:	80800215 	stw	r2,8(r16)
  8136d4:	10000c16 	blt	r2,zero,813708 <putc+0x74>
  8136d8:	80800017 	ldw	r2,0(r16)
  8136dc:	14800005 	stb	r18,0(r2)
  8136e0:	80800017 	ldw	r2,0(r16)
  8136e4:	10c00044 	addi	r3,r2,1
  8136e8:	80c00015 	stw	r3,0(r16)
  8136ec:	10800003 	ldbu	r2,0(r2)
  8136f0:	dfc00317 	ldw	ra,12(sp)
  8136f4:	dc800217 	ldw	r18,8(sp)
  8136f8:	dc400117 	ldw	r17,4(sp)
  8136fc:	dc000017 	ldw	r16,0(sp)
  813700:	dec00404 	addi	sp,sp,16
  813704:	f800283a 	ret
  813708:	80c00617 	ldw	r3,24(r16)
  81370c:	10c00b16 	blt	r2,r3,81373c <putc+0xa8>
  813710:	80800017 	ldw	r2,0(r16)
  813714:	00c00284 	movi	r3,10
  813718:	14800005 	stb	r18,0(r2)
  81371c:	80800017 	ldw	r2,0(r16)
  813720:	11400003 	ldbu	r5,0(r2)
  813724:	28ffef1e 	bne	r5,r3,8136e4 <__alt_data_end+0xff8136e4>
  813728:	8809883a 	mov	r4,r17
  81372c:	00000506 	br	813744 <putc+0xb0>
  813730:	8809883a 	mov	r4,r17
  813734:	080a1b40 	call	80a1b4 <__sinit>
  813738:	003fe306 	br	8136c8 <__alt_data_end+0xff8136c8>
  81373c:	8809883a 	mov	r4,r17
  813740:	900b883a 	mov	r5,r18
  813744:	800d883a 	mov	r6,r16
  813748:	dfc00317 	ldw	ra,12(sp)
  81374c:	dc800217 	ldw	r18,8(sp)
  813750:	dc400117 	ldw	r17,4(sp)
  813754:	dc000017 	ldw	r16,0(sp)
  813758:	dec00404 	addi	sp,sp,16
  81375c:	08165041 	jmpi	816504 <__swbuf_r>

00813760 <_read_r>:
  813760:	defffd04 	addi	sp,sp,-12
  813764:	dc000015 	stw	r16,0(sp)
  813768:	040020b4 	movhi	r16,130
  81376c:	dc400115 	stw	r17,4(sp)
  813770:	84011e04 	addi	r16,r16,1144
  813774:	2023883a 	mov	r17,r4
  813778:	2809883a 	mov	r4,r5
  81377c:	300b883a 	mov	r5,r6
  813780:	380d883a 	mov	r6,r7
  813784:	dfc00215 	stw	ra,8(sp)
  813788:	80000015 	stw	zero,0(r16)
  81378c:	081aa540 	call	81aa54 <read>
  813790:	00ffffc4 	movi	r3,-1
  813794:	10c00526 	beq	r2,r3,8137ac <_read_r+0x4c>
  813798:	dfc00217 	ldw	ra,8(sp)
  81379c:	dc400117 	ldw	r17,4(sp)
  8137a0:	dc000017 	ldw	r16,0(sp)
  8137a4:	dec00304 	addi	sp,sp,12
  8137a8:	f800283a 	ret
  8137ac:	80c00017 	ldw	r3,0(r16)
  8137b0:	183ff926 	beq	r3,zero,813798 <__alt_data_end+0xff813798>
  8137b4:	88c00015 	stw	r3,0(r17)
  8137b8:	003ff706 	br	813798 <__alt_data_end+0xff813798>

008137bc <_realloc_r>:
  8137bc:	defff604 	addi	sp,sp,-40
  8137c0:	dd000415 	stw	r20,16(sp)
  8137c4:	dc400115 	stw	r17,4(sp)
  8137c8:	dfc00915 	stw	ra,36(sp)
  8137cc:	df000815 	stw	fp,32(sp)
  8137d0:	ddc00715 	stw	r23,28(sp)
  8137d4:	dd800615 	stw	r22,24(sp)
  8137d8:	dd400515 	stw	r21,20(sp)
  8137dc:	dcc00315 	stw	r19,12(sp)
  8137e0:	dc800215 	stw	r18,8(sp)
  8137e4:	dc000015 	stw	r16,0(sp)
  8137e8:	2829883a 	mov	r20,r5
  8137ec:	3023883a 	mov	r17,r6
  8137f0:	2800ad26 	beq	r5,zero,813aa8 <_realloc_r+0x2ec>
  8137f4:	2025883a 	mov	r18,r4
  8137f8:	081a4e40 	call	81a4e4 <__malloc_lock>
  8137fc:	a0ffff17 	ldw	r3,-4(r20)
  813800:	043fff04 	movi	r16,-4
  813804:	890002c4 	addi	r4,r17,11
  813808:	01c00584 	movi	r7,22
  81380c:	a57ffe04 	addi	r21,r20,-8
  813810:	1c20703a 	and	r16,r3,r16
  813814:	39001d2e 	bgeu	r7,r4,81388c <_realloc_r+0xd0>
  813818:	05bffe04 	movi	r22,-8
  81381c:	25ac703a 	and	r22,r4,r22
  813820:	b00f883a 	mov	r7,r22
  813824:	b0006516 	blt	r22,zero,8139bc <_realloc_r+0x200>
  813828:	b4406436 	bltu	r22,r17,8139bc <_realloc_r+0x200>
  81382c:	81c01a0e 	bge	r16,r7,813898 <_realloc_r+0xdc>
  813830:	070020b4 	movhi	fp,130
  813834:	e73b8404 	addi	fp,fp,-4592
  813838:	e1400217 	ldw	r5,8(fp)
  81383c:	ac11883a 	add	r8,r21,r16
  813840:	2a006226 	beq	r5,r8,8139cc <_realloc_r+0x210>
  813844:	41800117 	ldw	r6,4(r8)
  813848:	027fff84 	movi	r9,-2
  81384c:	3252703a 	and	r9,r6,r9
  813850:	4253883a 	add	r9,r8,r9
  813854:	49000117 	ldw	r4,4(r9)
  813858:	2100004c 	andi	r4,r4,1
  81385c:	2000281e 	bne	r4,zero,813900 <_realloc_r+0x144>
  813860:	00bfff04 	movi	r2,-4
  813864:	3084703a 	and	r2,r6,r2
  813868:	1409883a 	add	r4,r2,r16
  81386c:	21c05e16 	blt	r4,r7,8139e8 <_realloc_r+0x22c>
  813870:	40800317 	ldw	r2,12(r8)
  813874:	41400217 	ldw	r5,8(r8)
  813878:	a023883a 	mov	r17,r20
  81387c:	2021883a 	mov	r16,r4
  813880:	28800315 	stw	r2,12(r5)
  813884:	11400215 	stw	r5,8(r2)
  813888:	00000406 	br	81389c <_realloc_r+0xe0>
  81388c:	01c00404 	movi	r7,16
  813890:	382d883a 	mov	r22,r7
  813894:	003fe406 	br	813828 <__alt_data_end+0xff813828>
  813898:	a023883a 	mov	r17,r20
  81389c:	858fc83a 	sub	r7,r16,r22
  8138a0:	008003c4 	movi	r2,15
  8138a4:	18c0004c 	andi	r3,r3,1
  8138a8:	11c07236 	bltu	r2,r7,813a74 <_realloc_r+0x2b8>
  8138ac:	1c06b03a 	or	r3,r3,r16
  8138b0:	a8c00115 	stw	r3,4(r21)
  8138b4:	ac21883a 	add	r16,r21,r16
  8138b8:	80800117 	ldw	r2,4(r16)
  8138bc:	10800054 	ori	r2,r2,1
  8138c0:	80800115 	stw	r2,4(r16)
  8138c4:	9009883a 	mov	r4,r18
  8138c8:	081a5040 	call	81a504 <__malloc_unlock>
  8138cc:	8805883a 	mov	r2,r17
  8138d0:	dfc00917 	ldw	ra,36(sp)
  8138d4:	df000817 	ldw	fp,32(sp)
  8138d8:	ddc00717 	ldw	r23,28(sp)
  8138dc:	dd800617 	ldw	r22,24(sp)
  8138e0:	dd400517 	ldw	r21,20(sp)
  8138e4:	dd000417 	ldw	r20,16(sp)
  8138e8:	dcc00317 	ldw	r19,12(sp)
  8138ec:	dc800217 	ldw	r18,8(sp)
  8138f0:	dc400117 	ldw	r17,4(sp)
  8138f4:	dc000017 	ldw	r16,0(sp)
  8138f8:	dec00a04 	addi	sp,sp,40
  8138fc:	f800283a 	ret
  813900:	18c0004c 	andi	r3,r3,1
  813904:	1800081e 	bne	r3,zero,813928 <_realloc_r+0x16c>
  813908:	a4fffe17 	ldw	r19,-8(r20)
  81390c:	00bfff04 	movi	r2,-4
  813910:	ace7c83a 	sub	r19,r21,r19
  813914:	98c00117 	ldw	r3,4(r19)
  813918:	1886703a 	and	r3,r3,r2
  81391c:	98000226 	beq	r19,zero,813928 <_realloc_r+0x16c>
  813920:	1c2f883a 	add	r23,r3,r16
  813924:	b9c06d0e 	bge	r23,r7,813adc <_realloc_r+0x320>
  813928:	880b883a 	mov	r5,r17
  81392c:	9009883a 	mov	r4,r18
  813930:	080b0900 	call	80b090 <_malloc_r>
  813934:	1023883a 	mov	r17,r2
  813938:	1000ef26 	beq	r2,zero,813cf8 <_realloc_r+0x53c>
  81393c:	a0ffff17 	ldw	r3,-4(r20)
  813940:	113ffe04 	addi	r4,r2,-8
  813944:	00bfff84 	movi	r2,-2
  813948:	1884703a 	and	r2,r3,r2
  81394c:	a885883a 	add	r2,r21,r2
  813950:	2080bf26 	beq	r4,r2,813c50 <_realloc_r+0x494>
  813954:	81bfff04 	addi	r6,r16,-4
  813958:	00800904 	movi	r2,36
  81395c:	11808936 	bltu	r2,r6,813b84 <_realloc_r+0x3c8>
  813960:	00c004c4 	movi	r3,19
  813964:	19806c2e 	bgeu	r3,r6,813b18 <_realloc_r+0x35c>
  813968:	a0c00017 	ldw	r3,0(r20)
  81396c:	88c00015 	stw	r3,0(r17)
  813970:	a0c00117 	ldw	r3,4(r20)
  813974:	88c00115 	stw	r3,4(r17)
  813978:	00c006c4 	movi	r3,27
  81397c:	1980ac36 	bltu	r3,r6,813c30 <_realloc_r+0x474>
  813980:	88800204 	addi	r2,r17,8
  813984:	a0c00204 	addi	r3,r20,8
  813988:	19000017 	ldw	r4,0(r3)
  81398c:	11000015 	stw	r4,0(r2)
  813990:	19000117 	ldw	r4,4(r3)
  813994:	11000115 	stw	r4,4(r2)
  813998:	18c00217 	ldw	r3,8(r3)
  81399c:	10c00215 	stw	r3,8(r2)
  8139a0:	a00b883a 	mov	r5,r20
  8139a4:	9009883a 	mov	r4,r18
  8139a8:	080a4800 	call	80a480 <_free_r>
  8139ac:	9009883a 	mov	r4,r18
  8139b0:	081a5040 	call	81a504 <__malloc_unlock>
  8139b4:	8805883a 	mov	r2,r17
  8139b8:	003fc506 	br	8138d0 <__alt_data_end+0xff8138d0>
  8139bc:	00800304 	movi	r2,12
  8139c0:	90800015 	stw	r2,0(r18)
  8139c4:	0005883a 	mov	r2,zero
  8139c8:	003fc106 	br	8138d0 <__alt_data_end+0xff8138d0>
  8139cc:	29800117 	ldw	r6,4(r5)
  8139d0:	00bfff04 	movi	r2,-4
  8139d4:	b1000404 	addi	r4,r22,16
  8139d8:	3084703a 	and	r2,r6,r2
  8139dc:	140d883a 	add	r6,r2,r16
  8139e0:	31005b0e 	bge	r6,r4,813b50 <_realloc_r+0x394>
  8139e4:	2811883a 	mov	r8,r5
  8139e8:	18c0004c 	andi	r3,r3,1
  8139ec:	183fce1e 	bne	r3,zero,813928 <__alt_data_end+0xff813928>
  8139f0:	a4fffe17 	ldw	r19,-8(r20)
  8139f4:	00ffff04 	movi	r3,-4
  8139f8:	ace7c83a 	sub	r19,r21,r19
  8139fc:	99000117 	ldw	r4,4(r19)
  813a00:	20c6703a 	and	r3,r4,r3
  813a04:	403fc526 	beq	r8,zero,81391c <__alt_data_end+0xff81391c>
  813a08:	1c2f883a 	add	r23,r3,r16
  813a0c:	b8af883a 	add	r23,r23,r2
  813a10:	41406026 	beq	r8,r5,813b94 <_realloc_r+0x3d8>
  813a14:	b9ffc116 	blt	r23,r7,81391c <__alt_data_end+0xff81391c>
  813a18:	40c00217 	ldw	r3,8(r8)
  813a1c:	40800317 	ldw	r2,12(r8)
  813a20:	81bfff04 	addi	r6,r16,-4
  813a24:	01000904 	movi	r4,36
  813a28:	18800315 	stw	r2,12(r3)
  813a2c:	10c00215 	stw	r3,8(r2)
  813a30:	99400217 	ldw	r5,8(r19)
  813a34:	98c00317 	ldw	r3,12(r19)
  813a38:	9c400204 	addi	r17,r19,8
  813a3c:	28c00315 	stw	r3,12(r5)
  813a40:	19400215 	stw	r5,8(r3)
  813a44:	21802d36 	bltu	r4,r6,813afc <_realloc_r+0x340>
  813a48:	008004c4 	movi	r2,19
  813a4c:	1180352e 	bgeu	r2,r6,813b24 <_realloc_r+0x368>
  813a50:	a0800017 	ldw	r2,0(r20)
  813a54:	98800215 	stw	r2,8(r19)
  813a58:	a0800117 	ldw	r2,4(r20)
  813a5c:	98800315 	stw	r2,12(r19)
  813a60:	008006c4 	movi	r2,27
  813a64:	11808036 	bltu	r2,r6,813c68 <_realloc_r+0x4ac>
  813a68:	98c00404 	addi	r3,r19,16
  813a6c:	a5000204 	addi	r20,r20,8
  813a70:	00002d06 	br	813b28 <_realloc_r+0x36c>
  813a74:	1d86b03a 	or	r3,r3,r22
  813a78:	ad8b883a 	add	r5,r21,r22
  813a7c:	a8c00115 	stw	r3,4(r21)
  813a80:	38800054 	ori	r2,r7,1
  813a84:	28800115 	stw	r2,4(r5)
  813a88:	29cf883a 	add	r7,r5,r7
  813a8c:	38800117 	ldw	r2,4(r7)
  813a90:	9009883a 	mov	r4,r18
  813a94:	29400204 	addi	r5,r5,8
  813a98:	10800054 	ori	r2,r2,1
  813a9c:	38800115 	stw	r2,4(r7)
  813aa0:	080a4800 	call	80a480 <_free_r>
  813aa4:	003f8706 	br	8138c4 <__alt_data_end+0xff8138c4>
  813aa8:	300b883a 	mov	r5,r6
  813aac:	dfc00917 	ldw	ra,36(sp)
  813ab0:	df000817 	ldw	fp,32(sp)
  813ab4:	ddc00717 	ldw	r23,28(sp)
  813ab8:	dd800617 	ldw	r22,24(sp)
  813abc:	dd400517 	ldw	r21,20(sp)
  813ac0:	dd000417 	ldw	r20,16(sp)
  813ac4:	dcc00317 	ldw	r19,12(sp)
  813ac8:	dc800217 	ldw	r18,8(sp)
  813acc:	dc400117 	ldw	r17,4(sp)
  813ad0:	dc000017 	ldw	r16,0(sp)
  813ad4:	dec00a04 	addi	sp,sp,40
  813ad8:	080b0901 	jmpi	80b090 <_malloc_r>
  813adc:	98800317 	ldw	r2,12(r19)
  813ae0:	98c00217 	ldw	r3,8(r19)
  813ae4:	81bfff04 	addi	r6,r16,-4
  813ae8:	01000904 	movi	r4,36
  813aec:	18800315 	stw	r2,12(r3)
  813af0:	10c00215 	stw	r3,8(r2)
  813af4:	9c400204 	addi	r17,r19,8
  813af8:	21bfd32e 	bgeu	r4,r6,813a48 <__alt_data_end+0xff813a48>
  813afc:	8809883a 	mov	r4,r17
  813b00:	a00b883a 	mov	r5,r20
  813b04:	08124f80 	call	8124f8 <memmove>
  813b08:	98c00117 	ldw	r3,4(r19)
  813b0c:	b821883a 	mov	r16,r23
  813b10:	982b883a 	mov	r21,r19
  813b14:	003f6106 	br	81389c <__alt_data_end+0xff81389c>
  813b18:	8805883a 	mov	r2,r17
  813b1c:	a007883a 	mov	r3,r20
  813b20:	003f9906 	br	813988 <__alt_data_end+0xff813988>
  813b24:	8807883a 	mov	r3,r17
  813b28:	a0800017 	ldw	r2,0(r20)
  813b2c:	b821883a 	mov	r16,r23
  813b30:	982b883a 	mov	r21,r19
  813b34:	18800015 	stw	r2,0(r3)
  813b38:	a0800117 	ldw	r2,4(r20)
  813b3c:	18800115 	stw	r2,4(r3)
  813b40:	a0800217 	ldw	r2,8(r20)
  813b44:	18800215 	stw	r2,8(r3)
  813b48:	98c00117 	ldw	r3,4(r19)
  813b4c:	003f5306 	br	81389c <__alt_data_end+0xff81389c>
  813b50:	adab883a 	add	r21,r21,r22
  813b54:	3585c83a 	sub	r2,r6,r22
  813b58:	e5400215 	stw	r21,8(fp)
  813b5c:	10800054 	ori	r2,r2,1
  813b60:	a8800115 	stw	r2,4(r21)
  813b64:	a0bfff17 	ldw	r2,-4(r20)
  813b68:	9009883a 	mov	r4,r18
  813b6c:	1080004c 	andi	r2,r2,1
  813b70:	b0acb03a 	or	r22,r22,r2
  813b74:	a5bfff15 	stw	r22,-4(r20)
  813b78:	081a5040 	call	81a504 <__malloc_unlock>
  813b7c:	a005883a 	mov	r2,r20
  813b80:	003f5306 	br	8138d0 <__alt_data_end+0xff8138d0>
  813b84:	8809883a 	mov	r4,r17
  813b88:	a00b883a 	mov	r5,r20
  813b8c:	08124f80 	call	8124f8 <memmove>
  813b90:	003f8306 	br	8139a0 <__alt_data_end+0xff8139a0>
  813b94:	b0800404 	addi	r2,r22,16
  813b98:	b8bf6016 	blt	r23,r2,81391c <__alt_data_end+0xff81391c>
  813b9c:	98800317 	ldw	r2,12(r19)
  813ba0:	98c00217 	ldw	r3,8(r19)
  813ba4:	81bfff04 	addi	r6,r16,-4
  813ba8:	01000904 	movi	r4,36
  813bac:	18800315 	stw	r2,12(r3)
  813bb0:	10c00215 	stw	r3,8(r2)
  813bb4:	9c400204 	addi	r17,r19,8
  813bb8:	21804336 	bltu	r4,r6,813cc8 <_realloc_r+0x50c>
  813bbc:	008004c4 	movi	r2,19
  813bc0:	11803f2e 	bgeu	r2,r6,813cc0 <_realloc_r+0x504>
  813bc4:	a0800017 	ldw	r2,0(r20)
  813bc8:	98800215 	stw	r2,8(r19)
  813bcc:	a0800117 	ldw	r2,4(r20)
  813bd0:	98800315 	stw	r2,12(r19)
  813bd4:	008006c4 	movi	r2,27
  813bd8:	11803f36 	bltu	r2,r6,813cd8 <_realloc_r+0x51c>
  813bdc:	98800404 	addi	r2,r19,16
  813be0:	a5000204 	addi	r20,r20,8
  813be4:	a0c00017 	ldw	r3,0(r20)
  813be8:	10c00015 	stw	r3,0(r2)
  813bec:	a0c00117 	ldw	r3,4(r20)
  813bf0:	10c00115 	stw	r3,4(r2)
  813bf4:	a0c00217 	ldw	r3,8(r20)
  813bf8:	10c00215 	stw	r3,8(r2)
  813bfc:	9d87883a 	add	r3,r19,r22
  813c00:	bd85c83a 	sub	r2,r23,r22
  813c04:	e0c00215 	stw	r3,8(fp)
  813c08:	10800054 	ori	r2,r2,1
  813c0c:	18800115 	stw	r2,4(r3)
  813c10:	98800117 	ldw	r2,4(r19)
  813c14:	9009883a 	mov	r4,r18
  813c18:	1080004c 	andi	r2,r2,1
  813c1c:	b0acb03a 	or	r22,r22,r2
  813c20:	9d800115 	stw	r22,4(r19)
  813c24:	081a5040 	call	81a504 <__malloc_unlock>
  813c28:	8805883a 	mov	r2,r17
  813c2c:	003f2806 	br	8138d0 <__alt_data_end+0xff8138d0>
  813c30:	a0c00217 	ldw	r3,8(r20)
  813c34:	88c00215 	stw	r3,8(r17)
  813c38:	a0c00317 	ldw	r3,12(r20)
  813c3c:	88c00315 	stw	r3,12(r17)
  813c40:	30801126 	beq	r6,r2,813c88 <_realloc_r+0x4cc>
  813c44:	88800404 	addi	r2,r17,16
  813c48:	a0c00404 	addi	r3,r20,16
  813c4c:	003f4e06 	br	813988 <__alt_data_end+0xff813988>
  813c50:	893fff17 	ldw	r4,-4(r17)
  813c54:	00bfff04 	movi	r2,-4
  813c58:	a023883a 	mov	r17,r20
  813c5c:	2084703a 	and	r2,r4,r2
  813c60:	80a1883a 	add	r16,r16,r2
  813c64:	003f0d06 	br	81389c <__alt_data_end+0xff81389c>
  813c68:	a0800217 	ldw	r2,8(r20)
  813c6c:	98800415 	stw	r2,16(r19)
  813c70:	a0800317 	ldw	r2,12(r20)
  813c74:	98800515 	stw	r2,20(r19)
  813c78:	31000a26 	beq	r6,r4,813ca4 <_realloc_r+0x4e8>
  813c7c:	98c00604 	addi	r3,r19,24
  813c80:	a5000404 	addi	r20,r20,16
  813c84:	003fa806 	br	813b28 <__alt_data_end+0xff813b28>
  813c88:	a1000417 	ldw	r4,16(r20)
  813c8c:	88800604 	addi	r2,r17,24
  813c90:	a0c00604 	addi	r3,r20,24
  813c94:	89000415 	stw	r4,16(r17)
  813c98:	a1000517 	ldw	r4,20(r20)
  813c9c:	89000515 	stw	r4,20(r17)
  813ca0:	003f3906 	br	813988 <__alt_data_end+0xff813988>
  813ca4:	a0800417 	ldw	r2,16(r20)
  813ca8:	a5000604 	addi	r20,r20,24
  813cac:	98c00804 	addi	r3,r19,32
  813cb0:	98800615 	stw	r2,24(r19)
  813cb4:	a0bfff17 	ldw	r2,-4(r20)
  813cb8:	98800715 	stw	r2,28(r19)
  813cbc:	003f9a06 	br	813b28 <__alt_data_end+0xff813b28>
  813cc0:	8805883a 	mov	r2,r17
  813cc4:	003fc706 	br	813be4 <__alt_data_end+0xff813be4>
  813cc8:	8809883a 	mov	r4,r17
  813ccc:	a00b883a 	mov	r5,r20
  813cd0:	08124f80 	call	8124f8 <memmove>
  813cd4:	003fc906 	br	813bfc <__alt_data_end+0xff813bfc>
  813cd8:	a0800217 	ldw	r2,8(r20)
  813cdc:	98800415 	stw	r2,16(r19)
  813ce0:	a0800317 	ldw	r2,12(r20)
  813ce4:	98800515 	stw	r2,20(r19)
  813ce8:	31000726 	beq	r6,r4,813d08 <_realloc_r+0x54c>
  813cec:	98800604 	addi	r2,r19,24
  813cf0:	a5000404 	addi	r20,r20,16
  813cf4:	003fbb06 	br	813be4 <__alt_data_end+0xff813be4>
  813cf8:	9009883a 	mov	r4,r18
  813cfc:	081a5040 	call	81a504 <__malloc_unlock>
  813d00:	0005883a 	mov	r2,zero
  813d04:	003ef206 	br	8138d0 <__alt_data_end+0xff8138d0>
  813d08:	a0c00417 	ldw	r3,16(r20)
  813d0c:	a5000604 	addi	r20,r20,24
  813d10:	98800804 	addi	r2,r19,32
  813d14:	98c00615 	stw	r3,24(r19)
  813d18:	a0ffff17 	ldw	r3,-4(r20)
  813d1c:	98c00715 	stw	r3,28(r19)
  813d20:	003fb006 	br	813be4 <__alt_data_end+0xff813be4>

00813d24 <__fpclassifyd>:
  813d24:	00a00034 	movhi	r2,32768
  813d28:	10bfffc4 	addi	r2,r2,-1
  813d2c:	2884703a 	and	r2,r5,r2
  813d30:	10000726 	beq	r2,zero,813d50 <__fpclassifyd+0x2c>
  813d34:	00fffc34 	movhi	r3,65520
  813d38:	019ff834 	movhi	r6,32736
  813d3c:	28c7883a 	add	r3,r5,r3
  813d40:	31bfffc4 	addi	r6,r6,-1
  813d44:	30c00536 	bltu	r6,r3,813d5c <__fpclassifyd+0x38>
  813d48:	00800104 	movi	r2,4
  813d4c:	f800283a 	ret
  813d50:	2000021e 	bne	r4,zero,813d5c <__fpclassifyd+0x38>
  813d54:	00800084 	movi	r2,2
  813d58:	f800283a 	ret
  813d5c:	00dffc34 	movhi	r3,32752
  813d60:	019ff834 	movhi	r6,32736
  813d64:	28cb883a 	add	r5,r5,r3
  813d68:	31bfffc4 	addi	r6,r6,-1
  813d6c:	317ff62e 	bgeu	r6,r5,813d48 <__alt_data_end+0xff813d48>
  813d70:	01400434 	movhi	r5,16
  813d74:	297fffc4 	addi	r5,r5,-1
  813d78:	28800236 	bltu	r5,r2,813d84 <__fpclassifyd+0x60>
  813d7c:	008000c4 	movi	r2,3
  813d80:	f800283a 	ret
  813d84:	10c00226 	beq	r2,r3,813d90 <__fpclassifyd+0x6c>
  813d88:	0005883a 	mov	r2,zero
  813d8c:	f800283a 	ret
  813d90:	2005003a 	cmpeq	r2,r4,zero
  813d94:	f800283a 	ret

00813d98 <strcmp>:
  813d98:	2144b03a 	or	r2,r4,r5
  813d9c:	108000cc 	andi	r2,r2,3
  813da0:	1000171e 	bne	r2,zero,813e00 <strcmp+0x68>
  813da4:	20800017 	ldw	r2,0(r4)
  813da8:	28c00017 	ldw	r3,0(r5)
  813dac:	10c0141e 	bne	r2,r3,813e00 <strcmp+0x68>
  813db0:	027fbff4 	movhi	r9,65279
  813db4:	4a7fbfc4 	addi	r9,r9,-257
  813db8:	0086303a 	nor	r3,zero,r2
  813dbc:	02202074 	movhi	r8,32897
  813dc0:	1245883a 	add	r2,r2,r9
  813dc4:	42202004 	addi	r8,r8,-32640
  813dc8:	10c4703a 	and	r2,r2,r3
  813dcc:	1204703a 	and	r2,r2,r8
  813dd0:	10000226 	beq	r2,zero,813ddc <strcmp+0x44>
  813dd4:	00001706 	br	813e34 <strcmp+0x9c>
  813dd8:	1000161e 	bne	r2,zero,813e34 <strcmp+0x9c>
  813ddc:	21000104 	addi	r4,r4,4
  813de0:	20c00017 	ldw	r3,0(r4)
  813de4:	29400104 	addi	r5,r5,4
  813de8:	29800017 	ldw	r6,0(r5)
  813dec:	1a4f883a 	add	r7,r3,r9
  813df0:	00c4303a 	nor	r2,zero,r3
  813df4:	3884703a 	and	r2,r7,r2
  813df8:	1204703a 	and	r2,r2,r8
  813dfc:	19bff626 	beq	r3,r6,813dd8 <__alt_data_end+0xff813dd8>
  813e00:	20800007 	ldb	r2,0(r4)
  813e04:	1000051e 	bne	r2,zero,813e1c <strcmp+0x84>
  813e08:	00000606 	br	813e24 <strcmp+0x8c>
  813e0c:	21000044 	addi	r4,r4,1
  813e10:	20800007 	ldb	r2,0(r4)
  813e14:	29400044 	addi	r5,r5,1
  813e18:	10000226 	beq	r2,zero,813e24 <strcmp+0x8c>
  813e1c:	28c00007 	ldb	r3,0(r5)
  813e20:	10fffa26 	beq	r2,r3,813e0c <__alt_data_end+0xff813e0c>
  813e24:	20800003 	ldbu	r2,0(r4)
  813e28:	28c00003 	ldbu	r3,0(r5)
  813e2c:	10c5c83a 	sub	r2,r2,r3
  813e30:	f800283a 	ret
  813e34:	0005883a 	mov	r2,zero
  813e38:	f800283a 	ret

00813e3c <__ssprint_r>:
  813e3c:	30800217 	ldw	r2,8(r6)
  813e40:	defff604 	addi	sp,sp,-40
  813e44:	ddc00715 	stw	r23,28(sp)
  813e48:	dc800215 	stw	r18,8(sp)
  813e4c:	dfc00915 	stw	ra,36(sp)
  813e50:	df000815 	stw	fp,32(sp)
  813e54:	dd800615 	stw	r22,24(sp)
  813e58:	dd400515 	stw	r21,20(sp)
  813e5c:	dd000415 	stw	r20,16(sp)
  813e60:	dcc00315 	stw	r19,12(sp)
  813e64:	dc400115 	stw	r17,4(sp)
  813e68:	dc000015 	stw	r16,0(sp)
  813e6c:	3025883a 	mov	r18,r6
  813e70:	35c00017 	ldw	r23,0(r6)
  813e74:	10005626 	beq	r2,zero,813fd0 <__ssprint_r+0x194>
  813e78:	2027883a 	mov	r19,r4
  813e7c:	28800217 	ldw	r2,8(r5)
  813e80:	29000017 	ldw	r4,0(r5)
  813e84:	2823883a 	mov	r17,r5
  813e88:	0039883a 	mov	fp,zero
  813e8c:	0021883a 	mov	r16,zero
  813e90:	80003926 	beq	r16,zero,813f78 <__ssprint_r+0x13c>
  813e94:	102b883a 	mov	r21,r2
  813e98:	102d883a 	mov	r22,r2
  813e9c:	80803a36 	bltu	r16,r2,813f88 <__ssprint_r+0x14c>
  813ea0:	88c0030b 	ldhu	r3,12(r17)
  813ea4:	1881200c 	andi	r2,r3,1152
  813ea8:	10002626 	beq	r2,zero,813f44 <__ssprint_r+0x108>
  813eac:	88800517 	ldw	r2,20(r17)
  813eb0:	89400417 	ldw	r5,16(r17)
  813eb4:	81c00044 	addi	r7,r16,1
  813eb8:	108d883a 	add	r6,r2,r2
  813ebc:	3085883a 	add	r2,r6,r2
  813ec0:	100cd7fa 	srli	r6,r2,31
  813ec4:	216dc83a 	sub	r22,r4,r5
  813ec8:	3d89883a 	add	r4,r7,r22
  813ecc:	3085883a 	add	r2,r6,r2
  813ed0:	102bd07a 	srai	r21,r2,1
  813ed4:	a80d883a 	mov	r6,r21
  813ed8:	a900022e 	bgeu	r21,r4,813ee4 <__ssprint_r+0xa8>
  813edc:	202b883a 	mov	r21,r4
  813ee0:	200d883a 	mov	r6,r4
  813ee4:	18c1000c 	andi	r3,r3,1024
  813ee8:	9809883a 	mov	r4,r19
  813eec:	18002926 	beq	r3,zero,813f94 <__ssprint_r+0x158>
  813ef0:	300b883a 	mov	r5,r6
  813ef4:	080b0900 	call	80b090 <_malloc_r>
  813ef8:	1029883a 	mov	r20,r2
  813efc:	10002b26 	beq	r2,zero,813fac <__ssprint_r+0x170>
  813f00:	89400417 	ldw	r5,16(r17)
  813f04:	1009883a 	mov	r4,r2
  813f08:	b00d883a 	mov	r6,r22
  813f0c:	08123c00 	call	8123c0 <memcpy>
  813f10:	8880030b 	ldhu	r2,12(r17)
  813f14:	00fedfc4 	movi	r3,-1153
  813f18:	10c4703a 	and	r2,r2,r3
  813f1c:	10802014 	ori	r2,r2,128
  813f20:	8880030d 	sth	r2,12(r17)
  813f24:	a589883a 	add	r4,r20,r22
  813f28:	adadc83a 	sub	r22,r21,r22
  813f2c:	8d400515 	stw	r21,20(r17)
  813f30:	8d800215 	stw	r22,8(r17)
  813f34:	8d000415 	stw	r20,16(r17)
  813f38:	89000015 	stw	r4,0(r17)
  813f3c:	802b883a 	mov	r21,r16
  813f40:	802d883a 	mov	r22,r16
  813f44:	e00b883a 	mov	r5,fp
  813f48:	b00d883a 	mov	r6,r22
  813f4c:	08124f80 	call	8124f8 <memmove>
  813f50:	88800217 	ldw	r2,8(r17)
  813f54:	89000017 	ldw	r4,0(r17)
  813f58:	90c00217 	ldw	r3,8(r18)
  813f5c:	1545c83a 	sub	r2,r2,r21
  813f60:	2589883a 	add	r4,r4,r22
  813f64:	88800215 	stw	r2,8(r17)
  813f68:	89000015 	stw	r4,0(r17)
  813f6c:	1c21c83a 	sub	r16,r3,r16
  813f70:	94000215 	stw	r16,8(r18)
  813f74:	80001626 	beq	r16,zero,813fd0 <__ssprint_r+0x194>
  813f78:	bf000017 	ldw	fp,0(r23)
  813f7c:	bc000117 	ldw	r16,4(r23)
  813f80:	bdc00204 	addi	r23,r23,8
  813f84:	003fc206 	br	813e90 <__alt_data_end+0xff813e90>
  813f88:	802b883a 	mov	r21,r16
  813f8c:	802d883a 	mov	r22,r16
  813f90:	003fec06 	br	813f44 <__alt_data_end+0xff813f44>
  813f94:	08137bc0 	call	8137bc <_realloc_r>
  813f98:	1029883a 	mov	r20,r2
  813f9c:	103fe11e 	bne	r2,zero,813f24 <__alt_data_end+0xff813f24>
  813fa0:	89400417 	ldw	r5,16(r17)
  813fa4:	9809883a 	mov	r4,r19
  813fa8:	080a4800 	call	80a480 <_free_r>
  813fac:	88c0030b 	ldhu	r3,12(r17)
  813fb0:	00800304 	movi	r2,12
  813fb4:	98800015 	stw	r2,0(r19)
  813fb8:	18c01014 	ori	r3,r3,64
  813fbc:	88c0030d 	sth	r3,12(r17)
  813fc0:	00bfffc4 	movi	r2,-1
  813fc4:	90000215 	stw	zero,8(r18)
  813fc8:	90000115 	stw	zero,4(r18)
  813fcc:	00000206 	br	813fd8 <__ssprint_r+0x19c>
  813fd0:	90000115 	stw	zero,4(r18)
  813fd4:	0005883a 	mov	r2,zero
  813fd8:	dfc00917 	ldw	ra,36(sp)
  813fdc:	df000817 	ldw	fp,32(sp)
  813fe0:	ddc00717 	ldw	r23,28(sp)
  813fe4:	dd800617 	ldw	r22,24(sp)
  813fe8:	dd400517 	ldw	r21,20(sp)
  813fec:	dd000417 	ldw	r20,16(sp)
  813ff0:	dcc00317 	ldw	r19,12(sp)
  813ff4:	dc800217 	ldw	r18,8(sp)
  813ff8:	dc400117 	ldw	r17,4(sp)
  813ffc:	dc000017 	ldw	r16,0(sp)
  814000:	dec00a04 	addi	sp,sp,40
  814004:	f800283a 	ret

00814008 <___svfiprintf_internal_r>:
  814008:	2880030b 	ldhu	r2,12(r5)
  81400c:	deffc904 	addi	sp,sp,-220
  814010:	dd403215 	stw	r21,200(sp)
  814014:	dfc03615 	stw	ra,216(sp)
  814018:	df003515 	stw	fp,212(sp)
  81401c:	ddc03415 	stw	r23,208(sp)
  814020:	dd803315 	stw	r22,204(sp)
  814024:	dd003115 	stw	r20,196(sp)
  814028:	dcc03015 	stw	r19,192(sp)
  81402c:	dc802f15 	stw	r18,188(sp)
  814030:	dc402e15 	stw	r17,184(sp)
  814034:	dc002d15 	stw	r16,180(sp)
  814038:	d9402715 	stw	r5,156(sp)
  81403c:	d9002915 	stw	r4,164(sp)
  814040:	1080200c 	andi	r2,r2,128
  814044:	d9c02315 	stw	r7,140(sp)
  814048:	302b883a 	mov	r21,r6
  81404c:	10000226 	beq	r2,zero,814058 <___svfiprintf_internal_r+0x50>
  814050:	28800417 	ldw	r2,16(r5)
  814054:	1003ce26 	beq	r2,zero,814f90 <___svfiprintf_internal_r+0xf88>
  814058:	dac01a04 	addi	r11,sp,104
  81405c:	da8019c4 	addi	r10,sp,103
  814060:	dc802917 	ldw	r18,164(sp)
  814064:	dd002717 	ldw	r20,156(sp)
  814068:	04c020b4 	movhi	r19,130
  81406c:	dac01e15 	stw	r11,120(sp)
  814070:	5a97c83a 	sub	r11,r11,r10
  814074:	9cf96c04 	addi	r19,r19,-6736
  814078:	da801f15 	stw	r10,124(sp)
  81407c:	dec01a15 	stw	sp,104(sp)
  814080:	d8001c15 	stw	zero,112(sp)
  814084:	d8001b15 	stw	zero,108(sp)
  814088:	d811883a 	mov	r8,sp
  81408c:	d8002a15 	stw	zero,168(sp)
  814090:	d8002415 	stw	zero,144(sp)
  814094:	dac02b15 	stw	r11,172(sp)
  814098:	a8800007 	ldb	r2,0(r21)
  81409c:	10026a26 	beq	r2,zero,814a48 <___svfiprintf_internal_r+0xa40>
  8140a0:	01000944 	movi	r4,37
  8140a4:	11026826 	beq	r2,r4,814a48 <___svfiprintf_internal_r+0xa40>
  8140a8:	a805883a 	mov	r2,r21
  8140ac:	00000106 	br	8140b4 <___svfiprintf_internal_r+0xac>
  8140b0:	19000326 	beq	r3,r4,8140c0 <___svfiprintf_internal_r+0xb8>
  8140b4:	10800044 	addi	r2,r2,1
  8140b8:	10c00007 	ldb	r3,0(r2)
  8140bc:	183ffc1e 	bne	r3,zero,8140b0 <__alt_data_end+0xff8140b0>
  8140c0:	1561c83a 	sub	r16,r2,r21
  8140c4:	102d883a 	mov	r22,r2
  8140c8:	80000e26 	beq	r16,zero,814104 <___svfiprintf_internal_r+0xfc>
  8140cc:	d8c01c17 	ldw	r3,112(sp)
  8140d0:	d8801b17 	ldw	r2,108(sp)
  8140d4:	45400015 	stw	r21,0(r8)
  8140d8:	1c07883a 	add	r3,r3,r16
  8140dc:	10800044 	addi	r2,r2,1
  8140e0:	d8c01c15 	stw	r3,112(sp)
  8140e4:	44000115 	stw	r16,4(r8)
  8140e8:	d8801b15 	stw	r2,108(sp)
  8140ec:	00c001c4 	movi	r3,7
  8140f0:	1882d816 	blt	r3,r2,814c54 <___svfiprintf_internal_r+0xc4c>
  8140f4:	42000204 	addi	r8,r8,8
  8140f8:	da802417 	ldw	r10,144(sp)
  8140fc:	5415883a 	add	r10,r10,r16
  814100:	da802415 	stw	r10,144(sp)
  814104:	b0800007 	ldb	r2,0(r22)
  814108:	10027526 	beq	r2,zero,814ae0 <___svfiprintf_internal_r+0xad8>
  81410c:	b1000047 	ldb	r4,1(r22)
  814110:	b5400044 	addi	r21,r22,1
  814114:	d8001d85 	stb	zero,118(sp)
  814118:	000d883a 	mov	r6,zero
  81411c:	043fffc4 	movi	r16,-1
  814120:	d8002115 	stw	zero,132(sp)
  814124:	0023883a 	mov	r17,zero
  814128:	00c01604 	movi	r3,88
  81412c:	01400244 	movi	r5,9
  814130:	02400a84 	movi	r9,42
  814134:	01c01b04 	movi	r7,108
  814138:	ad400044 	addi	r21,r21,1
  81413c:	20bff804 	addi	r2,r4,-32
  814140:	18819736 	bltu	r3,r2,8147a0 <___svfiprintf_internal_r+0x798>
  814144:	100490ba 	slli	r2,r2,2
  814148:	02c02074 	movhi	r11,129
  81414c:	5ad05704 	addi	r11,r11,16732
  814150:	12c5883a 	add	r2,r2,r11
  814154:	10800017 	ldw	r2,0(r2)
  814158:	1000683a 	jmp	r2
  81415c:	00814698 	cmpnei	r2,zero,1306
  814160:	008147a0 	cmpeqi	r2,zero,1310
  814164:	008147a0 	cmpeqi	r2,zero,1310
  814168:	0081468c 	andi	r2,zero,1306
  81416c:	008147a0 	cmpeqi	r2,zero,1310
  814170:	008147a0 	cmpeqi	r2,zero,1310
  814174:	008147a0 	cmpeqi	r2,zero,1310
  814178:	008147a0 	cmpeqi	r2,zero,1310
  81417c:	008147a0 	cmpeqi	r2,zero,1310
  814180:	008147a0 	cmpeqi	r2,zero,1310
  814184:	008143b8 	rdprs	r2,zero,1294
  814188:	008147d4 	movui	r2,1311
  81418c:	008147a0 	cmpeqi	r2,zero,1310
  814190:	008143e0 	cmpeqi	r2,zero,1295
  814194:	008147e0 	cmpeqi	r2,zero,1311
  814198:	008147a0 	cmpeqi	r2,zero,1310
  81419c:	008147c8 	cmpgei	r2,zero,1311
  8141a0:	00814768 	cmpgeui	r2,zero,1309
  8141a4:	00814768 	cmpgeui	r2,zero,1309
  8141a8:	00814768 	cmpgeui	r2,zero,1309
  8141ac:	00814768 	cmpgeui	r2,zero,1309
  8141b0:	00814768 	cmpgeui	r2,zero,1309
  8141b4:	00814768 	cmpgeui	r2,zero,1309
  8141b8:	00814768 	cmpgeui	r2,zero,1309
  8141bc:	00814768 	cmpgeui	r2,zero,1309
  8141c0:	00814768 	cmpgeui	r2,zero,1309
  8141c4:	008147a0 	cmpeqi	r2,zero,1310
  8141c8:	008147a0 	cmpeqi	r2,zero,1310
  8141cc:	008147a0 	cmpeqi	r2,zero,1310
  8141d0:	008147a0 	cmpeqi	r2,zero,1310
  8141d4:	008147a0 	cmpeqi	r2,zero,1310
  8141d8:	008147a0 	cmpeqi	r2,zero,1310
  8141dc:	008147a0 	cmpeqi	r2,zero,1310
  8141e0:	008147a0 	cmpeqi	r2,zero,1310
  8141e4:	008147a0 	cmpeqi	r2,zero,1310
  8141e8:	008147a0 	cmpeqi	r2,zero,1310
  8141ec:	00814700 	call	81470 <__reset-0x77eb90>
  8141f0:	008147a0 	cmpeqi	r2,zero,1310
  8141f4:	008147a0 	cmpeqi	r2,zero,1310
  8141f8:	008147a0 	cmpeqi	r2,zero,1310
  8141fc:	008147a0 	cmpeqi	r2,zero,1310
  814200:	008147a0 	cmpeqi	r2,zero,1310
  814204:	008147a0 	cmpeqi	r2,zero,1310
  814208:	008147a0 	cmpeqi	r2,zero,1310
  81420c:	008147a0 	cmpeqi	r2,zero,1310
  814210:	008147a0 	cmpeqi	r2,zero,1310
  814214:	008147a0 	cmpeqi	r2,zero,1310
  814218:	0081438c 	andi	r2,zero,1294
  81421c:	008147a0 	cmpeqi	r2,zero,1310
  814220:	008147a0 	cmpeqi	r2,zero,1310
  814224:	008147a0 	cmpeqi	r2,zero,1310
  814228:	008147a0 	cmpeqi	r2,zero,1310
  81422c:	008147a0 	cmpeqi	r2,zero,1310
  814230:	008142c0 	call	8142c <__reset-0x77ebd4>
  814234:	008147a0 	cmpeqi	r2,zero,1310
  814238:	008147a0 	cmpeqi	r2,zero,1310
  81423c:	008145ec 	andhi	r2,zero,1303
  814240:	008147a0 	cmpeqi	r2,zero,1310
  814244:	008147a0 	cmpeqi	r2,zero,1310
  814248:	008147a0 	cmpeqi	r2,zero,1310
  81424c:	008147a0 	cmpeqi	r2,zero,1310
  814250:	008147a0 	cmpeqi	r2,zero,1310
  814254:	008147a0 	cmpeqi	r2,zero,1310
  814258:	008147a0 	cmpeqi	r2,zero,1310
  81425c:	008147a0 	cmpeqi	r2,zero,1310
  814260:	008147a0 	cmpeqi	r2,zero,1310
  814264:	008147a0 	cmpeqi	r2,zero,1310
  814268:	008144d8 	cmpnei	r2,zero,1299
  81426c:	00814498 	cmpnei	r2,zero,1298
  814270:	008147a0 	cmpeqi	r2,zero,1310
  814274:	008147a0 	cmpeqi	r2,zero,1310
  814278:	008147a0 	cmpeqi	r2,zero,1310
  81427c:	00814648 	cmpgei	r2,zero,1305
  814280:	00814498 	cmpnei	r2,zero,1298
  814284:	008147a0 	cmpeqi	r2,zero,1310
  814288:	008147a0 	cmpeqi	r2,zero,1310
  81428c:	00814634 	movhi	r2,1304
  814290:	008147a0 	cmpeqi	r2,zero,1310
  814294:	00814654 	movui	r2,1305
  814298:	00814390 	cmplti	r2,zero,1294
  81429c:	00814454 	movui	r2,1297
  8142a0:	00814448 	cmpgei	r2,zero,1297
  8142a4:	008147a0 	cmpeqi	r2,zero,1310
  8142a8:	008143ec 	andhi	r2,zero,1295
  8142ac:	008147a0 	cmpeqi	r2,zero,1310
  8142b0:	008142c4 	movi	r2,1291
  8142b4:	008147a0 	cmpeqi	r2,zero,1310
  8142b8:	008147a0 	cmpeqi	r2,zero,1310
  8142bc:	008146b4 	movhi	r2,1306
  8142c0:	8c400414 	ori	r17,r17,16
  8142c4:	8880080c 	andi	r2,r17,32
  8142c8:	10029626 	beq	r2,zero,814d24 <___svfiprintf_internal_r+0xd1c>
  8142cc:	da802317 	ldw	r10,140(sp)
  8142d0:	dac02317 	ldw	r11,140(sp)
  8142d4:	00800044 	movi	r2,1
  8142d8:	52400017 	ldw	r9,0(r10)
  8142dc:	52800117 	ldw	r10,4(r10)
  8142e0:	5ac00204 	addi	r11,r11,8
  8142e4:	dac02315 	stw	r11,140(sp)
  8142e8:	4a86b03a 	or	r3,r9,r10
  8142ec:	d8001d85 	stb	zero,118(sp)
  8142f0:	8039883a 	mov	fp,r16
  8142f4:	0017883a 	mov	r11,zero
  8142f8:	80000216 	blt	r16,zero,814304 <___svfiprintf_internal_r+0x2fc>
  8142fc:	013fdfc4 	movi	r4,-129
  814300:	8922703a 	and	r17,r17,r4
  814304:	1801d21e 	bne	r3,zero,814a50 <___svfiprintf_internal_r+0xa48>
  814308:	80024626 	beq	r16,zero,814c24 <___svfiprintf_internal_r+0xc1c>
  81430c:	10803fcc 	andi	r2,r2,255
  814310:	00c00044 	movi	r3,1
  814314:	10c2b426 	beq	r2,r3,814de8 <___svfiprintf_internal_r+0xde0>
  814318:	00c00084 	movi	r3,2
  81431c:	10c25d26 	beq	r2,r3,814c94 <___svfiprintf_internal_r+0xc8c>
  814320:	d8c01a04 	addi	r3,sp,104
  814324:	4808d0fa 	srli	r4,r9,3
  814328:	500a977a 	slli	r5,r10,29
  81432c:	5014d0fa 	srli	r10,r10,3
  814330:	4a4001cc 	andi	r9,r9,7
  814334:	48800c04 	addi	r2,r9,48
  814338:	18ffffc4 	addi	r3,r3,-1
  81433c:	2912b03a 	or	r9,r5,r4
  814340:	18800005 	stb	r2,0(r3)
  814344:	4a88b03a 	or	r4,r9,r10
  814348:	203ff61e 	bne	r4,zero,814324 <__alt_data_end+0xff814324>
  81434c:	8900004c 	andi	r4,r17,1
  814350:	d8c02615 	stw	r3,152(sp)
  814354:	2002961e 	bne	r4,zero,814db0 <___svfiprintf_internal_r+0xda8>
  814358:	da801e17 	ldw	r10,120(sp)
  81435c:	50f9c83a 	sub	fp,r10,r3
  814360:	df002015 	stw	fp,128(sp)
  814364:	e400010e 	bge	fp,r16,81436c <___svfiprintf_internal_r+0x364>
  814368:	dc002015 	stw	r16,128(sp)
  81436c:	5ac03fcc 	andi	r11,r11,255
  814370:	5ac0201c 	xori	r11,r11,128
  814374:	5affe004 	addi	r11,r11,-128
  814378:	58006326 	beq	r11,zero,814508 <___svfiprintf_internal_r+0x500>
  81437c:	d8c02017 	ldw	r3,128(sp)
  814380:	18c00044 	addi	r3,r3,1
  814384:	d8c02015 	stw	r3,128(sp)
  814388:	00005f06 	br	814508 <___svfiprintf_internal_r+0x500>
  81438c:	8c400414 	ori	r17,r17,16
  814390:	8880080c 	andi	r2,r17,32
  814394:	10027926 	beq	r2,zero,814d7c <___svfiprintf_internal_r+0xd74>
  814398:	dac02317 	ldw	r11,140(sp)
  81439c:	0005883a 	mov	r2,zero
  8143a0:	5a400017 	ldw	r9,0(r11)
  8143a4:	5a800117 	ldw	r10,4(r11)
  8143a8:	5ac00204 	addi	r11,r11,8
  8143ac:	dac02315 	stw	r11,140(sp)
  8143b0:	4a86b03a 	or	r3,r9,r10
  8143b4:	003fcd06 	br	8142ec <__alt_data_end+0xff8142ec>
  8143b8:	da802317 	ldw	r10,140(sp)
  8143bc:	dac02317 	ldw	r11,140(sp)
  8143c0:	52800017 	ldw	r10,0(r10)
  8143c4:	58800104 	addi	r2,r11,4
  8143c8:	da802115 	stw	r10,132(sp)
  8143cc:	50028c0e 	bge	r10,zero,814e00 <___svfiprintf_internal_r+0xdf8>
  8143d0:	da802117 	ldw	r10,132(sp)
  8143d4:	d8802315 	stw	r2,140(sp)
  8143d8:	0295c83a 	sub	r10,zero,r10
  8143dc:	da802115 	stw	r10,132(sp)
  8143e0:	8c400114 	ori	r17,r17,4
  8143e4:	a9000007 	ldb	r4,0(r21)
  8143e8:	003f5306 	br	814138 <__alt_data_end+0xff814138>
  8143ec:	da802317 	ldw	r10,140(sp)
  8143f0:	dac02317 	ldw	r11,140(sp)
  8143f4:	d8001d85 	stb	zero,118(sp)
  8143f8:	52800017 	ldw	r10,0(r10)
  8143fc:	5dc00104 	addi	r23,r11,4
  814400:	da802615 	stw	r10,152(sp)
  814404:	5002d626 	beq	r10,zero,814f60 <___svfiprintf_internal_r+0xf58>
  814408:	d9002617 	ldw	r4,152(sp)
  81440c:	8002cc16 	blt	r16,zero,814f40 <___svfiprintf_internal_r+0xf38>
  814410:	000b883a 	mov	r5,zero
  814414:	800d883a 	mov	r6,r16
  814418:	da002c15 	stw	r8,176(sp)
  81441c:	08122d80 	call	8122d8 <memchr>
  814420:	da002c17 	ldw	r8,176(sp)
  814424:	1002f026 	beq	r2,zero,814fe8 <___svfiprintf_internal_r+0xfe0>
  814428:	d8c02617 	ldw	r3,152(sp)
  81442c:	10f9c83a 	sub	fp,r2,r3
  814430:	8700010e 	bge	r16,fp,814438 <___svfiprintf_internal_r+0x430>
  814434:	8039883a 	mov	fp,r16
  814438:	dac01d83 	ldbu	r11,118(sp)
  81443c:	ddc02315 	stw	r23,140(sp)
  814440:	0021883a 	mov	r16,zero
  814444:	003fc606 	br	814360 <__alt_data_end+0xff814360>
  814448:	8c400814 	ori	r17,r17,32
  81444c:	a9000007 	ldb	r4,0(r21)
  814450:	003f3906 	br	814138 <__alt_data_end+0xff814138>
  814454:	da802317 	ldw	r10,140(sp)
  814458:	00800c04 	movi	r2,48
  81445c:	dac02317 	ldw	r11,140(sp)
  814460:	52400017 	ldw	r9,0(r10)
  814464:	d8801d05 	stb	r2,116(sp)
  814468:	00801e04 	movi	r2,120
  81446c:	d8801d45 	stb	r2,117(sp)
  814470:	008020b4 	movhi	r2,130
  814474:	10b90404 	addi	r2,r2,-7152
  814478:	5ac00104 	addi	r11,r11,4
  81447c:	d8802a15 	stw	r2,168(sp)
  814480:	0015883a 	mov	r10,zero
  814484:	8c400094 	ori	r17,r17,2
  814488:	dac02315 	stw	r11,140(sp)
  81448c:	00800084 	movi	r2,2
  814490:	4807883a 	mov	r3,r9
  814494:	003f9506 	br	8142ec <__alt_data_end+0xff8142ec>
  814498:	d9801d85 	stb	r6,118(sp)
  81449c:	8880080c 	andi	r2,r17,32
  8144a0:	d8c02317 	ldw	r3,140(sp)
  8144a4:	10009b26 	beq	r2,zero,814714 <___svfiprintf_internal_r+0x70c>
  8144a8:	dac02317 	ldw	r11,140(sp)
  8144ac:	18800117 	ldw	r2,4(r3)
  8144b0:	1a400017 	ldw	r9,0(r3)
  8144b4:	5ac00204 	addi	r11,r11,8
  8144b8:	dac02315 	stw	r11,140(sp)
  8144bc:	1015883a 	mov	r10,r2
  8144c0:	10009f16 	blt	r2,zero,814740 <___svfiprintf_internal_r+0x738>
  8144c4:	dac01d83 	ldbu	r11,118(sp)
  8144c8:	8039883a 	mov	fp,r16
  8144cc:	00800044 	movi	r2,1
  8144d0:	4a86b03a 	or	r3,r9,r10
  8144d4:	003f8806 	br	8142f8 <__alt_data_end+0xff8142f8>
  8144d8:	dac02317 	ldw	r11,140(sp)
  8144dc:	00c00044 	movi	r3,1
  8144e0:	da801004 	addi	r10,sp,64
  8144e4:	58800017 	ldw	r2,0(r11)
  8144e8:	5ac00104 	addi	r11,r11,4
  8144ec:	d8c02015 	stw	r3,128(sp)
  8144f0:	d8001d85 	stb	zero,118(sp)
  8144f4:	d8801005 	stb	r2,64(sp)
  8144f8:	dac02315 	stw	r11,140(sp)
  8144fc:	1839883a 	mov	fp,r3
  814500:	da802615 	stw	r10,152(sp)
  814504:	0021883a 	mov	r16,zero
  814508:	8a80008c 	andi	r10,r17,2
  81450c:	da802215 	stw	r10,136(sp)
  814510:	50000326 	beq	r10,zero,814520 <___svfiprintf_internal_r+0x518>
  814514:	dac02017 	ldw	r11,128(sp)
  814518:	5ac00084 	addi	r11,r11,2
  81451c:	dac02015 	stw	r11,128(sp)
  814520:	88c0210c 	andi	r3,r17,132
  814524:	d8c02515 	stw	r3,148(sp)
  814528:	1800bd1e 	bne	r3,zero,814820 <___svfiprintf_internal_r+0x818>
  81452c:	da802117 	ldw	r10,132(sp)
  814530:	dac02017 	ldw	r11,128(sp)
  814534:	52edc83a 	sub	r22,r10,r11
  814538:	0580b90e 	bge	zero,r22,814820 <___svfiprintf_internal_r+0x818>
  81453c:	02400404 	movi	r9,16
  814540:	d8c01c17 	ldw	r3,112(sp)
  814544:	d8801b17 	ldw	r2,108(sp)
  814548:	4d829b0e 	bge	r9,r22,814fb8 <___svfiprintf_internal_r+0xfb0>
  81454c:	014020b4 	movhi	r5,130
  814550:	29797004 	addi	r5,r5,-6720
  814554:	d9402815 	stw	r5,160(sp)
  814558:	05c001c4 	movi	r23,7
  81455c:	00000306 	br	81456c <___svfiprintf_internal_r+0x564>
  814560:	b5bffc04 	addi	r22,r22,-16
  814564:	42000204 	addi	r8,r8,8
  814568:	4d80150e 	bge	r9,r22,8145c0 <___svfiprintf_internal_r+0x5b8>
  81456c:	028020b4 	movhi	r10,130
  814570:	18c00404 	addi	r3,r3,16
  814574:	10800044 	addi	r2,r2,1
  814578:	52b97004 	addi	r10,r10,-6720
  81457c:	42800015 	stw	r10,0(r8)
  814580:	42400115 	stw	r9,4(r8)
  814584:	d8c01c15 	stw	r3,112(sp)
  814588:	d8801b15 	stw	r2,108(sp)
  81458c:	b8bff40e 	bge	r23,r2,814560 <__alt_data_end+0xff814560>
  814590:	9009883a 	mov	r4,r18
  814594:	a00b883a 	mov	r5,r20
  814598:	d9801a04 	addi	r6,sp,104
  81459c:	da402c15 	stw	r9,176(sp)
  8145a0:	0813e3c0 	call	813e3c <__ssprint_r>
  8145a4:	da402c17 	ldw	r9,176(sp)
  8145a8:	1001531e 	bne	r2,zero,814af8 <___svfiprintf_internal_r+0xaf0>
  8145ac:	b5bffc04 	addi	r22,r22,-16
  8145b0:	d8c01c17 	ldw	r3,112(sp)
  8145b4:	d8801b17 	ldw	r2,108(sp)
  8145b8:	d811883a 	mov	r8,sp
  8145bc:	4dbfeb16 	blt	r9,r22,81456c <__alt_data_end+0xff81456c>
  8145c0:	dac02817 	ldw	r11,160(sp)
  8145c4:	b0c7883a 	add	r3,r22,r3
  8145c8:	10800044 	addi	r2,r2,1
  8145cc:	42c00015 	stw	r11,0(r8)
  8145d0:	45800115 	stw	r22,4(r8)
  8145d4:	d8c01c15 	stw	r3,112(sp)
  8145d8:	d8801b15 	stw	r2,108(sp)
  8145dc:	010001c4 	movi	r4,7
  8145e0:	2081dd16 	blt	r4,r2,814d58 <___svfiprintf_internal_r+0xd50>
  8145e4:	42000204 	addi	r8,r8,8
  8145e8:	00008f06 	br	814828 <___svfiprintf_internal_r+0x820>
  8145ec:	008020b4 	movhi	r2,130
  8145f0:	10b8ff04 	addi	r2,r2,-7172
  8145f4:	d8802a15 	stw	r2,168(sp)
  8145f8:	d9801d85 	stb	r6,118(sp)
  8145fc:	8880080c 	andi	r2,r17,32
  814600:	10003226 	beq	r2,zero,8146cc <___svfiprintf_internal_r+0x6c4>
  814604:	da802317 	ldw	r10,140(sp)
  814608:	dac02317 	ldw	r11,140(sp)
  81460c:	52400017 	ldw	r9,0(r10)
  814610:	52800117 	ldw	r10,4(r10)
  814614:	5ac00204 	addi	r11,r11,8
  814618:	dac02315 	stw	r11,140(sp)
  81461c:	8880004c 	andi	r2,r17,1
  814620:	10003426 	beq	r2,zero,8146f4 <___svfiprintf_internal_r+0x6ec>
  814624:	4a86b03a 	or	r3,r9,r10
  814628:	1802231e 	bne	r3,zero,814eb8 <___svfiprintf_internal_r+0xeb0>
  81462c:	00800084 	movi	r2,2
  814630:	003f2e06 	br	8142ec <__alt_data_end+0xff8142ec>
  814634:	a9000007 	ldb	r4,0(r21)
  814638:	a805883a 	mov	r2,r21
  81463c:	21c22426 	beq	r4,r7,814ed0 <___svfiprintf_internal_r+0xec8>
  814640:	8c400414 	ori	r17,r17,16
  814644:	003ebc06 	br	814138 <__alt_data_end+0xff814138>
  814648:	8c401014 	ori	r17,r17,64
  81464c:	a9000007 	ldb	r4,0(r21)
  814650:	003eb906 	br	814138 <__alt_data_end+0xff814138>
  814654:	d9801d85 	stb	r6,118(sp)
  814658:	8880080c 	andi	r2,r17,32
  81465c:	10020d1e 	bne	r2,zero,814e94 <___svfiprintf_internal_r+0xe8c>
  814660:	8880040c 	andi	r2,r17,16
  814664:	10021e1e 	bne	r2,zero,814ee0 <___svfiprintf_internal_r+0xed8>
  814668:	8c40100c 	andi	r17,r17,64
  81466c:	88021c26 	beq	r17,zero,814ee0 <___svfiprintf_internal_r+0xed8>
  814670:	dac02317 	ldw	r11,140(sp)
  814674:	da802417 	ldw	r10,144(sp)
  814678:	58800017 	ldw	r2,0(r11)
  81467c:	5ac00104 	addi	r11,r11,4
  814680:	dac02315 	stw	r11,140(sp)
  814684:	1280000d 	sth	r10,0(r2)
  814688:	003e8306 	br	814098 <__alt_data_end+0xff814098>
  81468c:	8c400054 	ori	r17,r17,1
  814690:	a9000007 	ldb	r4,0(r21)
  814694:	003ea806 	br	814138 <__alt_data_end+0xff814138>
  814698:	30803fcc 	andi	r2,r6,255
  81469c:	1080201c 	xori	r2,r2,128
  8146a0:	10bfe004 	addi	r2,r2,-128
  8146a4:	1001f91e 	bne	r2,zero,814e8c <___svfiprintf_internal_r+0xe84>
  8146a8:	01800804 	movi	r6,32
  8146ac:	a9000007 	ldb	r4,0(r21)
  8146b0:	003ea106 	br	814138 <__alt_data_end+0xff814138>
  8146b4:	008020b4 	movhi	r2,130
  8146b8:	10b90404 	addi	r2,r2,-7152
  8146bc:	d8802a15 	stw	r2,168(sp)
  8146c0:	d9801d85 	stb	r6,118(sp)
  8146c4:	8880080c 	andi	r2,r17,32
  8146c8:	103fce1e 	bne	r2,zero,814604 <__alt_data_end+0xff814604>
  8146cc:	8880040c 	andi	r2,r17,16
  8146d0:	1001e526 	beq	r2,zero,814e68 <___svfiprintf_internal_r+0xe60>
  8146d4:	da802317 	ldw	r10,140(sp)
  8146d8:	dac02317 	ldw	r11,140(sp)
  8146dc:	52400017 	ldw	r9,0(r10)
  8146e0:	8880004c 	andi	r2,r17,1
  8146e4:	5ac00104 	addi	r11,r11,4
  8146e8:	dac02315 	stw	r11,140(sp)
  8146ec:	0015883a 	mov	r10,zero
  8146f0:	103fcc1e 	bne	r2,zero,814624 <__alt_data_end+0xff814624>
  8146f4:	00800084 	movi	r2,2
  8146f8:	4a86b03a 	or	r3,r9,r10
  8146fc:	003efb06 	br	8142ec <__alt_data_end+0xff8142ec>
  814700:	8c400414 	ori	r17,r17,16
  814704:	d9801d85 	stb	r6,118(sp)
  814708:	8880080c 	andi	r2,r17,32
  81470c:	d8c02317 	ldw	r3,140(sp)
  814710:	103f651e 	bne	r2,zero,8144a8 <__alt_data_end+0xff8144a8>
  814714:	8880040c 	andi	r2,r17,16
  814718:	1001c61e 	bne	r2,zero,814e34 <___svfiprintf_internal_r+0xe2c>
  81471c:	8880100c 	andi	r2,r17,64
  814720:	1001c426 	beq	r2,zero,814e34 <___svfiprintf_internal_r+0xe2c>
  814724:	1a40000f 	ldh	r9,0(r3)
  814728:	dac02317 	ldw	r11,140(sp)
  81472c:	4815d7fa 	srai	r10,r9,31
  814730:	5ac00104 	addi	r11,r11,4
  814734:	dac02315 	stw	r11,140(sp)
  814738:	5005883a 	mov	r2,r10
  81473c:	103f610e 	bge	r2,zero,8144c4 <__alt_data_end+0xff8144c4>
  814740:	0253c83a 	sub	r9,zero,r9
  814744:	4804c03a 	cmpne	r2,r9,zero
  814748:	0295c83a 	sub	r10,zero,r10
  81474c:	5095c83a 	sub	r10,r10,r2
  814750:	02c00b44 	movi	r11,45
  814754:	dac01d85 	stb	r11,118(sp)
  814758:	8039883a 	mov	fp,r16
  81475c:	00800044 	movi	r2,1
  814760:	4a86b03a 	or	r3,r9,r10
  814764:	003ee406 	br	8142f8 <__alt_data_end+0xff8142f8>
  814768:	a815883a 	mov	r10,r21
  81476c:	d8002115 	stw	zero,132(sp)
  814770:	20bff404 	addi	r2,r4,-48
  814774:	51000007 	ldb	r4,0(r10)
  814778:	da802117 	ldw	r10,132(sp)
  81477c:	ad400044 	addi	r21,r21,1
  814780:	52c002a4 	muli	r11,r10,10
  814784:	a815883a 	mov	r10,r21
  814788:	5885883a 	add	r2,r11,r2
  81478c:	d8802115 	stw	r2,132(sp)
  814790:	20bff404 	addi	r2,r4,-48
  814794:	28bff72e 	bgeu	r5,r2,814774 <__alt_data_end+0xff814774>
  814798:	20bff804 	addi	r2,r4,-32
  81479c:	18be692e 	bgeu	r3,r2,814144 <__alt_data_end+0xff814144>
  8147a0:	d9801d85 	stb	r6,118(sp)
  8147a4:	2000ce26 	beq	r4,zero,814ae0 <___svfiprintf_internal_r+0xad8>
  8147a8:	02800044 	movi	r10,1
  8147ac:	dac01004 	addi	r11,sp,64
  8147b0:	da802015 	stw	r10,128(sp)
  8147b4:	d9001005 	stb	r4,64(sp)
  8147b8:	d8001d85 	stb	zero,118(sp)
  8147bc:	5039883a 	mov	fp,r10
  8147c0:	dac02615 	stw	r11,152(sp)
  8147c4:	003f4f06 	br	814504 <__alt_data_end+0xff814504>
  8147c8:	8c402014 	ori	r17,r17,128
  8147cc:	a9000007 	ldb	r4,0(r21)
  8147d0:	003e5906 	br	814138 <__alt_data_end+0xff814138>
  8147d4:	01800ac4 	movi	r6,43
  8147d8:	a9000007 	ldb	r4,0(r21)
  8147dc:	003e5606 	br	814138 <__alt_data_end+0xff814138>
  8147e0:	a9000007 	ldb	r4,0(r21)
  8147e4:	aa800044 	addi	r10,r21,1
  8147e8:	22420626 	beq	r4,r9,815004 <___svfiprintf_internal_r+0xffc>
  8147ec:	20bff404 	addi	r2,r4,-48
  8147f0:	502b883a 	mov	r21,r10
  8147f4:	0021883a 	mov	r16,zero
  8147f8:	28be5036 	bltu	r5,r2,81413c <__alt_data_end+0xff81413c>
  8147fc:	a9000007 	ldb	r4,0(r21)
  814800:	840002a4 	muli	r16,r16,10
  814804:	ad400044 	addi	r21,r21,1
  814808:	1421883a 	add	r16,r2,r16
  81480c:	20bff404 	addi	r2,r4,-48
  814810:	28bffa2e 	bgeu	r5,r2,8147fc <__alt_data_end+0xff8147fc>
  814814:	803e490e 	bge	r16,zero,81413c <__alt_data_end+0xff81413c>
  814818:	043fffc4 	movi	r16,-1
  81481c:	003e4706 	br	81413c <__alt_data_end+0xff81413c>
  814820:	d8c01c17 	ldw	r3,112(sp)
  814824:	d8801b17 	ldw	r2,108(sp)
  814828:	d9001d87 	ldb	r4,118(sp)
  81482c:	20000b26 	beq	r4,zero,81485c <___svfiprintf_internal_r+0x854>
  814830:	d9001d84 	addi	r4,sp,118
  814834:	18c00044 	addi	r3,r3,1
  814838:	10800044 	addi	r2,r2,1
  81483c:	41000015 	stw	r4,0(r8)
  814840:	01000044 	movi	r4,1
  814844:	41000115 	stw	r4,4(r8)
  814848:	d8c01c15 	stw	r3,112(sp)
  81484c:	d8801b15 	stw	r2,108(sp)
  814850:	010001c4 	movi	r4,7
  814854:	20811e16 	blt	r4,r2,814cd0 <___svfiprintf_internal_r+0xcc8>
  814858:	42000204 	addi	r8,r8,8
  81485c:	da802217 	ldw	r10,136(sp)
  814860:	50000b26 	beq	r10,zero,814890 <___svfiprintf_internal_r+0x888>
  814864:	d9001d04 	addi	r4,sp,116
  814868:	18c00084 	addi	r3,r3,2
  81486c:	10800044 	addi	r2,r2,1
  814870:	41000015 	stw	r4,0(r8)
  814874:	01000084 	movi	r4,2
  814878:	41000115 	stw	r4,4(r8)
  81487c:	d8c01c15 	stw	r3,112(sp)
  814880:	d8801b15 	stw	r2,108(sp)
  814884:	010001c4 	movi	r4,7
  814888:	20811a16 	blt	r4,r2,814cf4 <___svfiprintf_internal_r+0xcec>
  81488c:	42000204 	addi	r8,r8,8
  814890:	dac02517 	ldw	r11,148(sp)
  814894:	01002004 	movi	r4,128
  814898:	5900a826 	beq	r11,r4,814b3c <___svfiprintf_internal_r+0xb34>
  81489c:	8721c83a 	sub	r16,r16,fp
  8148a0:	0400260e 	bge	zero,r16,81493c <___svfiprintf_internal_r+0x934>
  8148a4:	01c00404 	movi	r7,16
  8148a8:	3c019d0e 	bge	r7,r16,814f20 <___svfiprintf_internal_r+0xf18>
  8148ac:	010020b4 	movhi	r4,130
  8148b0:	21396c04 	addi	r4,r4,-6736
  8148b4:	d9002215 	stw	r4,136(sp)
  8148b8:	382f883a 	mov	r23,r7
  8148bc:	058001c4 	movi	r22,7
  8148c0:	00000306 	br	8148d0 <___svfiprintf_internal_r+0x8c8>
  8148c4:	843ffc04 	addi	r16,r16,-16
  8148c8:	42000204 	addi	r8,r8,8
  8148cc:	bc00110e 	bge	r23,r16,814914 <___svfiprintf_internal_r+0x90c>
  8148d0:	18c00404 	addi	r3,r3,16
  8148d4:	10800044 	addi	r2,r2,1
  8148d8:	44c00015 	stw	r19,0(r8)
  8148dc:	45c00115 	stw	r23,4(r8)
  8148e0:	d8c01c15 	stw	r3,112(sp)
  8148e4:	d8801b15 	stw	r2,108(sp)
  8148e8:	b0bff60e 	bge	r22,r2,8148c4 <__alt_data_end+0xff8148c4>
  8148ec:	9009883a 	mov	r4,r18
  8148f0:	a00b883a 	mov	r5,r20
  8148f4:	d9801a04 	addi	r6,sp,104
  8148f8:	0813e3c0 	call	813e3c <__ssprint_r>
  8148fc:	10007e1e 	bne	r2,zero,814af8 <___svfiprintf_internal_r+0xaf0>
  814900:	843ffc04 	addi	r16,r16,-16
  814904:	d8c01c17 	ldw	r3,112(sp)
  814908:	d8801b17 	ldw	r2,108(sp)
  81490c:	d811883a 	mov	r8,sp
  814910:	bc3fef16 	blt	r23,r16,8148d0 <__alt_data_end+0xff8148d0>
  814914:	da802217 	ldw	r10,136(sp)
  814918:	1c07883a 	add	r3,r3,r16
  81491c:	10800044 	addi	r2,r2,1
  814920:	42800015 	stw	r10,0(r8)
  814924:	44000115 	stw	r16,4(r8)
  814928:	d8c01c15 	stw	r3,112(sp)
  81492c:	d8801b15 	stw	r2,108(sp)
  814930:	010001c4 	movi	r4,7
  814934:	2080ce16 	blt	r4,r2,814c70 <___svfiprintf_internal_r+0xc68>
  814938:	42000204 	addi	r8,r8,8
  81493c:	dac02617 	ldw	r11,152(sp)
  814940:	1f07883a 	add	r3,r3,fp
  814944:	10800044 	addi	r2,r2,1
  814948:	42c00015 	stw	r11,0(r8)
  81494c:	47000115 	stw	fp,4(r8)
  814950:	d8c01c15 	stw	r3,112(sp)
  814954:	d8801b15 	stw	r2,108(sp)
  814958:	010001c4 	movi	r4,7
  81495c:	2080a316 	blt	r4,r2,814bec <___svfiprintf_internal_r+0xbe4>
  814960:	42000204 	addi	r8,r8,8
  814964:	8c40010c 	andi	r17,r17,4
  814968:	88002b26 	beq	r17,zero,814a18 <___svfiprintf_internal_r+0xa10>
  81496c:	da802117 	ldw	r10,132(sp)
  814970:	dac02017 	ldw	r11,128(sp)
  814974:	52e1c83a 	sub	r16,r10,r11
  814978:	0400270e 	bge	zero,r16,814a18 <___svfiprintf_internal_r+0xa10>
  81497c:	04400404 	movi	r17,16
  814980:	d8801b17 	ldw	r2,108(sp)
  814984:	8c01900e 	bge	r17,r16,814fc8 <___svfiprintf_internal_r+0xfc0>
  814988:	014020b4 	movhi	r5,130
  81498c:	29797004 	addi	r5,r5,-6720
  814990:	d9402815 	stw	r5,160(sp)
  814994:	070001c4 	movi	fp,7
  814998:	00000306 	br	8149a8 <___svfiprintf_internal_r+0x9a0>
  81499c:	843ffc04 	addi	r16,r16,-16
  8149a0:	42000204 	addi	r8,r8,8
  8149a4:	8c00130e 	bge	r17,r16,8149f4 <___svfiprintf_internal_r+0x9ec>
  8149a8:	028020b4 	movhi	r10,130
  8149ac:	18c00404 	addi	r3,r3,16
  8149b0:	10800044 	addi	r2,r2,1
  8149b4:	52b97004 	addi	r10,r10,-6720
  8149b8:	42800015 	stw	r10,0(r8)
  8149bc:	44400115 	stw	r17,4(r8)
  8149c0:	d8c01c15 	stw	r3,112(sp)
  8149c4:	d8801b15 	stw	r2,108(sp)
  8149c8:	e0bff40e 	bge	fp,r2,81499c <__alt_data_end+0xff81499c>
  8149cc:	9009883a 	mov	r4,r18
  8149d0:	a00b883a 	mov	r5,r20
  8149d4:	d9801a04 	addi	r6,sp,104
  8149d8:	0813e3c0 	call	813e3c <__ssprint_r>
  8149dc:	1000461e 	bne	r2,zero,814af8 <___svfiprintf_internal_r+0xaf0>
  8149e0:	843ffc04 	addi	r16,r16,-16
  8149e4:	d8c01c17 	ldw	r3,112(sp)
  8149e8:	d8801b17 	ldw	r2,108(sp)
  8149ec:	d811883a 	mov	r8,sp
  8149f0:	8c3fed16 	blt	r17,r16,8149a8 <__alt_data_end+0xff8149a8>
  8149f4:	dac02817 	ldw	r11,160(sp)
  8149f8:	1c07883a 	add	r3,r3,r16
  8149fc:	10800044 	addi	r2,r2,1
  814a00:	42c00015 	stw	r11,0(r8)
  814a04:	44000115 	stw	r16,4(r8)
  814a08:	d8c01c15 	stw	r3,112(sp)
  814a0c:	d8801b15 	stw	r2,108(sp)
  814a10:	010001c4 	movi	r4,7
  814a14:	2080fd16 	blt	r4,r2,814e0c <___svfiprintf_internal_r+0xe04>
  814a18:	dd802017 	ldw	r22,128(sp)
  814a1c:	da802117 	ldw	r10,132(sp)
  814a20:	b280010e 	bge	r22,r10,814a28 <___svfiprintf_internal_r+0xa20>
  814a24:	502d883a 	mov	r22,r10
  814a28:	dac02417 	ldw	r11,144(sp)
  814a2c:	5d97883a 	add	r11,r11,r22
  814a30:	dac02415 	stw	r11,144(sp)
  814a34:	1800751e 	bne	r3,zero,814c0c <___svfiprintf_internal_r+0xc04>
  814a38:	a8800007 	ldb	r2,0(r21)
  814a3c:	d8001b15 	stw	zero,108(sp)
  814a40:	d811883a 	mov	r8,sp
  814a44:	103d961e 	bne	r2,zero,8140a0 <__alt_data_end+0xff8140a0>
  814a48:	a82d883a 	mov	r22,r21
  814a4c:	003dad06 	br	814104 <__alt_data_end+0xff814104>
  814a50:	10803fcc 	andi	r2,r2,255
  814a54:	00c00044 	movi	r3,1
  814a58:	10fe2f1e 	bne	r2,r3,814318 <__alt_data_end+0xff814318>
  814a5c:	5000e026 	beq	r10,zero,814de0 <___svfiprintf_internal_r+0xdd8>
  814a60:	dc002015 	stw	r16,128(sp)
  814a64:	dc402215 	stw	r17,136(sp)
  814a68:	dd801a04 	addi	r22,sp,104
  814a6c:	402f883a 	mov	r23,r8
  814a70:	5839883a 	mov	fp,r11
  814a74:	4821883a 	mov	r16,r9
  814a78:	5023883a 	mov	r17,r10
  814a7c:	8009883a 	mov	r4,r16
  814a80:	880b883a 	mov	r5,r17
  814a84:	01800284 	movi	r6,10
  814a88:	000f883a 	mov	r7,zero
  814a8c:	08170a40 	call	8170a4 <__umoddi3>
  814a90:	10800c04 	addi	r2,r2,48
  814a94:	b5bfffc4 	addi	r22,r22,-1
  814a98:	8009883a 	mov	r4,r16
  814a9c:	880b883a 	mov	r5,r17
  814aa0:	01800284 	movi	r6,10
  814aa4:	000f883a 	mov	r7,zero
  814aa8:	b0800005 	stb	r2,0(r22)
  814aac:	0816ae40 	call	816ae4 <__udivdi3>
  814ab0:	1021883a 	mov	r16,r2
  814ab4:	10c4b03a 	or	r2,r2,r3
  814ab8:	1823883a 	mov	r17,r3
  814abc:	103fef1e 	bne	r2,zero,814a7c <__alt_data_end+0xff814a7c>
  814ac0:	da801e17 	ldw	r10,120(sp)
  814ac4:	e017883a 	mov	r11,fp
  814ac8:	dc002017 	ldw	r16,128(sp)
  814acc:	dc402217 	ldw	r17,136(sp)
  814ad0:	b811883a 	mov	r8,r23
  814ad4:	dd802615 	stw	r22,152(sp)
  814ad8:	55b9c83a 	sub	fp,r10,r22
  814adc:	003e2006 	br	814360 <__alt_data_end+0xff814360>
  814ae0:	d8801c17 	ldw	r2,112(sp)
  814ae4:	10000426 	beq	r2,zero,814af8 <___svfiprintf_internal_r+0xaf0>
  814ae8:	d9002917 	ldw	r4,164(sp)
  814aec:	d9402717 	ldw	r5,156(sp)
  814af0:	d9801a04 	addi	r6,sp,104
  814af4:	0813e3c0 	call	813e3c <__ssprint_r>
  814af8:	da802717 	ldw	r10,156(sp)
  814afc:	5080030b 	ldhu	r2,12(r10)
  814b00:	1080100c 	andi	r2,r2,64
  814b04:	1000511e 	bne	r2,zero,814c4c <___svfiprintf_internal_r+0xc44>
  814b08:	d8802417 	ldw	r2,144(sp)
  814b0c:	dfc03617 	ldw	ra,216(sp)
  814b10:	df003517 	ldw	fp,212(sp)
  814b14:	ddc03417 	ldw	r23,208(sp)
  814b18:	dd803317 	ldw	r22,204(sp)
  814b1c:	dd403217 	ldw	r21,200(sp)
  814b20:	dd003117 	ldw	r20,196(sp)
  814b24:	dcc03017 	ldw	r19,192(sp)
  814b28:	dc802f17 	ldw	r18,188(sp)
  814b2c:	dc402e17 	ldw	r17,184(sp)
  814b30:	dc002d17 	ldw	r16,180(sp)
  814b34:	dec03704 	addi	sp,sp,220
  814b38:	f800283a 	ret
  814b3c:	da802117 	ldw	r10,132(sp)
  814b40:	dac02017 	ldw	r11,128(sp)
  814b44:	52edc83a 	sub	r22,r10,r11
  814b48:	05bf540e 	bge	zero,r22,81489c <__alt_data_end+0xff81489c>
  814b4c:	02400404 	movi	r9,16
  814b50:	4d81210e 	bge	r9,r22,814fd8 <___svfiprintf_internal_r+0xfd0>
  814b54:	014020b4 	movhi	r5,130
  814b58:	29796c04 	addi	r5,r5,-6736
  814b5c:	d9402215 	stw	r5,136(sp)
  814b60:	05c001c4 	movi	r23,7
  814b64:	00000306 	br	814b74 <___svfiprintf_internal_r+0xb6c>
  814b68:	b5bffc04 	addi	r22,r22,-16
  814b6c:	42000204 	addi	r8,r8,8
  814b70:	4d80130e 	bge	r9,r22,814bc0 <___svfiprintf_internal_r+0xbb8>
  814b74:	18c00404 	addi	r3,r3,16
  814b78:	10800044 	addi	r2,r2,1
  814b7c:	44c00015 	stw	r19,0(r8)
  814b80:	42400115 	stw	r9,4(r8)
  814b84:	d8c01c15 	stw	r3,112(sp)
  814b88:	d8801b15 	stw	r2,108(sp)
  814b8c:	b8bff60e 	bge	r23,r2,814b68 <__alt_data_end+0xff814b68>
  814b90:	9009883a 	mov	r4,r18
  814b94:	a00b883a 	mov	r5,r20
  814b98:	d9801a04 	addi	r6,sp,104
  814b9c:	da402c15 	stw	r9,176(sp)
  814ba0:	0813e3c0 	call	813e3c <__ssprint_r>
  814ba4:	da402c17 	ldw	r9,176(sp)
  814ba8:	103fd31e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814bac:	b5bffc04 	addi	r22,r22,-16
  814bb0:	d8c01c17 	ldw	r3,112(sp)
  814bb4:	d8801b17 	ldw	r2,108(sp)
  814bb8:	d811883a 	mov	r8,sp
  814bbc:	4dbfed16 	blt	r9,r22,814b74 <__alt_data_end+0xff814b74>
  814bc0:	da802217 	ldw	r10,136(sp)
  814bc4:	1d87883a 	add	r3,r3,r22
  814bc8:	10800044 	addi	r2,r2,1
  814bcc:	42800015 	stw	r10,0(r8)
  814bd0:	45800115 	stw	r22,4(r8)
  814bd4:	d8c01c15 	stw	r3,112(sp)
  814bd8:	d8801b15 	stw	r2,108(sp)
  814bdc:	010001c4 	movi	r4,7
  814be0:	2080c616 	blt	r4,r2,814efc <___svfiprintf_internal_r+0xef4>
  814be4:	42000204 	addi	r8,r8,8
  814be8:	003f2c06 	br	81489c <__alt_data_end+0xff81489c>
  814bec:	9009883a 	mov	r4,r18
  814bf0:	a00b883a 	mov	r5,r20
  814bf4:	d9801a04 	addi	r6,sp,104
  814bf8:	0813e3c0 	call	813e3c <__ssprint_r>
  814bfc:	103fbe1e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814c00:	d8c01c17 	ldw	r3,112(sp)
  814c04:	d811883a 	mov	r8,sp
  814c08:	003f5606 	br	814964 <__alt_data_end+0xff814964>
  814c0c:	9009883a 	mov	r4,r18
  814c10:	a00b883a 	mov	r5,r20
  814c14:	d9801a04 	addi	r6,sp,104
  814c18:	0813e3c0 	call	813e3c <__ssprint_r>
  814c1c:	103f8626 	beq	r2,zero,814a38 <__alt_data_end+0xff814a38>
  814c20:	003fb506 	br	814af8 <__alt_data_end+0xff814af8>
  814c24:	10803fcc 	andi	r2,r2,255
  814c28:	10003b1e 	bne	r2,zero,814d18 <___svfiprintf_internal_r+0xd10>
  814c2c:	8880004c 	andi	r2,r17,1
  814c30:	10007d26 	beq	r2,zero,814e28 <___svfiprintf_internal_r+0xe20>
  814c34:	00800c04 	movi	r2,48
  814c38:	d8c019c4 	addi	r3,sp,103
  814c3c:	d88019c5 	stb	r2,103(sp)
  814c40:	df002b17 	ldw	fp,172(sp)
  814c44:	d8c02615 	stw	r3,152(sp)
  814c48:	003dc506 	br	814360 <__alt_data_end+0xff814360>
  814c4c:	00bfffc4 	movi	r2,-1
  814c50:	003fae06 	br	814b0c <__alt_data_end+0xff814b0c>
  814c54:	9009883a 	mov	r4,r18
  814c58:	a00b883a 	mov	r5,r20
  814c5c:	d9801a04 	addi	r6,sp,104
  814c60:	0813e3c0 	call	813e3c <__ssprint_r>
  814c64:	103fa41e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814c68:	d811883a 	mov	r8,sp
  814c6c:	003d2206 	br	8140f8 <__alt_data_end+0xff8140f8>
  814c70:	9009883a 	mov	r4,r18
  814c74:	a00b883a 	mov	r5,r20
  814c78:	d9801a04 	addi	r6,sp,104
  814c7c:	0813e3c0 	call	813e3c <__ssprint_r>
  814c80:	103f9d1e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814c84:	d8c01c17 	ldw	r3,112(sp)
  814c88:	d8801b17 	ldw	r2,108(sp)
  814c8c:	d811883a 	mov	r8,sp
  814c90:	003f2a06 	br	81493c <__alt_data_end+0xff81493c>
  814c94:	d9402a17 	ldw	r5,168(sp)
  814c98:	d8c01a04 	addi	r3,sp,104
  814c9c:	488003cc 	andi	r2,r9,15
  814ca0:	5008973a 	slli	r4,r10,28
  814ca4:	2885883a 	add	r2,r5,r2
  814ca8:	4812d13a 	srli	r9,r9,4
  814cac:	10800003 	ldbu	r2,0(r2)
  814cb0:	5014d13a 	srli	r10,r10,4
  814cb4:	18ffffc4 	addi	r3,r3,-1
  814cb8:	2252b03a 	or	r9,r4,r9
  814cbc:	18800005 	stb	r2,0(r3)
  814cc0:	4a84b03a 	or	r2,r9,r10
  814cc4:	103ff51e 	bne	r2,zero,814c9c <__alt_data_end+0xff814c9c>
  814cc8:	d8c02615 	stw	r3,152(sp)
  814ccc:	003da206 	br	814358 <__alt_data_end+0xff814358>
  814cd0:	9009883a 	mov	r4,r18
  814cd4:	a00b883a 	mov	r5,r20
  814cd8:	d9801a04 	addi	r6,sp,104
  814cdc:	0813e3c0 	call	813e3c <__ssprint_r>
  814ce0:	103f851e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814ce4:	d8c01c17 	ldw	r3,112(sp)
  814ce8:	d8801b17 	ldw	r2,108(sp)
  814cec:	d811883a 	mov	r8,sp
  814cf0:	003eda06 	br	81485c <__alt_data_end+0xff81485c>
  814cf4:	9009883a 	mov	r4,r18
  814cf8:	a00b883a 	mov	r5,r20
  814cfc:	d9801a04 	addi	r6,sp,104
  814d00:	0813e3c0 	call	813e3c <__ssprint_r>
  814d04:	103f7c1e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814d08:	d8c01c17 	ldw	r3,112(sp)
  814d0c:	d8801b17 	ldw	r2,108(sp)
  814d10:	d811883a 	mov	r8,sp
  814d14:	003ede06 	br	814890 <__alt_data_end+0xff814890>
  814d18:	da801a04 	addi	r10,sp,104
  814d1c:	da802615 	stw	r10,152(sp)
  814d20:	003d8f06 	br	814360 <__alt_data_end+0xff814360>
  814d24:	8880040c 	andi	r2,r17,16
  814d28:	10004c1e 	bne	r2,zero,814e5c <___svfiprintf_internal_r+0xe54>
  814d2c:	8880100c 	andi	r2,r17,64
  814d30:	da802317 	ldw	r10,140(sp)
  814d34:	10004a26 	beq	r2,zero,814e60 <___svfiprintf_internal_r+0xe58>
  814d38:	5240000b 	ldhu	r9,0(r10)
  814d3c:	dac02317 	ldw	r11,140(sp)
  814d40:	0015883a 	mov	r10,zero
  814d44:	00800044 	movi	r2,1
  814d48:	5ac00104 	addi	r11,r11,4
  814d4c:	dac02315 	stw	r11,140(sp)
  814d50:	4807883a 	mov	r3,r9
  814d54:	003d6506 	br	8142ec <__alt_data_end+0xff8142ec>
  814d58:	9009883a 	mov	r4,r18
  814d5c:	a00b883a 	mov	r5,r20
  814d60:	d9801a04 	addi	r6,sp,104
  814d64:	0813e3c0 	call	813e3c <__ssprint_r>
  814d68:	103f631e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814d6c:	d8c01c17 	ldw	r3,112(sp)
  814d70:	d8801b17 	ldw	r2,108(sp)
  814d74:	d811883a 	mov	r8,sp
  814d78:	003eab06 	br	814828 <__alt_data_end+0xff814828>
  814d7c:	8880040c 	andi	r2,r17,16
  814d80:	1000331e 	bne	r2,zero,814e50 <___svfiprintf_internal_r+0xe48>
  814d84:	8880100c 	andi	r2,r17,64
  814d88:	da802317 	ldw	r10,140(sp)
  814d8c:	10003126 	beq	r2,zero,814e54 <___svfiprintf_internal_r+0xe4c>
  814d90:	5240000b 	ldhu	r9,0(r10)
  814d94:	dac02317 	ldw	r11,140(sp)
  814d98:	0015883a 	mov	r10,zero
  814d9c:	0005883a 	mov	r2,zero
  814da0:	5ac00104 	addi	r11,r11,4
  814da4:	dac02315 	stw	r11,140(sp)
  814da8:	4807883a 	mov	r3,r9
  814dac:	003d4f06 	br	8142ec <__alt_data_end+0xff8142ec>
  814db0:	10803fcc 	andi	r2,r2,255
  814db4:	1080201c 	xori	r2,r2,128
  814db8:	10bfe004 	addi	r2,r2,-128
  814dbc:	01000c04 	movi	r4,48
  814dc0:	11005b26 	beq	r2,r4,814f30 <___svfiprintf_internal_r+0xf28>
  814dc4:	da802617 	ldw	r10,152(sp)
  814dc8:	d8801e17 	ldw	r2,120(sp)
  814dcc:	193fffc5 	stb	r4,-1(r3)
  814dd0:	52bfffc4 	addi	r10,r10,-1
  814dd4:	da802615 	stw	r10,152(sp)
  814dd8:	12b9c83a 	sub	fp,r2,r10
  814ddc:	003d6006 	br	814360 <__alt_data_end+0xff814360>
  814de0:	00800244 	movi	r2,9
  814de4:	127f1e36 	bltu	r2,r9,814a60 <__alt_data_end+0xff814a60>
  814de8:	4a400c04 	addi	r9,r9,48
  814dec:	d8c019c4 	addi	r3,sp,103
  814df0:	da4019c5 	stb	r9,103(sp)
  814df4:	df002b17 	ldw	fp,172(sp)
  814df8:	d8c02615 	stw	r3,152(sp)
  814dfc:	003d5806 	br	814360 <__alt_data_end+0xff814360>
  814e00:	d8802315 	stw	r2,140(sp)
  814e04:	a9000007 	ldb	r4,0(r21)
  814e08:	003ccb06 	br	814138 <__alt_data_end+0xff814138>
  814e0c:	9009883a 	mov	r4,r18
  814e10:	a00b883a 	mov	r5,r20
  814e14:	d9801a04 	addi	r6,sp,104
  814e18:	0813e3c0 	call	813e3c <__ssprint_r>
  814e1c:	103f361e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814e20:	d8c01c17 	ldw	r3,112(sp)
  814e24:	003efc06 	br	814a18 <__alt_data_end+0xff814a18>
  814e28:	d8c01a04 	addi	r3,sp,104
  814e2c:	d8c02615 	stw	r3,152(sp)
  814e30:	003d4b06 	br	814360 <__alt_data_end+0xff814360>
  814e34:	da802317 	ldw	r10,140(sp)
  814e38:	1a400017 	ldw	r9,0(r3)
  814e3c:	52800104 	addi	r10,r10,4
  814e40:	da802315 	stw	r10,140(sp)
  814e44:	4815d7fa 	srai	r10,r9,31
  814e48:	5005883a 	mov	r2,r10
  814e4c:	003d9c06 	br	8144c0 <__alt_data_end+0xff8144c0>
  814e50:	da802317 	ldw	r10,140(sp)
  814e54:	52400017 	ldw	r9,0(r10)
  814e58:	003fce06 	br	814d94 <__alt_data_end+0xff814d94>
  814e5c:	da802317 	ldw	r10,140(sp)
  814e60:	52400017 	ldw	r9,0(r10)
  814e64:	003fb506 	br	814d3c <__alt_data_end+0xff814d3c>
  814e68:	8880100c 	andi	r2,r17,64
  814e6c:	da802317 	ldw	r10,140(sp)
  814e70:	103e1926 	beq	r2,zero,8146d8 <__alt_data_end+0xff8146d8>
  814e74:	dac02317 	ldw	r11,140(sp)
  814e78:	5240000b 	ldhu	r9,0(r10)
  814e7c:	0015883a 	mov	r10,zero
  814e80:	5ac00104 	addi	r11,r11,4
  814e84:	dac02315 	stw	r11,140(sp)
  814e88:	003de406 	br	81461c <__alt_data_end+0xff81461c>
  814e8c:	a9000007 	ldb	r4,0(r21)
  814e90:	003ca906 	br	814138 <__alt_data_end+0xff814138>
  814e94:	dac02317 	ldw	r11,140(sp)
  814e98:	da802417 	ldw	r10,144(sp)
  814e9c:	58800017 	ldw	r2,0(r11)
  814ea0:	5007d7fa 	srai	r3,r10,31
  814ea4:	5ac00104 	addi	r11,r11,4
  814ea8:	dac02315 	stw	r11,140(sp)
  814eac:	12800015 	stw	r10,0(r2)
  814eb0:	10c00115 	stw	r3,4(r2)
  814eb4:	003c7806 	br	814098 <__alt_data_end+0xff814098>
  814eb8:	00800c04 	movi	r2,48
  814ebc:	d8801d05 	stb	r2,116(sp)
  814ec0:	d9001d45 	stb	r4,117(sp)
  814ec4:	8c400094 	ori	r17,r17,2
  814ec8:	00800084 	movi	r2,2
  814ecc:	003d0706 	br	8142ec <__alt_data_end+0xff8142ec>
  814ed0:	ad400044 	addi	r21,r21,1
  814ed4:	8c400814 	ori	r17,r17,32
  814ed8:	11000047 	ldb	r4,1(r2)
  814edc:	003c9606 	br	814138 <__alt_data_end+0xff814138>
  814ee0:	dac02317 	ldw	r11,140(sp)
  814ee4:	da802417 	ldw	r10,144(sp)
  814ee8:	58800017 	ldw	r2,0(r11)
  814eec:	5ac00104 	addi	r11,r11,4
  814ef0:	dac02315 	stw	r11,140(sp)
  814ef4:	12800015 	stw	r10,0(r2)
  814ef8:	003c6706 	br	814098 <__alt_data_end+0xff814098>
  814efc:	9009883a 	mov	r4,r18
  814f00:	a00b883a 	mov	r5,r20
  814f04:	d9801a04 	addi	r6,sp,104
  814f08:	0813e3c0 	call	813e3c <__ssprint_r>
  814f0c:	103efa1e 	bne	r2,zero,814af8 <__alt_data_end+0xff814af8>
  814f10:	d8c01c17 	ldw	r3,112(sp)
  814f14:	d8801b17 	ldw	r2,108(sp)
  814f18:	d811883a 	mov	r8,sp
  814f1c:	003e5f06 	br	81489c <__alt_data_end+0xff81489c>
  814f20:	02c020b4 	movhi	r11,130
  814f24:	5af96c04 	addi	r11,r11,-6736
  814f28:	dac02215 	stw	r11,136(sp)
  814f2c:	003e7906 	br	814914 <__alt_data_end+0xff814914>
  814f30:	da801e17 	ldw	r10,120(sp)
  814f34:	d8c02617 	ldw	r3,152(sp)
  814f38:	50f9c83a 	sub	fp,r10,r3
  814f3c:	003d0806 	br	814360 <__alt_data_end+0xff814360>
  814f40:	da002c15 	stw	r8,176(sp)
  814f44:	080c0580 	call	80c058 <strlen>
  814f48:	1039883a 	mov	fp,r2
  814f4c:	dac01d83 	ldbu	r11,118(sp)
  814f50:	ddc02315 	stw	r23,140(sp)
  814f54:	0021883a 	mov	r16,zero
  814f58:	da002c17 	ldw	r8,176(sp)
  814f5c:	003d0006 	br	814360 <__alt_data_end+0xff814360>
  814f60:	00800184 	movi	r2,6
  814f64:	1400012e 	bgeu	r2,r16,814f6c <___svfiprintf_internal_r+0xf64>
  814f68:	1021883a 	mov	r16,r2
  814f6c:	8039883a 	mov	fp,r16
  814f70:	802d883a 	mov	r22,r16
  814f74:	80002116 	blt	r16,zero,814ffc <___svfiprintf_internal_r+0xff4>
  814f78:	008020b4 	movhi	r2,130
  814f7c:	10b90904 	addi	r2,r2,-7132
  814f80:	dd802015 	stw	r22,128(sp)
  814f84:	ddc02315 	stw	r23,140(sp)
  814f88:	d8802615 	stw	r2,152(sp)
  814f8c:	003d5d06 	br	814504 <__alt_data_end+0xff814504>
  814f90:	04001004 	movi	r16,64
  814f94:	800b883a 	mov	r5,r16
  814f98:	080b0900 	call	80b090 <_malloc_r>
  814f9c:	da802717 	ldw	r10,156(sp)
  814fa0:	50800015 	stw	r2,0(r10)
  814fa4:	50800415 	stw	r2,16(r10)
  814fa8:	10002026 	beq	r2,zero,81502c <___svfiprintf_internal_r+0x1024>
  814fac:	da802717 	ldw	r10,156(sp)
  814fb0:	54000515 	stw	r16,20(r10)
  814fb4:	003c2806 	br	814058 <__alt_data_end+0xff814058>
  814fb8:	010020b4 	movhi	r4,130
  814fbc:	21397004 	addi	r4,r4,-6720
  814fc0:	d9002815 	stw	r4,160(sp)
  814fc4:	003d7e06 	br	8145c0 <__alt_data_end+0xff8145c0>
  814fc8:	010020b4 	movhi	r4,130
  814fcc:	21397004 	addi	r4,r4,-6720
  814fd0:	d9002815 	stw	r4,160(sp)
  814fd4:	003e8706 	br	8149f4 <__alt_data_end+0xff8149f4>
  814fd8:	010020b4 	movhi	r4,130
  814fdc:	21396c04 	addi	r4,r4,-6736
  814fe0:	d9002215 	stw	r4,136(sp)
  814fe4:	003ef606 	br	814bc0 <__alt_data_end+0xff814bc0>
  814fe8:	8039883a 	mov	fp,r16
  814fec:	dac01d83 	ldbu	r11,118(sp)
  814ff0:	ddc02315 	stw	r23,140(sp)
  814ff4:	0021883a 	mov	r16,zero
  814ff8:	003cd906 	br	814360 <__alt_data_end+0xff814360>
  814ffc:	002d883a 	mov	r22,zero
  815000:	003fdd06 	br	814f78 <__alt_data_end+0xff814f78>
  815004:	dac02317 	ldw	r11,140(sp)
  815008:	a805883a 	mov	r2,r21
  81500c:	502b883a 	mov	r21,r10
  815010:	5c000017 	ldw	r16,0(r11)
  815014:	59000104 	addi	r4,r11,4
  815018:	d9002315 	stw	r4,140(sp)
  81501c:	803fae0e 	bge	r16,zero,814ed8 <__alt_data_end+0xff814ed8>
  815020:	043fffc4 	movi	r16,-1
  815024:	11000047 	ldb	r4,1(r2)
  815028:	003c4306 	br	814138 <__alt_data_end+0xff814138>
  81502c:	dac02917 	ldw	r11,164(sp)
  815030:	00800304 	movi	r2,12
  815034:	58800015 	stw	r2,0(r11)
  815038:	00bfffc4 	movi	r2,-1
  81503c:	003eb306 	br	814b0c <__alt_data_end+0xff814b0c>

00815040 <__sprint_r.part.0>:
  815040:	28801917 	ldw	r2,100(r5)
  815044:	defff604 	addi	sp,sp,-40
  815048:	dd400515 	stw	r21,20(sp)
  81504c:	dcc00315 	stw	r19,12(sp)
  815050:	dfc00915 	stw	ra,36(sp)
  815054:	df000815 	stw	fp,32(sp)
  815058:	ddc00715 	stw	r23,28(sp)
  81505c:	dd800615 	stw	r22,24(sp)
  815060:	dd000415 	stw	r20,16(sp)
  815064:	dc800215 	stw	r18,8(sp)
  815068:	dc400115 	stw	r17,4(sp)
  81506c:	dc000015 	stw	r16,0(sp)
  815070:	1088000c 	andi	r2,r2,8192
  815074:	2827883a 	mov	r19,r5
  815078:	302b883a 	mov	r21,r6
  81507c:	10002d26 	beq	r2,zero,815134 <__sprint_r.part.0+0xf4>
  815080:	30800217 	ldw	r2,8(r6)
  815084:	35800017 	ldw	r22,0(r6)
  815088:	10002826 	beq	r2,zero,81512c <__sprint_r.part.0+0xec>
  81508c:	2029883a 	mov	r20,r4
  815090:	b5c00104 	addi	r23,r22,4
  815094:	04bfffc4 	movi	r18,-1
  815098:	bc400017 	ldw	r17,0(r23)
  81509c:	b4000017 	ldw	r16,0(r22)
  8150a0:	0039883a 	mov	fp,zero
  8150a4:	8822d0ba 	srli	r17,r17,2
  8150a8:	04400316 	blt	zero,r17,8150b8 <__sprint_r.part.0+0x78>
  8150ac:	00001806 	br	815110 <__sprint_r.part.0+0xd0>
  8150b0:	84000104 	addi	r16,r16,4
  8150b4:	8f001526 	beq	r17,fp,81510c <__sprint_r.part.0+0xcc>
  8150b8:	81400017 	ldw	r5,0(r16)
  8150bc:	a009883a 	mov	r4,r20
  8150c0:	980d883a 	mov	r6,r19
  8150c4:	081671c0 	call	81671c <_fputwc_r>
  8150c8:	e7000044 	addi	fp,fp,1
  8150cc:	14bff81e 	bne	r2,r18,8150b0 <__alt_data_end+0xff8150b0>
  8150d0:	9005883a 	mov	r2,r18
  8150d4:	a8000215 	stw	zero,8(r21)
  8150d8:	a8000115 	stw	zero,4(r21)
  8150dc:	dfc00917 	ldw	ra,36(sp)
  8150e0:	df000817 	ldw	fp,32(sp)
  8150e4:	ddc00717 	ldw	r23,28(sp)
  8150e8:	dd800617 	ldw	r22,24(sp)
  8150ec:	dd400517 	ldw	r21,20(sp)
  8150f0:	dd000417 	ldw	r20,16(sp)
  8150f4:	dcc00317 	ldw	r19,12(sp)
  8150f8:	dc800217 	ldw	r18,8(sp)
  8150fc:	dc400117 	ldw	r17,4(sp)
  815100:	dc000017 	ldw	r16,0(sp)
  815104:	dec00a04 	addi	sp,sp,40
  815108:	f800283a 	ret
  81510c:	a8800217 	ldw	r2,8(r21)
  815110:	8c63883a 	add	r17,r17,r17
  815114:	8c63883a 	add	r17,r17,r17
  815118:	1445c83a 	sub	r2,r2,r17
  81511c:	a8800215 	stw	r2,8(r21)
  815120:	b5800204 	addi	r22,r22,8
  815124:	bdc00204 	addi	r23,r23,8
  815128:	103fdb1e 	bne	r2,zero,815098 <__alt_data_end+0xff815098>
  81512c:	0005883a 	mov	r2,zero
  815130:	003fe806 	br	8150d4 <__alt_data_end+0xff8150d4>
  815134:	0811c880 	call	811c88 <__sfvwrite_r>
  815138:	003fe606 	br	8150d4 <__alt_data_end+0xff8150d4>

0081513c <__sprint_r>:
  81513c:	30c00217 	ldw	r3,8(r6)
  815140:	18000126 	beq	r3,zero,815148 <__sprint_r+0xc>
  815144:	08150401 	jmpi	815040 <__sprint_r.part.0>
  815148:	30000115 	stw	zero,4(r6)
  81514c:	0005883a 	mov	r2,zero
  815150:	f800283a 	ret

00815154 <___vfiprintf_internal_r>:
  815154:	deffca04 	addi	sp,sp,-216
  815158:	dd803215 	stw	r22,200(sp)
  81515c:	dd403115 	stw	r21,196(sp)
  815160:	dfc03515 	stw	ra,212(sp)
  815164:	df003415 	stw	fp,208(sp)
  815168:	ddc03315 	stw	r23,204(sp)
  81516c:	dd003015 	stw	r20,192(sp)
  815170:	dcc02f15 	stw	r19,188(sp)
  815174:	dc802e15 	stw	r18,184(sp)
  815178:	dc402d15 	stw	r17,180(sp)
  81517c:	dc002c15 	stw	r16,176(sp)
  815180:	d9002015 	stw	r4,128(sp)
  815184:	d9c02215 	stw	r7,136(sp)
  815188:	282b883a 	mov	r21,r5
  81518c:	302d883a 	mov	r22,r6
  815190:	20000226 	beq	r4,zero,81519c <___vfiprintf_internal_r+0x48>
  815194:	20800e17 	ldw	r2,56(r4)
  815198:	1001b126 	beq	r2,zero,815860 <___vfiprintf_internal_r+0x70c>
  81519c:	a880030b 	ldhu	r2,12(r21)
  8151a0:	10c8000c 	andi	r3,r2,8192
  8151a4:	1800061e 	bne	r3,zero,8151c0 <___vfiprintf_internal_r+0x6c>
  8151a8:	a9001917 	ldw	r4,100(r21)
  8151ac:	00f7ffc4 	movi	r3,-8193
  8151b0:	10880014 	ori	r2,r2,8192
  8151b4:	20c6703a 	and	r3,r4,r3
  8151b8:	a880030d 	sth	r2,12(r21)
  8151bc:	a8c01915 	stw	r3,100(r21)
  8151c0:	10c0020c 	andi	r3,r2,8
  8151c4:	18018926 	beq	r3,zero,8157ec <___vfiprintf_internal_r+0x698>
  8151c8:	a8c00417 	ldw	r3,16(r21)
  8151cc:	18018726 	beq	r3,zero,8157ec <___vfiprintf_internal_r+0x698>
  8151d0:	1080068c 	andi	r2,r2,26
  8151d4:	00c00284 	movi	r3,10
  8151d8:	10c18c26 	beq	r2,r3,81580c <___vfiprintf_internal_r+0x6b8>
  8151dc:	d8801a04 	addi	r2,sp,104
  8151e0:	d8c019c4 	addi	r3,sp,103
  8151e4:	070020b4 	movhi	fp,130
  8151e8:	05c020b4 	movhi	r23,130
  8151ec:	10c9c83a 	sub	r4,r2,r3
  8151f0:	e7397804 	addi	fp,fp,-6688
  8151f4:	bdf97404 	addi	r23,r23,-6704
  8151f8:	d8801e15 	stw	r2,120(sp)
  8151fc:	d8c01f15 	stw	r3,124(sp)
  815200:	dec01a15 	stw	sp,104(sp)
  815204:	d8001c15 	stw	zero,112(sp)
  815208:	d8001b15 	stw	zero,108(sp)
  81520c:	d8002615 	stw	zero,152(sp)
  815210:	d8002315 	stw	zero,140(sp)
  815214:	d9002715 	stw	r4,156(sp)
  815218:	d811883a 	mov	r8,sp
  81521c:	dd402115 	stw	r21,132(sp)
  815220:	b021883a 	mov	r16,r22
  815224:	80800007 	ldb	r2,0(r16)
  815228:	10037226 	beq	r2,zero,815ff4 <___vfiprintf_internal_r+0xea0>
  81522c:	01000944 	movi	r4,37
  815230:	11037026 	beq	r2,r4,815ff4 <___vfiprintf_internal_r+0xea0>
  815234:	8005883a 	mov	r2,r16
  815238:	00000106 	br	815240 <___vfiprintf_internal_r+0xec>
  81523c:	19000326 	beq	r3,r4,81524c <___vfiprintf_internal_r+0xf8>
  815240:	10800044 	addi	r2,r2,1
  815244:	10c00007 	ldb	r3,0(r2)
  815248:	183ffc1e 	bne	r3,zero,81523c <__alt_data_end+0xff81523c>
  81524c:	1425c83a 	sub	r18,r2,r16
  815250:	1023883a 	mov	r17,r2
  815254:	90001026 	beq	r18,zero,815298 <___vfiprintf_internal_r+0x144>
  815258:	d8c01c17 	ldw	r3,112(sp)
  81525c:	d8801b17 	ldw	r2,108(sp)
  815260:	44000015 	stw	r16,0(r8)
  815264:	90c7883a 	add	r3,r18,r3
  815268:	10800044 	addi	r2,r2,1
  81526c:	44800115 	stw	r18,4(r8)
  815270:	d8c01c15 	stw	r3,112(sp)
  815274:	d8801b15 	stw	r2,108(sp)
  815278:	010001c4 	movi	r4,7
  81527c:	2080750e 	bge	r4,r2,815454 <___vfiprintf_internal_r+0x300>
  815280:	18036f1e 	bne	r3,zero,816040 <___vfiprintf_internal_r+0xeec>
  815284:	d8802317 	ldw	r2,140(sp)
  815288:	d8001b15 	stw	zero,108(sp)
  81528c:	d811883a 	mov	r8,sp
  815290:	1485883a 	add	r2,r2,r18
  815294:	d8802315 	stw	r2,140(sp)
  815298:	88800007 	ldb	r2,0(r17)
  81529c:	10041026 	beq	r2,zero,8162e0 <___vfiprintf_internal_r+0x118c>
  8152a0:	88c00047 	ldb	r3,1(r17)
  8152a4:	88800044 	addi	r2,r17,1
  8152a8:	d8001d85 	stb	zero,118(sp)
  8152ac:	000f883a 	mov	r7,zero
  8152b0:	027fffc4 	movi	r9,-1
  8152b4:	0025883a 	mov	r18,zero
  8152b8:	002b883a 	mov	r21,zero
  8152bc:	01401604 	movi	r5,88
  8152c0:	01800244 	movi	r6,9
  8152c4:	03400a84 	movi	r13,42
  8152c8:	03001b04 	movi	r12,108
  8152cc:	14000044 	addi	r16,r2,1
  8152d0:	18bff804 	addi	r2,r3,-32
  8152d4:	28825536 	bltu	r5,r2,815c2c <___vfiprintf_internal_r+0xad8>
  8152d8:	100490ba 	slli	r2,r2,2
  8152dc:	01002074 	movhi	r4,129
  8152e0:	2114bc04 	addi	r4,r4,21232
  8152e4:	1105883a 	add	r2,r2,r4
  8152e8:	10800017 	ldw	r2,0(r2)
  8152ec:	1000683a 	jmp	r2
  8152f0:	008159f0 	cmpltui	r2,zero,1383
  8152f4:	00815c2c 	andhi	r2,zero,1392
  8152f8:	00815c2c 	andhi	r2,zero,1392
  8152fc:	00815a10 	cmplti	r2,zero,1384
  815300:	00815c2c 	andhi	r2,zero,1392
  815304:	00815c2c 	andhi	r2,zero,1392
  815308:	00815c2c 	andhi	r2,zero,1392
  81530c:	00815c2c 	andhi	r2,zero,1392
  815310:	00815c2c 	andhi	r2,zero,1392
  815314:	00815c2c 	andhi	r2,zero,1392
  815318:	00815a20 	cmpeqi	r2,zero,1384
  81531c:	00815a40 	call	815a4 <__reset-0x77ea5c>
  815320:	00815c2c 	andhi	r2,zero,1392
  815324:	00815868 	cmpgeui	r2,zero,1377
  815328:	00815954 	movui	r2,1381
  81532c:	00815c2c 	andhi	r2,zero,1392
  815330:	008158d4 	movui	r2,1379
  815334:	008158e4 	muli	r2,zero,1379
  815338:	008158e4 	muli	r2,zero,1379
  81533c:	008158e4 	muli	r2,zero,1379
  815340:	008158e4 	muli	r2,zero,1379
  815344:	008158e4 	muli	r2,zero,1379
  815348:	008158e4 	muli	r2,zero,1379
  81534c:	008158e4 	muli	r2,zero,1379
  815350:	008158e4 	muli	r2,zero,1379
  815354:	008158e4 	muli	r2,zero,1379
  815358:	00815c2c 	andhi	r2,zero,1392
  81535c:	00815c2c 	andhi	r2,zero,1392
  815360:	00815c2c 	andhi	r2,zero,1392
  815364:	00815c2c 	andhi	r2,zero,1392
  815368:	00815c2c 	andhi	r2,zero,1392
  81536c:	00815c2c 	andhi	r2,zero,1392
  815370:	00815c2c 	andhi	r2,zero,1392
  815374:	00815c2c 	andhi	r2,zero,1392
  815378:	00815c2c 	andhi	r2,zero,1392
  81537c:	00815c2c 	andhi	r2,zero,1392
  815380:	00815910 	cmplti	r2,zero,1380
  815384:	00815c2c 	andhi	r2,zero,1392
  815388:	00815c2c 	andhi	r2,zero,1392
  81538c:	00815c2c 	andhi	r2,zero,1392
  815390:	00815c2c 	andhi	r2,zero,1392
  815394:	00815c2c 	andhi	r2,zero,1392
  815398:	00815c2c 	andhi	r2,zero,1392
  81539c:	00815c2c 	andhi	r2,zero,1392
  8153a0:	00815c2c 	andhi	r2,zero,1392
  8153a4:	00815c2c 	andhi	r2,zero,1392
  8153a8:	00815c2c 	andhi	r2,zero,1392
  8153ac:	0081549c 	xori	r2,zero,1362
  8153b0:	00815c2c 	andhi	r2,zero,1392
  8153b4:	00815c2c 	andhi	r2,zero,1392
  8153b8:	00815c2c 	andhi	r2,zero,1392
  8153bc:	00815c2c 	andhi	r2,zero,1392
  8153c0:	00815c2c 	andhi	r2,zero,1392
  8153c4:	00815468 	cmpgeui	r2,zero,1361
  8153c8:	00815c2c 	andhi	r2,zero,1392
  8153cc:	00815c2c 	andhi	r2,zero,1392
  8153d0:	00815ab0 	cmpltui	r2,zero,1386
  8153d4:	00815c2c 	andhi	r2,zero,1392
  8153d8:	00815c2c 	andhi	r2,zero,1392
  8153dc:	00815c2c 	andhi	r2,zero,1392
  8153e0:	00815c2c 	andhi	r2,zero,1392
  8153e4:	00815c2c 	andhi	r2,zero,1392
  8153e8:	00815c2c 	andhi	r2,zero,1392
  8153ec:	00815c2c 	andhi	r2,zero,1392
  8153f0:	00815c2c 	andhi	r2,zero,1392
  8153f4:	00815c2c 	andhi	r2,zero,1392
  8153f8:	00815c2c 	andhi	r2,zero,1392
  8153fc:	00815a50 	cmplti	r2,zero,1385
  815400:	00815a7c 	xorhi	r2,zero,1385
  815404:	00815c2c 	andhi	r2,zero,1392
  815408:	00815c2c 	andhi	r2,zero,1392
  81540c:	00815c2c 	andhi	r2,zero,1392
  815410:	00815b58 	cmpnei	r2,zero,1389
  815414:	00815a7c 	xorhi	r2,zero,1385
  815418:	00815c2c 	andhi	r2,zero,1392
  81541c:	00815c2c 	andhi	r2,zero,1392
  815420:	00815b68 	cmpgeui	r2,zero,1389
  815424:	00815c2c 	andhi	r2,zero,1392
  815428:	00815994 	movui	r2,1382
  81542c:	008154a0 	cmpeqi	r2,zero,1362
  815430:	00815b7c 	xorhi	r2,zero,1389
  815434:	00815bbc 	xorhi	r2,zero,1390
  815438:	00815c2c 	andhi	r2,zero,1392
  81543c:	00815b04 	movi	r2,1388
  815440:	00815c2c 	andhi	r2,zero,1392
  815444:	0081546c 	andhi	r2,zero,1361
  815448:	00815c2c 	andhi	r2,zero,1392
  81544c:	00815c2c 	andhi	r2,zero,1392
  815450:	00815bcc 	andi	r2,zero,1391
  815454:	42000204 	addi	r8,r8,8
  815458:	d8802317 	ldw	r2,140(sp)
  81545c:	1485883a 	add	r2,r2,r18
  815460:	d8802315 	stw	r2,140(sp)
  815464:	003f8c06 	br	815298 <__alt_data_end+0xff815298>
  815468:	ad400414 	ori	r21,r21,16
  81546c:	a880080c 	andi	r2,r21,32
  815470:	1001e61e 	bne	r2,zero,815c0c <___vfiprintf_internal_r+0xab8>
  815474:	a880040c 	andi	r2,r21,16
  815478:	10034726 	beq	r2,zero,816198 <___vfiprintf_internal_r+0x1044>
  81547c:	d8802217 	ldw	r2,136(sp)
  815480:	001b883a 	mov	r13,zero
  815484:	15800017 	ldw	r22,0(r2)
  815488:	10800104 	addi	r2,r2,4
  81548c:	d8802215 	stw	r2,136(sp)
  815490:	b009883a 	mov	r4,r22
  815494:	00800044 	movi	r2,1
  815498:	00000c06 	br	8154cc <___vfiprintf_internal_r+0x378>
  81549c:	ad400414 	ori	r21,r21,16
  8154a0:	a880080c 	andi	r2,r21,32
  8154a4:	1001491e 	bne	r2,zero,8159cc <___vfiprintf_internal_r+0x878>
  8154a8:	a880040c 	andi	r2,r21,16
  8154ac:	10032d26 	beq	r2,zero,816164 <___vfiprintf_internal_r+0x1010>
  8154b0:	d9002217 	ldw	r4,136(sp)
  8154b4:	001b883a 	mov	r13,zero
  8154b8:	0005883a 	mov	r2,zero
  8154bc:	25800017 	ldw	r22,0(r4)
  8154c0:	21000104 	addi	r4,r4,4
  8154c4:	d9002215 	stw	r4,136(sp)
  8154c8:	b009883a 	mov	r4,r22
  8154cc:	d8001d85 	stb	zero,118(sp)
  8154d0:	4827883a 	mov	r19,r9
  8154d4:	001d883a 	mov	r14,zero
  8154d8:	48000216 	blt	r9,zero,8154e4 <___vfiprintf_internal_r+0x390>
  8154dc:	00ffdfc4 	movi	r3,-129
  8154e0:	a8ea703a 	and	r21,r21,r3
  8154e4:	2002071e 	bne	r4,zero,815d04 <___vfiprintf_internal_r+0xbb0>
  8154e8:	4802ad26 	beq	r9,zero,815fa0 <___vfiprintf_internal_r+0xe4c>
  8154ec:	10803fcc 	andi	r2,r2,255
  8154f0:	00c00044 	movi	r3,1
  8154f4:	10c22b26 	beq	r2,r3,815da4 <___vfiprintf_internal_r+0xc50>
  8154f8:	00c00084 	movi	r3,2
  8154fc:	dd001a04 	addi	r20,sp,104
  815500:	10c0dd1e 	bne	r2,r3,815878 <___vfiprintf_internal_r+0x724>
  815504:	d9002617 	ldw	r4,152(sp)
  815508:	b08003cc 	andi	r2,r22,15
  81550c:	6806973a 	slli	r3,r13,28
  815510:	2085883a 	add	r2,r4,r2
  815514:	b02cd13a 	srli	r22,r22,4
  815518:	10800003 	ldbu	r2,0(r2)
  81551c:	681ad13a 	srli	r13,r13,4
  815520:	a53fffc4 	addi	r20,r20,-1
  815524:	1dacb03a 	or	r22,r3,r22
  815528:	a0800005 	stb	r2,0(r20)
  81552c:	b344b03a 	or	r2,r22,r13
  815530:	103ff51e 	bne	r2,zero,815508 <__alt_data_end+0xff815508>
  815534:	d9001e17 	ldw	r4,120(sp)
  815538:	2527c83a 	sub	r19,r4,r20
  81553c:	9823883a 	mov	r17,r19
  815540:	9a40010e 	bge	r19,r9,815548 <___vfiprintf_internal_r+0x3f4>
  815544:	4823883a 	mov	r17,r9
  815548:	73803fcc 	andi	r14,r14,255
  81554c:	7380201c 	xori	r14,r14,128
  815550:	73bfe004 	addi	r14,r14,-128
  815554:	70000126 	beq	r14,zero,81555c <___vfiprintf_internal_r+0x408>
  815558:	8c400044 	addi	r17,r17,1
  81555c:	ab40008c 	andi	r13,r21,2
  815560:	68000126 	beq	r13,zero,815568 <___vfiprintf_internal_r+0x414>
  815564:	8c400084 	addi	r17,r17,2
  815568:	ad80210c 	andi	r22,r21,132
  81556c:	b001c51e 	bne	r22,zero,815c84 <___vfiprintf_internal_r+0xb30>
  815570:	9447c83a 	sub	r3,r18,r17
  815574:	00c1c30e 	bge	zero,r3,815c84 <___vfiprintf_internal_r+0xb30>
  815578:	01c00404 	movi	r7,16
  81557c:	d8801c17 	ldw	r2,112(sp)
  815580:	38c37b0e 	bge	r7,r3,816370 <___vfiprintf_internal_r+0x121c>
  815584:	010020b4 	movhi	r4,130
  815588:	21397804 	addi	r4,r4,-6688
  81558c:	dc002915 	stw	r16,164(sp)
  815590:	d9801b17 	ldw	r6,108(sp)
  815594:	d9002415 	stw	r4,144(sp)
  815598:	03c001c4 	movi	r15,7
  81559c:	da402515 	stw	r9,148(sp)
  8155a0:	db402815 	stw	r13,160(sp)
  8155a4:	1821883a 	mov	r16,r3
  8155a8:	00000506 	br	8155c0 <___vfiprintf_internal_r+0x46c>
  8155ac:	31400084 	addi	r5,r6,2
  8155b0:	42000204 	addi	r8,r8,8
  8155b4:	200d883a 	mov	r6,r4
  8155b8:	843ffc04 	addi	r16,r16,-16
  8155bc:	3c000d0e 	bge	r7,r16,8155f4 <___vfiprintf_internal_r+0x4a0>
  8155c0:	10800404 	addi	r2,r2,16
  8155c4:	31000044 	addi	r4,r6,1
  8155c8:	47000015 	stw	fp,0(r8)
  8155cc:	41c00115 	stw	r7,4(r8)
  8155d0:	d8801c15 	stw	r2,112(sp)
  8155d4:	d9001b15 	stw	r4,108(sp)
  8155d8:	793ff40e 	bge	r15,r4,8155ac <__alt_data_end+0xff8155ac>
  8155dc:	10019b1e 	bne	r2,zero,815c4c <___vfiprintf_internal_r+0xaf8>
  8155e0:	843ffc04 	addi	r16,r16,-16
  8155e4:	000d883a 	mov	r6,zero
  8155e8:	01400044 	movi	r5,1
  8155ec:	d811883a 	mov	r8,sp
  8155f0:	3c3ff316 	blt	r7,r16,8155c0 <__alt_data_end+0xff8155c0>
  8155f4:	8007883a 	mov	r3,r16
  8155f8:	da402517 	ldw	r9,148(sp)
  8155fc:	db402817 	ldw	r13,160(sp)
  815600:	dc002917 	ldw	r16,164(sp)
  815604:	d9002417 	ldw	r4,144(sp)
  815608:	1885883a 	add	r2,r3,r2
  81560c:	40c00115 	stw	r3,4(r8)
  815610:	41000015 	stw	r4,0(r8)
  815614:	d8801c15 	stw	r2,112(sp)
  815618:	d9401b15 	stw	r5,108(sp)
  81561c:	00c001c4 	movi	r3,7
  815620:	19426a16 	blt	r3,r5,815fcc <___vfiprintf_internal_r+0xe78>
  815624:	d8c01d87 	ldb	r3,118(sp)
  815628:	42000204 	addi	r8,r8,8
  81562c:	29000044 	addi	r4,r5,1
  815630:	1801991e 	bne	r3,zero,815c98 <___vfiprintf_internal_r+0xb44>
  815634:	68000c26 	beq	r13,zero,815668 <___vfiprintf_internal_r+0x514>
  815638:	d8c01d04 	addi	r3,sp,116
  81563c:	10800084 	addi	r2,r2,2
  815640:	40c00015 	stw	r3,0(r8)
  815644:	00c00084 	movi	r3,2
  815648:	40c00115 	stw	r3,4(r8)
  81564c:	d8801c15 	stw	r2,112(sp)
  815650:	d9001b15 	stw	r4,108(sp)
  815654:	00c001c4 	movi	r3,7
  815658:	19024c16 	blt	r3,r4,815f8c <___vfiprintf_internal_r+0xe38>
  81565c:	200b883a 	mov	r5,r4
  815660:	42000204 	addi	r8,r8,8
  815664:	21000044 	addi	r4,r4,1
  815668:	00c02004 	movi	r3,128
  81566c:	b0c20126 	beq	r22,r3,815e74 <___vfiprintf_internal_r+0xd20>
  815670:	4cedc83a 	sub	r22,r9,r19
  815674:	0580230e 	bge	zero,r22,815704 <___vfiprintf_internal_r+0x5b0>
  815678:	01c00404 	movi	r7,16
  81567c:	3d83140e 	bge	r7,r22,8162d0 <___vfiprintf_internal_r+0x117c>
  815680:	010020b4 	movhi	r4,130
  815684:	21397404 	addi	r4,r4,-6704
  815688:	d9002415 	stw	r4,144(sp)
  81568c:	034001c4 	movi	r13,7
  815690:	00000506 	br	8156a8 <___vfiprintf_internal_r+0x554>
  815694:	29000084 	addi	r4,r5,2
  815698:	42000204 	addi	r8,r8,8
  81569c:	180b883a 	mov	r5,r3
  8156a0:	b5bffc04 	addi	r22,r22,-16
  8156a4:	3d800d0e 	bge	r7,r22,8156dc <___vfiprintf_internal_r+0x588>
  8156a8:	10800404 	addi	r2,r2,16
  8156ac:	28c00044 	addi	r3,r5,1
  8156b0:	45c00015 	stw	r23,0(r8)
  8156b4:	41c00115 	stw	r7,4(r8)
  8156b8:	d8801c15 	stw	r2,112(sp)
  8156bc:	d8c01b15 	stw	r3,108(sp)
  8156c0:	68fff40e 	bge	r13,r3,815694 <__alt_data_end+0xff815694>
  8156c4:	1001811e 	bne	r2,zero,815ccc <___vfiprintf_internal_r+0xb78>
  8156c8:	b5bffc04 	addi	r22,r22,-16
  8156cc:	01000044 	movi	r4,1
  8156d0:	000b883a 	mov	r5,zero
  8156d4:	d811883a 	mov	r8,sp
  8156d8:	3dbff316 	blt	r7,r22,8156a8 <__alt_data_end+0xff8156a8>
  8156dc:	d8c02417 	ldw	r3,144(sp)
  8156e0:	1585883a 	add	r2,r2,r22
  8156e4:	45800115 	stw	r22,4(r8)
  8156e8:	40c00015 	stw	r3,0(r8)
  8156ec:	d8801c15 	stw	r2,112(sp)
  8156f0:	d9001b15 	stw	r4,108(sp)
  8156f4:	00c001c4 	movi	r3,7
  8156f8:	1901d016 	blt	r3,r4,815e3c <___vfiprintf_internal_r+0xce8>
  8156fc:	42000204 	addi	r8,r8,8
  815700:	21000044 	addi	r4,r4,1
  815704:	14c5883a 	add	r2,r2,r19
  815708:	45000015 	stw	r20,0(r8)
  81570c:	44c00115 	stw	r19,4(r8)
  815710:	d8801c15 	stw	r2,112(sp)
  815714:	d9001b15 	stw	r4,108(sp)
  815718:	00c001c4 	movi	r3,7
  81571c:	1901cf0e 	bge	r3,r4,815e5c <___vfiprintf_internal_r+0xd08>
  815720:	1002361e 	bne	r2,zero,815ffc <___vfiprintf_internal_r+0xea8>
  815724:	d8001b15 	stw	zero,108(sp)
  815728:	aac0010c 	andi	r11,r21,4
  81572c:	58002826 	beq	r11,zero,8157d0 <___vfiprintf_internal_r+0x67c>
  815730:	9467c83a 	sub	r19,r18,r17
  815734:	d811883a 	mov	r8,sp
  815738:	04c3340e 	bge	zero,r19,81640c <___vfiprintf_internal_r+0x12b8>
  81573c:	01c00404 	movi	r7,16
  815740:	3cc31b0e 	bge	r7,r19,8163b0 <___vfiprintf_internal_r+0x125c>
  815744:	00c020b4 	movhi	r3,130
  815748:	18f97804 	addi	r3,r3,-6688
  81574c:	d9001b17 	ldw	r4,108(sp)
  815750:	d8c02415 	stw	r3,144(sp)
  815754:	382b883a 	mov	r21,r7
  815758:	050001c4 	movi	r20,7
  81575c:	dd802017 	ldw	r22,128(sp)
  815760:	00000506 	br	815778 <___vfiprintf_internal_r+0x624>
  815764:	21400084 	addi	r5,r4,2
  815768:	42000204 	addi	r8,r8,8
  81576c:	1809883a 	mov	r4,r3
  815770:	9cfffc04 	addi	r19,r19,-16
  815774:	acc00d0e 	bge	r21,r19,8157ac <___vfiprintf_internal_r+0x658>
  815778:	10800404 	addi	r2,r2,16
  81577c:	20c00044 	addi	r3,r4,1
  815780:	47000015 	stw	fp,0(r8)
  815784:	45400115 	stw	r21,4(r8)
  815788:	d8801c15 	stw	r2,112(sp)
  81578c:	d8c01b15 	stw	r3,108(sp)
  815790:	a0fff40e 	bge	r20,r3,815764 <__alt_data_end+0xff815764>
  815794:	10019f1e 	bne	r2,zero,815e14 <___vfiprintf_internal_r+0xcc0>
  815798:	9cfffc04 	addi	r19,r19,-16
  81579c:	01400044 	movi	r5,1
  8157a0:	0009883a 	mov	r4,zero
  8157a4:	d811883a 	mov	r8,sp
  8157a8:	acfff316 	blt	r21,r19,815778 <__alt_data_end+0xff815778>
  8157ac:	d8c02417 	ldw	r3,144(sp)
  8157b0:	14c5883a 	add	r2,r2,r19
  8157b4:	44c00115 	stw	r19,4(r8)
  8157b8:	40c00015 	stw	r3,0(r8)
  8157bc:	d8801c15 	stw	r2,112(sp)
  8157c0:	d9401b15 	stw	r5,108(sp)
  8157c4:	00c001c4 	movi	r3,7
  8157c8:	1941810e 	bge	r3,r5,815dd0 <___vfiprintf_internal_r+0xc7c>
  8157cc:	10017a1e 	bne	r2,zero,815db8 <___vfiprintf_internal_r+0xc64>
  8157d0:	8c82a416 	blt	r17,r18,816264 <___vfiprintf_internal_r+0x1110>
  8157d4:	d9002317 	ldw	r4,140(sp)
  8157d8:	2449883a 	add	r4,r4,r17
  8157dc:	d9002315 	stw	r4,140(sp)
  8157e0:	d8001b15 	stw	zero,108(sp)
  8157e4:	d811883a 	mov	r8,sp
  8157e8:	003e8e06 	br	815224 <__alt_data_end+0xff815224>
  8157ec:	d9002017 	ldw	r4,128(sp)
  8157f0:	a80b883a 	mov	r5,r21
  8157f4:	081010c0 	call	81010c <__swsetup_r>
  8157f8:	10000c1e 	bne	r2,zero,81582c <___vfiprintf_internal_r+0x6d8>
  8157fc:	a880030b 	ldhu	r2,12(r21)
  815800:	00c00284 	movi	r3,10
  815804:	1080068c 	andi	r2,r2,26
  815808:	10fe741e 	bne	r2,r3,8151dc <__alt_data_end+0xff8151dc>
  81580c:	a880038f 	ldh	r2,14(r21)
  815810:	103e7216 	blt	r2,zero,8151dc <__alt_data_end+0xff8151dc>
  815814:	d9002017 	ldw	r4,128(sp)
  815818:	d9c02217 	ldw	r7,136(sp)
  81581c:	a80b883a 	mov	r5,r21
  815820:	b00d883a 	mov	r6,r22
  815824:	08164480 	call	816448 <__sbprintf>
  815828:	00000106 	br	815830 <___vfiprintf_internal_r+0x6dc>
  81582c:	00bfffc4 	movi	r2,-1
  815830:	dfc03517 	ldw	ra,212(sp)
  815834:	df003417 	ldw	fp,208(sp)
  815838:	ddc03317 	ldw	r23,204(sp)
  81583c:	dd803217 	ldw	r22,200(sp)
  815840:	dd403117 	ldw	r21,196(sp)
  815844:	dd003017 	ldw	r20,192(sp)
  815848:	dcc02f17 	ldw	r19,188(sp)
  81584c:	dc802e17 	ldw	r18,184(sp)
  815850:	dc402d17 	ldw	r17,180(sp)
  815854:	dc002c17 	ldw	r16,176(sp)
  815858:	dec03604 	addi	sp,sp,216
  81585c:	f800283a 	ret
  815860:	080a1b40 	call	80a1b4 <__sinit>
  815864:	003e4d06 	br	81519c <__alt_data_end+0xff81519c>
  815868:	8005883a 	mov	r2,r16
  81586c:	ad400114 	ori	r21,r21,4
  815870:	80c00007 	ldb	r3,0(r16)
  815874:	003e9506 	br	8152cc <__alt_data_end+0xff8152cc>
  815878:	b006d0fa 	srli	r3,r22,3
  81587c:	6808977a 	slli	r4,r13,29
  815880:	681ad0fa 	srli	r13,r13,3
  815884:	b58001cc 	andi	r22,r22,7
  815888:	b0800c04 	addi	r2,r22,48
  81588c:	a53fffc4 	addi	r20,r20,-1
  815890:	20ecb03a 	or	r22,r4,r3
  815894:	a0800005 	stb	r2,0(r20)
  815898:	b346b03a 	or	r3,r22,r13
  81589c:	183ff61e 	bne	r3,zero,815878 <__alt_data_end+0xff815878>
  8158a0:	a8c0004c 	andi	r3,r21,1
  8158a4:	a009883a 	mov	r4,r20
  8158a8:	18013b26 	beq	r3,zero,815d98 <___vfiprintf_internal_r+0xc44>
  8158ac:	10803fcc 	andi	r2,r2,255
  8158b0:	1080201c 	xori	r2,r2,128
  8158b4:	10bfe004 	addi	r2,r2,-128
  8158b8:	00c00c04 	movi	r3,48
  8158bc:	10ff1d26 	beq	r2,r3,815534 <__alt_data_end+0xff815534>
  8158c0:	d8801e17 	ldw	r2,120(sp)
  8158c4:	a53fffc4 	addi	r20,r20,-1
  8158c8:	20ffffc5 	stb	r3,-1(r4)
  8158cc:	1527c83a 	sub	r19,r2,r20
  8158d0:	003f1a06 	br	81553c <__alt_data_end+0xff81553c>
  8158d4:	ad402014 	ori	r21,r21,128
  8158d8:	8005883a 	mov	r2,r16
  8158dc:	80c00007 	ldb	r3,0(r16)
  8158e0:	003e7a06 	br	8152cc <__alt_data_end+0xff8152cc>
  8158e4:	8005883a 	mov	r2,r16
  8158e8:	0025883a 	mov	r18,zero
  8158ec:	193ff404 	addi	r4,r3,-48
  8158f0:	10c00007 	ldb	r3,0(r2)
  8158f4:	948002a4 	muli	r18,r18,10
  8158f8:	84000044 	addi	r16,r16,1
  8158fc:	8005883a 	mov	r2,r16
  815900:	9125883a 	add	r18,r18,r4
  815904:	193ff404 	addi	r4,r3,-48
  815908:	313ff92e 	bgeu	r6,r4,8158f0 <__alt_data_end+0xff8158f0>
  81590c:	003e7006 	br	8152d0 <__alt_data_end+0xff8152d0>
  815910:	ad400414 	ori	r21,r21,16
  815914:	d9c01d85 	stb	r7,118(sp)
  815918:	a880080c 	andi	r2,r21,32
  81591c:	d8c02217 	ldw	r3,136(sp)
  815920:	10005a26 	beq	r2,zero,815a8c <___vfiprintf_internal_r+0x938>
  815924:	d9002217 	ldw	r4,136(sp)
  815928:	18800117 	ldw	r2,4(r3)
  81592c:	1d800017 	ldw	r22,0(r3)
  815930:	21000204 	addi	r4,r4,8
  815934:	d9002215 	stw	r4,136(sp)
  815938:	101b883a 	mov	r13,r2
  81593c:	1001f416 	blt	r2,zero,816110 <___vfiprintf_internal_r+0xfbc>
  815940:	db801d83 	ldbu	r14,118(sp)
  815944:	4827883a 	mov	r19,r9
  815948:	00800044 	movi	r2,1
  81594c:	b348b03a 	or	r4,r22,r13
  815950:	003ee106 	br	8154d8 <__alt_data_end+0xff8154d8>
  815954:	80c00007 	ldb	r3,0(r16)
  815958:	80800044 	addi	r2,r16,1
  81595c:	1b42a326 	beq	r3,r13,8163ec <___vfiprintf_internal_r+0x1298>
  815960:	193ff404 	addi	r4,r3,-48
  815964:	1021883a 	mov	r16,r2
  815968:	0013883a 	mov	r9,zero
  81596c:	313e5836 	bltu	r6,r4,8152d0 <__alt_data_end+0xff8152d0>
  815970:	80c00007 	ldb	r3,0(r16)
  815974:	4a4002a4 	muli	r9,r9,10
  815978:	84000044 	addi	r16,r16,1
  81597c:	2253883a 	add	r9,r4,r9
  815980:	193ff404 	addi	r4,r3,-48
  815984:	313ffa2e 	bgeu	r6,r4,815970 <__alt_data_end+0xff815970>
  815988:	483e510e 	bge	r9,zero,8152d0 <__alt_data_end+0xff8152d0>
  81598c:	027fffc4 	movi	r9,-1
  815990:	003e4f06 	br	8152d0 <__alt_data_end+0xff8152d0>
  815994:	d9c01d85 	stb	r7,118(sp)
  815998:	a880080c 	andi	r2,r21,32
  81599c:	10020826 	beq	r2,zero,8161c0 <___vfiprintf_internal_r+0x106c>
  8159a0:	d8c02217 	ldw	r3,136(sp)
  8159a4:	d9002317 	ldw	r4,140(sp)
  8159a8:	18800017 	ldw	r2,0(r3)
  8159ac:	2007d7fa 	srai	r3,r4,31
  8159b0:	d9002217 	ldw	r4,136(sp)
  8159b4:	10c00115 	stw	r3,4(r2)
  8159b8:	21000104 	addi	r4,r4,4
  8159bc:	d9002215 	stw	r4,136(sp)
  8159c0:	d9002317 	ldw	r4,140(sp)
  8159c4:	11000015 	stw	r4,0(r2)
  8159c8:	003e1606 	br	815224 <__alt_data_end+0xff815224>
  8159cc:	d8802217 	ldw	r2,136(sp)
  8159d0:	d8c02217 	ldw	r3,136(sp)
  8159d4:	15800017 	ldw	r22,0(r2)
  8159d8:	13400117 	ldw	r13,4(r2)
  8159dc:	18c00204 	addi	r3,r3,8
  8159e0:	0005883a 	mov	r2,zero
  8159e4:	d8c02215 	stw	r3,136(sp)
  8159e8:	b348b03a 	or	r4,r22,r13
  8159ec:	003eb706 	br	8154cc <__alt_data_end+0xff8154cc>
  8159f0:	38803fcc 	andi	r2,r7,255
  8159f4:	1080201c 	xori	r2,r2,128
  8159f8:	10bfe004 	addi	r2,r2,-128
  8159fc:	1001e31e 	bne	r2,zero,81618c <___vfiprintf_internal_r+0x1038>
  815a00:	8005883a 	mov	r2,r16
  815a04:	01c00804 	movi	r7,32
  815a08:	80c00007 	ldb	r3,0(r16)
  815a0c:	003e2f06 	br	8152cc <__alt_data_end+0xff8152cc>
  815a10:	ad400054 	ori	r21,r21,1
  815a14:	8005883a 	mov	r2,r16
  815a18:	80c00007 	ldb	r3,0(r16)
  815a1c:	003e2b06 	br	8152cc <__alt_data_end+0xff8152cc>
  815a20:	d8c02217 	ldw	r3,136(sp)
  815a24:	1c800017 	ldw	r18,0(r3)
  815a28:	18c00104 	addi	r3,r3,4
  815a2c:	90023816 	blt	r18,zero,816310 <___vfiprintf_internal_r+0x11bc>
  815a30:	d8c02215 	stw	r3,136(sp)
  815a34:	8005883a 	mov	r2,r16
  815a38:	80c00007 	ldb	r3,0(r16)
  815a3c:	003e2306 	br	8152cc <__alt_data_end+0xff8152cc>
  815a40:	8005883a 	mov	r2,r16
  815a44:	01c00ac4 	movi	r7,43
  815a48:	80c00007 	ldb	r3,0(r16)
  815a4c:	003e1f06 	br	8152cc <__alt_data_end+0xff8152cc>
  815a50:	d8c02217 	ldw	r3,136(sp)
  815a54:	04400044 	movi	r17,1
  815a58:	d8001d85 	stb	zero,118(sp)
  815a5c:	18800017 	ldw	r2,0(r3)
  815a60:	18c00104 	addi	r3,r3,4
  815a64:	d8c02215 	stw	r3,136(sp)
  815a68:	d8801005 	stb	r2,64(sp)
  815a6c:	8827883a 	mov	r19,r17
  815a70:	dd001004 	addi	r20,sp,64
  815a74:	0013883a 	mov	r9,zero
  815a78:	003eb806 	br	81555c <__alt_data_end+0xff81555c>
  815a7c:	d9c01d85 	stb	r7,118(sp)
  815a80:	a880080c 	andi	r2,r21,32
  815a84:	d8c02217 	ldw	r3,136(sp)
  815a88:	103fa61e 	bne	r2,zero,815924 <__alt_data_end+0xff815924>
  815a8c:	a880040c 	andi	r2,r21,16
  815a90:	1001dd26 	beq	r2,zero,816208 <___vfiprintf_internal_r+0x10b4>
  815a94:	1d800017 	ldw	r22,0(r3)
  815a98:	d8802217 	ldw	r2,136(sp)
  815a9c:	b01bd7fa 	srai	r13,r22,31
  815aa0:	10800104 	addi	r2,r2,4
  815aa4:	d8802215 	stw	r2,136(sp)
  815aa8:	6805883a 	mov	r2,r13
  815aac:	003fa306 	br	81593c <__alt_data_end+0xff81593c>
  815ab0:	008020b4 	movhi	r2,130
  815ab4:	10b8ff04 	addi	r2,r2,-7172
  815ab8:	d8802615 	stw	r2,152(sp)
  815abc:	d9c01d85 	stb	r7,118(sp)
  815ac0:	a880080c 	andi	r2,r21,32
  815ac4:	10004726 	beq	r2,zero,815be4 <___vfiprintf_internal_r+0xa90>
  815ac8:	d9002217 	ldw	r4,136(sp)
  815acc:	25800017 	ldw	r22,0(r4)
  815ad0:	23400117 	ldw	r13,4(r4)
  815ad4:	21000204 	addi	r4,r4,8
  815ad8:	d9002215 	stw	r4,136(sp)
  815adc:	a880004c 	andi	r2,r21,1
  815ae0:	10014e26 	beq	r2,zero,81601c <___vfiprintf_internal_r+0xec8>
  815ae4:	b348b03a 	or	r4,r22,r13
  815ae8:	20019c26 	beq	r4,zero,81615c <___vfiprintf_internal_r+0x1008>
  815aec:	00800c04 	movi	r2,48
  815af0:	d8801d05 	stb	r2,116(sp)
  815af4:	d8c01d45 	stb	r3,117(sp)
  815af8:	ad400094 	ori	r21,r21,2
  815afc:	00800084 	movi	r2,2
  815b00:	003e7206 	br	8154cc <__alt_data_end+0xff8154cc>
  815b04:	d8c02217 	ldw	r3,136(sp)
  815b08:	d8001d85 	stb	zero,118(sp)
  815b0c:	1d000017 	ldw	r20,0(r3)
  815b10:	1d800104 	addi	r22,r3,4
  815b14:	a0021c26 	beq	r20,zero,816388 <___vfiprintf_internal_r+0x1234>
  815b18:	a009883a 	mov	r4,r20
  815b1c:	48020016 	blt	r9,zero,816320 <___vfiprintf_internal_r+0x11cc>
  815b20:	480d883a 	mov	r6,r9
  815b24:	000b883a 	mov	r5,zero
  815b28:	da002a15 	stw	r8,168(sp)
  815b2c:	da402b15 	stw	r9,172(sp)
  815b30:	08122d80 	call	8122d8 <memchr>
  815b34:	da002a17 	ldw	r8,168(sp)
  815b38:	da402b17 	ldw	r9,172(sp)
  815b3c:	10022226 	beq	r2,zero,8163c8 <___vfiprintf_internal_r+0x1274>
  815b40:	1527c83a 	sub	r19,r2,r20
  815b44:	4cc1c916 	blt	r9,r19,81626c <___vfiprintf_internal_r+0x1118>
  815b48:	db801d83 	ldbu	r14,118(sp)
  815b4c:	dd802215 	stw	r22,136(sp)
  815b50:	0013883a 	mov	r9,zero
  815b54:	003e7906 	br	81553c <__alt_data_end+0xff81553c>
  815b58:	ad401014 	ori	r21,r21,64
  815b5c:	8005883a 	mov	r2,r16
  815b60:	80c00007 	ldb	r3,0(r16)
  815b64:	003dd906 	br	8152cc <__alt_data_end+0xff8152cc>
  815b68:	80c00007 	ldb	r3,0(r16)
  815b6c:	8005883a 	mov	r2,r16
  815b70:	1b01e326 	beq	r3,r12,816300 <___vfiprintf_internal_r+0x11ac>
  815b74:	ad400414 	ori	r21,r21,16
  815b78:	003dd406 	br	8152cc <__alt_data_end+0xff8152cc>
  815b7c:	d9002217 	ldw	r4,136(sp)
  815b80:	00800c04 	movi	r2,48
  815b84:	d8801d05 	stb	r2,116(sp)
  815b88:	25800017 	ldw	r22,0(r4)
  815b8c:	00801e04 	movi	r2,120
  815b90:	d8801d45 	stb	r2,117(sp)
  815b94:	008020b4 	movhi	r2,130
  815b98:	21000104 	addi	r4,r4,4
  815b9c:	10b90404 	addi	r2,r2,-7152
  815ba0:	d9002215 	stw	r4,136(sp)
  815ba4:	d8802615 	stw	r2,152(sp)
  815ba8:	001b883a 	mov	r13,zero
  815bac:	ad400094 	ori	r21,r21,2
  815bb0:	00800084 	movi	r2,2
  815bb4:	b009883a 	mov	r4,r22
  815bb8:	003e4406 	br	8154cc <__alt_data_end+0xff8154cc>
  815bbc:	ad400814 	ori	r21,r21,32
  815bc0:	8005883a 	mov	r2,r16
  815bc4:	80c00007 	ldb	r3,0(r16)
  815bc8:	003dc006 	br	8152cc <__alt_data_end+0xff8152cc>
  815bcc:	008020b4 	movhi	r2,130
  815bd0:	10b90404 	addi	r2,r2,-7152
  815bd4:	d8802615 	stw	r2,152(sp)
  815bd8:	d9c01d85 	stb	r7,118(sp)
  815bdc:	a880080c 	andi	r2,r21,32
  815be0:	103fb91e 	bne	r2,zero,815ac8 <__alt_data_end+0xff815ac8>
  815be4:	a880040c 	andi	r2,r21,16
  815be8:	10010f1e 	bne	r2,zero,816028 <___vfiprintf_internal_r+0xed4>
  815bec:	a880100c 	andi	r2,r21,64
  815bf0:	10010d26 	beq	r2,zero,816028 <___vfiprintf_internal_r+0xed4>
  815bf4:	d9002217 	ldw	r4,136(sp)
  815bf8:	001b883a 	mov	r13,zero
  815bfc:	2580000b 	ldhu	r22,0(r4)
  815c00:	21000104 	addi	r4,r4,4
  815c04:	d9002215 	stw	r4,136(sp)
  815c08:	003fb406 	br	815adc <__alt_data_end+0xff815adc>
  815c0c:	d9002217 	ldw	r4,136(sp)
  815c10:	00800044 	movi	r2,1
  815c14:	25800017 	ldw	r22,0(r4)
  815c18:	23400117 	ldw	r13,4(r4)
  815c1c:	21000204 	addi	r4,r4,8
  815c20:	d9002215 	stw	r4,136(sp)
  815c24:	b348b03a 	or	r4,r22,r13
  815c28:	003e2806 	br	8154cc <__alt_data_end+0xff8154cc>
  815c2c:	d9c01d85 	stb	r7,118(sp)
  815c30:	1801ab26 	beq	r3,zero,8162e0 <___vfiprintf_internal_r+0x118c>
  815c34:	04400044 	movi	r17,1
  815c38:	d8c01005 	stb	r3,64(sp)
  815c3c:	d8001d85 	stb	zero,118(sp)
  815c40:	8827883a 	mov	r19,r17
  815c44:	dd001004 	addi	r20,sp,64
  815c48:	003f8a06 	br	815a74 <__alt_data_end+0xff815a74>
  815c4c:	d9002017 	ldw	r4,128(sp)
  815c50:	d9402117 	ldw	r5,132(sp)
  815c54:	d9801a04 	addi	r6,sp,104
  815c58:	d9c02b15 	stw	r7,172(sp)
  815c5c:	dbc02a15 	stw	r15,168(sp)
  815c60:	08150400 	call	815040 <__sprint_r.part.0>
  815c64:	d9c02b17 	ldw	r7,172(sp)
  815c68:	dbc02a17 	ldw	r15,168(sp)
  815c6c:	1000631e 	bne	r2,zero,815dfc <___vfiprintf_internal_r+0xca8>
  815c70:	d9801b17 	ldw	r6,108(sp)
  815c74:	d8801c17 	ldw	r2,112(sp)
  815c78:	d811883a 	mov	r8,sp
  815c7c:	31400044 	addi	r5,r6,1
  815c80:	003e4d06 	br	8155b8 <__alt_data_end+0xff8155b8>
  815c84:	d9401b17 	ldw	r5,108(sp)
  815c88:	d8801c17 	ldw	r2,112(sp)
  815c8c:	29000044 	addi	r4,r5,1
  815c90:	d8c01d87 	ldb	r3,118(sp)
  815c94:	183e6726 	beq	r3,zero,815634 <__alt_data_end+0xff815634>
  815c98:	00c00044 	movi	r3,1
  815c9c:	d9401d84 	addi	r5,sp,118
  815ca0:	10c5883a 	add	r2,r2,r3
  815ca4:	41400015 	stw	r5,0(r8)
  815ca8:	40c00115 	stw	r3,4(r8)
  815cac:	d8801c15 	stw	r2,112(sp)
  815cb0:	d9001b15 	stw	r4,108(sp)
  815cb4:	014001c4 	movi	r5,7
  815cb8:	2900ab16 	blt	r5,r4,815f68 <___vfiprintf_internal_r+0xe14>
  815cbc:	200b883a 	mov	r5,r4
  815cc0:	42000204 	addi	r8,r8,8
  815cc4:	21000044 	addi	r4,r4,1
  815cc8:	003e5a06 	br	815634 <__alt_data_end+0xff815634>
  815ccc:	d9002017 	ldw	r4,128(sp)
  815cd0:	d9402117 	ldw	r5,132(sp)
  815cd4:	d9801a04 	addi	r6,sp,104
  815cd8:	d9c02b15 	stw	r7,172(sp)
  815cdc:	db402a15 	stw	r13,168(sp)
  815ce0:	08150400 	call	815040 <__sprint_r.part.0>
  815ce4:	d9c02b17 	ldw	r7,172(sp)
  815ce8:	db402a17 	ldw	r13,168(sp)
  815cec:	1000431e 	bne	r2,zero,815dfc <___vfiprintf_internal_r+0xca8>
  815cf0:	d9401b17 	ldw	r5,108(sp)
  815cf4:	d8801c17 	ldw	r2,112(sp)
  815cf8:	d811883a 	mov	r8,sp
  815cfc:	29000044 	addi	r4,r5,1
  815d00:	003e6706 	br	8156a0 <__alt_data_end+0xff8156a0>
  815d04:	10803fcc 	andi	r2,r2,255
  815d08:	00c00044 	movi	r3,1
  815d0c:	10fdfa1e 	bne	r2,r3,8154f8 <__alt_data_end+0xff8154f8>
  815d10:	6800021e 	bne	r13,zero,815d1c <___vfiprintf_internal_r+0xbc8>
  815d14:	00800244 	movi	r2,9
  815d18:	1580222e 	bgeu	r2,r22,815da4 <___vfiprintf_internal_r+0xc50>
  815d1c:	dc802415 	stw	r18,144(sp)
  815d20:	dc002515 	stw	r16,148(sp)
  815d24:	dc401a04 	addi	r17,sp,104
  815d28:	b021883a 	mov	r16,r22
  815d2c:	4827883a 	mov	r19,r9
  815d30:	4029883a 	mov	r20,r8
  815d34:	702d883a 	mov	r22,r14
  815d38:	6825883a 	mov	r18,r13
  815d3c:	8009883a 	mov	r4,r16
  815d40:	900b883a 	mov	r5,r18
  815d44:	01800284 	movi	r6,10
  815d48:	000f883a 	mov	r7,zero
  815d4c:	08170a40 	call	8170a4 <__umoddi3>
  815d50:	10800c04 	addi	r2,r2,48
  815d54:	8c7fffc4 	addi	r17,r17,-1
  815d58:	8009883a 	mov	r4,r16
  815d5c:	900b883a 	mov	r5,r18
  815d60:	01800284 	movi	r6,10
  815d64:	000f883a 	mov	r7,zero
  815d68:	88800005 	stb	r2,0(r17)
  815d6c:	0816ae40 	call	816ae4 <__udivdi3>
  815d70:	1021883a 	mov	r16,r2
  815d74:	10c4b03a 	or	r2,r2,r3
  815d78:	1825883a 	mov	r18,r3
  815d7c:	103fef1e 	bne	r2,zero,815d3c <__alt_data_end+0xff815d3c>
  815d80:	dc802417 	ldw	r18,144(sp)
  815d84:	dc002517 	ldw	r16,148(sp)
  815d88:	a011883a 	mov	r8,r20
  815d8c:	9813883a 	mov	r9,r19
  815d90:	b01d883a 	mov	r14,r22
  815d94:	8829883a 	mov	r20,r17
  815d98:	d8c01e17 	ldw	r3,120(sp)
  815d9c:	1d27c83a 	sub	r19,r3,r20
  815da0:	003de606 	br	81553c <__alt_data_end+0xff81553c>
  815da4:	b5800c04 	addi	r22,r22,48
  815da8:	dd8019c5 	stb	r22,103(sp)
  815dac:	dcc02717 	ldw	r19,156(sp)
  815db0:	dd0019c4 	addi	r20,sp,103
  815db4:	003de106 	br	81553c <__alt_data_end+0xff81553c>
  815db8:	d9002017 	ldw	r4,128(sp)
  815dbc:	d9402117 	ldw	r5,132(sp)
  815dc0:	d9801a04 	addi	r6,sp,104
  815dc4:	08150400 	call	815040 <__sprint_r.part.0>
  815dc8:	10000c1e 	bne	r2,zero,815dfc <___vfiprintf_internal_r+0xca8>
  815dcc:	d8801c17 	ldw	r2,112(sp)
  815dd0:	8c80010e 	bge	r17,r18,815dd8 <___vfiprintf_internal_r+0xc84>
  815dd4:	9023883a 	mov	r17,r18
  815dd8:	d8c02317 	ldw	r3,140(sp)
  815ddc:	1c47883a 	add	r3,r3,r17
  815de0:	d8c02315 	stw	r3,140(sp)
  815de4:	103e7e26 	beq	r2,zero,8157e0 <__alt_data_end+0xff8157e0>
  815de8:	d9002017 	ldw	r4,128(sp)
  815dec:	d9402117 	ldw	r5,132(sp)
  815df0:	d9801a04 	addi	r6,sp,104
  815df4:	08150400 	call	815040 <__sprint_r.part.0>
  815df8:	103e7926 	beq	r2,zero,8157e0 <__alt_data_end+0xff8157e0>
  815dfc:	dd402117 	ldw	r21,132(sp)
  815e00:	a880030b 	ldhu	r2,12(r21)
  815e04:	1080100c 	andi	r2,r2,64
  815e08:	103e881e 	bne	r2,zero,81582c <__alt_data_end+0xff81582c>
  815e0c:	d8802317 	ldw	r2,140(sp)
  815e10:	003e8706 	br	815830 <__alt_data_end+0xff815830>
  815e14:	d9402117 	ldw	r5,132(sp)
  815e18:	b009883a 	mov	r4,r22
  815e1c:	d9801a04 	addi	r6,sp,104
  815e20:	08150400 	call	815040 <__sprint_r.part.0>
  815e24:	103ff51e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  815e28:	d9001b17 	ldw	r4,108(sp)
  815e2c:	d8801c17 	ldw	r2,112(sp)
  815e30:	d811883a 	mov	r8,sp
  815e34:	21400044 	addi	r5,r4,1
  815e38:	003e4d06 	br	815770 <__alt_data_end+0xff815770>
  815e3c:	1000aa1e 	bne	r2,zero,8160e8 <___vfiprintf_internal_r+0xf94>
  815e40:	00c00044 	movi	r3,1
  815e44:	9805883a 	mov	r2,r19
  815e48:	dd000015 	stw	r20,0(sp)
  815e4c:	dcc00115 	stw	r19,4(sp)
  815e50:	dcc01c15 	stw	r19,112(sp)
  815e54:	d8c01b15 	stw	r3,108(sp)
  815e58:	d811883a 	mov	r8,sp
  815e5c:	42000204 	addi	r8,r8,8
  815e60:	aac0010c 	andi	r11,r21,4
  815e64:	583fda26 	beq	r11,zero,815dd0 <__alt_data_end+0xff815dd0>
  815e68:	9467c83a 	sub	r19,r18,r17
  815e6c:	04fe3316 	blt	zero,r19,81573c <__alt_data_end+0xff81573c>
  815e70:	003fd706 	br	815dd0 <__alt_data_end+0xff815dd0>
  815e74:	946dc83a 	sub	r22,r18,r17
  815e78:	05bdfd0e 	bge	zero,r22,815670 <__alt_data_end+0xff815670>
  815e7c:	00c020b4 	movhi	r3,130
  815e80:	18f97404 	addi	r3,r3,-6704
  815e84:	01c00404 	movi	r7,16
  815e88:	d8c02415 	stw	r3,144(sp)
  815e8c:	3d81530e 	bge	r7,r22,8163dc <___vfiprintf_internal_r+0x1288>
  815e90:	8007883a 	mov	r3,r16
  815e94:	034001c4 	movi	r13,7
  815e98:	b021883a 	mov	r16,r22
  815e9c:	da402515 	stw	r9,148(sp)
  815ea0:	182d883a 	mov	r22,r3
  815ea4:	00000506 	br	815ebc <___vfiprintf_internal_r+0xd68>
  815ea8:	29800084 	addi	r6,r5,2
  815eac:	42000204 	addi	r8,r8,8
  815eb0:	180b883a 	mov	r5,r3
  815eb4:	843ffc04 	addi	r16,r16,-16
  815eb8:	3c000d0e 	bge	r7,r16,815ef0 <___vfiprintf_internal_r+0xd9c>
  815ebc:	10800404 	addi	r2,r2,16
  815ec0:	28c00044 	addi	r3,r5,1
  815ec4:	45c00015 	stw	r23,0(r8)
  815ec8:	41c00115 	stw	r7,4(r8)
  815ecc:	d8801c15 	stw	r2,112(sp)
  815ed0:	d8c01b15 	stw	r3,108(sp)
  815ed4:	68fff40e 	bge	r13,r3,815ea8 <__alt_data_end+0xff815ea8>
  815ed8:	1000151e 	bne	r2,zero,815f30 <___vfiprintf_internal_r+0xddc>
  815edc:	843ffc04 	addi	r16,r16,-16
  815ee0:	01800044 	movi	r6,1
  815ee4:	000b883a 	mov	r5,zero
  815ee8:	d811883a 	mov	r8,sp
  815eec:	3c3ff316 	blt	r7,r16,815ebc <__alt_data_end+0xff815ebc>
  815ef0:	da402517 	ldw	r9,148(sp)
  815ef4:	b007883a 	mov	r3,r22
  815ef8:	802d883a 	mov	r22,r16
  815efc:	1821883a 	mov	r16,r3
  815f00:	d8c02417 	ldw	r3,144(sp)
  815f04:	1585883a 	add	r2,r2,r22
  815f08:	45800115 	stw	r22,4(r8)
  815f0c:	40c00015 	stw	r3,0(r8)
  815f10:	d8801c15 	stw	r2,112(sp)
  815f14:	d9801b15 	stw	r6,108(sp)
  815f18:	00c001c4 	movi	r3,7
  815f1c:	19806d16 	blt	r3,r6,8160d4 <___vfiprintf_internal_r+0xf80>
  815f20:	42000204 	addi	r8,r8,8
  815f24:	31000044 	addi	r4,r6,1
  815f28:	300b883a 	mov	r5,r6
  815f2c:	003dd006 	br	815670 <__alt_data_end+0xff815670>
  815f30:	d9002017 	ldw	r4,128(sp)
  815f34:	d9402117 	ldw	r5,132(sp)
  815f38:	d9801a04 	addi	r6,sp,104
  815f3c:	d9c02b15 	stw	r7,172(sp)
  815f40:	db402a15 	stw	r13,168(sp)
  815f44:	08150400 	call	815040 <__sprint_r.part.0>
  815f48:	d9c02b17 	ldw	r7,172(sp)
  815f4c:	db402a17 	ldw	r13,168(sp)
  815f50:	103faa1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  815f54:	d9401b17 	ldw	r5,108(sp)
  815f58:	d8801c17 	ldw	r2,112(sp)
  815f5c:	d811883a 	mov	r8,sp
  815f60:	29800044 	addi	r6,r5,1
  815f64:	003fd306 	br	815eb4 <__alt_data_end+0xff815eb4>
  815f68:	1000401e 	bne	r2,zero,81606c <___vfiprintf_internal_r+0xf18>
  815f6c:	68003b26 	beq	r13,zero,81605c <___vfiprintf_internal_r+0xf08>
  815f70:	d9001d04 	addi	r4,sp,116
  815f74:	00800084 	movi	r2,2
  815f78:	d9000015 	stw	r4,0(sp)
  815f7c:	d8800115 	stw	r2,4(sp)
  815f80:	1809883a 	mov	r4,r3
  815f84:	d811883a 	mov	r8,sp
  815f88:	003db406 	br	81565c <__alt_data_end+0xff81565c>
  815f8c:	1000451e 	bne	r2,zero,8160a4 <___vfiprintf_internal_r+0xf50>
  815f90:	01000044 	movi	r4,1
  815f94:	000b883a 	mov	r5,zero
  815f98:	d811883a 	mov	r8,sp
  815f9c:	003db206 	br	815668 <__alt_data_end+0xff815668>
  815fa0:	10803fcc 	andi	r2,r2,255
  815fa4:	1000071e 	bne	r2,zero,815fc4 <___vfiprintf_internal_r+0xe70>
  815fa8:	a880004c 	andi	r2,r21,1
  815fac:	10000526 	beq	r2,zero,815fc4 <___vfiprintf_internal_r+0xe70>
  815fb0:	00800c04 	movi	r2,48
  815fb4:	d88019c5 	stb	r2,103(sp)
  815fb8:	dcc02717 	ldw	r19,156(sp)
  815fbc:	dd0019c4 	addi	r20,sp,103
  815fc0:	003d5e06 	br	81553c <__alt_data_end+0xff81553c>
  815fc4:	dd001a04 	addi	r20,sp,104
  815fc8:	003d5c06 	br	81553c <__alt_data_end+0xff81553c>
  815fcc:	1000971e 	bne	r2,zero,81622c <___vfiprintf_internal_r+0x10d8>
  815fd0:	d8c01d87 	ldb	r3,118(sp)
  815fd4:	18005826 	beq	r3,zero,816138 <___vfiprintf_internal_r+0xfe4>
  815fd8:	00800044 	movi	r2,1
  815fdc:	d8c01d84 	addi	r3,sp,118
  815fe0:	1009883a 	mov	r4,r2
  815fe4:	d8c00015 	stw	r3,0(sp)
  815fe8:	d8800115 	stw	r2,4(sp)
  815fec:	d811883a 	mov	r8,sp
  815ff0:	003f3206 	br	815cbc <__alt_data_end+0xff815cbc>
  815ff4:	8023883a 	mov	r17,r16
  815ff8:	003ca706 	br	815298 <__alt_data_end+0xff815298>
  815ffc:	d9002017 	ldw	r4,128(sp)
  816000:	d9402117 	ldw	r5,132(sp)
  816004:	d9801a04 	addi	r6,sp,104
  816008:	08150400 	call	815040 <__sprint_r.part.0>
  81600c:	103f7b1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  816010:	d8801c17 	ldw	r2,112(sp)
  816014:	d811883a 	mov	r8,sp
  816018:	003f9106 	br	815e60 <__alt_data_end+0xff815e60>
  81601c:	00800084 	movi	r2,2
  816020:	b348b03a 	or	r4,r22,r13
  816024:	003d2906 	br	8154cc <__alt_data_end+0xff8154cc>
  816028:	d8802217 	ldw	r2,136(sp)
  81602c:	001b883a 	mov	r13,zero
  816030:	15800017 	ldw	r22,0(r2)
  816034:	10800104 	addi	r2,r2,4
  816038:	d8802215 	stw	r2,136(sp)
  81603c:	003ea706 	br	815adc <__alt_data_end+0xff815adc>
  816040:	d9002017 	ldw	r4,128(sp)
  816044:	d9402117 	ldw	r5,132(sp)
  816048:	d9801a04 	addi	r6,sp,104
  81604c:	08150400 	call	815040 <__sprint_r.part.0>
  816050:	103f6a1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  816054:	d811883a 	mov	r8,sp
  816058:	003cff06 	br	815458 <__alt_data_end+0xff815458>
  81605c:	000b883a 	mov	r5,zero
  816060:	1809883a 	mov	r4,r3
  816064:	d811883a 	mov	r8,sp
  816068:	003d7f06 	br	815668 <__alt_data_end+0xff815668>
  81606c:	d9002017 	ldw	r4,128(sp)
  816070:	d9402117 	ldw	r5,132(sp)
  816074:	d9801a04 	addi	r6,sp,104
  816078:	da402b15 	stw	r9,172(sp)
  81607c:	db402a15 	stw	r13,168(sp)
  816080:	08150400 	call	815040 <__sprint_r.part.0>
  816084:	da402b17 	ldw	r9,172(sp)
  816088:	db402a17 	ldw	r13,168(sp)
  81608c:	103f5b1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  816090:	d9401b17 	ldw	r5,108(sp)
  816094:	d8801c17 	ldw	r2,112(sp)
  816098:	d811883a 	mov	r8,sp
  81609c:	29000044 	addi	r4,r5,1
  8160a0:	003d6406 	br	815634 <__alt_data_end+0xff815634>
  8160a4:	d9002017 	ldw	r4,128(sp)
  8160a8:	d9402117 	ldw	r5,132(sp)
  8160ac:	d9801a04 	addi	r6,sp,104
  8160b0:	da402b15 	stw	r9,172(sp)
  8160b4:	08150400 	call	815040 <__sprint_r.part.0>
  8160b8:	da402b17 	ldw	r9,172(sp)
  8160bc:	103f4f1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  8160c0:	d9401b17 	ldw	r5,108(sp)
  8160c4:	d8801c17 	ldw	r2,112(sp)
  8160c8:	d811883a 	mov	r8,sp
  8160cc:	29000044 	addi	r4,r5,1
  8160d0:	003d6506 	br	815668 <__alt_data_end+0xff815668>
  8160d4:	10009a1e 	bne	r2,zero,816340 <___vfiprintf_internal_r+0x11ec>
  8160d8:	01000044 	movi	r4,1
  8160dc:	000b883a 	mov	r5,zero
  8160e0:	d811883a 	mov	r8,sp
  8160e4:	003d6206 	br	815670 <__alt_data_end+0xff815670>
  8160e8:	d9002017 	ldw	r4,128(sp)
  8160ec:	d9402117 	ldw	r5,132(sp)
  8160f0:	d9801a04 	addi	r6,sp,104
  8160f4:	08150400 	call	815040 <__sprint_r.part.0>
  8160f8:	103f401e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  8160fc:	d9001b17 	ldw	r4,108(sp)
  816100:	d8801c17 	ldw	r2,112(sp)
  816104:	d811883a 	mov	r8,sp
  816108:	21000044 	addi	r4,r4,1
  81610c:	003d7d06 	br	815704 <__alt_data_end+0xff815704>
  816110:	05adc83a 	sub	r22,zero,r22
  816114:	b004c03a 	cmpne	r2,r22,zero
  816118:	035bc83a 	sub	r13,zero,r13
  81611c:	689bc83a 	sub	r13,r13,r2
  816120:	03800b44 	movi	r14,45
  816124:	db801d85 	stb	r14,118(sp)
  816128:	4827883a 	mov	r19,r9
  81612c:	00800044 	movi	r2,1
  816130:	b348b03a 	or	r4,r22,r13
  816134:	003ce806 	br	8154d8 <__alt_data_end+0xff8154d8>
  816138:	000b883a 	mov	r5,zero
  81613c:	01000044 	movi	r4,1
  816140:	d811883a 	mov	r8,sp
  816144:	683d4826 	beq	r13,zero,815668 <__alt_data_end+0xff815668>
  816148:	00800084 	movi	r2,2
  81614c:	d8c01d04 	addi	r3,sp,116
  816150:	d8c00015 	stw	r3,0(sp)
  816154:	d8800115 	stw	r2,4(sp)
  816158:	003d4006 	br	81565c <__alt_data_end+0xff81565c>
  81615c:	00800084 	movi	r2,2
  816160:	003cda06 	br	8154cc <__alt_data_end+0xff8154cc>
  816164:	a880100c 	andi	r2,r21,64
  816168:	10004226 	beq	r2,zero,816274 <___vfiprintf_internal_r+0x1120>
  81616c:	d8802217 	ldw	r2,136(sp)
  816170:	001b883a 	mov	r13,zero
  816174:	1580000b 	ldhu	r22,0(r2)
  816178:	10800104 	addi	r2,r2,4
  81617c:	d8802215 	stw	r2,136(sp)
  816180:	b009883a 	mov	r4,r22
  816184:	0005883a 	mov	r2,zero
  816188:	003cd006 	br	8154cc <__alt_data_end+0xff8154cc>
  81618c:	80c00007 	ldb	r3,0(r16)
  816190:	8005883a 	mov	r2,r16
  816194:	003c4d06 	br	8152cc <__alt_data_end+0xff8152cc>
  816198:	a880100c 	andi	r2,r21,64
  81619c:	10004426 	beq	r2,zero,8162b0 <___vfiprintf_internal_r+0x115c>
  8161a0:	d8c02217 	ldw	r3,136(sp)
  8161a4:	001b883a 	mov	r13,zero
  8161a8:	00800044 	movi	r2,1
  8161ac:	1d80000b 	ldhu	r22,0(r3)
  8161b0:	18c00104 	addi	r3,r3,4
  8161b4:	d8c02215 	stw	r3,136(sp)
  8161b8:	b009883a 	mov	r4,r22
  8161bc:	003cc306 	br	8154cc <__alt_data_end+0xff8154cc>
  8161c0:	a880040c 	andi	r2,r21,16
  8161c4:	1000091e 	bne	r2,zero,8161ec <___vfiprintf_internal_r+0x1098>
  8161c8:	aac0100c 	andi	r11,r21,64
  8161cc:	58000726 	beq	r11,zero,8161ec <___vfiprintf_internal_r+0x1098>
  8161d0:	d8c02217 	ldw	r3,136(sp)
  8161d4:	d9002317 	ldw	r4,140(sp)
  8161d8:	18800017 	ldw	r2,0(r3)
  8161dc:	18c00104 	addi	r3,r3,4
  8161e0:	d8c02215 	stw	r3,136(sp)
  8161e4:	1100000d 	sth	r4,0(r2)
  8161e8:	003c0e06 	br	815224 <__alt_data_end+0xff815224>
  8161ec:	d8c02217 	ldw	r3,136(sp)
  8161f0:	d9002317 	ldw	r4,140(sp)
  8161f4:	18800017 	ldw	r2,0(r3)
  8161f8:	18c00104 	addi	r3,r3,4
  8161fc:	d8c02215 	stw	r3,136(sp)
  816200:	11000015 	stw	r4,0(r2)
  816204:	003c0706 	br	815224 <__alt_data_end+0xff815224>
  816208:	a880100c 	andi	r2,r21,64
  81620c:	10002126 	beq	r2,zero,816294 <___vfiprintf_internal_r+0x1140>
  816210:	1d80000f 	ldh	r22,0(r3)
  816214:	d8c02217 	ldw	r3,136(sp)
  816218:	b01bd7fa 	srai	r13,r22,31
  81621c:	18c00104 	addi	r3,r3,4
  816220:	d8c02215 	stw	r3,136(sp)
  816224:	6805883a 	mov	r2,r13
  816228:	003dc406 	br	81593c <__alt_data_end+0xff81593c>
  81622c:	d9002017 	ldw	r4,128(sp)
  816230:	d9402117 	ldw	r5,132(sp)
  816234:	d9801a04 	addi	r6,sp,104
  816238:	da402b15 	stw	r9,172(sp)
  81623c:	db402a15 	stw	r13,168(sp)
  816240:	08150400 	call	815040 <__sprint_r.part.0>
  816244:	da402b17 	ldw	r9,172(sp)
  816248:	db402a17 	ldw	r13,168(sp)
  81624c:	103eeb1e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  816250:	d9401b17 	ldw	r5,108(sp)
  816254:	d8801c17 	ldw	r2,112(sp)
  816258:	d811883a 	mov	r8,sp
  81625c:	29000044 	addi	r4,r5,1
  816260:	003e8b06 	br	815c90 <__alt_data_end+0xff815c90>
  816264:	9023883a 	mov	r17,r18
  816268:	003d5a06 	br	8157d4 <__alt_data_end+0xff8157d4>
  81626c:	4827883a 	mov	r19,r9
  816270:	003e3506 	br	815b48 <__alt_data_end+0xff815b48>
  816274:	d8c02217 	ldw	r3,136(sp)
  816278:	001b883a 	mov	r13,zero
  81627c:	0005883a 	mov	r2,zero
  816280:	1d800017 	ldw	r22,0(r3)
  816284:	18c00104 	addi	r3,r3,4
  816288:	d8c02215 	stw	r3,136(sp)
  81628c:	b009883a 	mov	r4,r22
  816290:	003c8e06 	br	8154cc <__alt_data_end+0xff8154cc>
  816294:	1d800017 	ldw	r22,0(r3)
  816298:	d9002217 	ldw	r4,136(sp)
  81629c:	b01bd7fa 	srai	r13,r22,31
  8162a0:	21000104 	addi	r4,r4,4
  8162a4:	d9002215 	stw	r4,136(sp)
  8162a8:	6805883a 	mov	r2,r13
  8162ac:	003da306 	br	81593c <__alt_data_end+0xff81593c>
  8162b0:	d9002217 	ldw	r4,136(sp)
  8162b4:	001b883a 	mov	r13,zero
  8162b8:	00800044 	movi	r2,1
  8162bc:	25800017 	ldw	r22,0(r4)
  8162c0:	21000104 	addi	r4,r4,4
  8162c4:	d9002215 	stw	r4,136(sp)
  8162c8:	b009883a 	mov	r4,r22
  8162cc:	003c7f06 	br	8154cc <__alt_data_end+0xff8154cc>
  8162d0:	00c020b4 	movhi	r3,130
  8162d4:	18f97404 	addi	r3,r3,-6704
  8162d8:	d8c02415 	stw	r3,144(sp)
  8162dc:	003cff06 	br	8156dc <__alt_data_end+0xff8156dc>
  8162e0:	d8801c17 	ldw	r2,112(sp)
  8162e4:	dd402117 	ldw	r21,132(sp)
  8162e8:	103ec526 	beq	r2,zero,815e00 <__alt_data_end+0xff815e00>
  8162ec:	d9002017 	ldw	r4,128(sp)
  8162f0:	a80b883a 	mov	r5,r21
  8162f4:	d9801a04 	addi	r6,sp,104
  8162f8:	08150400 	call	815040 <__sprint_r.part.0>
  8162fc:	003ec006 	br	815e00 <__alt_data_end+0xff815e00>
  816300:	80800044 	addi	r2,r16,1
  816304:	ad400814 	ori	r21,r21,32
  816308:	80c00047 	ldb	r3,1(r16)
  81630c:	003bef06 	br	8152cc <__alt_data_end+0xff8152cc>
  816310:	04a5c83a 	sub	r18,zero,r18
  816314:	8005883a 	mov	r2,r16
  816318:	d8c02215 	stw	r3,136(sp)
  81631c:	003d5306 	br	81586c <__alt_data_end+0xff81586c>
  816320:	da002a15 	stw	r8,168(sp)
  816324:	080c0580 	call	80c058 <strlen>
  816328:	1027883a 	mov	r19,r2
  81632c:	db801d83 	ldbu	r14,118(sp)
  816330:	dd802215 	stw	r22,136(sp)
  816334:	0013883a 	mov	r9,zero
  816338:	da002a17 	ldw	r8,168(sp)
  81633c:	003c7f06 	br	81553c <__alt_data_end+0xff81553c>
  816340:	d9002017 	ldw	r4,128(sp)
  816344:	d9402117 	ldw	r5,132(sp)
  816348:	d9801a04 	addi	r6,sp,104
  81634c:	da402b15 	stw	r9,172(sp)
  816350:	08150400 	call	815040 <__sprint_r.part.0>
  816354:	da402b17 	ldw	r9,172(sp)
  816358:	103ea81e 	bne	r2,zero,815dfc <__alt_data_end+0xff815dfc>
  81635c:	d9401b17 	ldw	r5,108(sp)
  816360:	d8801c17 	ldw	r2,112(sp)
  816364:	d811883a 	mov	r8,sp
  816368:	29000044 	addi	r4,r5,1
  81636c:	003cc006 	br	815670 <__alt_data_end+0xff815670>
  816370:	d9401b17 	ldw	r5,108(sp)
  816374:	010020b4 	movhi	r4,130
  816378:	21397804 	addi	r4,r4,-6688
  81637c:	d9002415 	stw	r4,144(sp)
  816380:	29400044 	addi	r5,r5,1
  816384:	003c9f06 	br	815604 <__alt_data_end+0xff815604>
  816388:	00800184 	movi	r2,6
  81638c:	1240012e 	bgeu	r2,r9,816394 <___vfiprintf_internal_r+0x1240>
  816390:	1013883a 	mov	r9,r2
  816394:	4827883a 	mov	r19,r9
  816398:	4823883a 	mov	r17,r9
  81639c:	48001116 	blt	r9,zero,8163e4 <___vfiprintf_internal_r+0x1290>
  8163a0:	050020b4 	movhi	r20,130
  8163a4:	dd802215 	stw	r22,136(sp)
  8163a8:	a5390904 	addi	r20,r20,-7132
  8163ac:	003db106 	br	815a74 <__alt_data_end+0xff815a74>
  8163b0:	d9401b17 	ldw	r5,108(sp)
  8163b4:	010020b4 	movhi	r4,130
  8163b8:	21397804 	addi	r4,r4,-6688
  8163bc:	d9002415 	stw	r4,144(sp)
  8163c0:	29400044 	addi	r5,r5,1
  8163c4:	003cf906 	br	8157ac <__alt_data_end+0xff8157ac>
  8163c8:	4827883a 	mov	r19,r9
  8163cc:	db801d83 	ldbu	r14,118(sp)
  8163d0:	dd802215 	stw	r22,136(sp)
  8163d4:	0013883a 	mov	r9,zero
  8163d8:	003c5806 	br	81553c <__alt_data_end+0xff81553c>
  8163dc:	200d883a 	mov	r6,r4
  8163e0:	003ec706 	br	815f00 <__alt_data_end+0xff815f00>
  8163e4:	0023883a 	mov	r17,zero
  8163e8:	003fed06 	br	8163a0 <__alt_data_end+0xff8163a0>
  8163ec:	d9002217 	ldw	r4,136(sp)
  8163f0:	22400017 	ldw	r9,0(r4)
  8163f4:	20c00104 	addi	r3,r4,4
  8163f8:	d8c02215 	stw	r3,136(sp)
  8163fc:	483fc20e 	bge	r9,zero,816308 <__alt_data_end+0xff816308>
  816400:	027fffc4 	movi	r9,-1
  816404:	80c00047 	ldb	r3,1(r16)
  816408:	003bb006 	br	8152cc <__alt_data_end+0xff8152cc>
  81640c:	8c80010e 	bge	r17,r18,816414 <___vfiprintf_internal_r+0x12c0>
  816410:	9023883a 	mov	r17,r18
  816414:	d8802317 	ldw	r2,140(sp)
  816418:	1445883a 	add	r2,r2,r17
  81641c:	d8802315 	stw	r2,140(sp)
  816420:	003cef06 	br	8157e0 <__alt_data_end+0xff8157e0>

00816424 <__vfiprintf_internal>:
  816424:	2007883a 	mov	r3,r4
  816428:	010020b4 	movhi	r4,130
  81642c:	213db104 	addi	r4,r4,-2364
  816430:	21000017 	ldw	r4,0(r4)
  816434:	2805883a 	mov	r2,r5
  816438:	300f883a 	mov	r7,r6
  81643c:	180b883a 	mov	r5,r3
  816440:	100d883a 	mov	r6,r2
  816444:	08151541 	jmpi	815154 <___vfiprintf_internal_r>

00816448 <__sbprintf>:
  816448:	2880030b 	ldhu	r2,12(r5)
  81644c:	2ac01917 	ldw	r11,100(r5)
  816450:	2a80038b 	ldhu	r10,14(r5)
  816454:	2a400717 	ldw	r9,28(r5)
  816458:	2a000917 	ldw	r8,36(r5)
  81645c:	defee204 	addi	sp,sp,-1144
  816460:	00c10004 	movi	r3,1024
  816464:	dc011a15 	stw	r16,1128(sp)
  816468:	10bfff4c 	andi	r2,r2,65533
  81646c:	2821883a 	mov	r16,r5
  816470:	d8cb883a 	add	r5,sp,r3
  816474:	dc811c15 	stw	r18,1136(sp)
  816478:	dc411b15 	stw	r17,1132(sp)
  81647c:	dfc11d15 	stw	ra,1140(sp)
  816480:	2025883a 	mov	r18,r4
  816484:	d881030d 	sth	r2,1036(sp)
  816488:	dac11915 	stw	r11,1124(sp)
  81648c:	da81038d 	sth	r10,1038(sp)
  816490:	da410715 	stw	r9,1052(sp)
  816494:	da010915 	stw	r8,1060(sp)
  816498:	dec10015 	stw	sp,1024(sp)
  81649c:	dec10415 	stw	sp,1040(sp)
  8164a0:	d8c10215 	stw	r3,1032(sp)
  8164a4:	d8c10515 	stw	r3,1044(sp)
  8164a8:	d8010615 	stw	zero,1048(sp)
  8164ac:	08151540 	call	815154 <___vfiprintf_internal_r>
  8164b0:	1023883a 	mov	r17,r2
  8164b4:	10000416 	blt	r2,zero,8164c8 <__sbprintf+0x80>
  8164b8:	9009883a 	mov	r4,r18
  8164bc:	d9410004 	addi	r5,sp,1024
  8164c0:	0809dd80 	call	809dd8 <_fflush_r>
  8164c4:	10000d1e 	bne	r2,zero,8164fc <__sbprintf+0xb4>
  8164c8:	d8c1030b 	ldhu	r3,1036(sp)
  8164cc:	18c0100c 	andi	r3,r3,64
  8164d0:	18000326 	beq	r3,zero,8164e0 <__sbprintf+0x98>
  8164d4:	8080030b 	ldhu	r2,12(r16)
  8164d8:	10801014 	ori	r2,r2,64
  8164dc:	8080030d 	sth	r2,12(r16)
  8164e0:	8805883a 	mov	r2,r17
  8164e4:	dfc11d17 	ldw	ra,1140(sp)
  8164e8:	dc811c17 	ldw	r18,1136(sp)
  8164ec:	dc411b17 	ldw	r17,1132(sp)
  8164f0:	dc011a17 	ldw	r16,1128(sp)
  8164f4:	dec11e04 	addi	sp,sp,1144
  8164f8:	f800283a 	ret
  8164fc:	047fffc4 	movi	r17,-1
  816500:	003ff106 	br	8164c8 <__alt_data_end+0xff8164c8>

00816504 <__swbuf_r>:
  816504:	defffc04 	addi	sp,sp,-16
  816508:	dc800215 	stw	r18,8(sp)
  81650c:	dc400115 	stw	r17,4(sp)
  816510:	dc000015 	stw	r16,0(sp)
  816514:	dfc00315 	stw	ra,12(sp)
  816518:	2025883a 	mov	r18,r4
  81651c:	2823883a 	mov	r17,r5
  816520:	3021883a 	mov	r16,r6
  816524:	20000226 	beq	r4,zero,816530 <__swbuf_r+0x2c>
  816528:	20800e17 	ldw	r2,56(r4)
  81652c:	10004126 	beq	r2,zero,816634 <__swbuf_r+0x130>
  816530:	80c00617 	ldw	r3,24(r16)
  816534:	8180030b 	ldhu	r6,12(r16)
  816538:	80c00215 	stw	r3,8(r16)
  81653c:	30c0020c 	andi	r3,r6,8
  816540:	18003526 	beq	r3,zero,816618 <__swbuf_r+0x114>
  816544:	80c00417 	ldw	r3,16(r16)
  816548:	18003326 	beq	r3,zero,816618 <__swbuf_r+0x114>
  81654c:	3088000c 	andi	r2,r6,8192
  816550:	8c403fcc 	andi	r17,r17,255
  816554:	10001726 	beq	r2,zero,8165b4 <__swbuf_r+0xb0>
  816558:	80800017 	ldw	r2,0(r16)
  81655c:	81000517 	ldw	r4,20(r16)
  816560:	10c7c83a 	sub	r3,r2,r3
  816564:	19001d0e 	bge	r3,r4,8165dc <__swbuf_r+0xd8>
  816568:	18c00044 	addi	r3,r3,1
  81656c:	81400217 	ldw	r5,8(r16)
  816570:	11000044 	addi	r4,r2,1
  816574:	81000015 	stw	r4,0(r16)
  816578:	297fffc4 	addi	r5,r5,-1
  81657c:	81400215 	stw	r5,8(r16)
  816580:	14400005 	stb	r17,0(r2)
  816584:	80800517 	ldw	r2,20(r16)
  816588:	10c01d26 	beq	r2,r3,816600 <__swbuf_r+0xfc>
  81658c:	8080030b 	ldhu	r2,12(r16)
  816590:	1080004c 	andi	r2,r2,1
  816594:	1000181e 	bne	r2,zero,8165f8 <__swbuf_r+0xf4>
  816598:	8805883a 	mov	r2,r17
  81659c:	dfc00317 	ldw	ra,12(sp)
  8165a0:	dc800217 	ldw	r18,8(sp)
  8165a4:	dc400117 	ldw	r17,4(sp)
  8165a8:	dc000017 	ldw	r16,0(sp)
  8165ac:	dec00404 	addi	sp,sp,16
  8165b0:	f800283a 	ret
  8165b4:	81001917 	ldw	r4,100(r16)
  8165b8:	00b7ffc4 	movi	r2,-8193
  8165bc:	31880014 	ori	r6,r6,8192
  8165c0:	2084703a 	and	r2,r4,r2
  8165c4:	80801915 	stw	r2,100(r16)
  8165c8:	80800017 	ldw	r2,0(r16)
  8165cc:	81000517 	ldw	r4,20(r16)
  8165d0:	8180030d 	sth	r6,12(r16)
  8165d4:	10c7c83a 	sub	r3,r2,r3
  8165d8:	193fe316 	blt	r3,r4,816568 <__alt_data_end+0xff816568>
  8165dc:	9009883a 	mov	r4,r18
  8165e0:	800b883a 	mov	r5,r16
  8165e4:	0809dd80 	call	809dd8 <_fflush_r>
  8165e8:	1000091e 	bne	r2,zero,816610 <__swbuf_r+0x10c>
  8165ec:	80800017 	ldw	r2,0(r16)
  8165f0:	00c00044 	movi	r3,1
  8165f4:	003fdd06 	br	81656c <__alt_data_end+0xff81656c>
  8165f8:	00800284 	movi	r2,10
  8165fc:	88bfe61e 	bne	r17,r2,816598 <__alt_data_end+0xff816598>
  816600:	9009883a 	mov	r4,r18
  816604:	800b883a 	mov	r5,r16
  816608:	0809dd80 	call	809dd8 <_fflush_r>
  81660c:	103fe226 	beq	r2,zero,816598 <__alt_data_end+0xff816598>
  816610:	00bfffc4 	movi	r2,-1
  816614:	003fe106 	br	81659c <__alt_data_end+0xff81659c>
  816618:	9009883a 	mov	r4,r18
  81661c:	800b883a 	mov	r5,r16
  816620:	081010c0 	call	81010c <__swsetup_r>
  816624:	103ffa1e 	bne	r2,zero,816610 <__alt_data_end+0xff816610>
  816628:	8180030b 	ldhu	r6,12(r16)
  81662c:	80c00417 	ldw	r3,16(r16)
  816630:	003fc606 	br	81654c <__alt_data_end+0xff81654c>
  816634:	080a1b40 	call	80a1b4 <__sinit>
  816638:	003fbd06 	br	816530 <__alt_data_end+0xff816530>

0081663c <__swbuf>:
  81663c:	00c020b4 	movhi	r3,130
  816640:	18fdb104 	addi	r3,r3,-2364
  816644:	2005883a 	mov	r2,r4
  816648:	19000017 	ldw	r4,0(r3)
  81664c:	280d883a 	mov	r6,r5
  816650:	100b883a 	mov	r5,r2
  816654:	08165041 	jmpi	816504 <__swbuf_r>

00816658 <_calloc_r>:
  816658:	298b383a 	mul	r5,r5,r6
  81665c:	defffe04 	addi	sp,sp,-8
  816660:	dc000015 	stw	r16,0(sp)
  816664:	dfc00115 	stw	ra,4(sp)
  816668:	080b0900 	call	80b090 <_malloc_r>
  81666c:	1021883a 	mov	r16,r2
  816670:	10002826 	beq	r2,zero,816714 <_calloc_r+0xbc>
  816674:	11bfff17 	ldw	r6,-4(r2)
  816678:	00bfff04 	movi	r2,-4
  81667c:	00c00904 	movi	r3,36
  816680:	308c703a 	and	r6,r6,r2
  816684:	308d883a 	add	r6,r6,r2
  816688:	19801436 	bltu	r3,r6,8166dc <_calloc_r+0x84>
  81668c:	008004c4 	movi	r2,19
  816690:	11800936 	bltu	r2,r6,8166b8 <_calloc_r+0x60>
  816694:	8005883a 	mov	r2,r16
  816698:	10000015 	stw	zero,0(r2)
  81669c:	10000115 	stw	zero,4(r2)
  8166a0:	10000215 	stw	zero,8(r2)
  8166a4:	8005883a 	mov	r2,r16
  8166a8:	dfc00117 	ldw	ra,4(sp)
  8166ac:	dc000017 	ldw	r16,0(sp)
  8166b0:	dec00204 	addi	sp,sp,8
  8166b4:	f800283a 	ret
  8166b8:	80000015 	stw	zero,0(r16)
  8166bc:	80000115 	stw	zero,4(r16)
  8166c0:	008006c4 	movi	r2,27
  8166c4:	11800d2e 	bgeu	r2,r6,8166fc <_calloc_r+0xa4>
  8166c8:	80000215 	stw	zero,8(r16)
  8166cc:	80000315 	stw	zero,12(r16)
  8166d0:	30c00c26 	beq	r6,r3,816704 <_calloc_r+0xac>
  8166d4:	80800404 	addi	r2,r16,16
  8166d8:	003fef06 	br	816698 <__alt_data_end+0xff816698>
  8166dc:	8009883a 	mov	r4,r16
  8166e0:	000b883a 	mov	r5,zero
  8166e4:	080b8380 	call	80b838 <memset>
  8166e8:	8005883a 	mov	r2,r16
  8166ec:	dfc00117 	ldw	ra,4(sp)
  8166f0:	dc000017 	ldw	r16,0(sp)
  8166f4:	dec00204 	addi	sp,sp,8
  8166f8:	f800283a 	ret
  8166fc:	80800204 	addi	r2,r16,8
  816700:	003fe506 	br	816698 <__alt_data_end+0xff816698>
  816704:	80000415 	stw	zero,16(r16)
  816708:	80800604 	addi	r2,r16,24
  81670c:	80000515 	stw	zero,20(r16)
  816710:	003fe106 	br	816698 <__alt_data_end+0xff816698>
  816714:	0005883a 	mov	r2,zero
  816718:	003fe306 	br	8166a8 <__alt_data_end+0xff8166a8>

0081671c <_fputwc_r>:
  81671c:	3080030b 	ldhu	r2,12(r6)
  816720:	defff804 	addi	sp,sp,-32
  816724:	dcc00415 	stw	r19,16(sp)
  816728:	dc800315 	stw	r18,12(sp)
  81672c:	dc000115 	stw	r16,4(sp)
  816730:	dfc00715 	stw	ra,28(sp)
  816734:	dd400615 	stw	r21,24(sp)
  816738:	dd000515 	stw	r20,20(sp)
  81673c:	dc400215 	stw	r17,8(sp)
  816740:	10c8000c 	andi	r3,r2,8192
  816744:	3021883a 	mov	r16,r6
  816748:	2027883a 	mov	r19,r4
  81674c:	2825883a 	mov	r18,r5
  816750:	1800051e 	bne	r3,zero,816768 <_fputwc_r+0x4c>
  816754:	30c01917 	ldw	r3,100(r6)
  816758:	10880014 	ori	r2,r2,8192
  81675c:	3080030d 	sth	r2,12(r6)
  816760:	18880014 	ori	r2,r3,8192
  816764:	30801915 	stw	r2,100(r6)
  816768:	08122240 	call	812224 <__locale_mb_cur_max>
  81676c:	00c00044 	movi	r3,1
  816770:	10c03e26 	beq	r2,r3,81686c <_fputwc_r+0x150>
  816774:	9809883a 	mov	r4,r19
  816778:	d80b883a 	mov	r5,sp
  81677c:	900d883a 	mov	r6,r18
  816780:	81c01704 	addi	r7,r16,92
  816784:	08168fc0 	call	8168fc <_wcrtomb_r>
  816788:	1029883a 	mov	r20,r2
  81678c:	00bfffc4 	movi	r2,-1
  816790:	a0802026 	beq	r20,r2,816814 <_fputwc_r+0xf8>
  816794:	d9400003 	ldbu	r5,0(sp)
  816798:	a0001c26 	beq	r20,zero,81680c <_fputwc_r+0xf0>
  81679c:	0023883a 	mov	r17,zero
  8167a0:	05400284 	movi	r21,10
  8167a4:	00000906 	br	8167cc <_fputwc_r+0xb0>
  8167a8:	80800017 	ldw	r2,0(r16)
  8167ac:	11400005 	stb	r5,0(r2)
  8167b0:	80c00017 	ldw	r3,0(r16)
  8167b4:	18c00044 	addi	r3,r3,1
  8167b8:	80c00015 	stw	r3,0(r16)
  8167bc:	8c400044 	addi	r17,r17,1
  8167c0:	dc45883a 	add	r2,sp,r17
  8167c4:	8d00112e 	bgeu	r17,r20,81680c <_fputwc_r+0xf0>
  8167c8:	11400003 	ldbu	r5,0(r2)
  8167cc:	80c00217 	ldw	r3,8(r16)
  8167d0:	18ffffc4 	addi	r3,r3,-1
  8167d4:	80c00215 	stw	r3,8(r16)
  8167d8:	183ff30e 	bge	r3,zero,8167a8 <__alt_data_end+0xff8167a8>
  8167dc:	80800617 	ldw	r2,24(r16)
  8167e0:	18801916 	blt	r3,r2,816848 <_fputwc_r+0x12c>
  8167e4:	80800017 	ldw	r2,0(r16)
  8167e8:	11400005 	stb	r5,0(r2)
  8167ec:	80800017 	ldw	r2,0(r16)
  8167f0:	10c00003 	ldbu	r3,0(r2)
  8167f4:	10800044 	addi	r2,r2,1
  8167f8:	1d402326 	beq	r3,r21,816888 <_fputwc_r+0x16c>
  8167fc:	80800015 	stw	r2,0(r16)
  816800:	8c400044 	addi	r17,r17,1
  816804:	dc45883a 	add	r2,sp,r17
  816808:	8d3fef36 	bltu	r17,r20,8167c8 <__alt_data_end+0xff8167c8>
  81680c:	9005883a 	mov	r2,r18
  816810:	00000406 	br	816824 <_fputwc_r+0x108>
  816814:	80c0030b 	ldhu	r3,12(r16)
  816818:	a005883a 	mov	r2,r20
  81681c:	18c01014 	ori	r3,r3,64
  816820:	80c0030d 	sth	r3,12(r16)
  816824:	dfc00717 	ldw	ra,28(sp)
  816828:	dd400617 	ldw	r21,24(sp)
  81682c:	dd000517 	ldw	r20,20(sp)
  816830:	dcc00417 	ldw	r19,16(sp)
  816834:	dc800317 	ldw	r18,12(sp)
  816838:	dc400217 	ldw	r17,8(sp)
  81683c:	dc000117 	ldw	r16,4(sp)
  816840:	dec00804 	addi	sp,sp,32
  816844:	f800283a 	ret
  816848:	9809883a 	mov	r4,r19
  81684c:	29403fcc 	andi	r5,r5,255
  816850:	800d883a 	mov	r6,r16
  816854:	08165040 	call	816504 <__swbuf_r>
  816858:	10bfffe0 	cmpeqi	r2,r2,-1
  81685c:	10803fcc 	andi	r2,r2,255
  816860:	103fd626 	beq	r2,zero,8167bc <__alt_data_end+0xff8167bc>
  816864:	00bfffc4 	movi	r2,-1
  816868:	003fee06 	br	816824 <__alt_data_end+0xff816824>
  81686c:	90ffffc4 	addi	r3,r18,-1
  816870:	01003f84 	movi	r4,254
  816874:	20ffbf36 	bltu	r4,r3,816774 <__alt_data_end+0xff816774>
  816878:	900b883a 	mov	r5,r18
  81687c:	dc800005 	stb	r18,0(sp)
  816880:	1029883a 	mov	r20,r2
  816884:	003fc506 	br	81679c <__alt_data_end+0xff81679c>
  816888:	9809883a 	mov	r4,r19
  81688c:	a80b883a 	mov	r5,r21
  816890:	800d883a 	mov	r6,r16
  816894:	08165040 	call	816504 <__swbuf_r>
  816898:	10bfffe0 	cmpeqi	r2,r2,-1
  81689c:	003fef06 	br	81685c <__alt_data_end+0xff81685c>

008168a0 <fputwc>:
  8168a0:	008020b4 	movhi	r2,130
  8168a4:	defffc04 	addi	sp,sp,-16
  8168a8:	10bdb104 	addi	r2,r2,-2364
  8168ac:	dc000115 	stw	r16,4(sp)
  8168b0:	14000017 	ldw	r16,0(r2)
  8168b4:	dc400215 	stw	r17,8(sp)
  8168b8:	dfc00315 	stw	ra,12(sp)
  8168bc:	2023883a 	mov	r17,r4
  8168c0:	280d883a 	mov	r6,r5
  8168c4:	80000626 	beq	r16,zero,8168e0 <fputwc+0x40>
  8168c8:	80800e17 	ldw	r2,56(r16)
  8168cc:	1000041e 	bne	r2,zero,8168e0 <fputwc+0x40>
  8168d0:	8009883a 	mov	r4,r16
  8168d4:	d9400015 	stw	r5,0(sp)
  8168d8:	080a1b40 	call	80a1b4 <__sinit>
  8168dc:	d9800017 	ldw	r6,0(sp)
  8168e0:	8009883a 	mov	r4,r16
  8168e4:	880b883a 	mov	r5,r17
  8168e8:	dfc00317 	ldw	ra,12(sp)
  8168ec:	dc400217 	ldw	r17,8(sp)
  8168f0:	dc000117 	ldw	r16,4(sp)
  8168f4:	dec00404 	addi	sp,sp,16
  8168f8:	081671c1 	jmpi	81671c <_fputwc_r>

008168fc <_wcrtomb_r>:
  8168fc:	defff604 	addi	sp,sp,-40
  816900:	008020b4 	movhi	r2,130
  816904:	dc800815 	stw	r18,32(sp)
  816908:	dc400715 	stw	r17,28(sp)
  81690c:	dc000615 	stw	r16,24(sp)
  816910:	10bdb504 	addi	r2,r2,-2348
  816914:	dfc00915 	stw	ra,36(sp)
  816918:	2021883a 	mov	r16,r4
  81691c:	3823883a 	mov	r17,r7
  816920:	14800017 	ldw	r18,0(r2)
  816924:	28001426 	beq	r5,zero,816978 <_wcrtomb_r+0x7c>
  816928:	d9400415 	stw	r5,16(sp)
  81692c:	d9800515 	stw	r6,20(sp)
  816930:	08122180 	call	812218 <__locale_charset>
  816934:	d9400417 	ldw	r5,16(sp)
  816938:	d9800517 	ldw	r6,20(sp)
  81693c:	8009883a 	mov	r4,r16
  816940:	dc400015 	stw	r17,0(sp)
  816944:	100f883a 	mov	r7,r2
  816948:	903ee83a 	callr	r18
  81694c:	00ffffc4 	movi	r3,-1
  816950:	10c0031e 	bne	r2,r3,816960 <_wcrtomb_r+0x64>
  816954:	88000015 	stw	zero,0(r17)
  816958:	00c02284 	movi	r3,138
  81695c:	80c00015 	stw	r3,0(r16)
  816960:	dfc00917 	ldw	ra,36(sp)
  816964:	dc800817 	ldw	r18,32(sp)
  816968:	dc400717 	ldw	r17,28(sp)
  81696c:	dc000617 	ldw	r16,24(sp)
  816970:	dec00a04 	addi	sp,sp,40
  816974:	f800283a 	ret
  816978:	08122180 	call	812218 <__locale_charset>
  81697c:	8009883a 	mov	r4,r16
  816980:	dc400015 	stw	r17,0(sp)
  816984:	d9400104 	addi	r5,sp,4
  816988:	000d883a 	mov	r6,zero
  81698c:	100f883a 	mov	r7,r2
  816990:	903ee83a 	callr	r18
  816994:	003fed06 	br	81694c <__alt_data_end+0xff81694c>

00816998 <wcrtomb>:
  816998:	defff604 	addi	sp,sp,-40
  81699c:	008020b4 	movhi	r2,130
  8169a0:	dc800615 	stw	r18,24(sp)
  8169a4:	dc400515 	stw	r17,20(sp)
  8169a8:	dc000415 	stw	r16,16(sp)
  8169ac:	10bdb104 	addi	r2,r2,-2364
  8169b0:	dfc00915 	stw	ra,36(sp)
  8169b4:	dd000815 	stw	r20,32(sp)
  8169b8:	dcc00715 	stw	r19,28(sp)
  8169bc:	2021883a 	mov	r16,r4
  8169c0:	3025883a 	mov	r18,r6
  8169c4:	14400017 	ldw	r17,0(r2)
  8169c8:	20001826 	beq	r4,zero,816a2c <wcrtomb+0x94>
  8169cc:	008020b4 	movhi	r2,130
  8169d0:	10bdb504 	addi	r2,r2,-2348
  8169d4:	15000017 	ldw	r20,0(r2)
  8169d8:	2827883a 	mov	r19,r5
  8169dc:	08122180 	call	812218 <__locale_charset>
  8169e0:	8809883a 	mov	r4,r17
  8169e4:	dc800015 	stw	r18,0(sp)
  8169e8:	800b883a 	mov	r5,r16
  8169ec:	980d883a 	mov	r6,r19
  8169f0:	100f883a 	mov	r7,r2
  8169f4:	a03ee83a 	callr	r20
  8169f8:	00ffffc4 	movi	r3,-1
  8169fc:	10c0031e 	bne	r2,r3,816a0c <wcrtomb+0x74>
  816a00:	90000015 	stw	zero,0(r18)
  816a04:	00c02284 	movi	r3,138
  816a08:	88c00015 	stw	r3,0(r17)
  816a0c:	dfc00917 	ldw	ra,36(sp)
  816a10:	dd000817 	ldw	r20,32(sp)
  816a14:	dcc00717 	ldw	r19,28(sp)
  816a18:	dc800617 	ldw	r18,24(sp)
  816a1c:	dc400517 	ldw	r17,20(sp)
  816a20:	dc000417 	ldw	r16,16(sp)
  816a24:	dec00a04 	addi	sp,sp,40
  816a28:	f800283a 	ret
  816a2c:	008020b4 	movhi	r2,130
  816a30:	10bdb504 	addi	r2,r2,-2348
  816a34:	14000017 	ldw	r16,0(r2)
  816a38:	08122180 	call	812218 <__locale_charset>
  816a3c:	8809883a 	mov	r4,r17
  816a40:	dc800015 	stw	r18,0(sp)
  816a44:	d9400104 	addi	r5,sp,4
  816a48:	000d883a 	mov	r6,zero
  816a4c:	100f883a 	mov	r7,r2
  816a50:	803ee83a 	callr	r16
  816a54:	003fe806 	br	8169f8 <__alt_data_end+0xff8169f8>

00816a58 <__ascii_wctomb>:
  816a58:	28000526 	beq	r5,zero,816a70 <__ascii_wctomb+0x18>
  816a5c:	00803fc4 	movi	r2,255
  816a60:	11800536 	bltu	r2,r6,816a78 <__ascii_wctomb+0x20>
  816a64:	29800005 	stb	r6,0(r5)
  816a68:	00800044 	movi	r2,1
  816a6c:	f800283a 	ret
  816a70:	0005883a 	mov	r2,zero
  816a74:	f800283a 	ret
  816a78:	00802284 	movi	r2,138
  816a7c:	20800015 	stw	r2,0(r4)
  816a80:	00bfffc4 	movi	r2,-1
  816a84:	f800283a 	ret

00816a88 <_wctomb_r>:
  816a88:	008020b4 	movhi	r2,130
  816a8c:	defff904 	addi	sp,sp,-28
  816a90:	10bdb504 	addi	r2,r2,-2348
  816a94:	dfc00615 	stw	ra,24(sp)
  816a98:	dc400515 	stw	r17,20(sp)
  816a9c:	dc000415 	stw	r16,16(sp)
  816aa0:	3823883a 	mov	r17,r7
  816aa4:	14000017 	ldw	r16,0(r2)
  816aa8:	d9000115 	stw	r4,4(sp)
  816aac:	d9400215 	stw	r5,8(sp)
  816ab0:	d9800315 	stw	r6,12(sp)
  816ab4:	08122180 	call	812218 <__locale_charset>
  816ab8:	d9000117 	ldw	r4,4(sp)
  816abc:	d9400217 	ldw	r5,8(sp)
  816ac0:	d9800317 	ldw	r6,12(sp)
  816ac4:	dc400015 	stw	r17,0(sp)
  816ac8:	100f883a 	mov	r7,r2
  816acc:	803ee83a 	callr	r16
  816ad0:	dfc00617 	ldw	ra,24(sp)
  816ad4:	dc400517 	ldw	r17,20(sp)
  816ad8:	dc000417 	ldw	r16,16(sp)
  816adc:	dec00704 	addi	sp,sp,28
  816ae0:	f800283a 	ret

00816ae4 <__udivdi3>:
  816ae4:	defff504 	addi	sp,sp,-44
  816ae8:	dcc00415 	stw	r19,16(sp)
  816aec:	dc000115 	stw	r16,4(sp)
  816af0:	dfc00a15 	stw	ra,40(sp)
  816af4:	df000915 	stw	fp,36(sp)
  816af8:	ddc00815 	stw	r23,32(sp)
  816afc:	dd800715 	stw	r22,28(sp)
  816b00:	dd400615 	stw	r21,24(sp)
  816b04:	dd000515 	stw	r20,20(sp)
  816b08:	dc800315 	stw	r18,12(sp)
  816b0c:	dc400215 	stw	r17,8(sp)
  816b10:	2027883a 	mov	r19,r4
  816b14:	2821883a 	mov	r16,r5
  816b18:	3800421e 	bne	r7,zero,816c24 <__udivdi3+0x140>
  816b1c:	3025883a 	mov	r18,r6
  816b20:	2023883a 	mov	r17,r4
  816b24:	2980542e 	bgeu	r5,r6,816c78 <__udivdi3+0x194>
  816b28:	00bfffd4 	movui	r2,65535
  816b2c:	282d883a 	mov	r22,r5
  816b30:	1180a836 	bltu	r2,r6,816dd4 <__udivdi3+0x2f0>
  816b34:	00803fc4 	movi	r2,255
  816b38:	1181422e 	bgeu	r2,r6,817044 <__udivdi3+0x560>
  816b3c:	00800204 	movi	r2,8
  816b40:	1007883a 	mov	r3,r2
  816b44:	3084d83a 	srl	r2,r6,r2
  816b48:	010020b4 	movhi	r4,130
  816b4c:	21397c04 	addi	r4,r4,-6672
  816b50:	2085883a 	add	r2,r4,r2
  816b54:	10800003 	ldbu	r2,0(r2)
  816b58:	10c7883a 	add	r3,r2,r3
  816b5c:	00800804 	movi	r2,32
  816b60:	10c5c83a 	sub	r2,r2,r3
  816b64:	10000526 	beq	r2,zero,816b7c <__udivdi3+0x98>
  816b68:	80a0983a 	sll	r16,r16,r2
  816b6c:	98c6d83a 	srl	r3,r19,r3
  816b70:	30a4983a 	sll	r18,r6,r2
  816b74:	98a2983a 	sll	r17,r19,r2
  816b78:	80ecb03a 	or	r22,r16,r3
  816b7c:	902ad43a 	srli	r21,r18,16
  816b80:	b009883a 	mov	r4,r22
  816b84:	953fffcc 	andi	r20,r18,65535
  816b88:	a80b883a 	mov	r5,r21
  816b8c:	0809ac40 	call	809ac4 <__umodsi3>
  816b90:	b009883a 	mov	r4,r22
  816b94:	a80b883a 	mov	r5,r21
  816b98:	1027883a 	mov	r19,r2
  816b9c:	0809abc0 	call	809abc <__udivsi3>
  816ba0:	1021883a 	mov	r16,r2
  816ba4:	8806d43a 	srli	r3,r17,16
  816ba8:	9804943a 	slli	r2,r19,16
  816bac:	8527383a 	mul	r19,r16,r20
  816bb0:	10c4b03a 	or	r2,r2,r3
  816bb4:	14c0052e 	bgeu	r2,r19,816bcc <__udivdi3+0xe8>
  816bb8:	1485883a 	add	r2,r2,r18
  816bbc:	80ffffc4 	addi	r3,r16,-1
  816bc0:	14800136 	bltu	r2,r18,816bc8 <__udivdi3+0xe4>
  816bc4:	14c13436 	bltu	r2,r19,817098 <__udivdi3+0x5b4>
  816bc8:	1821883a 	mov	r16,r3
  816bcc:	14e7c83a 	sub	r19,r2,r19
  816bd0:	9809883a 	mov	r4,r19
  816bd4:	a80b883a 	mov	r5,r21
  816bd8:	0809ac40 	call	809ac4 <__umodsi3>
  816bdc:	102d883a 	mov	r22,r2
  816be0:	9809883a 	mov	r4,r19
  816be4:	a80b883a 	mov	r5,r21
  816be8:	0809abc0 	call	809abc <__udivsi3>
  816bec:	b02c943a 	slli	r22,r22,16
  816bf0:	1529383a 	mul	r20,r2,r20
  816bf4:	8c7fffcc 	andi	r17,r17,65535
  816bf8:	b462b03a 	or	r17,r22,r17
  816bfc:	8d00052e 	bgeu	r17,r20,816c14 <__udivdi3+0x130>
  816c00:	8ca3883a 	add	r17,r17,r18
  816c04:	10ffffc4 	addi	r3,r2,-1
  816c08:	8c80f636 	bltu	r17,r18,816fe4 <__udivdi3+0x500>
  816c0c:	8d00f52e 	bgeu	r17,r20,816fe4 <__udivdi3+0x500>
  816c10:	10bfff84 	addi	r2,r2,-2
  816c14:	8020943a 	slli	r16,r16,16
  816c18:	0007883a 	mov	r3,zero
  816c1c:	1404b03a 	or	r2,r2,r16
  816c20:	00005b06 	br	816d90 <__udivdi3+0x2ac>
  816c24:	29c05836 	bltu	r5,r7,816d88 <__udivdi3+0x2a4>
  816c28:	00bfffd4 	movui	r2,65535
  816c2c:	11c0642e 	bgeu	r2,r7,816dc0 <__udivdi3+0x2dc>
  816c30:	00804034 	movhi	r2,256
  816c34:	10bfffc4 	addi	r2,r2,-1
  816c38:	11c0f32e 	bgeu	r2,r7,817008 <__udivdi3+0x524>
  816c3c:	00c00604 	movi	r3,24
  816c40:	180b883a 	mov	r5,r3
  816c44:	38c6d83a 	srl	r3,r7,r3
  816c48:	008020b4 	movhi	r2,130
  816c4c:	10b97c04 	addi	r2,r2,-6672
  816c50:	10c7883a 	add	r3,r2,r3
  816c54:	18c00003 	ldbu	r3,0(r3)
  816c58:	01000804 	movi	r4,32
  816c5c:	1947883a 	add	r3,r3,r5
  816c60:	20e5c83a 	sub	r18,r4,r3
  816c64:	9000661e 	bne	r18,zero,816e00 <__udivdi3+0x31c>
  816c68:	3c00f936 	bltu	r7,r16,817050 <__udivdi3+0x56c>
  816c6c:	9985403a 	cmpgeu	r2,r19,r6
  816c70:	0007883a 	mov	r3,zero
  816c74:	00004606 	br	816d90 <__udivdi3+0x2ac>
  816c78:	3000041e 	bne	r6,zero,816c8c <__udivdi3+0x1a8>
  816c7c:	01000044 	movi	r4,1
  816c80:	000b883a 	mov	r5,zero
  816c84:	0809abc0 	call	809abc <__udivsi3>
  816c88:	1025883a 	mov	r18,r2
  816c8c:	00bfffd4 	movui	r2,65535
  816c90:	1480562e 	bgeu	r2,r18,816dec <__udivdi3+0x308>
  816c94:	00804034 	movhi	r2,256
  816c98:	10bfffc4 	addi	r2,r2,-1
  816c9c:	1480e32e 	bgeu	r2,r18,81702c <__udivdi3+0x548>
  816ca0:	00800604 	movi	r2,24
  816ca4:	1007883a 	mov	r3,r2
  816ca8:	9084d83a 	srl	r2,r18,r2
  816cac:	010020b4 	movhi	r4,130
  816cb0:	21397c04 	addi	r4,r4,-6672
  816cb4:	2085883a 	add	r2,r4,r2
  816cb8:	10800003 	ldbu	r2,0(r2)
  816cbc:	10c5883a 	add	r2,r2,r3
  816cc0:	00c00804 	movi	r3,32
  816cc4:	1887c83a 	sub	r3,r3,r2
  816cc8:	1800911e 	bne	r3,zero,816f10 <__udivdi3+0x42c>
  816ccc:	9028d43a 	srli	r20,r18,16
  816cd0:	84a1c83a 	sub	r16,r16,r18
  816cd4:	957fffcc 	andi	r21,r18,65535
  816cd8:	00c00044 	movi	r3,1
  816cdc:	8009883a 	mov	r4,r16
  816ce0:	a00b883a 	mov	r5,r20
  816ce4:	d8c00015 	stw	r3,0(sp)
  816ce8:	0809ac40 	call	809ac4 <__umodsi3>
  816cec:	8009883a 	mov	r4,r16
  816cf0:	a00b883a 	mov	r5,r20
  816cf4:	1027883a 	mov	r19,r2
  816cf8:	0809abc0 	call	809abc <__udivsi3>
  816cfc:	1021883a 	mov	r16,r2
  816d00:	880cd43a 	srli	r6,r17,16
  816d04:	9804943a 	slli	r2,r19,16
  816d08:	8567383a 	mul	r19,r16,r21
  816d0c:	d8c00017 	ldw	r3,0(sp)
  816d10:	1188b03a 	or	r4,r2,r6
  816d14:	24c0052e 	bgeu	r4,r19,816d2c <__udivdi3+0x248>
  816d18:	2489883a 	add	r4,r4,r18
  816d1c:	80bfffc4 	addi	r2,r16,-1
  816d20:	24800136 	bltu	r4,r18,816d28 <__udivdi3+0x244>
  816d24:	24c0d936 	bltu	r4,r19,81708c <__udivdi3+0x5a8>
  816d28:	1021883a 	mov	r16,r2
  816d2c:	24e7c83a 	sub	r19,r4,r19
  816d30:	9809883a 	mov	r4,r19
  816d34:	a00b883a 	mov	r5,r20
  816d38:	d8c00015 	stw	r3,0(sp)
  816d3c:	0809ac40 	call	809ac4 <__umodsi3>
  816d40:	102d883a 	mov	r22,r2
  816d44:	9809883a 	mov	r4,r19
  816d48:	a00b883a 	mov	r5,r20
  816d4c:	0809abc0 	call	809abc <__udivsi3>
  816d50:	b02c943a 	slli	r22,r22,16
  816d54:	156b383a 	mul	r21,r2,r21
  816d58:	8c7fffcc 	andi	r17,r17,65535
  816d5c:	b462b03a 	or	r17,r22,r17
  816d60:	d8c00017 	ldw	r3,0(sp)
  816d64:	8d40052e 	bgeu	r17,r21,816d7c <__udivdi3+0x298>
  816d68:	8ca3883a 	add	r17,r17,r18
  816d6c:	113fffc4 	addi	r4,r2,-1
  816d70:	8c809a36 	bltu	r17,r18,816fdc <__udivdi3+0x4f8>
  816d74:	8d40992e 	bgeu	r17,r21,816fdc <__udivdi3+0x4f8>
  816d78:	10bfff84 	addi	r2,r2,-2
  816d7c:	8020943a 	slli	r16,r16,16
  816d80:	1404b03a 	or	r2,r2,r16
  816d84:	00000206 	br	816d90 <__udivdi3+0x2ac>
  816d88:	0007883a 	mov	r3,zero
  816d8c:	0005883a 	mov	r2,zero
  816d90:	dfc00a17 	ldw	ra,40(sp)
  816d94:	df000917 	ldw	fp,36(sp)
  816d98:	ddc00817 	ldw	r23,32(sp)
  816d9c:	dd800717 	ldw	r22,28(sp)
  816da0:	dd400617 	ldw	r21,24(sp)
  816da4:	dd000517 	ldw	r20,20(sp)
  816da8:	dcc00417 	ldw	r19,16(sp)
  816dac:	dc800317 	ldw	r18,12(sp)
  816db0:	dc400217 	ldw	r17,8(sp)
  816db4:	dc000117 	ldw	r16,4(sp)
  816db8:	dec00b04 	addi	sp,sp,44
  816dbc:	f800283a 	ret
  816dc0:	00803fc4 	movi	r2,255
  816dc4:	11c0932e 	bgeu	r2,r7,817014 <__udivdi3+0x530>
  816dc8:	00c00204 	movi	r3,8
  816dcc:	180b883a 	mov	r5,r3
  816dd0:	003f9c06 	br	816c44 <__alt_data_end+0xff816c44>
  816dd4:	00804034 	movhi	r2,256
  816dd8:	10bfffc4 	addi	r2,r2,-1
  816ddc:	1180902e 	bgeu	r2,r6,817020 <__udivdi3+0x53c>
  816de0:	00800604 	movi	r2,24
  816de4:	1007883a 	mov	r3,r2
  816de8:	003f5606 	br	816b44 <__alt_data_end+0xff816b44>
  816dec:	00803fc4 	movi	r2,255
  816df0:	1480912e 	bgeu	r2,r18,817038 <__udivdi3+0x554>
  816df4:	00800204 	movi	r2,8
  816df8:	1007883a 	mov	r3,r2
  816dfc:	003faa06 	br	816ca8 <__alt_data_end+0xff816ca8>
  816e00:	30eed83a 	srl	r23,r6,r3
  816e04:	3c8e983a 	sll	r7,r7,r18
  816e08:	80f8d83a 	srl	fp,r16,r3
  816e0c:	98c6d83a 	srl	r3,r19,r3
  816e10:	3deeb03a 	or	r23,r7,r23
  816e14:	b828d43a 	srli	r20,r23,16
  816e18:	84a0983a 	sll	r16,r16,r18
  816e1c:	e009883a 	mov	r4,fp
  816e20:	a00b883a 	mov	r5,r20
  816e24:	80e2b03a 	or	r17,r16,r3
  816e28:	34aa983a 	sll	r21,r6,r18
  816e2c:	0809ac40 	call	809ac4 <__umodsi3>
  816e30:	e009883a 	mov	r4,fp
  816e34:	a00b883a 	mov	r5,r20
  816e38:	102d883a 	mov	r22,r2
  816e3c:	0809abc0 	call	809abc <__udivsi3>
  816e40:	1021883a 	mov	r16,r2
  816e44:	bf3fffcc 	andi	fp,r23,65535
  816e48:	b004943a 	slli	r2,r22,16
  816e4c:	8808d43a 	srli	r4,r17,16
  816e50:	872d383a 	mul	r22,r16,fp
  816e54:	1104b03a 	or	r2,r2,r4
  816e58:	1580042e 	bgeu	r2,r22,816e6c <__udivdi3+0x388>
  816e5c:	15c5883a 	add	r2,r2,r23
  816e60:	80ffffc4 	addi	r3,r16,-1
  816e64:	15c0812e 	bgeu	r2,r23,81706c <__udivdi3+0x588>
  816e68:	1821883a 	mov	r16,r3
  816e6c:	15adc83a 	sub	r22,r2,r22
  816e70:	b009883a 	mov	r4,r22
  816e74:	a00b883a 	mov	r5,r20
  816e78:	0809ac40 	call	809ac4 <__umodsi3>
  816e7c:	a00b883a 	mov	r5,r20
  816e80:	b009883a 	mov	r4,r22
  816e84:	d8800015 	stw	r2,0(sp)
  816e88:	0809abc0 	call	809abc <__udivsi3>
  816e8c:	d8c00017 	ldw	r3,0(sp)
  816e90:	170b383a 	mul	r5,r2,fp
  816e94:	8c7fffcc 	andi	r17,r17,65535
  816e98:	1806943a 	slli	r3,r3,16
  816e9c:	1c46b03a 	or	r3,r3,r17
  816ea0:	1940042e 	bgeu	r3,r5,816eb4 <__udivdi3+0x3d0>
  816ea4:	1dc7883a 	add	r3,r3,r23
  816ea8:	113fffc4 	addi	r4,r2,-1
  816eac:	1dc06b2e 	bgeu	r3,r23,81705c <__udivdi3+0x578>
  816eb0:	2005883a 	mov	r2,r4
  816eb4:	8020943a 	slli	r16,r16,16
  816eb8:	a9ffffcc 	andi	r7,r21,65535
  816ebc:	a82ad43a 	srli	r21,r21,16
  816ec0:	1404b03a 	or	r2,r2,r16
  816ec4:	113fffcc 	andi	r4,r2,65535
  816ec8:	100cd43a 	srli	r6,r2,16
  816ecc:	21d3383a 	mul	r9,r4,r7
  816ed0:	2549383a 	mul	r4,r4,r21
  816ed4:	31cf383a 	mul	r7,r6,r7
  816ed8:	4810d43a 	srli	r8,r9,16
  816edc:	1947c83a 	sub	r3,r3,r5
  816ee0:	3909883a 	add	r4,r7,r4
  816ee4:	2209883a 	add	r4,r4,r8
  816ee8:	354d383a 	mul	r6,r6,r21
  816eec:	21c0022e 	bgeu	r4,r7,816ef8 <__udivdi3+0x414>
  816ef0:	01400074 	movhi	r5,1
  816ef4:	314d883a 	add	r6,r6,r5
  816ef8:	202ad43a 	srli	r21,r4,16
  816efc:	354d883a 	add	r6,r6,r21
  816f00:	19803f36 	bltu	r3,r6,817000 <__udivdi3+0x51c>
  816f04:	19803926 	beq	r3,r6,816fec <__udivdi3+0x508>
  816f08:	0007883a 	mov	r3,zero
  816f0c:	003fa006 	br	816d90 <__alt_data_end+0xff816d90>
  816f10:	90e4983a 	sll	r18,r18,r3
  816f14:	80aad83a 	srl	r21,r16,r2
  816f18:	80e0983a 	sll	r16,r16,r3
  816f1c:	9028d43a 	srli	r20,r18,16
  816f20:	9884d83a 	srl	r2,r19,r2
  816f24:	a809883a 	mov	r4,r21
  816f28:	a00b883a 	mov	r5,r20
  816f2c:	80acb03a 	or	r22,r16,r2
  816f30:	98e2983a 	sll	r17,r19,r3
  816f34:	0809ac40 	call	809ac4 <__umodsi3>
  816f38:	a809883a 	mov	r4,r21
  816f3c:	a00b883a 	mov	r5,r20
  816f40:	1021883a 	mov	r16,r2
  816f44:	0809abc0 	call	809abc <__udivsi3>
  816f48:	957fffcc 	andi	r21,r18,65535
  816f4c:	8020943a 	slli	r16,r16,16
  816f50:	b00ad43a 	srli	r5,r22,16
  816f54:	1567383a 	mul	r19,r2,r21
  816f58:	102f883a 	mov	r23,r2
  816f5c:	8148b03a 	or	r4,r16,r5
  816f60:	24c0062e 	bgeu	r4,r19,816f7c <__udivdi3+0x498>
  816f64:	2489883a 	add	r4,r4,r18
  816f68:	10bfffc4 	addi	r2,r2,-1
  816f6c:	24804536 	bltu	r4,r18,817084 <__udivdi3+0x5a0>
  816f70:	24c0442e 	bgeu	r4,r19,817084 <__udivdi3+0x5a0>
  816f74:	bdffff84 	addi	r23,r23,-2
  816f78:	2489883a 	add	r4,r4,r18
  816f7c:	24e7c83a 	sub	r19,r4,r19
  816f80:	9809883a 	mov	r4,r19
  816f84:	a00b883a 	mov	r5,r20
  816f88:	0809ac40 	call	809ac4 <__umodsi3>
  816f8c:	1021883a 	mov	r16,r2
  816f90:	9809883a 	mov	r4,r19
  816f94:	a00b883a 	mov	r5,r20
  816f98:	0809abc0 	call	809abc <__udivsi3>
  816f9c:	8020943a 	slli	r16,r16,16
  816fa0:	1007883a 	mov	r3,r2
  816fa4:	1545383a 	mul	r2,r2,r21
  816fa8:	b13fffcc 	andi	r4,r22,65535
  816fac:	8108b03a 	or	r4,r16,r4
  816fb0:	2080062e 	bgeu	r4,r2,816fcc <__udivdi3+0x4e8>
  816fb4:	2489883a 	add	r4,r4,r18
  816fb8:	197fffc4 	addi	r5,r3,-1
  816fbc:	24802f36 	bltu	r4,r18,81707c <__udivdi3+0x598>
  816fc0:	20802e2e 	bgeu	r4,r2,81707c <__udivdi3+0x598>
  816fc4:	18ffff84 	addi	r3,r3,-2
  816fc8:	2489883a 	add	r4,r4,r18
  816fcc:	b82e943a 	slli	r23,r23,16
  816fd0:	20a1c83a 	sub	r16,r4,r2
  816fd4:	1dc6b03a 	or	r3,r3,r23
  816fd8:	003f4006 	br	816cdc <__alt_data_end+0xff816cdc>
  816fdc:	2005883a 	mov	r2,r4
  816fe0:	003f6606 	br	816d7c <__alt_data_end+0xff816d7c>
  816fe4:	1805883a 	mov	r2,r3
  816fe8:	003f0a06 	br	816c14 <__alt_data_end+0xff816c14>
  816fec:	2006943a 	slli	r3,r4,16
  816ff0:	9c88983a 	sll	r4,r19,r18
  816ff4:	4a7fffcc 	andi	r9,r9,65535
  816ff8:	1a47883a 	add	r3,r3,r9
  816ffc:	20ffc22e 	bgeu	r4,r3,816f08 <__alt_data_end+0xff816f08>
  817000:	10bfffc4 	addi	r2,r2,-1
  817004:	003fc006 	br	816f08 <__alt_data_end+0xff816f08>
  817008:	00c00404 	movi	r3,16
  81700c:	180b883a 	mov	r5,r3
  817010:	003f0c06 	br	816c44 <__alt_data_end+0xff816c44>
  817014:	0007883a 	mov	r3,zero
  817018:	000b883a 	mov	r5,zero
  81701c:	003f0906 	br	816c44 <__alt_data_end+0xff816c44>
  817020:	00800404 	movi	r2,16
  817024:	1007883a 	mov	r3,r2
  817028:	003ec606 	br	816b44 <__alt_data_end+0xff816b44>
  81702c:	00800404 	movi	r2,16
  817030:	1007883a 	mov	r3,r2
  817034:	003f1c06 	br	816ca8 <__alt_data_end+0xff816ca8>
  817038:	0005883a 	mov	r2,zero
  81703c:	0007883a 	mov	r3,zero
  817040:	003f1906 	br	816ca8 <__alt_data_end+0xff816ca8>
  817044:	0005883a 	mov	r2,zero
  817048:	0007883a 	mov	r3,zero
  81704c:	003ebd06 	br	816b44 <__alt_data_end+0xff816b44>
  817050:	0007883a 	mov	r3,zero
  817054:	00800044 	movi	r2,1
  817058:	003f4d06 	br	816d90 <__alt_data_end+0xff816d90>
  81705c:	197f942e 	bgeu	r3,r5,816eb0 <__alt_data_end+0xff816eb0>
  817060:	10bfff84 	addi	r2,r2,-2
  817064:	1dc7883a 	add	r3,r3,r23
  817068:	003f9206 	br	816eb4 <__alt_data_end+0xff816eb4>
  81706c:	15bf7e2e 	bgeu	r2,r22,816e68 <__alt_data_end+0xff816e68>
  817070:	843fff84 	addi	r16,r16,-2
  817074:	15c5883a 	add	r2,r2,r23
  817078:	003f7c06 	br	816e6c <__alt_data_end+0xff816e6c>
  81707c:	2807883a 	mov	r3,r5
  817080:	003fd206 	br	816fcc <__alt_data_end+0xff816fcc>
  817084:	102f883a 	mov	r23,r2
  817088:	003fbc06 	br	816f7c <__alt_data_end+0xff816f7c>
  81708c:	843fff84 	addi	r16,r16,-2
  817090:	2489883a 	add	r4,r4,r18
  817094:	003f2506 	br	816d2c <__alt_data_end+0xff816d2c>
  817098:	843fff84 	addi	r16,r16,-2
  81709c:	1485883a 	add	r2,r2,r18
  8170a0:	003eca06 	br	816bcc <__alt_data_end+0xff816bcc>

008170a4 <__umoddi3>:
  8170a4:	defff404 	addi	sp,sp,-48
  8170a8:	ddc00915 	stw	r23,36(sp)
  8170ac:	dc400315 	stw	r17,12(sp)
  8170b0:	dc000215 	stw	r16,8(sp)
  8170b4:	dfc00b15 	stw	ra,44(sp)
  8170b8:	df000a15 	stw	fp,40(sp)
  8170bc:	dd800815 	stw	r22,32(sp)
  8170c0:	dd400715 	stw	r21,28(sp)
  8170c4:	dd000615 	stw	r20,24(sp)
  8170c8:	dcc00515 	stw	r19,20(sp)
  8170cc:	dc800415 	stw	r18,16(sp)
  8170d0:	2021883a 	mov	r16,r4
  8170d4:	2823883a 	mov	r17,r5
  8170d8:	282f883a 	mov	r23,r5
  8170dc:	3800381e 	bne	r7,zero,8171c0 <__umoddi3+0x11c>
  8170e0:	3027883a 	mov	r19,r6
  8170e4:	2029883a 	mov	r20,r4
  8170e8:	29804e2e 	bgeu	r5,r6,817224 <__umoddi3+0x180>
  8170ec:	00bfffd4 	movui	r2,65535
  8170f0:	11809c36 	bltu	r2,r6,817364 <__umoddi3+0x2c0>
  8170f4:	00803fc4 	movi	r2,255
  8170f8:	11813b2e 	bgeu	r2,r6,8175e8 <__umoddi3+0x544>
  8170fc:	01400204 	movi	r5,8
  817100:	2805883a 	mov	r2,r5
  817104:	314ad83a 	srl	r5,r6,r5
  817108:	00c020b4 	movhi	r3,130
  81710c:	18f97c04 	addi	r3,r3,-6672
  817110:	194b883a 	add	r5,r3,r5
  817114:	29000003 	ldbu	r4,0(r5)
  817118:	2089883a 	add	r4,r4,r2
  81711c:	00800804 	movi	r2,32
  817120:	1105c83a 	sub	r2,r2,r4
  817124:	1000ec26 	beq	r2,zero,8174d8 <__umoddi3+0x434>
  817128:	88a2983a 	sll	r17,r17,r2
  81712c:	8108d83a 	srl	r4,r16,r4
  817130:	30a6983a 	sll	r19,r6,r2
  817134:	80a8983a 	sll	r20,r16,r2
  817138:	1025883a 	mov	r18,r2
  81713c:	892eb03a 	or	r23,r17,r4
  817140:	982cd43a 	srli	r22,r19,16
  817144:	b809883a 	mov	r4,r23
  817148:	9d7fffcc 	andi	r21,r19,65535
  81714c:	b00b883a 	mov	r5,r22
  817150:	0809ac40 	call	809ac4 <__umodsi3>
  817154:	b809883a 	mov	r4,r23
  817158:	b00b883a 	mov	r5,r22
  81715c:	1021883a 	mov	r16,r2
  817160:	0809abc0 	call	809abc <__udivsi3>
  817164:	8020943a 	slli	r16,r16,16
  817168:	a00cd43a 	srli	r6,r20,16
  81716c:	1545383a 	mul	r2,r2,r21
  817170:	8188b03a 	or	r4,r16,r6
  817174:	2080042e 	bgeu	r4,r2,817188 <__umoddi3+0xe4>
  817178:	24c9883a 	add	r4,r4,r19
  81717c:	24c00236 	bltu	r4,r19,817188 <__umoddi3+0xe4>
  817180:	2080012e 	bgeu	r4,r2,817188 <__umoddi3+0xe4>
  817184:	24c9883a 	add	r4,r4,r19
  817188:	20a3c83a 	sub	r17,r4,r2
  81718c:	8809883a 	mov	r4,r17
  817190:	b00b883a 	mov	r5,r22
  817194:	0809ac40 	call	809ac4 <__umodsi3>
  817198:	8809883a 	mov	r4,r17
  81719c:	b00b883a 	mov	r5,r22
  8171a0:	1021883a 	mov	r16,r2
  8171a4:	0809abc0 	call	809abc <__udivsi3>
  8171a8:	8006943a 	slli	r3,r16,16
  8171ac:	1545383a 	mul	r2,r2,r21
  8171b0:	a13fffcc 	andi	r4,r20,65535
  8171b4:	1906b03a 	or	r3,r3,r4
  8171b8:	1880532e 	bgeu	r3,r2,817308 <__umoddi3+0x264>
  8171bc:	00004e06 	br	8172f8 <__umoddi3+0x254>
  8171c0:	29c05536 	bltu	r5,r7,817318 <__umoddi3+0x274>
  8171c4:	00bfffd4 	movui	r2,65535
  8171c8:	11c0612e 	bgeu	r2,r7,817350 <__umoddi3+0x2ac>
  8171cc:	00804034 	movhi	r2,256
  8171d0:	10bfffc4 	addi	r2,r2,-1
  8171d4:	11c0f82e 	bgeu	r2,r7,8175b8 <__umoddi3+0x514>
  8171d8:	01400604 	movi	r5,24
  8171dc:	282b883a 	mov	r21,r5
  8171e0:	394ad83a 	srl	r5,r7,r5
  8171e4:	00c020b4 	movhi	r3,130
  8171e8:	18f97c04 	addi	r3,r3,-6672
  8171ec:	194b883a 	add	r5,r3,r5
  8171f0:	28800003 	ldbu	r2,0(r5)
  8171f4:	00c00804 	movi	r3,32
  8171f8:	156b883a 	add	r21,r2,r21
  8171fc:	1d69c83a 	sub	r20,r3,r21
  817200:	a000631e 	bne	r20,zero,817390 <__umoddi3+0x2ec>
  817204:	3c400136 	bltu	r7,r17,81720c <__umoddi3+0x168>
  817208:	81810436 	bltu	r16,r6,81761c <__umoddi3+0x578>
  81720c:	8185c83a 	sub	r2,r16,r6
  817210:	89e3c83a 	sub	r17,r17,r7
  817214:	8087803a 	cmpltu	r3,r16,r2
  817218:	88efc83a 	sub	r23,r17,r3
  81721c:	b807883a 	mov	r3,r23
  817220:	00003f06 	br	817320 <__umoddi3+0x27c>
  817224:	3000041e 	bne	r6,zero,817238 <__umoddi3+0x194>
  817228:	01000044 	movi	r4,1
  81722c:	000b883a 	mov	r5,zero
  817230:	0809abc0 	call	809abc <__udivsi3>
  817234:	1027883a 	mov	r19,r2
  817238:	00bfffd4 	movui	r2,65535
  81723c:	14c04f2e 	bgeu	r2,r19,81737c <__umoddi3+0x2d8>
  817240:	00804034 	movhi	r2,256
  817244:	10bfffc4 	addi	r2,r2,-1
  817248:	14c0e42e 	bgeu	r2,r19,8175dc <__umoddi3+0x538>
  81724c:	00800604 	movi	r2,24
  817250:	1007883a 	mov	r3,r2
  817254:	9884d83a 	srl	r2,r19,r2
  817258:	010020b4 	movhi	r4,130
  81725c:	21397c04 	addi	r4,r4,-6672
  817260:	2085883a 	add	r2,r4,r2
  817264:	11000003 	ldbu	r4,0(r2)
  817268:	00800804 	movi	r2,32
  81726c:	20c7883a 	add	r3,r4,r3
  817270:	10c5c83a 	sub	r2,r2,r3
  817274:	10009a1e 	bne	r2,zero,8174e0 <__umoddi3+0x43c>
  817278:	982cd43a 	srli	r22,r19,16
  81727c:	8ce3c83a 	sub	r17,r17,r19
  817280:	9c3fffcc 	andi	r16,r19,65535
  817284:	0025883a 	mov	r18,zero
  817288:	8809883a 	mov	r4,r17
  81728c:	b00b883a 	mov	r5,r22
  817290:	0809ac40 	call	809ac4 <__umodsi3>
  817294:	8809883a 	mov	r4,r17
  817298:	b00b883a 	mov	r5,r22
  81729c:	102b883a 	mov	r21,r2
  8172a0:	0809abc0 	call	809abc <__udivsi3>
  8172a4:	a806943a 	slli	r3,r21,16
  8172a8:	a008d43a 	srli	r4,r20,16
  8172ac:	1405383a 	mul	r2,r2,r16
  8172b0:	190cb03a 	or	r6,r3,r4
  8172b4:	3080032e 	bgeu	r6,r2,8172c4 <__umoddi3+0x220>
  8172b8:	34cd883a 	add	r6,r6,r19
  8172bc:	34c00136 	bltu	r6,r19,8172c4 <__umoddi3+0x220>
  8172c0:	3080d436 	bltu	r6,r2,817614 <__umoddi3+0x570>
  8172c4:	30abc83a 	sub	r21,r6,r2
  8172c8:	a809883a 	mov	r4,r21
  8172cc:	b00b883a 	mov	r5,r22
  8172d0:	0809ac40 	call	809ac4 <__umodsi3>
  8172d4:	1023883a 	mov	r17,r2
  8172d8:	a809883a 	mov	r4,r21
  8172dc:	b00b883a 	mov	r5,r22
  8172e0:	0809abc0 	call	809abc <__udivsi3>
  8172e4:	8822943a 	slli	r17,r17,16
  8172e8:	1405383a 	mul	r2,r2,r16
  8172ec:	a13fffcc 	andi	r4,r20,65535
  8172f0:	8906b03a 	or	r3,r17,r4
  8172f4:	1880042e 	bgeu	r3,r2,817308 <__umoddi3+0x264>
  8172f8:	1cc7883a 	add	r3,r3,r19
  8172fc:	1cc00236 	bltu	r3,r19,817308 <__umoddi3+0x264>
  817300:	1880012e 	bgeu	r3,r2,817308 <__umoddi3+0x264>
  817304:	1cc7883a 	add	r3,r3,r19
  817308:	1887c83a 	sub	r3,r3,r2
  81730c:	1c84d83a 	srl	r2,r3,r18
  817310:	0007883a 	mov	r3,zero
  817314:	00000206 	br	817320 <__umoddi3+0x27c>
  817318:	2005883a 	mov	r2,r4
  81731c:	2807883a 	mov	r3,r5
  817320:	dfc00b17 	ldw	ra,44(sp)
  817324:	df000a17 	ldw	fp,40(sp)
  817328:	ddc00917 	ldw	r23,36(sp)
  81732c:	dd800817 	ldw	r22,32(sp)
  817330:	dd400717 	ldw	r21,28(sp)
  817334:	dd000617 	ldw	r20,24(sp)
  817338:	dcc00517 	ldw	r19,20(sp)
  81733c:	dc800417 	ldw	r18,16(sp)
  817340:	dc400317 	ldw	r17,12(sp)
  817344:	dc000217 	ldw	r16,8(sp)
  817348:	dec00c04 	addi	sp,sp,48
  81734c:	f800283a 	ret
  817350:	00803fc4 	movi	r2,255
  817354:	11c0952e 	bgeu	r2,r7,8175ac <__umoddi3+0x508>
  817358:	01400204 	movi	r5,8
  81735c:	282b883a 	mov	r21,r5
  817360:	003f9f06 	br	8171e0 <__alt_data_end+0xff8171e0>
  817364:	00804034 	movhi	r2,256
  817368:	10bfffc4 	addi	r2,r2,-1
  81736c:	1180952e 	bgeu	r2,r6,8175c4 <__umoddi3+0x520>
  817370:	01400604 	movi	r5,24
  817374:	2805883a 	mov	r2,r5
  817378:	003f6206 	br	817104 <__alt_data_end+0xff817104>
  81737c:	00803fc4 	movi	r2,255
  817380:	14c0932e 	bgeu	r2,r19,8175d0 <__umoddi3+0x52c>
  817384:	00800204 	movi	r2,8
  817388:	1007883a 	mov	r3,r2
  81738c:	003fb106 	br	817254 <__alt_data_end+0xff817254>
  817390:	3548d83a 	srl	r4,r6,r21
  817394:	3d0e983a 	sll	r7,r7,r20
  817398:	8d10983a 	sll	r8,r17,r20
  81739c:	8d6cd83a 	srl	r22,r17,r21
  8173a0:	3922b03a 	or	r17,r7,r4
  8173a4:	882ed43a 	srli	r23,r17,16
  8173a8:	8564d83a 	srl	r18,r16,r21
  8173ac:	b009883a 	mov	r4,r22
  8173b0:	b80b883a 	mov	r5,r23
  8173b4:	44a4b03a 	or	r18,r8,r18
  8173b8:	3526983a 	sll	r19,r6,r20
  8173bc:	0809ac40 	call	809ac4 <__umodsi3>
  8173c0:	b009883a 	mov	r4,r22
  8173c4:	b80b883a 	mov	r5,r23
  8173c8:	1039883a 	mov	fp,r2
  8173cc:	0809abc0 	call	809abc <__udivsi3>
  8173d0:	102d883a 	mov	r22,r2
  8173d4:	8a3fffcc 	andi	r8,r17,65535
  8173d8:	e004943a 	slli	r2,fp,16
  8173dc:	900cd43a 	srli	r6,r18,16
  8173e0:	b239383a 	mul	fp,r22,r8
  8173e4:	8520983a 	sll	r16,r16,r20
  8173e8:	118ab03a 	or	r5,r2,r6
  8173ec:	2f00042e 	bgeu	r5,fp,817400 <__umoddi3+0x35c>
  8173f0:	2c4b883a 	add	r5,r5,r17
  8173f4:	b0bfffc4 	addi	r2,r22,-1
  8173f8:	2c40822e 	bgeu	r5,r17,817604 <__umoddi3+0x560>
  8173fc:	102d883a 	mov	r22,r2
  817400:	2f39c83a 	sub	fp,r5,fp
  817404:	e009883a 	mov	r4,fp
  817408:	b80b883a 	mov	r5,r23
  81740c:	da000115 	stw	r8,4(sp)
  817410:	0809ac40 	call	809ac4 <__umodsi3>
  817414:	e009883a 	mov	r4,fp
  817418:	b80b883a 	mov	r5,r23
  81741c:	d8800015 	stw	r2,0(sp)
  817420:	0809abc0 	call	809abc <__udivsi3>
  817424:	d9800017 	ldw	r6,0(sp)
  817428:	da000117 	ldw	r8,4(sp)
  81742c:	94bfffcc 	andi	r18,r18,65535
  817430:	300c943a 	slli	r6,r6,16
  817434:	1209383a 	mul	r4,r2,r8
  817438:	3490b03a 	or	r8,r6,r18
  81743c:	4100042e 	bgeu	r8,r4,817450 <__umoddi3+0x3ac>
  817440:	4451883a 	add	r8,r8,r17
  817444:	10ffffc4 	addi	r3,r2,-1
  817448:	44406a2e 	bgeu	r8,r17,8175f4 <__umoddi3+0x550>
  81744c:	1805883a 	mov	r2,r3
  817450:	b012943a 	slli	r9,r22,16
  817454:	9abfffcc 	andi	r10,r19,65535
  817458:	980ed43a 	srli	r7,r19,16
  81745c:	124ab03a 	or	r5,r2,r9
  817460:	2a7fffcc 	andi	r9,r5,65535
  817464:	280ad43a 	srli	r5,r5,16
  817468:	4a8d383a 	mul	r6,r9,r10
  81746c:	49d3383a 	mul	r9,r9,r7
  817470:	2a95383a 	mul	r10,r5,r10
  817474:	3004d43a 	srli	r2,r6,16
  817478:	4111c83a 	sub	r8,r8,r4
  81747c:	5253883a 	add	r9,r10,r9
  817480:	4893883a 	add	r9,r9,r2
  817484:	29cb383a 	mul	r5,r5,r7
  817488:	4a80022e 	bgeu	r9,r10,817494 <__umoddi3+0x3f0>
  81748c:	00800074 	movhi	r2,1
  817490:	288b883a 	add	r5,r5,r2
  817494:	4808d43a 	srli	r4,r9,16
  817498:	4812943a 	slli	r9,r9,16
  81749c:	31bfffcc 	andi	r6,r6,65535
  8174a0:	290b883a 	add	r5,r5,r4
  8174a4:	498d883a 	add	r6,r9,r6
  8174a8:	41403a36 	bltu	r8,r5,817594 <__umoddi3+0x4f0>
  8174ac:	41405d26 	beq	r8,r5,817624 <__umoddi3+0x580>
  8174b0:	4149c83a 	sub	r4,r8,r5
  8174b4:	300f883a 	mov	r7,r6
  8174b8:	81cfc83a 	sub	r7,r16,r7
  8174bc:	81c7803a 	cmpltu	r3,r16,r7
  8174c0:	20c7c83a 	sub	r3,r4,r3
  8174c4:	1d44983a 	sll	r2,r3,r21
  8174c8:	3d0ed83a 	srl	r7,r7,r20
  8174cc:	1d06d83a 	srl	r3,r3,r20
  8174d0:	11c4b03a 	or	r2,r2,r7
  8174d4:	003f9206 	br	817320 <__alt_data_end+0xff817320>
  8174d8:	0025883a 	mov	r18,zero
  8174dc:	003f1806 	br	817140 <__alt_data_end+0xff817140>
  8174e0:	98a6983a 	sll	r19,r19,r2
  8174e4:	88e8d83a 	srl	r20,r17,r3
  8174e8:	80c6d83a 	srl	r3,r16,r3
  8174ec:	982cd43a 	srli	r22,r19,16
  8174f0:	88a2983a 	sll	r17,r17,r2
  8174f4:	a009883a 	mov	r4,r20
  8174f8:	b00b883a 	mov	r5,r22
  8174fc:	88eab03a 	or	r21,r17,r3
  817500:	1025883a 	mov	r18,r2
  817504:	0809ac40 	call	809ac4 <__umodsi3>
  817508:	a009883a 	mov	r4,r20
  81750c:	b00b883a 	mov	r5,r22
  817510:	1023883a 	mov	r17,r2
  817514:	0809abc0 	call	809abc <__udivsi3>
  817518:	9f3fffcc 	andi	fp,r19,65535
  81751c:	8822943a 	slli	r17,r17,16
  817520:	a80ad43a 	srli	r5,r21,16
  817524:	1705383a 	mul	r2,r2,fp
  817528:	84a8983a 	sll	r20,r16,r18
  81752c:	8948b03a 	or	r4,r17,r5
  817530:	2080042e 	bgeu	r4,r2,817544 <__umoddi3+0x4a0>
  817534:	24c9883a 	add	r4,r4,r19
  817538:	24c00236 	bltu	r4,r19,817544 <__umoddi3+0x4a0>
  81753c:	2080012e 	bgeu	r4,r2,817544 <__umoddi3+0x4a0>
  817540:	24c9883a 	add	r4,r4,r19
  817544:	20afc83a 	sub	r23,r4,r2
  817548:	b809883a 	mov	r4,r23
  81754c:	b00b883a 	mov	r5,r22
  817550:	0809ac40 	call	809ac4 <__umodsi3>
  817554:	1023883a 	mov	r17,r2
  817558:	b809883a 	mov	r4,r23
  81755c:	b00b883a 	mov	r5,r22
  817560:	0809abc0 	call	809abc <__udivsi3>
  817564:	8822943a 	slli	r17,r17,16
  817568:	1705383a 	mul	r2,r2,fp
  81756c:	a93fffcc 	andi	r4,r21,65535
  817570:	8908b03a 	or	r4,r17,r4
  817574:	2080042e 	bgeu	r4,r2,817588 <__umoddi3+0x4e4>
  817578:	24c9883a 	add	r4,r4,r19
  81757c:	24c00236 	bltu	r4,r19,817588 <__umoddi3+0x4e4>
  817580:	2080012e 	bgeu	r4,r2,817588 <__umoddi3+0x4e4>
  817584:	24c9883a 	add	r4,r4,r19
  817588:	20a3c83a 	sub	r17,r4,r2
  81758c:	e021883a 	mov	r16,fp
  817590:	003f3d06 	br	817288 <__alt_data_end+0xff817288>
  817594:	34cfc83a 	sub	r7,r6,r19
  817598:	2c4bc83a 	sub	r5,r5,r17
  81759c:	31cd803a 	cmpltu	r6,r6,r7
  8175a0:	298dc83a 	sub	r6,r5,r6
  8175a4:	4189c83a 	sub	r4,r8,r6
  8175a8:	003fc306 	br	8174b8 <__alt_data_end+0xff8174b8>
  8175ac:	000b883a 	mov	r5,zero
  8175b0:	002b883a 	mov	r21,zero
  8175b4:	003f0a06 	br	8171e0 <__alt_data_end+0xff8171e0>
  8175b8:	01400404 	movi	r5,16
  8175bc:	282b883a 	mov	r21,r5
  8175c0:	003f0706 	br	8171e0 <__alt_data_end+0xff8171e0>
  8175c4:	01400404 	movi	r5,16
  8175c8:	2805883a 	mov	r2,r5
  8175cc:	003ecd06 	br	817104 <__alt_data_end+0xff817104>
  8175d0:	0005883a 	mov	r2,zero
  8175d4:	0007883a 	mov	r3,zero
  8175d8:	003f1e06 	br	817254 <__alt_data_end+0xff817254>
  8175dc:	00800404 	movi	r2,16
  8175e0:	1007883a 	mov	r3,r2
  8175e4:	003f1b06 	br	817254 <__alt_data_end+0xff817254>
  8175e8:	000b883a 	mov	r5,zero
  8175ec:	0005883a 	mov	r2,zero
  8175f0:	003ec406 	br	817104 <__alt_data_end+0xff817104>
  8175f4:	413f952e 	bgeu	r8,r4,81744c <__alt_data_end+0xff81744c>
  8175f8:	10bfff84 	addi	r2,r2,-2
  8175fc:	4451883a 	add	r8,r8,r17
  817600:	003f9306 	br	817450 <__alt_data_end+0xff817450>
  817604:	2f3f7d2e 	bgeu	r5,fp,8173fc <__alt_data_end+0xff8173fc>
  817608:	b5bfff84 	addi	r22,r22,-2
  81760c:	2c4b883a 	add	r5,r5,r17
  817610:	003f7b06 	br	817400 <__alt_data_end+0xff817400>
  817614:	34cd883a 	add	r6,r6,r19
  817618:	003f2a06 	br	8172c4 <__alt_data_end+0xff8172c4>
  81761c:	8005883a 	mov	r2,r16
  817620:	003efe06 	br	81721c <__alt_data_end+0xff81721c>
  817624:	81bfdb36 	bltu	r16,r6,817594 <__alt_data_end+0xff817594>
  817628:	300f883a 	mov	r7,r6
  81762c:	0009883a 	mov	r4,zero
  817630:	003fa106 	br	8174b8 <__alt_data_end+0xff8174b8>

00817634 <__adddf3>:
  817634:	02000434 	movhi	r8,16
  817638:	423fffc4 	addi	r8,r8,-1
  81763c:	defffb04 	addi	sp,sp,-20
  817640:	2a12703a 	and	r9,r5,r8
  817644:	2806d7fa 	srli	r3,r5,31
  817648:	3a10703a 	and	r8,r7,r8
  81764c:	3804d53a 	srli	r2,r7,20
  817650:	3014d77a 	srli	r10,r6,29
  817654:	dc000015 	stw	r16,0(sp)
  817658:	481290fa 	slli	r9,r9,3
  81765c:	2820d53a 	srli	r16,r5,20
  817660:	401090fa 	slli	r8,r8,3
  817664:	200ad77a 	srli	r5,r4,29
  817668:	380ed7fa 	srli	r7,r7,31
  81766c:	dc800215 	stw	r18,8(sp)
  817670:	dc400115 	stw	r17,4(sp)
  817674:	dfc00415 	stw	ra,16(sp)
  817678:	dcc00315 	stw	r19,12(sp)
  81767c:	1c803fcc 	andi	r18,r3,255
  817680:	8401ffcc 	andi	r16,r16,2047
  817684:	494ab03a 	or	r5,r9,r5
  817688:	202290fa 	slli	r17,r4,3
  81768c:	1081ffcc 	andi	r2,r2,2047
  817690:	4290b03a 	or	r8,r8,r10
  817694:	300c90fa 	slli	r6,r6,3
  817698:	91c07026 	beq	r18,r7,81785c <__adddf3+0x228>
  81769c:	8087c83a 	sub	r3,r16,r2
  8176a0:	00c0b30e 	bge	zero,r3,817970 <__adddf3+0x33c>
  8176a4:	10002a1e 	bne	r2,zero,817750 <__adddf3+0x11c>
  8176a8:	4184b03a 	or	r2,r8,r6
  8176ac:	1000991e 	bne	r2,zero,817914 <__adddf3+0x2e0>
  8176b0:	888001cc 	andi	r2,r17,7
  8176b4:	10005b26 	beq	r2,zero,817824 <__adddf3+0x1f0>
  8176b8:	88c003cc 	andi	r3,r17,15
  8176bc:	00800104 	movi	r2,4
  8176c0:	18805826 	beq	r3,r2,817824 <__adddf3+0x1f0>
  8176c4:	89800104 	addi	r6,r17,4
  8176c8:	3463803a 	cmpltu	r17,r6,r17
  8176cc:	2c4b883a 	add	r5,r5,r17
  8176d0:	2880202c 	andhi	r2,r5,128
  8176d4:	9007883a 	mov	r3,r18
  8176d8:	3023883a 	mov	r17,r6
  8176dc:	10005426 	beq	r2,zero,817830 <__adddf3+0x1fc>
  8176e0:	84000044 	addi	r16,r16,1
  8176e4:	0081ffc4 	movi	r2,2047
  8176e8:	8080c126 	beq	r16,r2,8179f0 <__adddf3+0x3bc>
  8176ec:	013fe034 	movhi	r4,65408
  8176f0:	213fffc4 	addi	r4,r4,-1
  8176f4:	290a703a 	and	r5,r5,r4
  8176f8:	2804977a 	slli	r2,r5,29
  8176fc:	280a927a 	slli	r5,r5,9
  817700:	8822d0fa 	srli	r17,r17,3
  817704:	8401ffcc 	andi	r16,r16,2047
  817708:	2808d33a 	srli	r4,r5,12
  81770c:	1444b03a 	or	r2,r2,r17
  817710:	8401ffcc 	andi	r16,r16,2047
  817714:	800a953a 	slli	r5,r16,20
  817718:	18c03fcc 	andi	r3,r3,255
  81771c:	04000434 	movhi	r16,16
  817720:	180697fa 	slli	r3,r3,31
  817724:	843fffc4 	addi	r16,r16,-1
  817728:	2420703a 	and	r16,r4,r16
  81772c:	8160b03a 	or	r16,r16,r5
  817730:	80c6b03a 	or	r3,r16,r3
  817734:	dfc00417 	ldw	ra,16(sp)
  817738:	dcc00317 	ldw	r19,12(sp)
  81773c:	dc800217 	ldw	r18,8(sp)
  817740:	dc400117 	ldw	r17,4(sp)
  817744:	dc000017 	ldw	r16,0(sp)
  817748:	dec00504 	addi	sp,sp,20
  81774c:	f800283a 	ret
  817750:	0081ffc4 	movi	r2,2047
  817754:	80bfd626 	beq	r16,r2,8176b0 <__alt_data_end+0xff8176b0>
  817758:	42002034 	orhi	r8,r8,128
  81775c:	00800e04 	movi	r2,56
  817760:	10c0a616 	blt	r2,r3,8179fc <__adddf3+0x3c8>
  817764:	008007c4 	movi	r2,31
  817768:	10c0c916 	blt	r2,r3,817a90 <__adddf3+0x45c>
  81776c:	00800804 	movi	r2,32
  817770:	10c5c83a 	sub	r2,r2,r3
  817774:	408e983a 	sll	r7,r8,r2
  817778:	30c8d83a 	srl	r4,r6,r3
  81777c:	3084983a 	sll	r2,r6,r2
  817780:	40c6d83a 	srl	r3,r8,r3
  817784:	390cb03a 	or	r6,r7,r4
  817788:	1004c03a 	cmpne	r2,r2,zero
  81778c:	308cb03a 	or	r6,r6,r2
  817790:	898dc83a 	sub	r6,r17,r6
  817794:	89a3803a 	cmpltu	r17,r17,r6
  817798:	28cbc83a 	sub	r5,r5,r3
  81779c:	2c4bc83a 	sub	r5,r5,r17
  8177a0:	3023883a 	mov	r17,r6
  8177a4:	2880202c 	andhi	r2,r5,128
  8177a8:	10006d26 	beq	r2,zero,817960 <__adddf3+0x32c>
  8177ac:	04c02034 	movhi	r19,128
  8177b0:	9cffffc4 	addi	r19,r19,-1
  8177b4:	2ce6703a 	and	r19,r5,r19
  8177b8:	98007e26 	beq	r19,zero,8179b4 <__adddf3+0x380>
  8177bc:	9809883a 	mov	r4,r19
  8177c0:	0819bd00 	call	819bd0 <__clzsi2>
  8177c4:	10fffe04 	addi	r3,r2,-8
  8177c8:	010007c4 	movi	r4,31
  8177cc:	20c07f16 	blt	r4,r3,8179cc <__adddf3+0x398>
  8177d0:	01400a04 	movi	r5,40
  8177d4:	2885c83a 	sub	r2,r5,r2
  8177d8:	888ad83a 	srl	r5,r17,r2
  8177dc:	98e6983a 	sll	r19,r19,r3
  8177e0:	88e2983a 	sll	r17,r17,r3
  8177e4:	2ce6b03a 	or	r19,r5,r19
  8177e8:	1c007c16 	blt	r3,r16,8179dc <__adddf3+0x3a8>
  8177ec:	1c21c83a 	sub	r16,r3,r16
  8177f0:	81400044 	addi	r5,r16,1
  8177f4:	00c007c4 	movi	r3,31
  8177f8:	19409816 	blt	r3,r5,817a5c <__adddf3+0x428>
  8177fc:	1c21c83a 	sub	r16,r3,r16
  817800:	8c08983a 	sll	r4,r17,r16
  817804:	8946d83a 	srl	r3,r17,r5
  817808:	9c20983a 	sll	r16,r19,r16
  81780c:	2008c03a 	cmpne	r4,r4,zero
  817810:	994ad83a 	srl	r5,r19,r5
  817814:	1c06b03a 	or	r3,r3,r16
  817818:	1922b03a 	or	r17,r3,r4
  81781c:	0021883a 	mov	r16,zero
  817820:	003fa306 	br	8176b0 <__alt_data_end+0xff8176b0>
  817824:	2880202c 	andhi	r2,r5,128
  817828:	9007883a 	mov	r3,r18
  81782c:	103fac1e 	bne	r2,zero,8176e0 <__alt_data_end+0xff8176e0>
  817830:	2804977a 	slli	r2,r5,29
  817834:	8822d0fa 	srli	r17,r17,3
  817838:	0101ffc4 	movi	r4,2047
  81783c:	280ad0fa 	srli	r5,r5,3
  817840:	1444b03a 	or	r2,r2,r17
  817844:	81002c26 	beq	r16,r4,8178f8 <__adddf3+0x2c4>
  817848:	8120703a 	and	r16,r16,r4
  81784c:	01000434 	movhi	r4,16
  817850:	213fffc4 	addi	r4,r4,-1
  817854:	2908703a 	and	r4,r5,r4
  817858:	003fad06 	br	817710 <__alt_data_end+0xff817710>
  81785c:	8089c83a 	sub	r4,r16,r2
  817860:	01006a0e 	bge	zero,r4,817a0c <__adddf3+0x3d8>
  817864:	10003326 	beq	r2,zero,817934 <__adddf3+0x300>
  817868:	0081ffc4 	movi	r2,2047
  81786c:	80bf9026 	beq	r16,r2,8176b0 <__alt_data_end+0xff8176b0>
  817870:	42002034 	orhi	r8,r8,128
  817874:	00800e04 	movi	r2,56
  817878:	1100b116 	blt	r2,r4,817b40 <__adddf3+0x50c>
  81787c:	008007c4 	movi	r2,31
  817880:	1100e216 	blt	r2,r4,817c0c <__adddf3+0x5d8>
  817884:	00800804 	movi	r2,32
  817888:	1105c83a 	sub	r2,r2,r4
  81788c:	4092983a 	sll	r9,r8,r2
  817890:	310ed83a 	srl	r7,r6,r4
  817894:	3084983a 	sll	r2,r6,r2
  817898:	4110d83a 	srl	r8,r8,r4
  81789c:	49ccb03a 	or	r6,r9,r7
  8178a0:	1004c03a 	cmpne	r2,r2,zero
  8178a4:	308cb03a 	or	r6,r6,r2
  8178a8:	344d883a 	add	r6,r6,r17
  8178ac:	3463803a 	cmpltu	r17,r6,r17
  8178b0:	414b883a 	add	r5,r8,r5
  8178b4:	2c4b883a 	add	r5,r5,r17
  8178b8:	3023883a 	mov	r17,r6
  8178bc:	2880202c 	andhi	r2,r5,128
  8178c0:	10002726 	beq	r2,zero,817960 <__adddf3+0x32c>
  8178c4:	84000044 	addi	r16,r16,1
  8178c8:	0081ffc4 	movi	r2,2047
  8178cc:	8080ae26 	beq	r16,r2,817b88 <__adddf3+0x554>
  8178d0:	00bfe034 	movhi	r2,65408
  8178d4:	10bfffc4 	addi	r2,r2,-1
  8178d8:	288a703a 	and	r5,r5,r2
  8178dc:	880cd07a 	srli	r6,r17,1
  8178e0:	280897fa 	slli	r4,r5,31
  8178e4:	88c0004c 	andi	r3,r17,1
  8178e8:	30e2b03a 	or	r17,r6,r3
  8178ec:	280ad07a 	srli	r5,r5,1
  8178f0:	8922b03a 	or	r17,r17,r4
  8178f4:	003f6e06 	br	8176b0 <__alt_data_end+0xff8176b0>
  8178f8:	1148b03a 	or	r4,r2,r5
  8178fc:	20003c26 	beq	r4,zero,8179f0 <__adddf3+0x3bc>
  817900:	29000234 	orhi	r4,r5,8
  817904:	01400434 	movhi	r5,16
  817908:	297fffc4 	addi	r5,r5,-1
  81790c:	2148703a 	and	r4,r4,r5
  817910:	003f7f06 	br	817710 <__alt_data_end+0xff817710>
  817914:	18ffffc4 	addi	r3,r3,-1
  817918:	18004d1e 	bne	r3,zero,817a50 <__adddf3+0x41c>
  81791c:	898dc83a 	sub	r6,r17,r6
  817920:	89a3803a 	cmpltu	r17,r17,r6
  817924:	2a0bc83a 	sub	r5,r5,r8
  817928:	2c4bc83a 	sub	r5,r5,r17
  81792c:	3023883a 	mov	r17,r6
  817930:	003f9c06 	br	8177a4 <__alt_data_end+0xff8177a4>
  817934:	4184b03a 	or	r2,r8,r6
  817938:	103f5d26 	beq	r2,zero,8176b0 <__alt_data_end+0xff8176b0>
  81793c:	213fffc4 	addi	r4,r4,-1
  817940:	203fd926 	beq	r4,zero,8178a8 <__alt_data_end+0xff8178a8>
  817944:	0081ffc4 	movi	r2,2047
  817948:	80bfca1e 	bne	r16,r2,817874 <__alt_data_end+0xff817874>
  81794c:	003f5806 	br	8176b0 <__alt_data_end+0xff8176b0>
  817950:	10c8b03a 	or	r4,r2,r3
  817954:	20008b26 	beq	r4,zero,817b84 <__adddf3+0x550>
  817958:	100b883a 	mov	r5,r2
  81795c:	1823883a 	mov	r17,r3
  817960:	888001cc 	andi	r2,r17,7
  817964:	103f541e 	bne	r2,zero,8176b8 <__alt_data_end+0xff8176b8>
  817968:	9007883a 	mov	r3,r18
  81796c:	003fb006 	br	817830 <__alt_data_end+0xff817830>
  817970:	1800531e 	bne	r3,zero,817ac0 <__adddf3+0x48c>
  817974:	80800044 	addi	r2,r16,1
  817978:	1081ffcc 	andi	r2,r2,2047
  81797c:	00c00044 	movi	r3,1
  817980:	1880990e 	bge	r3,r2,817be8 <__adddf3+0x5b4>
  817984:	8985c83a 	sub	r2,r17,r6
  817988:	8887803a 	cmpltu	r3,r17,r2
  81798c:	2a27c83a 	sub	r19,r5,r8
  817990:	98e7c83a 	sub	r19,r19,r3
  817994:	98c0202c 	andhi	r3,r19,128
  817998:	18006226 	beq	r3,zero,817b24 <__adddf3+0x4f0>
  81799c:	3463c83a 	sub	r17,r6,r17
  8179a0:	4151c83a 	sub	r8,r8,r5
  8179a4:	344d803a 	cmpltu	r6,r6,r17
  8179a8:	41a7c83a 	sub	r19,r8,r6
  8179ac:	3825883a 	mov	r18,r7
  8179b0:	983f821e 	bne	r19,zero,8177bc <__alt_data_end+0xff8177bc>
  8179b4:	8809883a 	mov	r4,r17
  8179b8:	0819bd00 	call	819bd0 <__clzsi2>
  8179bc:	10800804 	addi	r2,r2,32
  8179c0:	10fffe04 	addi	r3,r2,-8
  8179c4:	010007c4 	movi	r4,31
  8179c8:	20ff810e 	bge	r4,r3,8177d0 <__alt_data_end+0xff8177d0>
  8179cc:	14fff604 	addi	r19,r2,-40
  8179d0:	8ce6983a 	sll	r19,r17,r19
  8179d4:	0023883a 	mov	r17,zero
  8179d8:	1c3f840e 	bge	r3,r16,8177ec <__alt_data_end+0xff8177ec>
  8179dc:	017fe034 	movhi	r5,65408
  8179e0:	297fffc4 	addi	r5,r5,-1
  8179e4:	80e1c83a 	sub	r16,r16,r3
  8179e8:	994a703a 	and	r5,r19,r5
  8179ec:	003f3006 	br	8176b0 <__alt_data_end+0xff8176b0>
  8179f0:	0009883a 	mov	r4,zero
  8179f4:	0005883a 	mov	r2,zero
  8179f8:	003f4506 	br	817710 <__alt_data_end+0xff817710>
  8179fc:	418cb03a 	or	r6,r8,r6
  817a00:	300cc03a 	cmpne	r6,r6,zero
  817a04:	0007883a 	mov	r3,zero
  817a08:	003f6106 	br	817790 <__alt_data_end+0xff817790>
  817a0c:	2000921e 	bne	r4,zero,817c58 <__adddf3+0x624>
  817a10:	80800044 	addi	r2,r16,1
  817a14:	11c1ffcc 	andi	r7,r2,2047
  817a18:	01000044 	movi	r4,1
  817a1c:	21c0610e 	bge	r4,r7,817ba4 <__adddf3+0x570>
  817a20:	0101ffc4 	movi	r4,2047
  817a24:	1100a326 	beq	r2,r4,817cb4 <__adddf3+0x680>
  817a28:	344d883a 	add	r6,r6,r17
  817a2c:	3463803a 	cmpltu	r17,r6,r17
  817a30:	414b883a 	add	r5,r8,r5
  817a34:	2c4b883a 	add	r5,r5,r17
  817a38:	282297fa 	slli	r17,r5,31
  817a3c:	300cd07a 	srli	r6,r6,1
  817a40:	280ad07a 	srli	r5,r5,1
  817a44:	1021883a 	mov	r16,r2
  817a48:	89a2b03a 	or	r17,r17,r6
  817a4c:	003f1806 	br	8176b0 <__alt_data_end+0xff8176b0>
  817a50:	0081ffc4 	movi	r2,2047
  817a54:	80bf411e 	bne	r16,r2,81775c <__alt_data_end+0xff81775c>
  817a58:	003f1506 	br	8176b0 <__alt_data_end+0xff8176b0>
  817a5c:	80bff844 	addi	r2,r16,-31
  817a60:	00c00804 	movi	r3,32
  817a64:	9884d83a 	srl	r2,r19,r2
  817a68:	28c04a26 	beq	r5,r3,817b94 <__adddf3+0x560>
  817a6c:	00c00fc4 	movi	r3,63
  817a70:	1c21c83a 	sub	r16,r3,r16
  817a74:	9c26983a 	sll	r19,r19,r16
  817a78:	9c62b03a 	or	r17,r19,r17
  817a7c:	8822c03a 	cmpne	r17,r17,zero
  817a80:	88a2b03a 	or	r17,r17,r2
  817a84:	000b883a 	mov	r5,zero
  817a88:	0021883a 	mov	r16,zero
  817a8c:	003fb406 	br	817960 <__alt_data_end+0xff817960>
  817a90:	18bff804 	addi	r2,r3,-32
  817a94:	01000804 	movi	r4,32
  817a98:	4084d83a 	srl	r2,r8,r2
  817a9c:	19003f26 	beq	r3,r4,817b9c <__adddf3+0x568>
  817aa0:	01001004 	movi	r4,64
  817aa4:	20c7c83a 	sub	r3,r4,r3
  817aa8:	40d0983a 	sll	r8,r8,r3
  817aac:	418cb03a 	or	r6,r8,r6
  817ab0:	300cc03a 	cmpne	r6,r6,zero
  817ab4:	308cb03a 	or	r6,r6,r2
  817ab8:	0007883a 	mov	r3,zero
  817abc:	003f3406 	br	817790 <__alt_data_end+0xff817790>
  817ac0:	80002326 	beq	r16,zero,817b50 <__adddf3+0x51c>
  817ac4:	0101ffc4 	movi	r4,2047
  817ac8:	11005e26 	beq	r2,r4,817c44 <__adddf3+0x610>
  817acc:	00c7c83a 	sub	r3,zero,r3
  817ad0:	29402034 	orhi	r5,r5,128
  817ad4:	01000e04 	movi	r4,56
  817ad8:	20c07216 	blt	r4,r3,817ca4 <__adddf3+0x670>
  817adc:	010007c4 	movi	r4,31
  817ae0:	20c0ce16 	blt	r4,r3,817e1c <__adddf3+0x7e8>
  817ae4:	01000804 	movi	r4,32
  817ae8:	20c9c83a 	sub	r4,r4,r3
  817aec:	2914983a 	sll	r10,r5,r4
  817af0:	88d2d83a 	srl	r9,r17,r3
  817af4:	8908983a 	sll	r4,r17,r4
  817af8:	28c6d83a 	srl	r3,r5,r3
  817afc:	5262b03a 	or	r17,r10,r9
  817b00:	2008c03a 	cmpne	r4,r4,zero
  817b04:	8922b03a 	or	r17,r17,r4
  817b08:	3463c83a 	sub	r17,r6,r17
  817b0c:	40c7c83a 	sub	r3,r8,r3
  817b10:	344d803a 	cmpltu	r6,r6,r17
  817b14:	198bc83a 	sub	r5,r3,r6
  817b18:	1021883a 	mov	r16,r2
  817b1c:	3825883a 	mov	r18,r7
  817b20:	003f2006 	br	8177a4 <__alt_data_end+0xff8177a4>
  817b24:	9886b03a 	or	r3,r19,r2
  817b28:	1800141e 	bne	r3,zero,817b7c <__adddf3+0x548>
  817b2c:	0007883a 	mov	r3,zero
  817b30:	000b883a 	mov	r5,zero
  817b34:	0023883a 	mov	r17,zero
  817b38:	0021883a 	mov	r16,zero
  817b3c:	003f3c06 	br	817830 <__alt_data_end+0xff817830>
  817b40:	418cb03a 	or	r6,r8,r6
  817b44:	300cc03a 	cmpne	r6,r6,zero
  817b48:	0011883a 	mov	r8,zero
  817b4c:	003f5606 	br	8178a8 <__alt_data_end+0xff8178a8>
  817b50:	2c48b03a 	or	r4,r5,r17
  817b54:	20003b26 	beq	r4,zero,817c44 <__adddf3+0x610>
  817b58:	00c6303a 	nor	r3,zero,r3
  817b5c:	1800371e 	bne	r3,zero,817c3c <__adddf3+0x608>
  817b60:	3463c83a 	sub	r17,r6,r17
  817b64:	414bc83a 	sub	r5,r8,r5
  817b68:	344d803a 	cmpltu	r6,r6,r17
  817b6c:	298bc83a 	sub	r5,r5,r6
  817b70:	1021883a 	mov	r16,r2
  817b74:	3825883a 	mov	r18,r7
  817b78:	003f0a06 	br	8177a4 <__alt_data_end+0xff8177a4>
  817b7c:	1023883a 	mov	r17,r2
  817b80:	003f0d06 	br	8177b8 <__alt_data_end+0xff8177b8>
  817b84:	0007883a 	mov	r3,zero
  817b88:	000b883a 	mov	r5,zero
  817b8c:	0023883a 	mov	r17,zero
  817b90:	003f2706 	br	817830 <__alt_data_end+0xff817830>
  817b94:	0027883a 	mov	r19,zero
  817b98:	003fb706 	br	817a78 <__alt_data_end+0xff817a78>
  817b9c:	0011883a 	mov	r8,zero
  817ba0:	003fc206 	br	817aac <__alt_data_end+0xff817aac>
  817ba4:	2c44b03a 	or	r2,r5,r17
  817ba8:	8000871e 	bne	r16,zero,817dc8 <__adddf3+0x794>
  817bac:	1000b126 	beq	r2,zero,817e74 <__adddf3+0x840>
  817bb0:	4184b03a 	or	r2,r8,r6
  817bb4:	103ebe26 	beq	r2,zero,8176b0 <__alt_data_end+0xff8176b0>
  817bb8:	3445883a 	add	r2,r6,r17
  817bbc:	1463803a 	cmpltu	r17,r2,r17
  817bc0:	414b883a 	add	r5,r8,r5
  817bc4:	2c4b883a 	add	r5,r5,r17
  817bc8:	28c0202c 	andhi	r3,r5,128
  817bcc:	1023883a 	mov	r17,r2
  817bd0:	183f6326 	beq	r3,zero,817960 <__alt_data_end+0xff817960>
  817bd4:	00bfe034 	movhi	r2,65408
  817bd8:	10bfffc4 	addi	r2,r2,-1
  817bdc:	2021883a 	mov	r16,r4
  817be0:	288a703a 	and	r5,r5,r2
  817be4:	003eb206 	br	8176b0 <__alt_data_end+0xff8176b0>
  817be8:	2c44b03a 	or	r2,r5,r17
  817bec:	8000251e 	bne	r16,zero,817c84 <__adddf3+0x650>
  817bf0:	10004b1e 	bne	r2,zero,817d20 <__adddf3+0x6ec>
  817bf4:	4184b03a 	or	r2,r8,r6
  817bf8:	103fe226 	beq	r2,zero,817b84 <__alt_data_end+0xff817b84>
  817bfc:	400b883a 	mov	r5,r8
  817c00:	3023883a 	mov	r17,r6
  817c04:	3825883a 	mov	r18,r7
  817c08:	003ea906 	br	8176b0 <__alt_data_end+0xff8176b0>
  817c0c:	20bff804 	addi	r2,r4,-32
  817c10:	01c00804 	movi	r7,32
  817c14:	4084d83a 	srl	r2,r8,r2
  817c18:	21c07e26 	beq	r4,r7,817e14 <__adddf3+0x7e0>
  817c1c:	01c01004 	movi	r7,64
  817c20:	3909c83a 	sub	r4,r7,r4
  817c24:	4110983a 	sll	r8,r8,r4
  817c28:	418cb03a 	or	r6,r8,r6
  817c2c:	300cc03a 	cmpne	r6,r6,zero
  817c30:	308cb03a 	or	r6,r6,r2
  817c34:	0011883a 	mov	r8,zero
  817c38:	003f1b06 	br	8178a8 <__alt_data_end+0xff8178a8>
  817c3c:	0101ffc4 	movi	r4,2047
  817c40:	113fa41e 	bne	r2,r4,817ad4 <__alt_data_end+0xff817ad4>
  817c44:	400b883a 	mov	r5,r8
  817c48:	3023883a 	mov	r17,r6
  817c4c:	1021883a 	mov	r16,r2
  817c50:	3825883a 	mov	r18,r7
  817c54:	003e9606 	br	8176b0 <__alt_data_end+0xff8176b0>
  817c58:	80001a1e 	bne	r16,zero,817cc4 <__adddf3+0x690>
  817c5c:	2c4eb03a 	or	r7,r5,r17
  817c60:	38005526 	beq	r7,zero,817db8 <__adddf3+0x784>
  817c64:	0108303a 	nor	r4,zero,r4
  817c68:	2000511e 	bne	r4,zero,817db0 <__adddf3+0x77c>
  817c6c:	89a3883a 	add	r17,r17,r6
  817c70:	414b883a 	add	r5,r8,r5
  817c74:	898d803a 	cmpltu	r6,r17,r6
  817c78:	298b883a 	add	r5,r5,r6
  817c7c:	1021883a 	mov	r16,r2
  817c80:	003f0e06 	br	8178bc <__alt_data_end+0xff8178bc>
  817c84:	1000341e 	bne	r2,zero,817d58 <__adddf3+0x724>
  817c88:	4184b03a 	or	r2,r8,r6
  817c8c:	10006f26 	beq	r2,zero,817e4c <__adddf3+0x818>
  817c90:	400b883a 	mov	r5,r8
  817c94:	3023883a 	mov	r17,r6
  817c98:	3825883a 	mov	r18,r7
  817c9c:	0401ffc4 	movi	r16,2047
  817ca0:	003e8306 	br	8176b0 <__alt_data_end+0xff8176b0>
  817ca4:	2c62b03a 	or	r17,r5,r17
  817ca8:	8822c03a 	cmpne	r17,r17,zero
  817cac:	0007883a 	mov	r3,zero
  817cb0:	003f9506 	br	817b08 <__alt_data_end+0xff817b08>
  817cb4:	1021883a 	mov	r16,r2
  817cb8:	000b883a 	mov	r5,zero
  817cbc:	0023883a 	mov	r17,zero
  817cc0:	003edb06 	br	817830 <__alt_data_end+0xff817830>
  817cc4:	01c1ffc4 	movi	r7,2047
  817cc8:	11c03b26 	beq	r2,r7,817db8 <__adddf3+0x784>
  817ccc:	0109c83a 	sub	r4,zero,r4
  817cd0:	29402034 	orhi	r5,r5,128
  817cd4:	01c00e04 	movi	r7,56
  817cd8:	39006216 	blt	r7,r4,817e64 <__adddf3+0x830>
  817cdc:	01c007c4 	movi	r7,31
  817ce0:	39006b16 	blt	r7,r4,817e90 <__adddf3+0x85c>
  817ce4:	01c00804 	movi	r7,32
  817ce8:	390fc83a 	sub	r7,r7,r4
  817cec:	29d4983a 	sll	r10,r5,r7
  817cf0:	8912d83a 	srl	r9,r17,r4
  817cf4:	89ce983a 	sll	r7,r17,r7
  817cf8:	2908d83a 	srl	r4,r5,r4
  817cfc:	5262b03a 	or	r17,r10,r9
  817d00:	380ac03a 	cmpne	r5,r7,zero
  817d04:	8962b03a 	or	r17,r17,r5
  817d08:	89a3883a 	add	r17,r17,r6
  817d0c:	2211883a 	add	r8,r4,r8
  817d10:	898d803a 	cmpltu	r6,r17,r6
  817d14:	418b883a 	add	r5,r8,r6
  817d18:	1021883a 	mov	r16,r2
  817d1c:	003ee706 	br	8178bc <__alt_data_end+0xff8178bc>
  817d20:	4184b03a 	or	r2,r8,r6
  817d24:	103e6226 	beq	r2,zero,8176b0 <__alt_data_end+0xff8176b0>
  817d28:	8987c83a 	sub	r3,r17,r6
  817d2c:	88c9803a 	cmpltu	r4,r17,r3
  817d30:	2a05c83a 	sub	r2,r5,r8
  817d34:	1105c83a 	sub	r2,r2,r4
  817d38:	1100202c 	andhi	r4,r2,128
  817d3c:	203f0426 	beq	r4,zero,817950 <__alt_data_end+0xff817950>
  817d40:	3463c83a 	sub	r17,r6,r17
  817d44:	414bc83a 	sub	r5,r8,r5
  817d48:	344d803a 	cmpltu	r6,r6,r17
  817d4c:	298bc83a 	sub	r5,r5,r6
  817d50:	3825883a 	mov	r18,r7
  817d54:	003e5606 	br	8176b0 <__alt_data_end+0xff8176b0>
  817d58:	4184b03a 	or	r2,r8,r6
  817d5c:	10002b26 	beq	r2,zero,817e0c <__adddf3+0x7d8>
  817d60:	2804d0fa 	srli	r2,r5,3
  817d64:	8822d0fa 	srli	r17,r17,3
  817d68:	280a977a 	slli	r5,r5,29
  817d6c:	10c0022c 	andhi	r3,r2,8
  817d70:	2c62b03a 	or	r17,r5,r17
  817d74:	18000826 	beq	r3,zero,817d98 <__adddf3+0x764>
  817d78:	4008d0fa 	srli	r4,r8,3
  817d7c:	20c0022c 	andhi	r3,r4,8
  817d80:	1800051e 	bne	r3,zero,817d98 <__adddf3+0x764>
  817d84:	300cd0fa 	srli	r6,r6,3
  817d88:	4010977a 	slli	r8,r8,29
  817d8c:	2005883a 	mov	r2,r4
  817d90:	3825883a 	mov	r18,r7
  817d94:	41a2b03a 	or	r17,r8,r6
  817d98:	880ad77a 	srli	r5,r17,29
  817d9c:	100490fa 	slli	r2,r2,3
  817da0:	882290fa 	slli	r17,r17,3
  817da4:	0401ffc4 	movi	r16,2047
  817da8:	288ab03a 	or	r5,r5,r2
  817dac:	003e4006 	br	8176b0 <__alt_data_end+0xff8176b0>
  817db0:	01c1ffc4 	movi	r7,2047
  817db4:	11ffc71e 	bne	r2,r7,817cd4 <__alt_data_end+0xff817cd4>
  817db8:	400b883a 	mov	r5,r8
  817dbc:	3023883a 	mov	r17,r6
  817dc0:	1021883a 	mov	r16,r2
  817dc4:	003e3a06 	br	8176b0 <__alt_data_end+0xff8176b0>
  817dc8:	10002d26 	beq	r2,zero,817e80 <__adddf3+0x84c>
  817dcc:	4184b03a 	or	r2,r8,r6
  817dd0:	10000e26 	beq	r2,zero,817e0c <__adddf3+0x7d8>
  817dd4:	2804d0fa 	srli	r2,r5,3
  817dd8:	8822d0fa 	srli	r17,r17,3
  817ddc:	280a977a 	slli	r5,r5,29
  817de0:	10c0022c 	andhi	r3,r2,8
  817de4:	2c62b03a 	or	r17,r5,r17
  817de8:	183feb26 	beq	r3,zero,817d98 <__alt_data_end+0xff817d98>
  817dec:	4008d0fa 	srli	r4,r8,3
  817df0:	20c0022c 	andhi	r3,r4,8
  817df4:	183fe81e 	bne	r3,zero,817d98 <__alt_data_end+0xff817d98>
  817df8:	300cd0fa 	srli	r6,r6,3
  817dfc:	4010977a 	slli	r8,r8,29
  817e00:	2005883a 	mov	r2,r4
  817e04:	41a2b03a 	or	r17,r8,r6
  817e08:	003fe306 	br	817d98 <__alt_data_end+0xff817d98>
  817e0c:	0401ffc4 	movi	r16,2047
  817e10:	003e2706 	br	8176b0 <__alt_data_end+0xff8176b0>
  817e14:	0011883a 	mov	r8,zero
  817e18:	003f8306 	br	817c28 <__alt_data_end+0xff817c28>
  817e1c:	193ff804 	addi	r4,r3,-32
  817e20:	02400804 	movi	r9,32
  817e24:	2908d83a 	srl	r4,r5,r4
  817e28:	1a402526 	beq	r3,r9,817ec0 <__adddf3+0x88c>
  817e2c:	02401004 	movi	r9,64
  817e30:	48c7c83a 	sub	r3,r9,r3
  817e34:	28ca983a 	sll	r5,r5,r3
  817e38:	2c62b03a 	or	r17,r5,r17
  817e3c:	8822c03a 	cmpne	r17,r17,zero
  817e40:	8922b03a 	or	r17,r17,r4
  817e44:	0007883a 	mov	r3,zero
  817e48:	003f2f06 	br	817b08 <__alt_data_end+0xff817b08>
  817e4c:	01402034 	movhi	r5,128
  817e50:	0007883a 	mov	r3,zero
  817e54:	297fffc4 	addi	r5,r5,-1
  817e58:	047ffe04 	movi	r17,-8
  817e5c:	0401ffc4 	movi	r16,2047
  817e60:	003e7306 	br	817830 <__alt_data_end+0xff817830>
  817e64:	2c62b03a 	or	r17,r5,r17
  817e68:	8822c03a 	cmpne	r17,r17,zero
  817e6c:	0009883a 	mov	r4,zero
  817e70:	003fa506 	br	817d08 <__alt_data_end+0xff817d08>
  817e74:	400b883a 	mov	r5,r8
  817e78:	3023883a 	mov	r17,r6
  817e7c:	003e0c06 	br	8176b0 <__alt_data_end+0xff8176b0>
  817e80:	400b883a 	mov	r5,r8
  817e84:	3023883a 	mov	r17,r6
  817e88:	0401ffc4 	movi	r16,2047
  817e8c:	003e0806 	br	8176b0 <__alt_data_end+0xff8176b0>
  817e90:	21fff804 	addi	r7,r4,-32
  817e94:	02400804 	movi	r9,32
  817e98:	29ced83a 	srl	r7,r5,r7
  817e9c:	22400a26 	beq	r4,r9,817ec8 <__adddf3+0x894>
  817ea0:	02401004 	movi	r9,64
  817ea4:	4909c83a 	sub	r4,r9,r4
  817ea8:	290a983a 	sll	r5,r5,r4
  817eac:	2c62b03a 	or	r17,r5,r17
  817eb0:	8822c03a 	cmpne	r17,r17,zero
  817eb4:	89e2b03a 	or	r17,r17,r7
  817eb8:	0009883a 	mov	r4,zero
  817ebc:	003f9206 	br	817d08 <__alt_data_end+0xff817d08>
  817ec0:	000b883a 	mov	r5,zero
  817ec4:	003fdc06 	br	817e38 <__alt_data_end+0xff817e38>
  817ec8:	000b883a 	mov	r5,zero
  817ecc:	003ff706 	br	817eac <__alt_data_end+0xff817eac>

00817ed0 <__divdf3>:
  817ed0:	defff204 	addi	sp,sp,-56
  817ed4:	dd000815 	stw	r20,32(sp)
  817ed8:	2828d53a 	srli	r20,r5,20
  817edc:	dd800a15 	stw	r22,40(sp)
  817ee0:	282cd7fa 	srli	r22,r5,31
  817ee4:	dc000415 	stw	r16,16(sp)
  817ee8:	04000434 	movhi	r16,16
  817eec:	df000c15 	stw	fp,48(sp)
  817ef0:	dcc00715 	stw	r19,28(sp)
  817ef4:	dc800615 	stw	r18,24(sp)
  817ef8:	dc400515 	stw	r17,20(sp)
  817efc:	843fffc4 	addi	r16,r16,-1
  817f00:	dfc00d15 	stw	ra,52(sp)
  817f04:	ddc00b15 	stw	r23,44(sp)
  817f08:	dd400915 	stw	r21,36(sp)
  817f0c:	a501ffcc 	andi	r20,r20,2047
  817f10:	2025883a 	mov	r18,r4
  817f14:	2027883a 	mov	r19,r4
  817f18:	2c22703a 	and	r17,r5,r16
  817f1c:	b7003fcc 	andi	fp,r22,255
  817f20:	a0005e26 	beq	r20,zero,81809c <__divdf3+0x1cc>
  817f24:	0081ffc4 	movi	r2,2047
  817f28:	a0803526 	beq	r20,r2,818000 <__divdf3+0x130>
  817f2c:	8c000434 	orhi	r16,r17,16
  817f30:	2004d77a 	srli	r2,r4,29
  817f34:	802090fa 	slli	r16,r16,3
  817f38:	202690fa 	slli	r19,r4,3
  817f3c:	a53f0044 	addi	r20,r20,-1023
  817f40:	80a2b03a 	or	r17,r16,r2
  817f44:	0025883a 	mov	r18,zero
  817f48:	0011883a 	mov	r8,zero
  817f4c:	380ad53a 	srli	r5,r7,20
  817f50:	382ed7fa 	srli	r23,r7,31
  817f54:	04000434 	movhi	r16,16
  817f58:	843fffc4 	addi	r16,r16,-1
  817f5c:	2941ffcc 	andi	r5,r5,2047
  817f60:	302b883a 	mov	r21,r6
  817f64:	3c20703a 	and	r16,r7,r16
  817f68:	ba403fcc 	andi	r9,r23,255
  817f6c:	28006726 	beq	r5,zero,81810c <__divdf3+0x23c>
  817f70:	0081ffc4 	movi	r2,2047
  817f74:	28805f26 	beq	r5,r2,8180f4 <__divdf3+0x224>
  817f78:	84000434 	orhi	r16,r16,16
  817f7c:	3004d77a 	srli	r2,r6,29
  817f80:	802090fa 	slli	r16,r16,3
  817f84:	302a90fa 	slli	r21,r6,3
  817f88:	297f0044 	addi	r5,r5,-1023
  817f8c:	80a0b03a 	or	r16,r16,r2
  817f90:	000f883a 	mov	r7,zero
  817f94:	3c86b03a 	or	r3,r7,r18
  817f98:	180690ba 	slli	r3,r3,2
  817f9c:	00802074 	movhi	r2,129
  817fa0:	109ff004 	addi	r2,r2,32704
  817fa4:	1887883a 	add	r3,r3,r2
  817fa8:	18c00017 	ldw	r3,0(r3)
  817fac:	b5c8f03a 	xor	r4,r22,r23
  817fb0:	200d883a 	mov	r6,r4
  817fb4:	24803fcc 	andi	r18,r4,255
  817fb8:	a169c83a 	sub	r20,r20,r5
  817fbc:	1800683a 	jmp	r3
  817fc0:	00818208 	cmpgei	r2,zero,1544
  817fc4:	00818038 	rdprs	r2,zero,1536
  817fc8:	008181cc 	andi	r2,zero,1543
  817fcc:	0081801c 	xori	r2,zero,1536
  817fd0:	008181cc 	andi	r2,zero,1543
  817fd4:	008181a0 	cmpeqi	r2,zero,1542
  817fd8:	008181cc 	andi	r2,zero,1543
  817fdc:	0081801c 	xori	r2,zero,1536
  817fe0:	00818038 	rdprs	r2,zero,1536
  817fe4:	00818038 	rdprs	r2,zero,1536
  817fe8:	008181a0 	cmpeqi	r2,zero,1542
  817fec:	0081801c 	xori	r2,zero,1536
  817ff0:	0081802c 	andhi	r2,zero,1536
  817ff4:	0081802c 	andhi	r2,zero,1536
  817ff8:	0081802c 	andhi	r2,zero,1536
  817ffc:	008181dc 	xori	r2,zero,1543
  818000:	8904b03a 	or	r2,r17,r4
  818004:	1000631e 	bne	r2,zero,818194 <__divdf3+0x2c4>
  818008:	04800204 	movi	r18,8
  81800c:	0023883a 	mov	r17,zero
  818010:	0027883a 	mov	r19,zero
  818014:	02000084 	movi	r8,2
  818018:	003fcc06 	br	817f4c <__alt_data_end+0xff817f4c>
  81801c:	8023883a 	mov	r17,r16
  818020:	a827883a 	mov	r19,r21
  818024:	4839883a 	mov	fp,r9
  818028:	3811883a 	mov	r8,r7
  81802c:	00800084 	movi	r2,2
  818030:	40812a1e 	bne	r8,r2,8184dc <__divdf3+0x60c>
  818034:	e025883a 	mov	r18,fp
  818038:	9180004c 	andi	r6,r18,1
  81803c:	0101ffc4 	movi	r4,2047
  818040:	000b883a 	mov	r5,zero
  818044:	0027883a 	mov	r19,zero
  818048:	2008953a 	slli	r4,r4,20
  81804c:	30c03fcc 	andi	r3,r6,255
  818050:	04000434 	movhi	r16,16
  818054:	180697fa 	slli	r3,r3,31
  818058:	843fffc4 	addi	r16,r16,-1
  81805c:	2c20703a 	and	r16,r5,r16
  818060:	8120b03a 	or	r16,r16,r4
  818064:	80c6b03a 	or	r3,r16,r3
  818068:	9805883a 	mov	r2,r19
  81806c:	dfc00d17 	ldw	ra,52(sp)
  818070:	df000c17 	ldw	fp,48(sp)
  818074:	ddc00b17 	ldw	r23,44(sp)
  818078:	dd800a17 	ldw	r22,40(sp)
  81807c:	dd400917 	ldw	r21,36(sp)
  818080:	dd000817 	ldw	r20,32(sp)
  818084:	dcc00717 	ldw	r19,28(sp)
  818088:	dc800617 	ldw	r18,24(sp)
  81808c:	dc400517 	ldw	r17,20(sp)
  818090:	dc000417 	ldw	r16,16(sp)
  818094:	dec00e04 	addi	sp,sp,56
  818098:	f800283a 	ret
  81809c:	8904b03a 	or	r2,r17,r4
  8180a0:	10003726 	beq	r2,zero,818180 <__divdf3+0x2b0>
  8180a4:	88011c26 	beq	r17,zero,818518 <__divdf3+0x648>
  8180a8:	8809883a 	mov	r4,r17
  8180ac:	d9800315 	stw	r6,12(sp)
  8180b0:	d9c00115 	stw	r7,4(sp)
  8180b4:	0819bd00 	call	819bd0 <__clzsi2>
  8180b8:	d9800317 	ldw	r6,12(sp)
  8180bc:	d9c00117 	ldw	r7,4(sp)
  8180c0:	1007883a 	mov	r3,r2
  8180c4:	01000a04 	movi	r4,40
  8180c8:	1cfffe04 	addi	r19,r3,-8
  8180cc:	20c9c83a 	sub	r4,r4,r3
  8180d0:	8cca983a 	sll	r5,r17,r19
  8180d4:	9108d83a 	srl	r4,r18,r4
  8180d8:	94e6983a 	sll	r19,r18,r19
  8180dc:	2162b03a 	or	r17,r4,r5
  8180e0:	053f0344 	movi	r20,-1011
  8180e4:	a0e9c83a 	sub	r20,r20,r3
  8180e8:	0025883a 	mov	r18,zero
  8180ec:	0011883a 	mov	r8,zero
  8180f0:	003f9606 	br	817f4c <__alt_data_end+0xff817f4c>
  8180f4:	8184b03a 	or	r2,r16,r6
  8180f8:	10001f1e 	bne	r2,zero,818178 <__divdf3+0x2a8>
  8180fc:	0021883a 	mov	r16,zero
  818100:	002b883a 	mov	r21,zero
  818104:	01c00084 	movi	r7,2
  818108:	003fa206 	br	817f94 <__alt_data_end+0xff817f94>
  81810c:	8184b03a 	or	r2,r16,r6
  818110:	10001526 	beq	r2,zero,818168 <__divdf3+0x298>
  818114:	80010c26 	beq	r16,zero,818548 <__divdf3+0x678>
  818118:	8009883a 	mov	r4,r16
  81811c:	d9800315 	stw	r6,12(sp)
  818120:	da000215 	stw	r8,8(sp)
  818124:	da400015 	stw	r9,0(sp)
  818128:	0819bd00 	call	819bd0 <__clzsi2>
  81812c:	d9800317 	ldw	r6,12(sp)
  818130:	da000217 	ldw	r8,8(sp)
  818134:	da400017 	ldw	r9,0(sp)
  818138:	1007883a 	mov	r3,r2
  81813c:	01000a04 	movi	r4,40
  818140:	1d7ffe04 	addi	r21,r3,-8
  818144:	20c9c83a 	sub	r4,r4,r3
  818148:	8560983a 	sll	r16,r16,r21
  81814c:	3108d83a 	srl	r4,r6,r4
  818150:	356a983a 	sll	r21,r6,r21
  818154:	2420b03a 	or	r16,r4,r16
  818158:	017f0344 	movi	r5,-1011
  81815c:	28cbc83a 	sub	r5,r5,r3
  818160:	000f883a 	mov	r7,zero
  818164:	003f8b06 	br	817f94 <__alt_data_end+0xff817f94>
  818168:	0021883a 	mov	r16,zero
  81816c:	002b883a 	mov	r21,zero
  818170:	01c00044 	movi	r7,1
  818174:	003f8706 	br	817f94 <__alt_data_end+0xff817f94>
  818178:	01c000c4 	movi	r7,3
  81817c:	003f8506 	br	817f94 <__alt_data_end+0xff817f94>
  818180:	04800104 	movi	r18,4
  818184:	0023883a 	mov	r17,zero
  818188:	0027883a 	mov	r19,zero
  81818c:	02000044 	movi	r8,1
  818190:	003f6e06 	br	817f4c <__alt_data_end+0xff817f4c>
  818194:	04800304 	movi	r18,12
  818198:	020000c4 	movi	r8,3
  81819c:	003f6b06 	br	817f4c <__alt_data_end+0xff817f4c>
  8181a0:	01400434 	movhi	r5,16
  8181a4:	000d883a 	mov	r6,zero
  8181a8:	297fffc4 	addi	r5,r5,-1
  8181ac:	04ffffc4 	movi	r19,-1
  8181b0:	0101ffc4 	movi	r4,2047
  8181b4:	003fa406 	br	818048 <__alt_data_end+0xff818048>
  8181b8:	043f0084 	movi	r16,-1022
  8181bc:	8521c83a 	sub	r16,r16,r20
  8181c0:	00800e04 	movi	r2,56
  8181c4:	1401200e 	bge	r2,r16,818648 <__divdf3+0x778>
  8181c8:	9180004c 	andi	r6,r18,1
  8181cc:	0009883a 	mov	r4,zero
  8181d0:	000b883a 	mov	r5,zero
  8181d4:	0027883a 	mov	r19,zero
  8181d8:	003f9b06 	br	818048 <__alt_data_end+0xff818048>
  8181dc:	8880022c 	andhi	r2,r17,8
  8181e0:	1000c726 	beq	r2,zero,818500 <__divdf3+0x630>
  8181e4:	8080022c 	andhi	r2,r16,8
  8181e8:	1000c51e 	bne	r2,zero,818500 <__divdf3+0x630>
  8181ec:	00800434 	movhi	r2,16
  8181f0:	81400234 	orhi	r5,r16,8
  8181f4:	10bfffc4 	addi	r2,r2,-1
  8181f8:	b80d883a 	mov	r6,r23
  8181fc:	288a703a 	and	r5,r5,r2
  818200:	a827883a 	mov	r19,r21
  818204:	003fea06 	br	8181b0 <__alt_data_end+0xff8181b0>
  818208:	8440ea36 	bltu	r16,r17,8185b4 <__divdf3+0x6e4>
  81820c:	8c00e826 	beq	r17,r16,8185b0 <__divdf3+0x6e0>
  818210:	a53fffc4 	addi	r20,r20,-1
  818214:	882d883a 	mov	r22,r17
  818218:	000d883a 	mov	r6,zero
  81821c:	a804d63a 	srli	r2,r21,24
  818220:	8020923a 	slli	r16,r16,8
  818224:	b009883a 	mov	r4,r22
  818228:	d9800315 	stw	r6,12(sp)
  81822c:	1420b03a 	or	r16,r2,r16
  818230:	802ed43a 	srli	r23,r16,16
  818234:	873fffcc 	andi	fp,r16,65535
  818238:	a82a923a 	slli	r21,r21,8
  81823c:	b80b883a 	mov	r5,r23
  818240:	0809abc0 	call	809abc <__udivsi3>
  818244:	b009883a 	mov	r4,r22
  818248:	b80b883a 	mov	r5,r23
  81824c:	1023883a 	mov	r17,r2
  818250:	0809ac40 	call	809ac4 <__umodsi3>
  818254:	1004943a 	slli	r2,r2,16
  818258:	9808d43a 	srli	r4,r19,16
  81825c:	8f2d383a 	mul	r22,r17,fp
  818260:	d9800317 	ldw	r6,12(sp)
  818264:	1106b03a 	or	r3,r2,r4
  818268:	1d80062e 	bgeu	r3,r22,818284 <__divdf3+0x3b4>
  81826c:	1c07883a 	add	r3,r3,r16
  818270:	88bfffc4 	addi	r2,r17,-1
  818274:	1c00dc36 	bltu	r3,r16,8185e8 <__divdf3+0x718>
  818278:	1d80db2e 	bgeu	r3,r22,8185e8 <__divdf3+0x718>
  81827c:	8c7fff84 	addi	r17,r17,-2
  818280:	1c07883a 	add	r3,r3,r16
  818284:	1dadc83a 	sub	r22,r3,r22
  818288:	b009883a 	mov	r4,r22
  81828c:	b80b883a 	mov	r5,r23
  818290:	d9800315 	stw	r6,12(sp)
  818294:	0809abc0 	call	809abc <__udivsi3>
  818298:	b009883a 	mov	r4,r22
  81829c:	b80b883a 	mov	r5,r23
  8182a0:	d8800015 	stw	r2,0(sp)
  8182a4:	0809ac40 	call	809ac4 <__umodsi3>
  8182a8:	da400017 	ldw	r9,0(sp)
  8182ac:	1004943a 	slli	r2,r2,16
  8182b0:	9cffffcc 	andi	r19,r19,65535
  8182b4:	4f07383a 	mul	r3,r9,fp
  8182b8:	14c8b03a 	or	r4,r2,r19
  8182bc:	d9800317 	ldw	r6,12(sp)
  8182c0:	20c0062e 	bgeu	r4,r3,8182dc <__divdf3+0x40c>
  8182c4:	2409883a 	add	r4,r4,r16
  8182c8:	48bfffc4 	addi	r2,r9,-1
  8182cc:	2400c436 	bltu	r4,r16,8185e0 <__divdf3+0x710>
  8182d0:	20c0c32e 	bgeu	r4,r3,8185e0 <__divdf3+0x710>
  8182d4:	4a7fff84 	addi	r9,r9,-2
  8182d8:	2409883a 	add	r4,r4,r16
  8182dc:	8822943a 	slli	r17,r17,16
  8182e0:	a80ed43a 	srli	r7,r21,16
  8182e4:	aa3fffcc 	andi	r8,r21,65535
  8182e8:	4c62b03a 	or	r17,r9,r17
  8182ec:	8816d43a 	srli	r11,r17,16
  8182f0:	897fffcc 	andi	r5,r17,65535
  8182f4:	2a15383a 	mul	r10,r5,r8
  8182f8:	5a19383a 	mul	r12,r11,r8
  8182fc:	29cb383a 	mul	r5,r5,r7
  818300:	5012d43a 	srli	r9,r10,16
  818304:	20c5c83a 	sub	r2,r4,r3
  818308:	614b883a 	add	r5,r12,r5
  81830c:	2a4b883a 	add	r5,r5,r9
  818310:	59c7383a 	mul	r3,r11,r7
  818314:	2b00022e 	bgeu	r5,r12,818320 <__divdf3+0x450>
  818318:	01000074 	movhi	r4,1
  81831c:	1907883a 	add	r3,r3,r4
  818320:	2808d43a 	srli	r4,r5,16
  818324:	280a943a 	slli	r5,r5,16
  818328:	54ffffcc 	andi	r19,r10,65535
  81832c:	1907883a 	add	r3,r3,r4
  818330:	2ccb883a 	add	r5,r5,r19
  818334:	10c09336 	bltu	r2,r3,818584 <__divdf3+0x6b4>
  818338:	10c0ad26 	beq	r2,r3,8185f0 <__divdf3+0x720>
  81833c:	10c7c83a 	sub	r3,r2,r3
  818340:	3167c83a 	sub	r19,r6,r5
  818344:	34ed803a 	cmpltu	r22,r6,r19
  818348:	1dadc83a 	sub	r22,r3,r22
  81834c:	b400b226 	beq	r22,r16,818618 <__divdf3+0x748>
  818350:	b009883a 	mov	r4,r22
  818354:	b80b883a 	mov	r5,r23
  818358:	d9c00115 	stw	r7,4(sp)
  81835c:	da000215 	stw	r8,8(sp)
  818360:	0809abc0 	call	809abc <__udivsi3>
  818364:	b009883a 	mov	r4,r22
  818368:	b80b883a 	mov	r5,r23
  81836c:	d8800315 	stw	r2,12(sp)
  818370:	0809ac40 	call	809ac4 <__umodsi3>
  818374:	d9800317 	ldw	r6,12(sp)
  818378:	1004943a 	slli	r2,r2,16
  81837c:	9808d43a 	srli	r4,r19,16
  818380:	372d383a 	mul	r22,r6,fp
  818384:	d9c00117 	ldw	r7,4(sp)
  818388:	1106b03a 	or	r3,r2,r4
  81838c:	da000217 	ldw	r8,8(sp)
  818390:	1d80062e 	bgeu	r3,r22,8183ac <__divdf3+0x4dc>
  818394:	1c07883a 	add	r3,r3,r16
  818398:	30bfffc4 	addi	r2,r6,-1
  81839c:	1c00a036 	bltu	r3,r16,818620 <__divdf3+0x750>
  8183a0:	1d809f2e 	bgeu	r3,r22,818620 <__divdf3+0x750>
  8183a4:	31bfff84 	addi	r6,r6,-2
  8183a8:	1c07883a 	add	r3,r3,r16
  8183ac:	1dadc83a 	sub	r22,r3,r22
  8183b0:	b009883a 	mov	r4,r22
  8183b4:	b80b883a 	mov	r5,r23
  8183b8:	d9800315 	stw	r6,12(sp)
  8183bc:	d9c00115 	stw	r7,4(sp)
  8183c0:	da000215 	stw	r8,8(sp)
  8183c4:	0809abc0 	call	809abc <__udivsi3>
  8183c8:	b009883a 	mov	r4,r22
  8183cc:	b80b883a 	mov	r5,r23
  8183d0:	d8800015 	stw	r2,0(sp)
  8183d4:	0809ac40 	call	809ac4 <__umodsi3>
  8183d8:	da400017 	ldw	r9,0(sp)
  8183dc:	1004943a 	slli	r2,r2,16
  8183e0:	993fffcc 	andi	r4,r19,65535
  8183e4:	4f39383a 	mul	fp,r9,fp
  8183e8:	1106b03a 	or	r3,r2,r4
  8183ec:	d9800317 	ldw	r6,12(sp)
  8183f0:	d9c00117 	ldw	r7,4(sp)
  8183f4:	da000217 	ldw	r8,8(sp)
  8183f8:	1f00062e 	bgeu	r3,fp,818414 <__divdf3+0x544>
  8183fc:	1c07883a 	add	r3,r3,r16
  818400:	48bfffc4 	addi	r2,r9,-1
  818404:	1c008836 	bltu	r3,r16,818628 <__divdf3+0x758>
  818408:	1f00872e 	bgeu	r3,fp,818628 <__divdf3+0x758>
  81840c:	4a7fff84 	addi	r9,r9,-2
  818410:	1c07883a 	add	r3,r3,r16
  818414:	3008943a 	slli	r4,r6,16
  818418:	1f07c83a 	sub	r3,r3,fp
  81841c:	4926b03a 	or	r19,r9,r4
  818420:	993fffcc 	andi	r4,r19,65535
  818424:	980cd43a 	srli	r6,r19,16
  818428:	220b383a 	mul	r5,r4,r8
  81842c:	21c5383a 	mul	r2,r4,r7
  818430:	3211383a 	mul	r8,r6,r8
  818434:	2808d43a 	srli	r4,r5,16
  818438:	31cf383a 	mul	r7,r6,r7
  81843c:	4085883a 	add	r2,r8,r2
  818440:	1105883a 	add	r2,r2,r4
  818444:	1200022e 	bgeu	r2,r8,818450 <__divdf3+0x580>
  818448:	01000074 	movhi	r4,1
  81844c:	390f883a 	add	r7,r7,r4
  818450:	1008d43a 	srli	r4,r2,16
  818454:	1004943a 	slli	r2,r2,16
  818458:	297fffcc 	andi	r5,r5,65535
  81845c:	390f883a 	add	r7,r7,r4
  818460:	1145883a 	add	r2,r2,r5
  818464:	19c06536 	bltu	r3,r7,8185fc <__divdf3+0x72c>
  818468:	19c09f26 	beq	r3,r7,8186e8 <__divdf3+0x818>
  81846c:	9cc00054 	ori	r19,r19,1
  818470:	a100ffc4 	addi	r4,r20,1023
  818474:	013f500e 	bge	zero,r4,8181b8 <__alt_data_end+0xff8181b8>
  818478:	988001cc 	andi	r2,r19,7
  81847c:	10000726 	beq	r2,zero,81849c <__divdf3+0x5cc>
  818480:	98c003cc 	andi	r3,r19,15
  818484:	00800104 	movi	r2,4
  818488:	18800426 	beq	r3,r2,81849c <__divdf3+0x5cc>
  81848c:	9885883a 	add	r2,r19,r2
  818490:	14e1803a 	cmpltu	r16,r2,r19
  818494:	8c23883a 	add	r17,r17,r16
  818498:	1027883a 	mov	r19,r2
  81849c:	8880402c 	andhi	r2,r17,256
  8184a0:	10000426 	beq	r2,zero,8184b4 <__divdf3+0x5e4>
  8184a4:	00bfc034 	movhi	r2,65280
  8184a8:	10bfffc4 	addi	r2,r2,-1
  8184ac:	a1010004 	addi	r4,r20,1024
  8184b0:	88a2703a 	and	r17,r17,r2
  8184b4:	0081ff84 	movi	r2,2046
  8184b8:	113edf16 	blt	r2,r4,818038 <__alt_data_end+0xff818038>
  8184bc:	9826d0fa 	srli	r19,r19,3
  8184c0:	8804977a 	slli	r2,r17,29
  8184c4:	8820927a 	slli	r16,r17,9
  8184c8:	2101ffcc 	andi	r4,r4,2047
  8184cc:	14e6b03a 	or	r19,r2,r19
  8184d0:	800ad33a 	srli	r5,r16,12
  8184d4:	9180004c 	andi	r6,r18,1
  8184d8:	003edb06 	br	818048 <__alt_data_end+0xff818048>
  8184dc:	008000c4 	movi	r2,3
  8184e0:	4080a826 	beq	r8,r2,818784 <__divdf3+0x8b4>
  8184e4:	00800044 	movi	r2,1
  8184e8:	4080551e 	bne	r8,r2,818640 <__divdf3+0x770>
  8184ec:	e00d883a 	mov	r6,fp
  8184f0:	0009883a 	mov	r4,zero
  8184f4:	000b883a 	mov	r5,zero
  8184f8:	0027883a 	mov	r19,zero
  8184fc:	003ed206 	br	818048 <__alt_data_end+0xff818048>
  818500:	00800434 	movhi	r2,16
  818504:	89400234 	orhi	r5,r17,8
  818508:	10bfffc4 	addi	r2,r2,-1
  81850c:	b00d883a 	mov	r6,r22
  818510:	288a703a 	and	r5,r5,r2
  818514:	003f2606 	br	8181b0 <__alt_data_end+0xff8181b0>
  818518:	d9800315 	stw	r6,12(sp)
  81851c:	d9c00115 	stw	r7,4(sp)
  818520:	0819bd00 	call	819bd0 <__clzsi2>
  818524:	10c00804 	addi	r3,r2,32
  818528:	010009c4 	movi	r4,39
  81852c:	d9800317 	ldw	r6,12(sp)
  818530:	d9c00117 	ldw	r7,4(sp)
  818534:	20fee30e 	bge	r4,r3,8180c4 <__alt_data_end+0xff8180c4>
  818538:	117ffe04 	addi	r5,r2,-8
  81853c:	9162983a 	sll	r17,r18,r5
  818540:	0027883a 	mov	r19,zero
  818544:	003ee606 	br	8180e0 <__alt_data_end+0xff8180e0>
  818548:	3009883a 	mov	r4,r6
  81854c:	d9800315 	stw	r6,12(sp)
  818550:	da000215 	stw	r8,8(sp)
  818554:	da400015 	stw	r9,0(sp)
  818558:	0819bd00 	call	819bd0 <__clzsi2>
  81855c:	10c00804 	addi	r3,r2,32
  818560:	010009c4 	movi	r4,39
  818564:	d9800317 	ldw	r6,12(sp)
  818568:	da000217 	ldw	r8,8(sp)
  81856c:	da400017 	ldw	r9,0(sp)
  818570:	20fef20e 	bge	r4,r3,81813c <__alt_data_end+0xff81813c>
  818574:	10bffe04 	addi	r2,r2,-8
  818578:	a8a0983a 	sll	r16,r21,r2
  81857c:	002b883a 	mov	r21,zero
  818580:	003ef506 	br	818158 <__alt_data_end+0xff818158>
  818584:	354d883a 	add	r6,r6,r21
  818588:	3549803a 	cmpltu	r4,r6,r21
  81858c:	2409883a 	add	r4,r4,r16
  818590:	2089883a 	add	r4,r4,r2
  818594:	88bfffc4 	addi	r2,r17,-1
  818598:	81000c2e 	bgeu	r16,r4,8185cc <__divdf3+0x6fc>
  81859c:	20c04436 	bltu	r4,r3,8186b0 <__divdf3+0x7e0>
  8185a0:	19006f26 	beq	r3,r4,818760 <__divdf3+0x890>
  8185a4:	20c7c83a 	sub	r3,r4,r3
  8185a8:	1023883a 	mov	r17,r2
  8185ac:	003f6406 	br	818340 <__alt_data_end+0xff818340>
  8185b0:	9d7f1736 	bltu	r19,r21,818210 <__alt_data_end+0xff818210>
  8185b4:	9806d07a 	srli	r3,r19,1
  8185b8:	880497fa 	slli	r2,r17,31
  8185bc:	980c97fa 	slli	r6,r19,31
  8185c0:	882cd07a 	srli	r22,r17,1
  8185c4:	18a6b03a 	or	r19,r3,r2
  8185c8:	003f1406 	br	81821c <__alt_data_end+0xff81821c>
  8185cc:	243ff51e 	bne	r4,r16,8185a4 <__alt_data_end+0xff8185a4>
  8185d0:	357ff22e 	bgeu	r6,r21,81859c <__alt_data_end+0xff81859c>
  8185d4:	80c7c83a 	sub	r3,r16,r3
  8185d8:	1023883a 	mov	r17,r2
  8185dc:	003f5806 	br	818340 <__alt_data_end+0xff818340>
  8185e0:	1013883a 	mov	r9,r2
  8185e4:	003f3d06 	br	8182dc <__alt_data_end+0xff8182dc>
  8185e8:	1023883a 	mov	r17,r2
  8185ec:	003f2506 	br	818284 <__alt_data_end+0xff818284>
  8185f0:	317fe436 	bltu	r6,r5,818584 <__alt_data_end+0xff818584>
  8185f4:	0007883a 	mov	r3,zero
  8185f8:	003f5106 	br	818340 <__alt_data_end+0xff818340>
  8185fc:	1c07883a 	add	r3,r3,r16
  818600:	993fffc4 	addi	r4,r19,-1
  818604:	1c000a2e 	bgeu	r3,r16,818630 <__divdf3+0x760>
  818608:	2027883a 	mov	r19,r4
  81860c:	19ff971e 	bne	r3,r7,81846c <__alt_data_end+0xff81846c>
  818610:	a8bf961e 	bne	r21,r2,81846c <__alt_data_end+0xff81846c>
  818614:	003f9606 	br	818470 <__alt_data_end+0xff818470>
  818618:	04ffffc4 	movi	r19,-1
  81861c:	003f9406 	br	818470 <__alt_data_end+0xff818470>
  818620:	100d883a 	mov	r6,r2
  818624:	003f6106 	br	8183ac <__alt_data_end+0xff8183ac>
  818628:	1013883a 	mov	r9,r2
  81862c:	003f7906 	br	818414 <__alt_data_end+0xff818414>
  818630:	19c02636 	bltu	r3,r7,8186cc <__divdf3+0x7fc>
  818634:	38c04d26 	beq	r7,r3,81876c <__divdf3+0x89c>
  818638:	2027883a 	mov	r19,r4
  81863c:	003f8b06 	br	81846c <__alt_data_end+0xff81846c>
  818640:	e025883a 	mov	r18,fp
  818644:	003f8a06 	br	818470 <__alt_data_end+0xff818470>
  818648:	008007c4 	movi	r2,31
  81864c:	14002a16 	blt	r2,r16,8186f8 <__divdf3+0x828>
  818650:	a5010784 	addi	r20,r20,1054
  818654:	8d04983a 	sll	r2,r17,r20
  818658:	9c06d83a 	srl	r3,r19,r16
  81865c:	9d28983a 	sll	r20,r19,r20
  818660:	8c20d83a 	srl	r16,r17,r16
  818664:	1886b03a 	or	r3,r3,r2
  818668:	a004c03a 	cmpne	r2,r20,zero
  81866c:	1884b03a 	or	r2,r3,r2
  818670:	10c001cc 	andi	r3,r2,7
  818674:	18000726 	beq	r3,zero,818694 <__divdf3+0x7c4>
  818678:	110003cc 	andi	r4,r2,15
  81867c:	00c00104 	movi	r3,4
  818680:	20c00426 	beq	r4,r3,818694 <__divdf3+0x7c4>
  818684:	10c00104 	addi	r3,r2,4
  818688:	1885803a 	cmpltu	r2,r3,r2
  81868c:	80a1883a 	add	r16,r16,r2
  818690:	1805883a 	mov	r2,r3
  818694:	80c0202c 	andhi	r3,r16,128
  818698:	18002d26 	beq	r3,zero,818750 <__divdf3+0x880>
  81869c:	9180004c 	andi	r6,r18,1
  8186a0:	01000044 	movi	r4,1
  8186a4:	000b883a 	mov	r5,zero
  8186a8:	0027883a 	mov	r19,zero
  8186ac:	003e6606 	br	818048 <__alt_data_end+0xff818048>
  8186b0:	354d883a 	add	r6,r6,r21
  8186b4:	356d803a 	cmpltu	r22,r6,r21
  8186b8:	b42d883a 	add	r22,r22,r16
  8186bc:	b12d883a 	add	r22,r22,r4
  8186c0:	8c7fff84 	addi	r17,r17,-2
  8186c4:	b0c7c83a 	sub	r3,r22,r3
  8186c8:	003f1d06 	br	818340 <__alt_data_end+0xff818340>
  8186cc:	ad4b883a 	add	r5,r21,r21
  8186d0:	2d6b803a 	cmpltu	r21,r5,r21
  8186d4:	ac2b883a 	add	r21,r21,r16
  8186d8:	1d47883a 	add	r3,r3,r21
  8186dc:	993fff84 	addi	r4,r19,-2
  8186e0:	282b883a 	mov	r21,r5
  8186e4:	003fc806 	br	818608 <__alt_data_end+0xff818608>
  8186e8:	103fc41e 	bne	r2,zero,8185fc <__alt_data_end+0xff8185fc>
  8186ec:	002b883a 	mov	r21,zero
  8186f0:	a8bf5e1e 	bne	r21,r2,81846c <__alt_data_end+0xff81846c>
  8186f4:	003f5e06 	br	818470 <__alt_data_end+0xff818470>
  8186f8:	00bef884 	movi	r2,-1054
  8186fc:	1505c83a 	sub	r2,r2,r20
  818700:	00c00804 	movi	r3,32
  818704:	8884d83a 	srl	r2,r17,r2
  818708:	80c01c26 	beq	r16,r3,81877c <__divdf3+0x8ac>
  81870c:	a0c10f84 	addi	r3,r20,1086
  818710:	88c6983a 	sll	r3,r17,r3
  818714:	1cc6b03a 	or	r3,r3,r19
  818718:	1806c03a 	cmpne	r3,r3,zero
  81871c:	1884b03a 	or	r2,r3,r2
  818720:	140001cc 	andi	r16,r2,7
  818724:	8000061e 	bne	r16,zero,818740 <__divdf3+0x870>
  818728:	000b883a 	mov	r5,zero
  81872c:	1004d0fa 	srli	r2,r2,3
  818730:	9180004c 	andi	r6,r18,1
  818734:	0009883a 	mov	r4,zero
  818738:	1426b03a 	or	r19,r2,r16
  81873c:	003e4206 	br	818048 <__alt_data_end+0xff818048>
  818740:	110003cc 	andi	r4,r2,15
  818744:	00c00104 	movi	r3,4
  818748:	0021883a 	mov	r16,zero
  81874c:	20ffcd1e 	bne	r4,r3,818684 <__alt_data_end+0xff818684>
  818750:	800a927a 	slli	r5,r16,9
  818754:	8020977a 	slli	r16,r16,29
  818758:	280ad33a 	srli	r5,r5,12
  81875c:	003ff306 	br	81872c <__alt_data_end+0xff81872c>
  818760:	317fd336 	bltu	r6,r5,8186b0 <__alt_data_end+0xff8186b0>
  818764:	1023883a 	mov	r17,r2
  818768:	003fa206 	br	8185f4 <__alt_data_end+0xff8185f4>
  81876c:	a8bfd736 	bltu	r21,r2,8186cc <__alt_data_end+0xff8186cc>
  818770:	2027883a 	mov	r19,r4
  818774:	a8bf3d1e 	bne	r21,r2,81846c <__alt_data_end+0xff81846c>
  818778:	003f3d06 	br	818470 <__alt_data_end+0xff818470>
  81877c:	0007883a 	mov	r3,zero
  818780:	003fe406 	br	818714 <__alt_data_end+0xff818714>
  818784:	00800434 	movhi	r2,16
  818788:	89400234 	orhi	r5,r17,8
  81878c:	10bfffc4 	addi	r2,r2,-1
  818790:	e00d883a 	mov	r6,fp
  818794:	288a703a 	and	r5,r5,r2
  818798:	003e8506 	br	8181b0 <__alt_data_end+0xff8181b0>

0081879c <__eqdf2>:
  81879c:	2804d53a 	srli	r2,r5,20
  8187a0:	3806d53a 	srli	r3,r7,20
  8187a4:	02000434 	movhi	r8,16
  8187a8:	423fffc4 	addi	r8,r8,-1
  8187ac:	1081ffcc 	andi	r2,r2,2047
  8187b0:	0241ffc4 	movi	r9,2047
  8187b4:	2a14703a 	and	r10,r5,r8
  8187b8:	18c1ffcc 	andi	r3,r3,2047
  8187bc:	3a10703a 	and	r8,r7,r8
  8187c0:	280ad7fa 	srli	r5,r5,31
  8187c4:	380ed7fa 	srli	r7,r7,31
  8187c8:	12400f26 	beq	r2,r9,818808 <__eqdf2+0x6c>
  8187cc:	0241ffc4 	movi	r9,2047
  8187d0:	1a400326 	beq	r3,r9,8187e0 <__eqdf2+0x44>
  8187d4:	10c00526 	beq	r2,r3,8187ec <__eqdf2+0x50>
  8187d8:	00800044 	movi	r2,1
  8187dc:	f800283a 	ret
  8187e0:	4192b03a 	or	r9,r8,r6
  8187e4:	483ffc1e 	bne	r9,zero,8187d8 <__alt_data_end+0xff8187d8>
  8187e8:	10fffb1e 	bne	r2,r3,8187d8 <__alt_data_end+0xff8187d8>
  8187ec:	523ffa1e 	bne	r10,r8,8187d8 <__alt_data_end+0xff8187d8>
  8187f0:	21bff91e 	bne	r4,r6,8187d8 <__alt_data_end+0xff8187d8>
  8187f4:	29c00826 	beq	r5,r7,818818 <__eqdf2+0x7c>
  8187f8:	103ff71e 	bne	r2,zero,8187d8 <__alt_data_end+0xff8187d8>
  8187fc:	5104b03a 	or	r2,r10,r4
  818800:	1004c03a 	cmpne	r2,r2,zero
  818804:	f800283a 	ret
  818808:	5112b03a 	or	r9,r10,r4
  81880c:	483fef26 	beq	r9,zero,8187cc <__alt_data_end+0xff8187cc>
  818810:	00800044 	movi	r2,1
  818814:	f800283a 	ret
  818818:	0005883a 	mov	r2,zero
  81881c:	f800283a 	ret

00818820 <__gedf2>:
  818820:	2804d53a 	srli	r2,r5,20
  818824:	3806d53a 	srli	r3,r7,20
  818828:	02000434 	movhi	r8,16
  81882c:	423fffc4 	addi	r8,r8,-1
  818830:	0241ffc4 	movi	r9,2047
  818834:	1081ffcc 	andi	r2,r2,2047
  818838:	2a14703a 	and	r10,r5,r8
  81883c:	1a46703a 	and	r3,r3,r9
  818840:	3a10703a 	and	r8,r7,r8
  818844:	280ad7fa 	srli	r5,r5,31
  818848:	380ed7fa 	srli	r7,r7,31
  81884c:	12400b26 	beq	r2,r9,81887c <__gedf2+0x5c>
  818850:	1a401626 	beq	r3,r9,8188ac <__gedf2+0x8c>
  818854:	10000c1e 	bne	r2,zero,818888 <__gedf2+0x68>
  818858:	5112b03a 	or	r9,r10,r4
  81885c:	4813003a 	cmpeq	r9,r9,zero
  818860:	4817883a 	mov	r11,r9
  818864:	18000c1e 	bne	r3,zero,818898 <__gedf2+0x78>
  818868:	4198b03a 	or	r12,r8,r6
  81886c:	60000a1e 	bne	r12,zero,818898 <__gedf2+0x78>
  818870:	48001326 	beq	r9,zero,8188c0 <__gedf2+0xa0>
  818874:	0005883a 	mov	r2,zero
  818878:	f800283a 	ret
  81887c:	5112b03a 	or	r9,r10,r4
  818880:	4800191e 	bne	r9,zero,8188e8 <__gedf2+0xc8>
  818884:	18800926 	beq	r3,r2,8188ac <__gedf2+0x8c>
  818888:	18000b1e 	bne	r3,zero,8188b8 <__gedf2+0x98>
  81888c:	4192b03a 	or	r9,r8,r6
  818890:	0017883a 	mov	r11,zero
  818894:	48000a26 	beq	r9,zero,8188c0 <__gedf2+0xa0>
  818898:	39c03fcc 	andi	r7,r7,255
  81889c:	58000726 	beq	r11,zero,8188bc <__gedf2+0x9c>
  8188a0:	3800081e 	bne	r7,zero,8188c4 <__gedf2+0xa4>
  8188a4:	00bfffc4 	movi	r2,-1
  8188a8:	f800283a 	ret
  8188ac:	4192b03a 	or	r9,r8,r6
  8188b0:	48000d1e 	bne	r9,zero,8188e8 <__gedf2+0xc8>
  8188b4:	103fe826 	beq	r2,zero,818858 <__alt_data_end+0xff818858>
  8188b8:	39c03fcc 	andi	r7,r7,255
  8188bc:	29c00326 	beq	r5,r7,8188cc <__gedf2+0xac>
  8188c0:	283ff81e 	bne	r5,zero,8188a4 <__alt_data_end+0xff8188a4>
  8188c4:	00800044 	movi	r2,1
  8188c8:	f800283a 	ret
  8188cc:	18bffc16 	blt	r3,r2,8188c0 <__alt_data_end+0xff8188c0>
  8188d0:	10c00316 	blt	r2,r3,8188e0 <__gedf2+0xc0>
  8188d4:	42bffa36 	bltu	r8,r10,8188c0 <__alt_data_end+0xff8188c0>
  8188d8:	52000526 	beq	r10,r8,8188f0 <__gedf2+0xd0>
  8188dc:	523fe52e 	bgeu	r10,r8,818874 <__alt_data_end+0xff818874>
  8188e0:	283ff026 	beq	r5,zero,8188a4 <__alt_data_end+0xff8188a4>
  8188e4:	003ff706 	br	8188c4 <__alt_data_end+0xff8188c4>
  8188e8:	00bfff84 	movi	r2,-2
  8188ec:	f800283a 	ret
  8188f0:	313ff336 	bltu	r6,r4,8188c0 <__alt_data_end+0xff8188c0>
  8188f4:	21bfdf2e 	bgeu	r4,r6,818874 <__alt_data_end+0xff818874>
  8188f8:	283fea26 	beq	r5,zero,8188a4 <__alt_data_end+0xff8188a4>
  8188fc:	003ff106 	br	8188c4 <__alt_data_end+0xff8188c4>

00818900 <__ledf2>:
  818900:	2804d53a 	srli	r2,r5,20
  818904:	3810d53a 	srli	r8,r7,20
  818908:	00c00434 	movhi	r3,16
  81890c:	18ffffc4 	addi	r3,r3,-1
  818910:	0241ffc4 	movi	r9,2047
  818914:	1081ffcc 	andi	r2,r2,2047
  818918:	28d4703a 	and	r10,r5,r3
  81891c:	4250703a 	and	r8,r8,r9
  818920:	38c6703a 	and	r3,r7,r3
  818924:	280ad7fa 	srli	r5,r5,31
  818928:	380ed7fa 	srli	r7,r7,31
  81892c:	12400b26 	beq	r2,r9,81895c <__ledf2+0x5c>
  818930:	42401926 	beq	r8,r9,818998 <__ledf2+0x98>
  818934:	10000c1e 	bne	r2,zero,818968 <__ledf2+0x68>
  818938:	5112b03a 	or	r9,r10,r4
  81893c:	4813003a 	cmpeq	r9,r9,zero
  818940:	4817883a 	mov	r11,r9
  818944:	40000f26 	beq	r8,zero,818984 <__ledf2+0x84>
  818948:	39c03fcc 	andi	r7,r7,255
  81894c:	58001826 	beq	r11,zero,8189b0 <__ledf2+0xb0>
  818950:	38000a1e 	bne	r7,zero,81897c <__ledf2+0x7c>
  818954:	00bfffc4 	movi	r2,-1
  818958:	f800283a 	ret
  81895c:	5112b03a 	or	r9,r10,r4
  818960:	48000f1e 	bne	r9,zero,8189a0 <__ledf2+0xa0>
  818964:	40800c26 	beq	r8,r2,818998 <__ledf2+0x98>
  818968:	4000101e 	bne	r8,zero,8189ac <__ledf2+0xac>
  81896c:	1992b03a 	or	r9,r3,r6
  818970:	0017883a 	mov	r11,zero
  818974:	483ff41e 	bne	r9,zero,818948 <__alt_data_end+0xff818948>
  818978:	283ff61e 	bne	r5,zero,818954 <__alt_data_end+0xff818954>
  81897c:	00800044 	movi	r2,1
  818980:	f800283a 	ret
  818984:	1998b03a 	or	r12,r3,r6
  818988:	603fef1e 	bne	r12,zero,818948 <__alt_data_end+0xff818948>
  81898c:	483ffa26 	beq	r9,zero,818978 <__alt_data_end+0xff818978>
  818990:	0005883a 	mov	r2,zero
  818994:	f800283a 	ret
  818998:	1992b03a 	or	r9,r3,r6
  81899c:	48000226 	beq	r9,zero,8189a8 <__ledf2+0xa8>
  8189a0:	00800084 	movi	r2,2
  8189a4:	f800283a 	ret
  8189a8:	103fe326 	beq	r2,zero,818938 <__alt_data_end+0xff818938>
  8189ac:	39c03fcc 	andi	r7,r7,255
  8189b0:	29fff11e 	bne	r5,r7,818978 <__alt_data_end+0xff818978>
  8189b4:	40bff016 	blt	r8,r2,818978 <__alt_data_end+0xff818978>
  8189b8:	12000316 	blt	r2,r8,8189c8 <__ledf2+0xc8>
  8189bc:	1abfee36 	bltu	r3,r10,818978 <__alt_data_end+0xff818978>
  8189c0:	50c00326 	beq	r10,r3,8189d0 <__ledf2+0xd0>
  8189c4:	50fff22e 	bgeu	r10,r3,818990 <__alt_data_end+0xff818990>
  8189c8:	283fe226 	beq	r5,zero,818954 <__alt_data_end+0xff818954>
  8189cc:	003feb06 	br	81897c <__alt_data_end+0xff81897c>
  8189d0:	313fe936 	bltu	r6,r4,818978 <__alt_data_end+0xff818978>
  8189d4:	21bfee2e 	bgeu	r4,r6,818990 <__alt_data_end+0xff818990>
  8189d8:	283fde26 	beq	r5,zero,818954 <__alt_data_end+0xff818954>
  8189dc:	003fe706 	br	81897c <__alt_data_end+0xff81897c>

008189e0 <__muldf3>:
  8189e0:	defff204 	addi	sp,sp,-56
  8189e4:	2804d53a 	srli	r2,r5,20
  8189e8:	dd800a15 	stw	r22,40(sp)
  8189ec:	282cd7fa 	srli	r22,r5,31
  8189f0:	dc000415 	stw	r16,16(sp)
  8189f4:	04000434 	movhi	r16,16
  8189f8:	df000c15 	stw	fp,48(sp)
  8189fc:	dd000815 	stw	r20,32(sp)
  818a00:	dcc00715 	stw	r19,28(sp)
  818a04:	dc800615 	stw	r18,24(sp)
  818a08:	dc400515 	stw	r17,20(sp)
  818a0c:	843fffc4 	addi	r16,r16,-1
  818a10:	dfc00d15 	stw	ra,52(sp)
  818a14:	ddc00b15 	stw	r23,44(sp)
  818a18:	dd400915 	stw	r21,36(sp)
  818a1c:	1501ffcc 	andi	r20,r2,2047
  818a20:	2023883a 	mov	r17,r4
  818a24:	2025883a 	mov	r18,r4
  818a28:	2c20703a 	and	r16,r5,r16
  818a2c:	b027883a 	mov	r19,r22
  818a30:	b7003fcc 	andi	fp,r22,255
  818a34:	a0005926 	beq	r20,zero,818b9c <__muldf3+0x1bc>
  818a38:	0081ffc4 	movi	r2,2047
  818a3c:	a0803426 	beq	r20,r2,818b10 <__muldf3+0x130>
  818a40:	84000434 	orhi	r16,r16,16
  818a44:	2004d77a 	srli	r2,r4,29
  818a48:	802090fa 	slli	r16,r16,3
  818a4c:	202490fa 	slli	r18,r4,3
  818a50:	a53f0044 	addi	r20,r20,-1023
  818a54:	80a0b03a 	or	r16,r16,r2
  818a58:	002b883a 	mov	r21,zero
  818a5c:	0015883a 	mov	r10,zero
  818a60:	3812d53a 	srli	r9,r7,20
  818a64:	3806d7fa 	srli	r3,r7,31
  818a68:	02000434 	movhi	r8,16
  818a6c:	423fffc4 	addi	r8,r8,-1
  818a70:	4941ffcc 	andi	r5,r9,2047
  818a74:	302f883a 	mov	r23,r6
  818a78:	3a22703a 	and	r17,r7,r8
  818a7c:	1ac03fcc 	andi	r11,r3,255
  818a80:	28006226 	beq	r5,zero,818c0c <__muldf3+0x22c>
  818a84:	0081ffc4 	movi	r2,2047
  818a88:	28805a26 	beq	r5,r2,818bf4 <__muldf3+0x214>
  818a8c:	8a000434 	orhi	r8,r17,16
  818a90:	3004d77a 	srli	r2,r6,29
  818a94:	401090fa 	slli	r8,r8,3
  818a98:	302e90fa 	slli	r23,r6,3
  818a9c:	297f0044 	addi	r5,r5,-1023
  818aa0:	40a2b03a 	or	r17,r8,r2
  818aa4:	0013883a 	mov	r9,zero
  818aa8:	4d4cb03a 	or	r6,r9,r21
  818aac:	300c90ba 	slli	r6,r6,2
  818ab0:	020020b4 	movhi	r8,130
  818ab4:	4222b404 	addi	r8,r8,-30000
  818ab8:	320d883a 	add	r6,r6,r8
  818abc:	31800017 	ldw	r6,0(r6)
  818ac0:	a14b883a 	add	r5,r20,r5
  818ac4:	1dacf03a 	xor	r22,r3,r22
  818ac8:	2b000044 	addi	r12,r5,1
  818acc:	3000683a 	jmp	r6
  818ad0:	00818d0c 	andi	r2,zero,1588
  818ad4:	00818cf8 	rdprs	r2,zero,1587
  818ad8:	00818cf8 	rdprs	r2,zero,1587
  818adc:	00818ce4 	muli	r2,zero,1587
  818ae0:	00818b2c 	andhi	r2,zero,1580
  818ae4:	00818b2c 	andhi	r2,zero,1580
  818ae8:	00818ccc 	andi	r2,zero,1587
  818aec:	00818ce4 	muli	r2,zero,1587
  818af0:	00818b2c 	andhi	r2,zero,1580
  818af4:	00818ccc 	andi	r2,zero,1587
  818af8:	00818b2c 	andhi	r2,zero,1580
  818afc:	00818ce4 	muli	r2,zero,1587
  818b00:	00818b30 	cmpltui	r2,zero,1580
  818b04:	00818b30 	cmpltui	r2,zero,1580
  818b08:	00818b30 	cmpltui	r2,zero,1580
  818b0c:	00818f08 	cmpgei	r2,zero,1596
  818b10:	8104b03a 	or	r2,r16,r4
  818b14:	10006a1e 	bne	r2,zero,818cc0 <__muldf3+0x2e0>
  818b18:	05400204 	movi	r21,8
  818b1c:	0021883a 	mov	r16,zero
  818b20:	0025883a 	mov	r18,zero
  818b24:	02800084 	movi	r10,2
  818b28:	003fcd06 	br	818a60 <__alt_data_end+0xff818a60>
  818b2c:	b039883a 	mov	fp,r22
  818b30:	00800084 	movi	r2,2
  818b34:	50804e1e 	bne	r10,r2,818c70 <__muldf3+0x290>
  818b38:	e4c0004c 	andi	r19,fp,1
  818b3c:	0101ffc4 	movi	r4,2047
  818b40:	0021883a 	mov	r16,zero
  818b44:	0025883a 	mov	r18,zero
  818b48:	2008953a 	slli	r4,r4,20
  818b4c:	98c03fcc 	andi	r3,r19,255
  818b50:	01400434 	movhi	r5,16
  818b54:	297fffc4 	addi	r5,r5,-1
  818b58:	180697fa 	slli	r3,r3,31
  818b5c:	8160703a 	and	r16,r16,r5
  818b60:	8120b03a 	or	r16,r16,r4
  818b64:	80c6b03a 	or	r3,r16,r3
  818b68:	9005883a 	mov	r2,r18
  818b6c:	dfc00d17 	ldw	ra,52(sp)
  818b70:	df000c17 	ldw	fp,48(sp)
  818b74:	ddc00b17 	ldw	r23,44(sp)
  818b78:	dd800a17 	ldw	r22,40(sp)
  818b7c:	dd400917 	ldw	r21,36(sp)
  818b80:	dd000817 	ldw	r20,32(sp)
  818b84:	dcc00717 	ldw	r19,28(sp)
  818b88:	dc800617 	ldw	r18,24(sp)
  818b8c:	dc400517 	ldw	r17,20(sp)
  818b90:	dc000417 	ldw	r16,16(sp)
  818b94:	dec00e04 	addi	sp,sp,56
  818b98:	f800283a 	ret
  818b9c:	8104b03a 	or	r2,r16,r4
  818ba0:	10004226 	beq	r2,zero,818cac <__muldf3+0x2cc>
  818ba4:	8000f926 	beq	r16,zero,818f8c <__muldf3+0x5ac>
  818ba8:	8009883a 	mov	r4,r16
  818bac:	d9800315 	stw	r6,12(sp)
  818bb0:	d9c00015 	stw	r7,0(sp)
  818bb4:	0819bd00 	call	819bd0 <__clzsi2>
  818bb8:	d9800317 	ldw	r6,12(sp)
  818bbc:	d9c00017 	ldw	r7,0(sp)
  818bc0:	1007883a 	mov	r3,r2
  818bc4:	01000a04 	movi	r4,40
  818bc8:	18bffe04 	addi	r2,r3,-8
  818bcc:	20c9c83a 	sub	r4,r4,r3
  818bd0:	80a0983a 	sll	r16,r16,r2
  818bd4:	8908d83a 	srl	r4,r17,r4
  818bd8:	88a4983a 	sll	r18,r17,r2
  818bdc:	2420b03a 	or	r16,r4,r16
  818be0:	017f0344 	movi	r5,-1011
  818be4:	28e9c83a 	sub	r20,r5,r3
  818be8:	002b883a 	mov	r21,zero
  818bec:	0015883a 	mov	r10,zero
  818bf0:	003f9b06 	br	818a60 <__alt_data_end+0xff818a60>
  818bf4:	8984b03a 	or	r2,r17,r6
  818bf8:	10002a1e 	bne	r2,zero,818ca4 <__muldf3+0x2c4>
  818bfc:	0023883a 	mov	r17,zero
  818c00:	002f883a 	mov	r23,zero
  818c04:	02400084 	movi	r9,2
  818c08:	003fa706 	br	818aa8 <__alt_data_end+0xff818aa8>
  818c0c:	8984b03a 	or	r2,r17,r6
  818c10:	10002026 	beq	r2,zero,818c94 <__muldf3+0x2b4>
  818c14:	8800cc26 	beq	r17,zero,818f48 <__muldf3+0x568>
  818c18:	8809883a 	mov	r4,r17
  818c1c:	d8c00215 	stw	r3,8(sp)
  818c20:	d9800315 	stw	r6,12(sp)
  818c24:	da800015 	stw	r10,0(sp)
  818c28:	dac00115 	stw	r11,4(sp)
  818c2c:	0819bd00 	call	819bd0 <__clzsi2>
  818c30:	d8c00217 	ldw	r3,8(sp)
  818c34:	d9800317 	ldw	r6,12(sp)
  818c38:	da800017 	ldw	r10,0(sp)
  818c3c:	dac00117 	ldw	r11,4(sp)
  818c40:	1009883a 	mov	r4,r2
  818c44:	01400a04 	movi	r5,40
  818c48:	25fffe04 	addi	r23,r4,-8
  818c4c:	290bc83a 	sub	r5,r5,r4
  818c50:	8dd0983a 	sll	r8,r17,r23
  818c54:	314ad83a 	srl	r5,r6,r5
  818c58:	35ee983a 	sll	r23,r6,r23
  818c5c:	2a22b03a 	or	r17,r5,r8
  818c60:	017f0344 	movi	r5,-1011
  818c64:	290bc83a 	sub	r5,r5,r4
  818c68:	0013883a 	mov	r9,zero
  818c6c:	003f8e06 	br	818aa8 <__alt_data_end+0xff818aa8>
  818c70:	008000c4 	movi	r2,3
  818c74:	50811d26 	beq	r10,r2,8190ec <__muldf3+0x70c>
  818c78:	00800044 	movi	r2,1
  818c7c:	5080e01e 	bne	r10,r2,819000 <__muldf3+0x620>
  818c80:	e0a6703a 	and	r19,fp,r2
  818c84:	0009883a 	mov	r4,zero
  818c88:	0021883a 	mov	r16,zero
  818c8c:	0025883a 	mov	r18,zero
  818c90:	003fad06 	br	818b48 <__alt_data_end+0xff818b48>
  818c94:	0023883a 	mov	r17,zero
  818c98:	002f883a 	mov	r23,zero
  818c9c:	02400044 	movi	r9,1
  818ca0:	003f8106 	br	818aa8 <__alt_data_end+0xff818aa8>
  818ca4:	024000c4 	movi	r9,3
  818ca8:	003f7f06 	br	818aa8 <__alt_data_end+0xff818aa8>
  818cac:	05400104 	movi	r21,4
  818cb0:	0021883a 	mov	r16,zero
  818cb4:	0025883a 	mov	r18,zero
  818cb8:	02800044 	movi	r10,1
  818cbc:	003f6806 	br	818a60 <__alt_data_end+0xff818a60>
  818cc0:	05400304 	movi	r21,12
  818cc4:	028000c4 	movi	r10,3
  818cc8:	003f6506 	br	818a60 <__alt_data_end+0xff818a60>
  818ccc:	04000434 	movhi	r16,16
  818cd0:	0027883a 	mov	r19,zero
  818cd4:	843fffc4 	addi	r16,r16,-1
  818cd8:	04bfffc4 	movi	r18,-1
  818cdc:	0101ffc4 	movi	r4,2047
  818ce0:	003f9906 	br	818b48 <__alt_data_end+0xff818b48>
  818ce4:	8821883a 	mov	r16,r17
  818ce8:	b825883a 	mov	r18,r23
  818cec:	5839883a 	mov	fp,r11
  818cf0:	4815883a 	mov	r10,r9
  818cf4:	003f8e06 	br	818b30 <__alt_data_end+0xff818b30>
  818cf8:	8821883a 	mov	r16,r17
  818cfc:	b825883a 	mov	r18,r23
  818d00:	b039883a 	mov	fp,r22
  818d04:	4815883a 	mov	r10,r9
  818d08:	003f8906 	br	818b30 <__alt_data_end+0xff818b30>
  818d0c:	b80cd43a 	srli	r6,r23,16
  818d10:	9006d43a 	srli	r3,r18,16
  818d14:	90bfffcc 	andi	r2,r18,65535
  818d18:	bdffffcc 	andi	r23,r23,65535
  818d1c:	b891383a 	mul	r8,r23,r2
  818d20:	b8c9383a 	mul	r4,r23,r3
  818d24:	309b383a 	mul	r13,r6,r2
  818d28:	400ed43a 	srli	r7,r8,16
  818d2c:	30df383a 	mul	r15,r6,r3
  818d30:	235b883a 	add	r13,r4,r13
  818d34:	69db883a 	add	r13,r13,r7
  818d38:	6900022e 	bgeu	r13,r4,818d44 <__muldf3+0x364>
  818d3c:	01000074 	movhi	r4,1
  818d40:	791f883a 	add	r15,r15,r4
  818d44:	8828d43a 	srli	r20,r17,16
  818d48:	8c7fffcc 	andi	r17,r17,65535
  818d4c:	888f383a 	mul	r7,r17,r2
  818d50:	88d3383a 	mul	r9,r17,r3
  818d54:	a0a5383a 	mul	r18,r20,r2
  818d58:	3816d43a 	srli	r11,r7,16
  818d5c:	6814943a 	slli	r10,r13,16
  818d60:	4ca5883a 	add	r18,r9,r18
  818d64:	423fffcc 	andi	r8,r8,65535
  818d68:	92e5883a 	add	r18,r18,r11
  818d6c:	6808d43a 	srli	r4,r13,16
  818d70:	5215883a 	add	r10,r10,r8
  818d74:	a0c7383a 	mul	r3,r20,r3
  818d78:	9240022e 	bgeu	r18,r9,818d84 <__muldf3+0x3a4>
  818d7c:	00800074 	movhi	r2,1
  818d80:	1887883a 	add	r3,r3,r2
  818d84:	802ad43a 	srli	r21,r16,16
  818d88:	80bfffcc 	andi	r2,r16,65535
  818d8c:	b893383a 	mul	r9,r23,r2
  818d90:	3091383a 	mul	r8,r6,r2
  818d94:	bd6f383a 	mul	r23,r23,r21
  818d98:	9026943a 	slli	r19,r18,16
  818d9c:	481ad43a 	srli	r13,r9,16
  818da0:	9024d43a 	srli	r18,r18,16
  818da4:	39ffffcc 	andi	r7,r7,65535
  818da8:	ba11883a 	add	r8,r23,r8
  818dac:	99e7883a 	add	r19,r19,r7
  818db0:	4351883a 	add	r8,r8,r13
  818db4:	1c97883a 	add	r11,r3,r18
  818db8:	354d383a 	mul	r6,r6,r21
  818dbc:	9925883a 	add	r18,r19,r4
  818dc0:	45c0022e 	bgeu	r8,r23,818dcc <__muldf3+0x3ec>
  818dc4:	00c00074 	movhi	r3,1
  818dc8:	30cd883a 	add	r6,r6,r3
  818dcc:	8889383a 	mul	r4,r17,r2
  818dd0:	8d63383a 	mul	r17,r17,r21
  818dd4:	a085383a 	mul	r2,r20,r2
  818dd8:	200ed43a 	srli	r7,r4,16
  818ddc:	401cd43a 	srli	r14,r8,16
  818de0:	401a943a 	slli	r13,r8,16
  818de4:	8885883a 	add	r2,r17,r2
  818de8:	4a3fffcc 	andi	r8,r9,65535
  818dec:	11c5883a 	add	r2,r2,r7
  818df0:	339d883a 	add	r14,r6,r14
  818df4:	6a11883a 	add	r8,r13,r8
  818df8:	a561383a 	mul	r16,r20,r21
  818dfc:	1440022e 	bgeu	r2,r17,818e08 <__muldf3+0x428>
  818e00:	00c00074 	movhi	r3,1
  818e04:	80e1883a 	add	r16,r16,r3
  818e08:	1006943a 	slli	r3,r2,16
  818e0c:	213fffcc 	andi	r4,r4,65535
  818e10:	93db883a 	add	r13,r18,r15
  818e14:	1909883a 	add	r4,r3,r4
  818e18:	22c7883a 	add	r3,r4,r11
  818e1c:	6cd3803a 	cmpltu	r9,r13,r19
  818e20:	6a09883a 	add	r4,r13,r8
  818e24:	1a5b883a 	add	r13,r3,r9
  818e28:	2211803a 	cmpltu	r8,r4,r8
  818e2c:	734d883a 	add	r6,r14,r13
  818e30:	100ed43a 	srli	r7,r2,16
  818e34:	6a53803a 	cmpltu	r9,r13,r9
  818e38:	3205883a 	add	r2,r6,r8
  818e3c:	1ac7803a 	cmpltu	r3,r3,r11
  818e40:	1211803a 	cmpltu	r8,r2,r8
  818e44:	48c6b03a 	or	r3,r9,r3
  818e48:	338d803a 	cmpltu	r6,r6,r14
  818e4c:	19c7883a 	add	r3,r3,r7
  818e50:	418cb03a 	or	r6,r8,r6
  818e54:	1987883a 	add	r3,r3,r6
  818e58:	2024927a 	slli	r18,r4,9
  818e5c:	1c07883a 	add	r3,r3,r16
  818e60:	1806927a 	slli	r3,r3,9
  818e64:	1020d5fa 	srli	r16,r2,23
  818e68:	2008d5fa 	srli	r4,r4,23
  818e6c:	9294b03a 	or	r10,r18,r10
  818e70:	1004927a 	slli	r2,r2,9
  818e74:	5024c03a 	cmpne	r18,r10,zero
  818e78:	1c20b03a 	or	r16,r3,r16
  818e7c:	9108b03a 	or	r4,r18,r4
  818e80:	80c0402c 	andhi	r3,r16,256
  818e84:	20a4b03a 	or	r18,r4,r2
  818e88:	18000726 	beq	r3,zero,818ea8 <__muldf3+0x4c8>
  818e8c:	9006d07a 	srli	r3,r18,1
  818e90:	800897fa 	slli	r4,r16,31
  818e94:	9080004c 	andi	r2,r18,1
  818e98:	8020d07a 	srli	r16,r16,1
  818e9c:	10c4b03a 	or	r2,r2,r3
  818ea0:	1124b03a 	or	r18,r2,r4
  818ea4:	600b883a 	mov	r5,r12
  818ea8:	2900ffc4 	addi	r4,r5,1023
  818eac:	01004b0e 	bge	zero,r4,818fdc <__muldf3+0x5fc>
  818eb0:	908001cc 	andi	r2,r18,7
  818eb4:	10000726 	beq	r2,zero,818ed4 <__muldf3+0x4f4>
  818eb8:	90c003cc 	andi	r3,r18,15
  818ebc:	00800104 	movi	r2,4
  818ec0:	18800426 	beq	r3,r2,818ed4 <__muldf3+0x4f4>
  818ec4:	9087883a 	add	r3,r18,r2
  818ec8:	1c85803a 	cmpltu	r2,r3,r18
  818ecc:	80a1883a 	add	r16,r16,r2
  818ed0:	1825883a 	mov	r18,r3
  818ed4:	8080402c 	andhi	r2,r16,256
  818ed8:	10000426 	beq	r2,zero,818eec <__muldf3+0x50c>
  818edc:	00bfc034 	movhi	r2,65280
  818ee0:	10bfffc4 	addi	r2,r2,-1
  818ee4:	29010004 	addi	r4,r5,1024
  818ee8:	80a0703a 	and	r16,r16,r2
  818eec:	0081ff84 	movi	r2,2046
  818ef0:	1100320e 	bge	r2,r4,818fbc <__muldf3+0x5dc>
  818ef4:	b4c0004c 	andi	r19,r22,1
  818ef8:	0101ffc4 	movi	r4,2047
  818efc:	0021883a 	mov	r16,zero
  818f00:	0025883a 	mov	r18,zero
  818f04:	003f1006 	br	818b48 <__alt_data_end+0xff818b48>
  818f08:	8080022c 	andhi	r2,r16,8
  818f0c:	10000926 	beq	r2,zero,818f34 <__muldf3+0x554>
  818f10:	8880022c 	andhi	r2,r17,8
  818f14:	1000071e 	bne	r2,zero,818f34 <__muldf3+0x554>
  818f18:	00800434 	movhi	r2,16
  818f1c:	8c000234 	orhi	r16,r17,8
  818f20:	10bfffc4 	addi	r2,r2,-1
  818f24:	1827883a 	mov	r19,r3
  818f28:	80a0703a 	and	r16,r16,r2
  818f2c:	b825883a 	mov	r18,r23
  818f30:	003f6a06 	br	818cdc <__alt_data_end+0xff818cdc>
  818f34:	00800434 	movhi	r2,16
  818f38:	84000234 	orhi	r16,r16,8
  818f3c:	10bfffc4 	addi	r2,r2,-1
  818f40:	80a0703a 	and	r16,r16,r2
  818f44:	003f6506 	br	818cdc <__alt_data_end+0xff818cdc>
  818f48:	3009883a 	mov	r4,r6
  818f4c:	d8c00215 	stw	r3,8(sp)
  818f50:	d9800315 	stw	r6,12(sp)
  818f54:	da800015 	stw	r10,0(sp)
  818f58:	dac00115 	stw	r11,4(sp)
  818f5c:	0819bd00 	call	819bd0 <__clzsi2>
  818f60:	11000804 	addi	r4,r2,32
  818f64:	014009c4 	movi	r5,39
  818f68:	d8c00217 	ldw	r3,8(sp)
  818f6c:	d9800317 	ldw	r6,12(sp)
  818f70:	da800017 	ldw	r10,0(sp)
  818f74:	dac00117 	ldw	r11,4(sp)
  818f78:	293f320e 	bge	r5,r4,818c44 <__alt_data_end+0xff818c44>
  818f7c:	10bffe04 	addi	r2,r2,-8
  818f80:	b8a2983a 	sll	r17,r23,r2
  818f84:	002f883a 	mov	r23,zero
  818f88:	003f3506 	br	818c60 <__alt_data_end+0xff818c60>
  818f8c:	d9800315 	stw	r6,12(sp)
  818f90:	d9c00015 	stw	r7,0(sp)
  818f94:	0819bd00 	call	819bd0 <__clzsi2>
  818f98:	10c00804 	addi	r3,r2,32
  818f9c:	010009c4 	movi	r4,39
  818fa0:	d9800317 	ldw	r6,12(sp)
  818fa4:	d9c00017 	ldw	r7,0(sp)
  818fa8:	20ff060e 	bge	r4,r3,818bc4 <__alt_data_end+0xff818bc4>
  818fac:	10bffe04 	addi	r2,r2,-8
  818fb0:	88a0983a 	sll	r16,r17,r2
  818fb4:	0025883a 	mov	r18,zero
  818fb8:	003f0906 	br	818be0 <__alt_data_end+0xff818be0>
  818fbc:	9004d0fa 	srli	r2,r18,3
  818fc0:	8024977a 	slli	r18,r16,29
  818fc4:	8020927a 	slli	r16,r16,9
  818fc8:	2101ffcc 	andi	r4,r4,2047
  818fcc:	90a4b03a 	or	r18,r18,r2
  818fd0:	8020d33a 	srli	r16,r16,12
  818fd4:	b4c0004c 	andi	r19,r22,1
  818fd8:	003edb06 	br	818b48 <__alt_data_end+0xff818b48>
  818fdc:	00ff0084 	movi	r3,-1022
  818fe0:	1947c83a 	sub	r3,r3,r5
  818fe4:	00800e04 	movi	r2,56
  818fe8:	10c0080e 	bge	r2,r3,81900c <__muldf3+0x62c>
  818fec:	b4c0004c 	andi	r19,r22,1
  818ff0:	0009883a 	mov	r4,zero
  818ff4:	0021883a 	mov	r16,zero
  818ff8:	0025883a 	mov	r18,zero
  818ffc:	003ed206 	br	818b48 <__alt_data_end+0xff818b48>
  819000:	600b883a 	mov	r5,r12
  819004:	e02d883a 	mov	r22,fp
  819008:	003fa706 	br	818ea8 <__alt_data_end+0xff818ea8>
  81900c:	008007c4 	movi	r2,31
  819010:	10c01816 	blt	r2,r3,819074 <__muldf3+0x694>
  819014:	29410784 	addi	r5,r5,1054
  819018:	8144983a 	sll	r2,r16,r5
  81901c:	90c8d83a 	srl	r4,r18,r3
  819020:	914a983a 	sll	r5,r18,r5
  819024:	80c6d83a 	srl	r3,r16,r3
  819028:	2088b03a 	or	r4,r4,r2
  81902c:	2804c03a 	cmpne	r2,r5,zero
  819030:	2084b03a 	or	r2,r4,r2
  819034:	110001cc 	andi	r4,r2,7
  819038:	20000726 	beq	r4,zero,819058 <__muldf3+0x678>
  81903c:	114003cc 	andi	r5,r2,15
  819040:	01000104 	movi	r4,4
  819044:	29000426 	beq	r5,r4,819058 <__muldf3+0x678>
  819048:	11000104 	addi	r4,r2,4
  81904c:	2085803a 	cmpltu	r2,r4,r2
  819050:	1887883a 	add	r3,r3,r2
  819054:	2005883a 	mov	r2,r4
  819058:	1900202c 	andhi	r4,r3,128
  81905c:	20001826 	beq	r4,zero,8190c0 <__muldf3+0x6e0>
  819060:	b4c0004c 	andi	r19,r22,1
  819064:	01000044 	movi	r4,1
  819068:	0021883a 	mov	r16,zero
  81906c:	0025883a 	mov	r18,zero
  819070:	003eb506 	br	818b48 <__alt_data_end+0xff818b48>
  819074:	00bef884 	movi	r2,-1054
  819078:	1145c83a 	sub	r2,r2,r5
  81907c:	8088d83a 	srl	r4,r16,r2
  819080:	00800804 	movi	r2,32
  819084:	18801726 	beq	r3,r2,8190e4 <__muldf3+0x704>
  819088:	28810f84 	addi	r2,r5,1086
  81908c:	8084983a 	sll	r2,r16,r2
  819090:	1484b03a 	or	r2,r2,r18
  819094:	1004c03a 	cmpne	r2,r2,zero
  819098:	1104b03a 	or	r2,r2,r4
  81909c:	10c001cc 	andi	r3,r2,7
  8190a0:	18000b1e 	bne	r3,zero,8190d0 <__muldf3+0x6f0>
  8190a4:	0021883a 	mov	r16,zero
  8190a8:	1004d0fa 	srli	r2,r2,3
  8190ac:	b4c0004c 	andi	r19,r22,1
  8190b0:	0009883a 	mov	r4,zero
  8190b4:	10e4b03a 	or	r18,r2,r3
  8190b8:	003ea306 	br	818b48 <__alt_data_end+0xff818b48>
  8190bc:	0007883a 	mov	r3,zero
  8190c0:	1820927a 	slli	r16,r3,9
  8190c4:	1806977a 	slli	r3,r3,29
  8190c8:	8020d33a 	srli	r16,r16,12
  8190cc:	003ff606 	br	8190a8 <__alt_data_end+0xff8190a8>
  8190d0:	110003cc 	andi	r4,r2,15
  8190d4:	00c00104 	movi	r3,4
  8190d8:	20fff826 	beq	r4,r3,8190bc <__alt_data_end+0xff8190bc>
  8190dc:	0007883a 	mov	r3,zero
  8190e0:	003fd906 	br	819048 <__alt_data_end+0xff819048>
  8190e4:	0005883a 	mov	r2,zero
  8190e8:	003fe906 	br	819090 <__alt_data_end+0xff819090>
  8190ec:	00800434 	movhi	r2,16
  8190f0:	84000234 	orhi	r16,r16,8
  8190f4:	10bfffc4 	addi	r2,r2,-1
  8190f8:	e4c0004c 	andi	r19,fp,1
  8190fc:	80a0703a 	and	r16,r16,r2
  819100:	003ef606 	br	818cdc <__alt_data_end+0xff818cdc>

00819104 <__subdf3>:
  819104:	00c00434 	movhi	r3,16
  819108:	18ffffc4 	addi	r3,r3,-1
  81910c:	defffb04 	addi	sp,sp,-20
  819110:	28d2703a 	and	r9,r5,r3
  819114:	3814d53a 	srli	r10,r7,20
  819118:	38c6703a 	and	r3,r7,r3
  81911c:	3004d77a 	srli	r2,r6,29
  819120:	dc800215 	stw	r18,8(sp)
  819124:	dc000015 	stw	r16,0(sp)
  819128:	2824d7fa 	srli	r18,r5,31
  81912c:	2820d53a 	srli	r16,r5,20
  819130:	481290fa 	slli	r9,r9,3
  819134:	200ad77a 	srli	r5,r4,29
  819138:	180690fa 	slli	r3,r3,3
  81913c:	dc400115 	stw	r17,4(sp)
  819140:	dfc00415 	stw	ra,16(sp)
  819144:	202290fa 	slli	r17,r4,3
  819148:	dcc00315 	stw	r19,12(sp)
  81914c:	5281ffcc 	andi	r10,r10,2047
  819150:	0101ffc4 	movi	r4,2047
  819154:	9011883a 	mov	r8,r18
  819158:	8401ffcc 	andi	r16,r16,2047
  81915c:	94803fcc 	andi	r18,r18,255
  819160:	494ab03a 	or	r5,r9,r5
  819164:	380ed7fa 	srli	r7,r7,31
  819168:	1886b03a 	or	r3,r3,r2
  81916c:	300c90fa 	slli	r6,r6,3
  819170:	51009026 	beq	r10,r4,8193b4 <__subdf3+0x2b0>
  819174:	39c0005c 	xori	r7,r7,1
  819178:	8285c83a 	sub	r2,r16,r10
  81917c:	91c06f26 	beq	r18,r7,81933c <__subdf3+0x238>
  819180:	0080b10e 	bge	zero,r2,819448 <__subdf3+0x344>
  819184:	50002a1e 	bne	r10,zero,819230 <__subdf3+0x12c>
  819188:	1988b03a 	or	r4,r3,r6
  81918c:	2000941e 	bne	r4,zero,8193e0 <__subdf3+0x2dc>
  819190:	888001cc 	andi	r2,r17,7
  819194:	10005b26 	beq	r2,zero,819304 <__subdf3+0x200>
  819198:	88c003cc 	andi	r3,r17,15
  81919c:	00800104 	movi	r2,4
  8191a0:	18805826 	beq	r3,r2,819304 <__subdf3+0x200>
  8191a4:	88c00104 	addi	r3,r17,4
  8191a8:	1c63803a 	cmpltu	r17,r3,r17
  8191ac:	2c4b883a 	add	r5,r5,r17
  8191b0:	2880202c 	andhi	r2,r5,128
  8191b4:	9200004c 	andi	r8,r18,1
  8191b8:	1823883a 	mov	r17,r3
  8191bc:	10005426 	beq	r2,zero,819310 <__subdf3+0x20c>
  8191c0:	84000044 	addi	r16,r16,1
  8191c4:	0081ffc4 	movi	r2,2047
  8191c8:	8080bf26 	beq	r16,r2,8194c8 <__subdf3+0x3c4>
  8191cc:	013fe034 	movhi	r4,65408
  8191d0:	213fffc4 	addi	r4,r4,-1
  8191d4:	290a703a 	and	r5,r5,r4
  8191d8:	2804977a 	slli	r2,r5,29
  8191dc:	280a927a 	slli	r5,r5,9
  8191e0:	8822d0fa 	srli	r17,r17,3
  8191e4:	8401ffcc 	andi	r16,r16,2047
  8191e8:	2808d33a 	srli	r4,r5,12
  8191ec:	1444b03a 	or	r2,r2,r17
  8191f0:	8401ffcc 	andi	r16,r16,2047
  8191f4:	800a953a 	slli	r5,r16,20
  8191f8:	40c03fcc 	andi	r3,r8,255
  8191fc:	04000434 	movhi	r16,16
  819200:	180697fa 	slli	r3,r3,31
  819204:	843fffc4 	addi	r16,r16,-1
  819208:	2420703a 	and	r16,r4,r16
  81920c:	8160b03a 	or	r16,r16,r5
  819210:	80c6b03a 	or	r3,r16,r3
  819214:	dfc00417 	ldw	ra,16(sp)
  819218:	dcc00317 	ldw	r19,12(sp)
  81921c:	dc800217 	ldw	r18,8(sp)
  819220:	dc400117 	ldw	r17,4(sp)
  819224:	dc000017 	ldw	r16,0(sp)
  819228:	dec00504 	addi	sp,sp,20
  81922c:	f800283a 	ret
  819230:	0101ffc4 	movi	r4,2047
  819234:	813fd626 	beq	r16,r4,819190 <__alt_data_end+0xff819190>
  819238:	18c02034 	orhi	r3,r3,128
  81923c:	01000e04 	movi	r4,56
  819240:	2080a416 	blt	r4,r2,8194d4 <__subdf3+0x3d0>
  819244:	010007c4 	movi	r4,31
  819248:	2080c716 	blt	r4,r2,819568 <__subdf3+0x464>
  81924c:	01000804 	movi	r4,32
  819250:	2089c83a 	sub	r4,r4,r2
  819254:	1910983a 	sll	r8,r3,r4
  819258:	308ed83a 	srl	r7,r6,r2
  81925c:	3108983a 	sll	r4,r6,r4
  819260:	1884d83a 	srl	r2,r3,r2
  819264:	41ccb03a 	or	r6,r8,r7
  819268:	2008c03a 	cmpne	r4,r4,zero
  81926c:	310cb03a 	or	r6,r6,r4
  819270:	898dc83a 	sub	r6,r17,r6
  819274:	89a3803a 	cmpltu	r17,r17,r6
  819278:	288bc83a 	sub	r5,r5,r2
  81927c:	2c4bc83a 	sub	r5,r5,r17
  819280:	3023883a 	mov	r17,r6
  819284:	2880202c 	andhi	r2,r5,128
  819288:	10006b26 	beq	r2,zero,819438 <__subdf3+0x334>
  81928c:	04c02034 	movhi	r19,128
  819290:	9cffffc4 	addi	r19,r19,-1
  819294:	2ce6703a 	and	r19,r5,r19
  819298:	98007c26 	beq	r19,zero,81948c <__subdf3+0x388>
  81929c:	9809883a 	mov	r4,r19
  8192a0:	0819bd00 	call	819bd0 <__clzsi2>
  8192a4:	10fffe04 	addi	r3,r2,-8
  8192a8:	010007c4 	movi	r4,31
  8192ac:	20c07d16 	blt	r4,r3,8194a4 <__subdf3+0x3a0>
  8192b0:	01400a04 	movi	r5,40
  8192b4:	2885c83a 	sub	r2,r5,r2
  8192b8:	888ad83a 	srl	r5,r17,r2
  8192bc:	98e6983a 	sll	r19,r19,r3
  8192c0:	88e2983a 	sll	r17,r17,r3
  8192c4:	2ce6b03a 	or	r19,r5,r19
  8192c8:	1c007a16 	blt	r3,r16,8194b4 <__subdf3+0x3b0>
  8192cc:	1c21c83a 	sub	r16,r3,r16
  8192d0:	81400044 	addi	r5,r16,1
  8192d4:	00c007c4 	movi	r3,31
  8192d8:	19409616 	blt	r3,r5,819534 <__subdf3+0x430>
  8192dc:	1c21c83a 	sub	r16,r3,r16
  8192e0:	8c08983a 	sll	r4,r17,r16
  8192e4:	8946d83a 	srl	r3,r17,r5
  8192e8:	9c20983a 	sll	r16,r19,r16
  8192ec:	2008c03a 	cmpne	r4,r4,zero
  8192f0:	994ad83a 	srl	r5,r19,r5
  8192f4:	1c06b03a 	or	r3,r3,r16
  8192f8:	1922b03a 	or	r17,r3,r4
  8192fc:	0021883a 	mov	r16,zero
  819300:	003fa306 	br	819190 <__alt_data_end+0xff819190>
  819304:	2880202c 	andhi	r2,r5,128
  819308:	9200004c 	andi	r8,r18,1
  81930c:	103fac1e 	bne	r2,zero,8191c0 <__alt_data_end+0xff8191c0>
  819310:	2804977a 	slli	r2,r5,29
  819314:	8822d0fa 	srli	r17,r17,3
  819318:	00c1ffc4 	movi	r3,2047
  81931c:	280ad0fa 	srli	r5,r5,3
  819320:	1444b03a 	or	r2,r2,r17
  819324:	80c02726 	beq	r16,r3,8193c4 <__subdf3+0x2c0>
  819328:	01000434 	movhi	r4,16
  81932c:	213fffc4 	addi	r4,r4,-1
  819330:	80e0703a 	and	r16,r16,r3
  819334:	2908703a 	and	r4,r5,r4
  819338:	003fad06 	br	8191f0 <__alt_data_end+0xff8191f0>
  81933c:	0080690e 	bge	zero,r2,8194e4 <__subdf3+0x3e0>
  819340:	50002f26 	beq	r10,zero,819400 <__subdf3+0x2fc>
  819344:	0101ffc4 	movi	r4,2047
  819348:	813f9126 	beq	r16,r4,819190 <__alt_data_end+0xff819190>
  81934c:	18c02034 	orhi	r3,r3,128
  819350:	01000e04 	movi	r4,56
  819354:	2080b00e 	bge	r4,r2,819618 <__subdf3+0x514>
  819358:	198cb03a 	or	r6,r3,r6
  81935c:	300ec03a 	cmpne	r7,r6,zero
  819360:	0005883a 	mov	r2,zero
  819364:	3c4f883a 	add	r7,r7,r17
  819368:	3c63803a 	cmpltu	r17,r7,r17
  81936c:	114b883a 	add	r5,r2,r5
  819370:	2c4b883a 	add	r5,r5,r17
  819374:	3823883a 	mov	r17,r7
  819378:	2880202c 	andhi	r2,r5,128
  81937c:	10002e26 	beq	r2,zero,819438 <__subdf3+0x334>
  819380:	84000044 	addi	r16,r16,1
  819384:	0081ffc4 	movi	r2,2047
  819388:	8080de26 	beq	r16,r2,819704 <__subdf3+0x600>
  81938c:	00bfe034 	movhi	r2,65408
  819390:	10bfffc4 	addi	r2,r2,-1
  819394:	288a703a 	and	r5,r5,r2
  819398:	880cd07a 	srli	r6,r17,1
  81939c:	280897fa 	slli	r4,r5,31
  8193a0:	88c0004c 	andi	r3,r17,1
  8193a4:	30e2b03a 	or	r17,r6,r3
  8193a8:	280ad07a 	srli	r5,r5,1
  8193ac:	8922b03a 	or	r17,r17,r4
  8193b0:	003f7706 	br	819190 <__alt_data_end+0xff819190>
  8193b4:	1984b03a 	or	r2,r3,r6
  8193b8:	103f6e26 	beq	r2,zero,819174 <__alt_data_end+0xff819174>
  8193bc:	39c03fcc 	andi	r7,r7,255
  8193c0:	003f6d06 	br	819178 <__alt_data_end+0xff819178>
  8193c4:	1146b03a 	or	r3,r2,r5
  8193c8:	18003f26 	beq	r3,zero,8194c8 <__subdf3+0x3c4>
  8193cc:	00c00434 	movhi	r3,16
  8193d0:	29000234 	orhi	r4,r5,8
  8193d4:	18ffffc4 	addi	r3,r3,-1
  8193d8:	20c8703a 	and	r4,r4,r3
  8193dc:	003f8406 	br	8191f0 <__alt_data_end+0xff8191f0>
  8193e0:	10bfffc4 	addi	r2,r2,-1
  8193e4:	1000501e 	bne	r2,zero,819528 <__subdf3+0x424>
  8193e8:	898fc83a 	sub	r7,r17,r6
  8193ec:	89e3803a 	cmpltu	r17,r17,r7
  8193f0:	28cbc83a 	sub	r5,r5,r3
  8193f4:	2c4bc83a 	sub	r5,r5,r17
  8193f8:	3823883a 	mov	r17,r7
  8193fc:	003fa106 	br	819284 <__alt_data_end+0xff819284>
  819400:	1988b03a 	or	r4,r3,r6
  819404:	203f6226 	beq	r4,zero,819190 <__alt_data_end+0xff819190>
  819408:	10bfffc4 	addi	r2,r2,-1
  81940c:	10009b1e 	bne	r2,zero,81967c <__subdf3+0x578>
  819410:	344d883a 	add	r6,r6,r17
  819414:	3463803a 	cmpltu	r17,r6,r17
  819418:	194b883a 	add	r5,r3,r5
  81941c:	2c4b883a 	add	r5,r5,r17
  819420:	3023883a 	mov	r17,r6
  819424:	003fd406 	br	819378 <__alt_data_end+0xff819378>
  819428:	1106b03a 	or	r3,r2,r4
  81942c:	1800b426 	beq	r3,zero,819700 <__subdf3+0x5fc>
  819430:	100b883a 	mov	r5,r2
  819434:	2023883a 	mov	r17,r4
  819438:	888001cc 	andi	r2,r17,7
  81943c:	103f561e 	bne	r2,zero,819198 <__alt_data_end+0xff819198>
  819440:	9200004c 	andi	r8,r18,1
  819444:	003fb206 	br	819310 <__alt_data_end+0xff819310>
  819448:	1000531e 	bne	r2,zero,819598 <__subdf3+0x494>
  81944c:	80800044 	addi	r2,r16,1
  819450:	1081ffcc 	andi	r2,r2,2047
  819454:	01000044 	movi	r4,1
  819458:	2080a00e 	bge	r4,r2,8196dc <__subdf3+0x5d8>
  81945c:	8985c83a 	sub	r2,r17,r6
  819460:	8889803a 	cmpltu	r4,r17,r2
  819464:	28e7c83a 	sub	r19,r5,r3
  819468:	9927c83a 	sub	r19,r19,r4
  81946c:	9900202c 	andhi	r4,r19,128
  819470:	20006226 	beq	r4,zero,8195fc <__subdf3+0x4f8>
  819474:	3463c83a 	sub	r17,r6,r17
  819478:	194bc83a 	sub	r5,r3,r5
  81947c:	344d803a 	cmpltu	r6,r6,r17
  819480:	29a7c83a 	sub	r19,r5,r6
  819484:	3825883a 	mov	r18,r7
  819488:	983f841e 	bne	r19,zero,81929c <__alt_data_end+0xff81929c>
  81948c:	8809883a 	mov	r4,r17
  819490:	0819bd00 	call	819bd0 <__clzsi2>
  819494:	10800804 	addi	r2,r2,32
  819498:	10fffe04 	addi	r3,r2,-8
  81949c:	010007c4 	movi	r4,31
  8194a0:	20ff830e 	bge	r4,r3,8192b0 <__alt_data_end+0xff8192b0>
  8194a4:	14fff604 	addi	r19,r2,-40
  8194a8:	8ce6983a 	sll	r19,r17,r19
  8194ac:	0023883a 	mov	r17,zero
  8194b0:	1c3f860e 	bge	r3,r16,8192cc <__alt_data_end+0xff8192cc>
  8194b4:	017fe034 	movhi	r5,65408
  8194b8:	297fffc4 	addi	r5,r5,-1
  8194bc:	80e1c83a 	sub	r16,r16,r3
  8194c0:	994a703a 	and	r5,r19,r5
  8194c4:	003f3206 	br	819190 <__alt_data_end+0xff819190>
  8194c8:	0009883a 	mov	r4,zero
  8194cc:	0005883a 	mov	r2,zero
  8194d0:	003f4706 	br	8191f0 <__alt_data_end+0xff8191f0>
  8194d4:	198cb03a 	or	r6,r3,r6
  8194d8:	300cc03a 	cmpne	r6,r6,zero
  8194dc:	0005883a 	mov	r2,zero
  8194e0:	003f6306 	br	819270 <__alt_data_end+0xff819270>
  8194e4:	10009d1e 	bne	r2,zero,81975c <__subdf3+0x658>
  8194e8:	81c00044 	addi	r7,r16,1
  8194ec:	3881ffcc 	andi	r2,r7,2047
  8194f0:	02400044 	movi	r9,1
  8194f4:	4880680e 	bge	r9,r2,819698 <__subdf3+0x594>
  8194f8:	0081ffc4 	movi	r2,2047
  8194fc:	3880ae26 	beq	r7,r2,8197b8 <__subdf3+0x6b4>
  819500:	344d883a 	add	r6,r6,r17
  819504:	3463803a 	cmpltu	r17,r6,r17
  819508:	194b883a 	add	r5,r3,r5
  81950c:	2c4b883a 	add	r5,r5,r17
  819510:	282297fa 	slli	r17,r5,31
  819514:	300cd07a 	srli	r6,r6,1
  819518:	280ad07a 	srli	r5,r5,1
  81951c:	3821883a 	mov	r16,r7
  819520:	89a2b03a 	or	r17,r17,r6
  819524:	003f1a06 	br	819190 <__alt_data_end+0xff819190>
  819528:	0101ffc4 	movi	r4,2047
  81952c:	813f431e 	bne	r16,r4,81923c <__alt_data_end+0xff81923c>
  819530:	003f1706 	br	819190 <__alt_data_end+0xff819190>
  819534:	80bff844 	addi	r2,r16,-31
  819538:	00c00804 	movi	r3,32
  81953c:	9884d83a 	srl	r2,r19,r2
  819540:	28c05126 	beq	r5,r3,819688 <__subdf3+0x584>
  819544:	00c00fc4 	movi	r3,63
  819548:	1c21c83a 	sub	r16,r3,r16
  81954c:	9c26983a 	sll	r19,r19,r16
  819550:	9c62b03a 	or	r17,r19,r17
  819554:	8822c03a 	cmpne	r17,r17,zero
  819558:	88a2b03a 	or	r17,r17,r2
  81955c:	000b883a 	mov	r5,zero
  819560:	0021883a 	mov	r16,zero
  819564:	003fb406 	br	819438 <__alt_data_end+0xff819438>
  819568:	113ff804 	addi	r4,r2,-32
  81956c:	01c00804 	movi	r7,32
  819570:	1908d83a 	srl	r4,r3,r4
  819574:	11c04626 	beq	r2,r7,819690 <__subdf3+0x58c>
  819578:	01c01004 	movi	r7,64
  81957c:	3885c83a 	sub	r2,r7,r2
  819580:	1884983a 	sll	r2,r3,r2
  819584:	118cb03a 	or	r6,r2,r6
  819588:	300cc03a 	cmpne	r6,r6,zero
  81958c:	310cb03a 	or	r6,r6,r4
  819590:	0005883a 	mov	r2,zero
  819594:	003f3606 	br	819270 <__alt_data_end+0xff819270>
  819598:	80002b26 	beq	r16,zero,819648 <__subdf3+0x544>
  81959c:	0101ffc4 	movi	r4,2047
  8195a0:	51006926 	beq	r10,r4,819748 <__subdf3+0x644>
  8195a4:	0085c83a 	sub	r2,zero,r2
  8195a8:	29402034 	orhi	r5,r5,128
  8195ac:	01000e04 	movi	r4,56
  8195b0:	20807d16 	blt	r4,r2,8197a8 <__subdf3+0x6a4>
  8195b4:	010007c4 	movi	r4,31
  8195b8:	2080d916 	blt	r4,r2,819920 <__subdf3+0x81c>
  8195bc:	01000804 	movi	r4,32
  8195c0:	2089c83a 	sub	r4,r4,r2
  8195c4:	2912983a 	sll	r9,r5,r4
  8195c8:	8890d83a 	srl	r8,r17,r2
  8195cc:	8908983a 	sll	r4,r17,r4
  8195d0:	2884d83a 	srl	r2,r5,r2
  8195d4:	4a22b03a 	or	r17,r9,r8
  8195d8:	2008c03a 	cmpne	r4,r4,zero
  8195dc:	8922b03a 	or	r17,r17,r4
  8195e0:	3463c83a 	sub	r17,r6,r17
  8195e4:	1885c83a 	sub	r2,r3,r2
  8195e8:	344d803a 	cmpltu	r6,r6,r17
  8195ec:	118bc83a 	sub	r5,r2,r6
  8195f0:	5021883a 	mov	r16,r10
  8195f4:	3825883a 	mov	r18,r7
  8195f8:	003f2206 	br	819284 <__alt_data_end+0xff819284>
  8195fc:	9886b03a 	or	r3,r19,r2
  819600:	18001c1e 	bne	r3,zero,819674 <__subdf3+0x570>
  819604:	0011883a 	mov	r8,zero
  819608:	000b883a 	mov	r5,zero
  81960c:	0023883a 	mov	r17,zero
  819610:	0021883a 	mov	r16,zero
  819614:	003f3e06 	br	819310 <__alt_data_end+0xff819310>
  819618:	010007c4 	movi	r4,31
  81961c:	20803c16 	blt	r4,r2,819710 <__subdf3+0x60c>
  819620:	01000804 	movi	r4,32
  819624:	2089c83a 	sub	r4,r4,r2
  819628:	1912983a 	sll	r9,r3,r4
  81962c:	308ed83a 	srl	r7,r6,r2
  819630:	3108983a 	sll	r4,r6,r4
  819634:	1884d83a 	srl	r2,r3,r2
  819638:	49ceb03a 	or	r7,r9,r7
  81963c:	2008c03a 	cmpne	r4,r4,zero
  819640:	390eb03a 	or	r7,r7,r4
  819644:	003f4706 	br	819364 <__alt_data_end+0xff819364>
  819648:	2c48b03a 	or	r4,r5,r17
  81964c:	20003e26 	beq	r4,zero,819748 <__subdf3+0x644>
  819650:	0084303a 	nor	r2,zero,r2
  819654:	10003a1e 	bne	r2,zero,819740 <__subdf3+0x63c>
  819658:	3463c83a 	sub	r17,r6,r17
  81965c:	194bc83a 	sub	r5,r3,r5
  819660:	344d803a 	cmpltu	r6,r6,r17
  819664:	298bc83a 	sub	r5,r5,r6
  819668:	5021883a 	mov	r16,r10
  81966c:	3825883a 	mov	r18,r7
  819670:	003f0406 	br	819284 <__alt_data_end+0xff819284>
  819674:	1023883a 	mov	r17,r2
  819678:	003f0706 	br	819298 <__alt_data_end+0xff819298>
  81967c:	0101ffc4 	movi	r4,2047
  819680:	813f331e 	bne	r16,r4,819350 <__alt_data_end+0xff819350>
  819684:	003ec206 	br	819190 <__alt_data_end+0xff819190>
  819688:	0027883a 	mov	r19,zero
  81968c:	003fb006 	br	819550 <__alt_data_end+0xff819550>
  819690:	0005883a 	mov	r2,zero
  819694:	003fbb06 	br	819584 <__alt_data_end+0xff819584>
  819698:	2c44b03a 	or	r2,r5,r17
  81969c:	80008b1e 	bne	r16,zero,8198cc <__subdf3+0x7c8>
  8196a0:	1000b526 	beq	r2,zero,819978 <__subdf3+0x874>
  8196a4:	1984b03a 	or	r2,r3,r6
  8196a8:	103eb926 	beq	r2,zero,819190 <__alt_data_end+0xff819190>
  8196ac:	3449883a 	add	r4,r6,r17
  8196b0:	2463803a 	cmpltu	r17,r4,r17
  8196b4:	194b883a 	add	r5,r3,r5
  8196b8:	2c4b883a 	add	r5,r5,r17
  8196bc:	2880202c 	andhi	r2,r5,128
  8196c0:	2023883a 	mov	r17,r4
  8196c4:	103f5c26 	beq	r2,zero,819438 <__alt_data_end+0xff819438>
  8196c8:	00bfe034 	movhi	r2,65408
  8196cc:	10bfffc4 	addi	r2,r2,-1
  8196d0:	4821883a 	mov	r16,r9
  8196d4:	288a703a 	and	r5,r5,r2
  8196d8:	003ead06 	br	819190 <__alt_data_end+0xff819190>
  8196dc:	2c44b03a 	or	r2,r5,r17
  8196e0:	8000291e 	bne	r16,zero,819788 <__subdf3+0x684>
  8196e4:	10004f1e 	bne	r2,zero,819824 <__subdf3+0x720>
  8196e8:	1984b03a 	or	r2,r3,r6
  8196ec:	10000426 	beq	r2,zero,819700 <__subdf3+0x5fc>
  8196f0:	180b883a 	mov	r5,r3
  8196f4:	3023883a 	mov	r17,r6
  8196f8:	3825883a 	mov	r18,r7
  8196fc:	003ea406 	br	819190 <__alt_data_end+0xff819190>
  819700:	0011883a 	mov	r8,zero
  819704:	000b883a 	mov	r5,zero
  819708:	0023883a 	mov	r17,zero
  81970c:	003f0006 	br	819310 <__alt_data_end+0xff819310>
  819710:	11fff804 	addi	r7,r2,-32
  819714:	19c8d83a 	srl	r4,r3,r7
  819718:	01c00804 	movi	r7,32
  81971c:	11c07e26 	beq	r2,r7,819918 <__subdf3+0x814>
  819720:	01c01004 	movi	r7,64
  819724:	3885c83a 	sub	r2,r7,r2
  819728:	1884983a 	sll	r2,r3,r2
  81972c:	118cb03a 	or	r6,r2,r6
  819730:	300ec03a 	cmpne	r7,r6,zero
  819734:	390eb03a 	or	r7,r7,r4
  819738:	0005883a 	mov	r2,zero
  81973c:	003f0906 	br	819364 <__alt_data_end+0xff819364>
  819740:	0101ffc4 	movi	r4,2047
  819744:	513f991e 	bne	r10,r4,8195ac <__alt_data_end+0xff8195ac>
  819748:	180b883a 	mov	r5,r3
  81974c:	3023883a 	mov	r17,r6
  819750:	5021883a 	mov	r16,r10
  819754:	3825883a 	mov	r18,r7
  819758:	003e8d06 	br	819190 <__alt_data_end+0xff819190>
  81975c:	80001a1e 	bne	r16,zero,8197c8 <__subdf3+0x6c4>
  819760:	2c48b03a 	or	r4,r5,r17
  819764:	20005526 	beq	r4,zero,8198bc <__subdf3+0x7b8>
  819768:	0084303a 	nor	r2,zero,r2
  81976c:	1000511e 	bne	r2,zero,8198b4 <__subdf3+0x7b0>
  819770:	89a3883a 	add	r17,r17,r6
  819774:	194b883a 	add	r5,r3,r5
  819778:	898d803a 	cmpltu	r6,r17,r6
  81977c:	298b883a 	add	r5,r5,r6
  819780:	5021883a 	mov	r16,r10
  819784:	003efc06 	br	819378 <__alt_data_end+0xff819378>
  819788:	1000341e 	bne	r2,zero,81985c <__subdf3+0x758>
  81978c:	1984b03a 	or	r2,r3,r6
  819790:	10006f26 	beq	r2,zero,819950 <__subdf3+0x84c>
  819794:	180b883a 	mov	r5,r3
  819798:	3023883a 	mov	r17,r6
  81979c:	3825883a 	mov	r18,r7
  8197a0:	0401ffc4 	movi	r16,2047
  8197a4:	003e7a06 	br	819190 <__alt_data_end+0xff819190>
  8197a8:	2c62b03a 	or	r17,r5,r17
  8197ac:	8822c03a 	cmpne	r17,r17,zero
  8197b0:	0005883a 	mov	r2,zero
  8197b4:	003f8a06 	br	8195e0 <__alt_data_end+0xff8195e0>
  8197b8:	3821883a 	mov	r16,r7
  8197bc:	000b883a 	mov	r5,zero
  8197c0:	0023883a 	mov	r17,zero
  8197c4:	003ed206 	br	819310 <__alt_data_end+0xff819310>
  8197c8:	0101ffc4 	movi	r4,2047
  8197cc:	51003b26 	beq	r10,r4,8198bc <__subdf3+0x7b8>
  8197d0:	0085c83a 	sub	r2,zero,r2
  8197d4:	29402034 	orhi	r5,r5,128
  8197d8:	01000e04 	movi	r4,56
  8197dc:	20806216 	blt	r4,r2,819968 <__subdf3+0x864>
  8197e0:	010007c4 	movi	r4,31
  8197e4:	20806b16 	blt	r4,r2,819994 <__subdf3+0x890>
  8197e8:	01000804 	movi	r4,32
  8197ec:	2089c83a 	sub	r4,r4,r2
  8197f0:	2912983a 	sll	r9,r5,r4
  8197f4:	888ed83a 	srl	r7,r17,r2
  8197f8:	8908983a 	sll	r4,r17,r4
  8197fc:	2884d83a 	srl	r2,r5,r2
  819800:	49e2b03a 	or	r17,r9,r7
  819804:	2008c03a 	cmpne	r4,r4,zero
  819808:	8922b03a 	or	r17,r17,r4
  81980c:	89a3883a 	add	r17,r17,r6
  819810:	10c5883a 	add	r2,r2,r3
  819814:	898d803a 	cmpltu	r6,r17,r6
  819818:	118b883a 	add	r5,r2,r6
  81981c:	5021883a 	mov	r16,r10
  819820:	003ed506 	br	819378 <__alt_data_end+0xff819378>
  819824:	1984b03a 	or	r2,r3,r6
  819828:	103e5926 	beq	r2,zero,819190 <__alt_data_end+0xff819190>
  81982c:	8989c83a 	sub	r4,r17,r6
  819830:	8911803a 	cmpltu	r8,r17,r4
  819834:	28c5c83a 	sub	r2,r5,r3
  819838:	1205c83a 	sub	r2,r2,r8
  81983c:	1200202c 	andhi	r8,r2,128
  819840:	403ef926 	beq	r8,zero,819428 <__alt_data_end+0xff819428>
  819844:	3463c83a 	sub	r17,r6,r17
  819848:	194bc83a 	sub	r5,r3,r5
  81984c:	344d803a 	cmpltu	r6,r6,r17
  819850:	298bc83a 	sub	r5,r5,r6
  819854:	3825883a 	mov	r18,r7
  819858:	003e4d06 	br	819190 <__alt_data_end+0xff819190>
  81985c:	1984b03a 	or	r2,r3,r6
  819860:	10002b26 	beq	r2,zero,819910 <__subdf3+0x80c>
  819864:	2808d0fa 	srli	r4,r5,3
  819868:	8822d0fa 	srli	r17,r17,3
  81986c:	280a977a 	slli	r5,r5,29
  819870:	2080022c 	andhi	r2,r4,8
  819874:	2c62b03a 	or	r17,r5,r17
  819878:	10000826 	beq	r2,zero,81989c <__subdf3+0x798>
  81987c:	1810d0fa 	srli	r8,r3,3
  819880:	4080022c 	andhi	r2,r8,8
  819884:	1000051e 	bne	r2,zero,81989c <__subdf3+0x798>
  819888:	300cd0fa 	srli	r6,r6,3
  81988c:	1804977a 	slli	r2,r3,29
  819890:	4009883a 	mov	r4,r8
  819894:	3825883a 	mov	r18,r7
  819898:	11a2b03a 	or	r17,r2,r6
  81989c:	880ad77a 	srli	r5,r17,29
  8198a0:	200890fa 	slli	r4,r4,3
  8198a4:	882290fa 	slli	r17,r17,3
  8198a8:	0401ffc4 	movi	r16,2047
  8198ac:	290ab03a 	or	r5,r5,r4
  8198b0:	003e3706 	br	819190 <__alt_data_end+0xff819190>
  8198b4:	0101ffc4 	movi	r4,2047
  8198b8:	513fc71e 	bne	r10,r4,8197d8 <__alt_data_end+0xff8197d8>
  8198bc:	180b883a 	mov	r5,r3
  8198c0:	3023883a 	mov	r17,r6
  8198c4:	5021883a 	mov	r16,r10
  8198c8:	003e3106 	br	819190 <__alt_data_end+0xff819190>
  8198cc:	10002d26 	beq	r2,zero,819984 <__subdf3+0x880>
  8198d0:	1984b03a 	or	r2,r3,r6
  8198d4:	10000e26 	beq	r2,zero,819910 <__subdf3+0x80c>
  8198d8:	2808d0fa 	srli	r4,r5,3
  8198dc:	8822d0fa 	srli	r17,r17,3
  8198e0:	280a977a 	slli	r5,r5,29
  8198e4:	2080022c 	andhi	r2,r4,8
  8198e8:	2c62b03a 	or	r17,r5,r17
  8198ec:	103feb26 	beq	r2,zero,81989c <__alt_data_end+0xff81989c>
  8198f0:	180ed0fa 	srli	r7,r3,3
  8198f4:	3880022c 	andhi	r2,r7,8
  8198f8:	103fe81e 	bne	r2,zero,81989c <__alt_data_end+0xff81989c>
  8198fc:	300cd0fa 	srli	r6,r6,3
  819900:	1804977a 	slli	r2,r3,29
  819904:	3809883a 	mov	r4,r7
  819908:	11a2b03a 	or	r17,r2,r6
  81990c:	003fe306 	br	81989c <__alt_data_end+0xff81989c>
  819910:	0401ffc4 	movi	r16,2047
  819914:	003e1e06 	br	819190 <__alt_data_end+0xff819190>
  819918:	0005883a 	mov	r2,zero
  81991c:	003f8306 	br	81972c <__alt_data_end+0xff81972c>
  819920:	113ff804 	addi	r4,r2,-32
  819924:	02000804 	movi	r8,32
  819928:	2908d83a 	srl	r4,r5,r4
  81992c:	12002526 	beq	r2,r8,8199c4 <__subdf3+0x8c0>
  819930:	02001004 	movi	r8,64
  819934:	4085c83a 	sub	r2,r8,r2
  819938:	288a983a 	sll	r5,r5,r2
  81993c:	2c62b03a 	or	r17,r5,r17
  819940:	8822c03a 	cmpne	r17,r17,zero
  819944:	8922b03a 	or	r17,r17,r4
  819948:	0005883a 	mov	r2,zero
  81994c:	003f2406 	br	8195e0 <__alt_data_end+0xff8195e0>
  819950:	01402034 	movhi	r5,128
  819954:	0011883a 	mov	r8,zero
  819958:	297fffc4 	addi	r5,r5,-1
  81995c:	047ffe04 	movi	r17,-8
  819960:	0401ffc4 	movi	r16,2047
  819964:	003e6a06 	br	819310 <__alt_data_end+0xff819310>
  819968:	2c62b03a 	or	r17,r5,r17
  81996c:	8822c03a 	cmpne	r17,r17,zero
  819970:	0005883a 	mov	r2,zero
  819974:	003fa506 	br	81980c <__alt_data_end+0xff81980c>
  819978:	180b883a 	mov	r5,r3
  81997c:	3023883a 	mov	r17,r6
  819980:	003e0306 	br	819190 <__alt_data_end+0xff819190>
  819984:	180b883a 	mov	r5,r3
  819988:	3023883a 	mov	r17,r6
  81998c:	0401ffc4 	movi	r16,2047
  819990:	003dff06 	br	819190 <__alt_data_end+0xff819190>
  819994:	113ff804 	addi	r4,r2,-32
  819998:	01c00804 	movi	r7,32
  81999c:	2908d83a 	srl	r4,r5,r4
  8199a0:	11c00a26 	beq	r2,r7,8199cc <__subdf3+0x8c8>
  8199a4:	01c01004 	movi	r7,64
  8199a8:	3885c83a 	sub	r2,r7,r2
  8199ac:	288a983a 	sll	r5,r5,r2
  8199b0:	2c62b03a 	or	r17,r5,r17
  8199b4:	8822c03a 	cmpne	r17,r17,zero
  8199b8:	8922b03a 	or	r17,r17,r4
  8199bc:	0005883a 	mov	r2,zero
  8199c0:	003f9206 	br	81980c <__alt_data_end+0xff81980c>
  8199c4:	000b883a 	mov	r5,zero
  8199c8:	003fdc06 	br	81993c <__alt_data_end+0xff81993c>
  8199cc:	000b883a 	mov	r5,zero
  8199d0:	003ff706 	br	8199b0 <__alt_data_end+0xff8199b0>

008199d4 <__fixdfsi>:
  8199d4:	2806d53a 	srli	r3,r5,20
  8199d8:	00800434 	movhi	r2,16
  8199dc:	10bfffc4 	addi	r2,r2,-1
  8199e0:	18c1ffcc 	andi	r3,r3,2047
  8199e4:	0180ff84 	movi	r6,1022
  8199e8:	2884703a 	and	r2,r5,r2
  8199ec:	280ad7fa 	srli	r5,r5,31
  8199f0:	30c0130e 	bge	r6,r3,819a40 <__fixdfsi+0x6c>
  8199f4:	01810744 	movi	r6,1053
  8199f8:	30c00d16 	blt	r6,r3,819a30 <__fixdfsi+0x5c>
  8199fc:	01810cc4 	movi	r6,1075
  819a00:	30cdc83a 	sub	r6,r6,r3
  819a04:	01c007c4 	movi	r7,31
  819a08:	10800434 	orhi	r2,r2,16
  819a0c:	39800e0e 	bge	r7,r6,819a48 <__fixdfsi+0x74>
  819a10:	010104c4 	movi	r4,1043
  819a14:	20c7c83a 	sub	r3,r4,r3
  819a18:	10c6d83a 	srl	r3,r2,r3
  819a1c:	29403fcc 	andi	r5,r5,255
  819a20:	0145c83a 	sub	r2,zero,r5
  819a24:	1884f03a 	xor	r2,r3,r2
  819a28:	1145883a 	add	r2,r2,r5
  819a2c:	f800283a 	ret
  819a30:	00a00034 	movhi	r2,32768
  819a34:	10bfffc4 	addi	r2,r2,-1
  819a38:	2885883a 	add	r2,r5,r2
  819a3c:	f800283a 	ret
  819a40:	0005883a 	mov	r2,zero
  819a44:	f800283a 	ret
  819a48:	18fefb44 	addi	r3,r3,-1043
  819a4c:	2188d83a 	srl	r4,r4,r6
  819a50:	10c6983a 	sll	r3,r2,r3
  819a54:	20c6b03a 	or	r3,r4,r3
  819a58:	003ff006 	br	819a1c <__alt_data_end+0xff819a1c>

00819a5c <__floatsidf>:
  819a5c:	defffd04 	addi	sp,sp,-12
  819a60:	dc400115 	stw	r17,4(sp)
  819a64:	dfc00215 	stw	ra,8(sp)
  819a68:	dc000015 	stw	r16,0(sp)
  819a6c:	2023883a 	mov	r17,r4
  819a70:	20001426 	beq	r4,zero,819ac4 <__floatsidf+0x68>
  819a74:	2020d7fa 	srli	r16,r4,31
  819a78:	80000126 	beq	r16,zero,819a80 <__floatsidf+0x24>
  819a7c:	0123c83a 	sub	r17,zero,r4
  819a80:	8809883a 	mov	r4,r17
  819a84:	0819bd00 	call	819bd0 <__clzsi2>
  819a88:	01410784 	movi	r5,1054
  819a8c:	00c00284 	movi	r3,10
  819a90:	288bc83a 	sub	r5,r5,r2
  819a94:	18801c16 	blt	r3,r2,819b08 <__floatsidf+0xac>
  819a98:	00c002c4 	movi	r3,11
  819a9c:	1887c83a 	sub	r3,r3,r2
  819aa0:	88c8d83a 	srl	r4,r17,r3
  819aa4:	00c00434 	movhi	r3,16
  819aa8:	18ffffc4 	addi	r3,r3,-1
  819aac:	10800544 	addi	r2,r2,21
  819ab0:	20c8703a 	and	r4,r4,r3
  819ab4:	8884983a 	sll	r2,r17,r2
  819ab8:	28c1ffcc 	andi	r3,r5,2047
  819abc:	800d883a 	mov	r6,r16
  819ac0:	00000406 	br	819ad4 <__floatsidf+0x78>
  819ac4:	000d883a 	mov	r6,zero
  819ac8:	0007883a 	mov	r3,zero
  819acc:	0009883a 	mov	r4,zero
  819ad0:	0005883a 	mov	r2,zero
  819ad4:	180a953a 	slli	r5,r3,20
  819ad8:	31803fcc 	andi	r6,r6,255
  819adc:	00c00434 	movhi	r3,16
  819ae0:	300c97fa 	slli	r6,r6,31
  819ae4:	18ffffc4 	addi	r3,r3,-1
  819ae8:	20c6703a 	and	r3,r4,r3
  819aec:	1946b03a 	or	r3,r3,r5
  819af0:	1986b03a 	or	r3,r3,r6
  819af4:	dfc00217 	ldw	ra,8(sp)
  819af8:	dc400117 	ldw	r17,4(sp)
  819afc:	dc000017 	ldw	r16,0(sp)
  819b00:	dec00304 	addi	sp,sp,12
  819b04:	f800283a 	ret
  819b08:	10fffd44 	addi	r3,r2,-11
  819b0c:	88c8983a 	sll	r4,r17,r3
  819b10:	00800434 	movhi	r2,16
  819b14:	10bfffc4 	addi	r2,r2,-1
  819b18:	2088703a 	and	r4,r4,r2
  819b1c:	28c1ffcc 	andi	r3,r5,2047
  819b20:	800d883a 	mov	r6,r16
  819b24:	0005883a 	mov	r2,zero
  819b28:	003fea06 	br	819ad4 <__alt_data_end+0xff819ad4>

00819b2c <__floatunsidf>:
  819b2c:	defffe04 	addi	sp,sp,-8
  819b30:	dc000015 	stw	r16,0(sp)
  819b34:	dfc00115 	stw	ra,4(sp)
  819b38:	2021883a 	mov	r16,r4
  819b3c:	20001026 	beq	r4,zero,819b80 <__floatunsidf+0x54>
  819b40:	0819bd00 	call	819bd0 <__clzsi2>
  819b44:	01410784 	movi	r5,1054
  819b48:	100d883a 	mov	r6,r2
  819b4c:	288bc83a 	sub	r5,r5,r2
  819b50:	00800284 	movi	r2,10
  819b54:	11801616 	blt	r2,r6,819bb0 <__floatunsidf+0x84>
  819b58:	008002c4 	movi	r2,11
  819b5c:	1185c83a 	sub	r2,r2,r6
  819b60:	8084d83a 	srl	r2,r16,r2
  819b64:	00c00434 	movhi	r3,16
  819b68:	31c00544 	addi	r7,r6,21
  819b6c:	18ffffc4 	addi	r3,r3,-1
  819b70:	81e0983a 	sll	r16,r16,r7
  819b74:	10cc703a 	and	r6,r2,r3
  819b78:	2941ffcc 	andi	r5,r5,2047
  819b7c:	00000206 	br	819b88 <__floatunsidf+0x5c>
  819b80:	000b883a 	mov	r5,zero
  819b84:	000d883a 	mov	r6,zero
  819b88:	280a953a 	slli	r5,r5,20
  819b8c:	00c00434 	movhi	r3,16
  819b90:	18ffffc4 	addi	r3,r3,-1
  819b94:	30c6703a 	and	r3,r6,r3
  819b98:	8005883a 	mov	r2,r16
  819b9c:	1946b03a 	or	r3,r3,r5
  819ba0:	dfc00117 	ldw	ra,4(sp)
  819ba4:	dc000017 	ldw	r16,0(sp)
  819ba8:	dec00204 	addi	sp,sp,8
  819bac:	f800283a 	ret
  819bb0:	31bffd44 	addi	r6,r6,-11
  819bb4:	818c983a 	sll	r6,r16,r6
  819bb8:	00800434 	movhi	r2,16
  819bbc:	10bfffc4 	addi	r2,r2,-1
  819bc0:	2941ffcc 	andi	r5,r5,2047
  819bc4:	0021883a 	mov	r16,zero
  819bc8:	308c703a 	and	r6,r6,r2
  819bcc:	003fee06 	br	819b88 <__alt_data_end+0xff819b88>

00819bd0 <__clzsi2>:
  819bd0:	00bfffd4 	movui	r2,65535
  819bd4:	11000b36 	bltu	r2,r4,819c04 <__clzsi2+0x34>
  819bd8:	00803fc4 	movi	r2,255
  819bdc:	1100122e 	bgeu	r2,r4,819c28 <__clzsi2+0x58>
  819be0:	00c00204 	movi	r3,8
  819be4:	01400604 	movi	r5,24
  819be8:	20c8d83a 	srl	r4,r4,r3
  819bec:	008020b4 	movhi	r2,130
  819bf0:	10b97c04 	addi	r2,r2,-6672
  819bf4:	1109883a 	add	r4,r2,r4
  819bf8:	20800003 	ldbu	r2,0(r4)
  819bfc:	2885c83a 	sub	r2,r5,r2
  819c00:	f800283a 	ret
  819c04:	00804034 	movhi	r2,256
  819c08:	10bfffc4 	addi	r2,r2,-1
  819c0c:	11000336 	bltu	r2,r4,819c1c <__clzsi2+0x4c>
  819c10:	00c00404 	movi	r3,16
  819c14:	180b883a 	mov	r5,r3
  819c18:	003ff306 	br	819be8 <__alt_data_end+0xff819be8>
  819c1c:	00c00604 	movi	r3,24
  819c20:	01400204 	movi	r5,8
  819c24:	003ff006 	br	819be8 <__alt_data_end+0xff819be8>
  819c28:	0007883a 	mov	r3,zero
  819c2c:	01400804 	movi	r5,32
  819c30:	003fed06 	br	819be8 <__alt_data_end+0xff819be8>

00819c34 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  819c34:	defff504 	addi	sp,sp,-44
  819c38:	df000a15 	stw	fp,40(sp)
  819c3c:	df000a04 	addi	fp,sp,40
  819c40:	e13ffc15 	stw	r4,-16(fp)
  819c44:	e17ffd15 	stw	r5,-12(fp)
  819c48:	e1bffe15 	stw	r6,-8(fp)
  819c4c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  819c50:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  819c54:	008020b4 	movhi	r2,130
  819c58:	10812904 	addi	r2,r2,1188
  819c5c:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
  819c60:	10003f26 	beq	r2,zero,819d60 <alt_alarm_start+0x12c>
  {
    if (alarm)
  819c64:	e0bffc17 	ldw	r2,-16(fp)
  819c68:	10003b26 	beq	r2,zero,819d58 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
  819c6c:	e0bffc17 	ldw	r2,-16(fp)
  819c70:	e0fffe17 	ldw	r3,-8(fp)
  819c74:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  819c78:	e0bffc17 	ldw	r2,-16(fp)
  819c7c:	e0ffff17 	ldw	r3,-4(fp)
  819c80:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819c84:	0005303a 	rdctl	r2,status
  819c88:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819c8c:	e0fff817 	ldw	r3,-32(fp)
  819c90:	00bfff84 	movi	r2,-2
  819c94:	1884703a 	and	r2,r3,r2
  819c98:	1001703a 	wrctl	status,r2
  
  return context;
  819c9c:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
  819ca0:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  819ca4:	008020b4 	movhi	r2,130
  819ca8:	10812a04 	addi	r2,r2,1192
  819cac:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
  819cb0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  819cb4:	e0fffd17 	ldw	r3,-12(fp)
  819cb8:	e0bff617 	ldw	r2,-40(fp)
  819cbc:	1885883a 	add	r2,r3,r2
  819cc0:	10c00044 	addi	r3,r2,1
  819cc4:	e0bffc17 	ldw	r2,-16(fp)
  819cc8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  819ccc:	e0bffc17 	ldw	r2,-16(fp)
  819cd0:	10c00217 	ldw	r3,8(r2)
  819cd4:	e0bff617 	ldw	r2,-40(fp)
  819cd8:	1880042e 	bgeu	r3,r2,819cec <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
  819cdc:	e0bffc17 	ldw	r2,-16(fp)
  819ce0:	00c00044 	movi	r3,1
  819ce4:	10c00405 	stb	r3,16(r2)
  819ce8:	00000206 	br	819cf4 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
  819cec:	e0bffc17 	ldw	r2,-16(fp)
  819cf0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  819cf4:	e0fffc17 	ldw	r3,-16(fp)
  819cf8:	008020b4 	movhi	r2,130
  819cfc:	10bdbe04 	addi	r2,r2,-2312
  819d00:	e0bff915 	stw	r2,-28(fp)
  819d04:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  819d08:	e0bffa17 	ldw	r2,-24(fp)
  819d0c:	e0fff917 	ldw	r3,-28(fp)
  819d10:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  819d14:	e0bff917 	ldw	r2,-28(fp)
  819d18:	10c00017 	ldw	r3,0(r2)
  819d1c:	e0bffa17 	ldw	r2,-24(fp)
  819d20:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  819d24:	e0bff917 	ldw	r2,-28(fp)
  819d28:	10800017 	ldw	r2,0(r2)
  819d2c:	e0fffa17 	ldw	r3,-24(fp)
  819d30:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  819d34:	e0bff917 	ldw	r2,-28(fp)
  819d38:	e0fffa17 	ldw	r3,-24(fp)
  819d3c:	10c00015 	stw	r3,0(r2)
  819d40:	e0bff717 	ldw	r2,-36(fp)
  819d44:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  819d48:	e0bffb17 	ldw	r2,-20(fp)
  819d4c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  819d50:	0005883a 	mov	r2,zero
  819d54:	00000306 	br	819d64 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
  819d58:	00bffa84 	movi	r2,-22
  819d5c:	00000106 	br	819d64 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
  819d60:	00bfde84 	movi	r2,-134
  }
}
  819d64:	e037883a 	mov	sp,fp
  819d68:	df000017 	ldw	fp,0(sp)
  819d6c:	dec00104 	addi	sp,sp,4
  819d70:	f800283a 	ret

00819d74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  819d74:	defffe04 	addi	sp,sp,-8
  819d78:	dfc00115 	stw	ra,4(sp)
  819d7c:	df000015 	stw	fp,0(sp)
  819d80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  819d84:	008020b4 	movhi	r2,130
  819d88:	10bdbb04 	addi	r2,r2,-2324
  819d8c:	10800017 	ldw	r2,0(r2)
  819d90:	10000526 	beq	r2,zero,819da8 <alt_get_errno+0x34>
  819d94:	008020b4 	movhi	r2,130
  819d98:	10bdbb04 	addi	r2,r2,-2324
  819d9c:	10800017 	ldw	r2,0(r2)
  819da0:	103ee83a 	callr	r2
  819da4:	00000206 	br	819db0 <alt_get_errno+0x3c>
  819da8:	008020b4 	movhi	r2,130
  819dac:	10811e04 	addi	r2,r2,1144
}
  819db0:	e037883a 	mov	sp,fp
  819db4:	dfc00117 	ldw	ra,4(sp)
  819db8:	df000017 	ldw	fp,0(sp)
  819dbc:	dec00204 	addi	sp,sp,8
  819dc0:	f800283a 	ret

00819dc4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  819dc4:	defffb04 	addi	sp,sp,-20
  819dc8:	dfc00415 	stw	ra,16(sp)
  819dcc:	df000315 	stw	fp,12(sp)
  819dd0:	df000304 	addi	fp,sp,12
  819dd4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  819dd8:	e0bfff17 	ldw	r2,-4(fp)
  819ddc:	10000616 	blt	r2,zero,819df8 <close+0x34>
  819de0:	e0bfff17 	ldw	r2,-4(fp)
  819de4:	10c00324 	muli	r3,r2,12
  819de8:	008020b4 	movhi	r2,130
  819dec:	10bcae04 	addi	r2,r2,-3400
  819df0:	1885883a 	add	r2,r3,r2
  819df4:	00000106 	br	819dfc <close+0x38>
  819df8:	0005883a 	mov	r2,zero
  819dfc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  819e00:	e0bffd17 	ldw	r2,-12(fp)
  819e04:	10001926 	beq	r2,zero,819e6c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  819e08:	e0bffd17 	ldw	r2,-12(fp)
  819e0c:	10800017 	ldw	r2,0(r2)
  819e10:	10800417 	ldw	r2,16(r2)
  819e14:	10000626 	beq	r2,zero,819e30 <close+0x6c>
  819e18:	e0bffd17 	ldw	r2,-12(fp)
  819e1c:	10800017 	ldw	r2,0(r2)
  819e20:	10800417 	ldw	r2,16(r2)
  819e24:	e13ffd17 	ldw	r4,-12(fp)
  819e28:	103ee83a 	callr	r2
  819e2c:	00000106 	br	819e34 <close+0x70>
  819e30:	0005883a 	mov	r2,zero
  819e34:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  819e38:	e13fff17 	ldw	r4,-4(fp)
  819e3c:	081ab500 	call	81ab50 <alt_release_fd>
    if (rval < 0)
  819e40:	e0bffe17 	ldw	r2,-8(fp)
  819e44:	1000070e 	bge	r2,zero,819e64 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  819e48:	0819d740 	call	819d74 <alt_get_errno>
  819e4c:	1007883a 	mov	r3,r2
  819e50:	e0bffe17 	ldw	r2,-8(fp)
  819e54:	0085c83a 	sub	r2,zero,r2
  819e58:	18800015 	stw	r2,0(r3)
      return -1;
  819e5c:	00bfffc4 	movi	r2,-1
  819e60:	00000706 	br	819e80 <close+0xbc>
    }
    return 0;
  819e64:	0005883a 	mov	r2,zero
  819e68:	00000506 	br	819e80 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  819e6c:	0819d740 	call	819d74 <alt_get_errno>
  819e70:	1007883a 	mov	r3,r2
  819e74:	00801444 	movi	r2,81
  819e78:	18800015 	stw	r2,0(r3)
    return -1;
  819e7c:	00bfffc4 	movi	r2,-1
  }
}
  819e80:	e037883a 	mov	sp,fp
  819e84:	dfc00117 	ldw	ra,4(sp)
  819e88:	df000017 	ldw	fp,0(sp)
  819e8c:	dec00204 	addi	sp,sp,8
  819e90:	f800283a 	ret

00819e94 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  819e94:	defffc04 	addi	sp,sp,-16
  819e98:	df000315 	stw	fp,12(sp)
  819e9c:	df000304 	addi	fp,sp,12
  819ea0:	e13ffd15 	stw	r4,-12(fp)
  819ea4:	e17ffe15 	stw	r5,-8(fp)
  819ea8:	e1bfff15 	stw	r6,-4(fp)
  return len;
  819eac:	e0bfff17 	ldw	r2,-4(fp)
}
  819eb0:	e037883a 	mov	sp,fp
  819eb4:	df000017 	ldw	fp,0(sp)
  819eb8:	dec00104 	addi	sp,sp,4
  819ebc:	f800283a 	ret

00819ec0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  819ec0:	defffe04 	addi	sp,sp,-8
  819ec4:	dfc00115 	stw	ra,4(sp)
  819ec8:	df000015 	stw	fp,0(sp)
  819ecc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  819ed0:	008020b4 	movhi	r2,130
  819ed4:	10bdbb04 	addi	r2,r2,-2324
  819ed8:	10800017 	ldw	r2,0(r2)
  819edc:	10000526 	beq	r2,zero,819ef4 <alt_get_errno+0x34>
  819ee0:	008020b4 	movhi	r2,130
  819ee4:	10bdbb04 	addi	r2,r2,-2324
  819ee8:	10800017 	ldw	r2,0(r2)
  819eec:	103ee83a 	callr	r2
  819ef0:	00000206 	br	819efc <alt_get_errno+0x3c>
  819ef4:	008020b4 	movhi	r2,130
  819ef8:	10811e04 	addi	r2,r2,1144
}
  819efc:	e037883a 	mov	sp,fp
  819f00:	dfc00117 	ldw	ra,4(sp)
  819f04:	df000017 	ldw	fp,0(sp)
  819f08:	dec00204 	addi	sp,sp,8
  819f0c:	f800283a 	ret

00819f10 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  819f10:	defffb04 	addi	sp,sp,-20
  819f14:	dfc00415 	stw	ra,16(sp)
  819f18:	df000315 	stw	fp,12(sp)
  819f1c:	df000304 	addi	fp,sp,12
  819f20:	e13ffe15 	stw	r4,-8(fp)
  819f24:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  819f28:	e0bffe17 	ldw	r2,-8(fp)
  819f2c:	10000616 	blt	r2,zero,819f48 <fstat+0x38>
  819f30:	e0bffe17 	ldw	r2,-8(fp)
  819f34:	10c00324 	muli	r3,r2,12
  819f38:	008020b4 	movhi	r2,130
  819f3c:	10bcae04 	addi	r2,r2,-3400
  819f40:	1885883a 	add	r2,r3,r2
  819f44:	00000106 	br	819f4c <fstat+0x3c>
  819f48:	0005883a 	mov	r2,zero
  819f4c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  819f50:	e0bffd17 	ldw	r2,-12(fp)
  819f54:	10001026 	beq	r2,zero,819f98 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  819f58:	e0bffd17 	ldw	r2,-12(fp)
  819f5c:	10800017 	ldw	r2,0(r2)
  819f60:	10800817 	ldw	r2,32(r2)
  819f64:	10000726 	beq	r2,zero,819f84 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  819f68:	e0bffd17 	ldw	r2,-12(fp)
  819f6c:	10800017 	ldw	r2,0(r2)
  819f70:	10800817 	ldw	r2,32(r2)
  819f74:	e13ffd17 	ldw	r4,-12(fp)
  819f78:	e17fff17 	ldw	r5,-4(fp)
  819f7c:	103ee83a 	callr	r2
  819f80:	00000a06 	br	819fac <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  819f84:	e0bfff17 	ldw	r2,-4(fp)
  819f88:	00c80004 	movi	r3,8192
  819f8c:	10c00115 	stw	r3,4(r2)
      return 0;
  819f90:	0005883a 	mov	r2,zero
  819f94:	00000506 	br	819fac <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  819f98:	0819ec00 	call	819ec0 <alt_get_errno>
  819f9c:	1007883a 	mov	r3,r2
  819fa0:	00801444 	movi	r2,81
  819fa4:	18800015 	stw	r2,0(r3)
    return -1;
  819fa8:	00bfffc4 	movi	r2,-1
  }
}
  819fac:	e037883a 	mov	sp,fp
  819fb0:	dfc00117 	ldw	ra,4(sp)
  819fb4:	df000017 	ldw	fp,0(sp)
  819fb8:	dec00204 	addi	sp,sp,8
  819fbc:	f800283a 	ret

00819fc0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  819fc0:	defff004 	addi	sp,sp,-64
  819fc4:	df000f15 	stw	fp,60(sp)
  819fc8:	df000f04 	addi	fp,sp,60
  819fcc:	e13ffd15 	stw	r4,-12(fp)
  819fd0:	e17ffe15 	stw	r5,-8(fp)
  819fd4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
  819fd8:	00bffa84 	movi	r2,-22
  819fdc:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  819fe0:	e0bffd17 	ldw	r2,-12(fp)
  819fe4:	10800828 	cmpgeui	r2,r2,32
  819fe8:	10005c1e 	bne	r2,zero,81a15c <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819fec:	0005303a 	rdctl	r2,status
  819ff0:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819ff4:	e0fff317 	ldw	r3,-52(fp)
  819ff8:	00bfff84 	movi	r2,-2
  819ffc:	1884703a 	and	r2,r3,r2
  81a000:	1001703a 	wrctl	status,r2
  
  return context;
  81a004:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  81a008:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
  81a00c:	008020b4 	movhi	r2,130
  81a010:	108b9d04 	addi	r2,r2,11892
  81a014:	e0fffd17 	ldw	r3,-12(fp)
  81a018:	180690fa 	slli	r3,r3,3
  81a01c:	10c5883a 	add	r2,r2,r3
  81a020:	e0ffff17 	ldw	r3,-4(fp)
  81a024:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
  81a028:	008020b4 	movhi	r2,130
  81a02c:	108b9d04 	addi	r2,r2,11892
  81a030:	e0fffd17 	ldw	r3,-12(fp)
  81a034:	180690fa 	slli	r3,r3,3
  81a038:	18c00104 	addi	r3,r3,4
  81a03c:	10c5883a 	add	r2,r2,r3
  81a040:	e0fffe17 	ldw	r3,-8(fp)
  81a044:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  81a048:	e0bfff17 	ldw	r2,-4(fp)
  81a04c:	10001f26 	beq	r2,zero,81a0cc <alt_irq_register+0x10c>
  81a050:	e0bffd17 	ldw	r2,-12(fp)
  81a054:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a058:	0005303a 	rdctl	r2,status
  81a05c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a060:	e0fff517 	ldw	r3,-44(fp)
  81a064:	00bfff84 	movi	r2,-2
  81a068:	1884703a 	and	r2,r3,r2
  81a06c:	1001703a 	wrctl	status,r2
  
  return context;
  81a070:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81a074:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
  81a078:	e0bff417 	ldw	r2,-48(fp)
  81a07c:	00c00044 	movi	r3,1
  81a080:	1884983a 	sll	r2,r3,r2
  81a084:	1007883a 	mov	r3,r2
  81a088:	008020b4 	movhi	r2,130
  81a08c:	10812504 	addi	r2,r2,1172
  81a090:	10800017 	ldw	r2,0(r2)
  81a094:	1886b03a 	or	r3,r3,r2
  81a098:	008020b4 	movhi	r2,130
  81a09c:	10812504 	addi	r2,r2,1172
  81a0a0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81a0a4:	008020b4 	movhi	r2,130
  81a0a8:	10812504 	addi	r2,r2,1172
  81a0ac:	10800017 	ldw	r2,0(r2)
  81a0b0:	100170fa 	wrctl	ienable,r2
  81a0b4:	e0bff617 	ldw	r2,-40(fp)
  81a0b8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a0bc:	e0bff717 	ldw	r2,-36(fp)
  81a0c0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81a0c4:	0005883a 	mov	r2,zero
  81a0c8:	00001f06 	br	81a148 <alt_irq_register+0x188>
  81a0cc:	e0bffd17 	ldw	r2,-12(fp)
  81a0d0:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a0d4:	0005303a 	rdctl	r2,status
  81a0d8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a0dc:	e0fff917 	ldw	r3,-28(fp)
  81a0e0:	00bfff84 	movi	r2,-2
  81a0e4:	1884703a 	and	r2,r3,r2
  81a0e8:	1001703a 	wrctl	status,r2
  
  return context;
  81a0ec:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81a0f0:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
  81a0f4:	e0bff817 	ldw	r2,-32(fp)
  81a0f8:	00c00044 	movi	r3,1
  81a0fc:	1884983a 	sll	r2,r3,r2
  81a100:	0084303a 	nor	r2,zero,r2
  81a104:	1007883a 	mov	r3,r2
  81a108:	008020b4 	movhi	r2,130
  81a10c:	10812504 	addi	r2,r2,1172
  81a110:	10800017 	ldw	r2,0(r2)
  81a114:	1886703a 	and	r3,r3,r2
  81a118:	008020b4 	movhi	r2,130
  81a11c:	10812504 	addi	r2,r2,1172
  81a120:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81a124:	008020b4 	movhi	r2,130
  81a128:	10812504 	addi	r2,r2,1172
  81a12c:	10800017 	ldw	r2,0(r2)
  81a130:	100170fa 	wrctl	ienable,r2
  81a134:	e0bffa17 	ldw	r2,-24(fp)
  81a138:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a13c:	e0bffb17 	ldw	r2,-20(fp)
  81a140:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81a144:	0005883a 	mov	r2,zero
  81a148:	e0bff115 	stw	r2,-60(fp)
  81a14c:	e0bff217 	ldw	r2,-56(fp)
  81a150:	e0bffc15 	stw	r2,-16(fp)
  81a154:	e0bffc17 	ldw	r2,-16(fp)
  81a158:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
  81a15c:	e0bff117 	ldw	r2,-60(fp)
}
  81a160:	e037883a 	mov	sp,fp
  81a164:	df000017 	ldw	fp,0(sp)
  81a168:	dec00104 	addi	sp,sp,4
  81a16c:	f800283a 	ret

0081a170 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a170:	defffe04 	addi	sp,sp,-8
  81a174:	dfc00115 	stw	ra,4(sp)
  81a178:	df000015 	stw	fp,0(sp)
  81a17c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a180:	008020b4 	movhi	r2,130
  81a184:	10bdbb04 	addi	r2,r2,-2324
  81a188:	10800017 	ldw	r2,0(r2)
  81a18c:	10000526 	beq	r2,zero,81a1a4 <alt_get_errno+0x34>
  81a190:	008020b4 	movhi	r2,130
  81a194:	10bdbb04 	addi	r2,r2,-2324
  81a198:	10800017 	ldw	r2,0(r2)
  81a19c:	103ee83a 	callr	r2
  81a1a0:	00000206 	br	81a1ac <alt_get_errno+0x3c>
  81a1a4:	008020b4 	movhi	r2,130
  81a1a8:	10811e04 	addi	r2,r2,1144
}
  81a1ac:	e037883a 	mov	sp,fp
  81a1b0:	dfc00117 	ldw	ra,4(sp)
  81a1b4:	df000017 	ldw	fp,0(sp)
  81a1b8:	dec00204 	addi	sp,sp,8
  81a1bc:	f800283a 	ret

0081a1c0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  81a1c0:	deffed04 	addi	sp,sp,-76
  81a1c4:	dfc01215 	stw	ra,72(sp)
  81a1c8:	df001115 	stw	fp,68(sp)
  81a1cc:	df001104 	addi	fp,sp,68
  81a1d0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81a1d4:	e0bfff17 	ldw	r2,-4(fp)
  81a1d8:	10000616 	blt	r2,zero,81a1f4 <isatty+0x34>
  81a1dc:	e0bfff17 	ldw	r2,-4(fp)
  81a1e0:	10c00324 	muli	r3,r2,12
  81a1e4:	008020b4 	movhi	r2,130
  81a1e8:	10bcae04 	addi	r2,r2,-3400
  81a1ec:	1885883a 	add	r2,r3,r2
  81a1f0:	00000106 	br	81a1f8 <isatty+0x38>
  81a1f4:	0005883a 	mov	r2,zero
  81a1f8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  81a1fc:	e0bfef17 	ldw	r2,-68(fp)
  81a200:	10000e26 	beq	r2,zero,81a23c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  81a204:	e0bfef17 	ldw	r2,-68(fp)
  81a208:	10800017 	ldw	r2,0(r2)
  81a20c:	10800817 	ldw	r2,32(r2)
  81a210:	1000021e 	bne	r2,zero,81a21c <isatty+0x5c>
    {
      return 1;
  81a214:	00800044 	movi	r2,1
  81a218:	00000d06 	br	81a250 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  81a21c:	e0bff004 	addi	r2,fp,-64
  81a220:	e13fff17 	ldw	r4,-4(fp)
  81a224:	100b883a 	mov	r5,r2
  81a228:	0819f100 	call	819f10 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  81a22c:	e0bff117 	ldw	r2,-60(fp)
  81a230:	10880020 	cmpeqi	r2,r2,8192
  81a234:	10803fcc 	andi	r2,r2,255
  81a238:	00000506 	br	81a250 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  81a23c:	081a1700 	call	81a170 <alt_get_errno>
  81a240:	1007883a 	mov	r3,r2
  81a244:	00801444 	movi	r2,81
  81a248:	18800015 	stw	r2,0(r3)
    return 0;
  81a24c:	0005883a 	mov	r2,zero
  }
}
  81a250:	e037883a 	mov	sp,fp
  81a254:	dfc00117 	ldw	ra,4(sp)
  81a258:	df000017 	ldw	fp,0(sp)
  81a25c:	dec00204 	addi	sp,sp,8
  81a260:	f800283a 	ret

0081a264 <alt_load_section>:
  81a264:	defffc04 	addi	sp,sp,-16
  81a268:	df000315 	stw	fp,12(sp)
  81a26c:	df000304 	addi	fp,sp,12
  81a270:	e13ffd15 	stw	r4,-12(fp)
  81a274:	e17ffe15 	stw	r5,-8(fp)
  81a278:	e1bfff15 	stw	r6,-4(fp)
  81a27c:	e0fffe17 	ldw	r3,-8(fp)
  81a280:	e0bffd17 	ldw	r2,-12(fp)
  81a284:	18800c26 	beq	r3,r2,81a2b8 <alt_load_section+0x54>
  81a288:	00000806 	br	81a2ac <alt_load_section+0x48>
  81a28c:	e0bffe17 	ldw	r2,-8(fp)
  81a290:	10c00104 	addi	r3,r2,4
  81a294:	e0fffe15 	stw	r3,-8(fp)
  81a298:	e0fffd17 	ldw	r3,-12(fp)
  81a29c:	19000104 	addi	r4,r3,4
  81a2a0:	e13ffd15 	stw	r4,-12(fp)
  81a2a4:	18c00017 	ldw	r3,0(r3)
  81a2a8:	10c00015 	stw	r3,0(r2)
  81a2ac:	e0fffe17 	ldw	r3,-8(fp)
  81a2b0:	e0bfff17 	ldw	r2,-4(fp)
  81a2b4:	18bff51e 	bne	r3,r2,81a28c <__alt_data_end+0xff81a28c>
  81a2b8:	e037883a 	mov	sp,fp
  81a2bc:	df000017 	ldw	fp,0(sp)
  81a2c0:	dec00104 	addi	sp,sp,4
  81a2c4:	f800283a 	ret

0081a2c8 <alt_load>:
  81a2c8:	defffe04 	addi	sp,sp,-8
  81a2cc:	dfc00115 	stw	ra,4(sp)
  81a2d0:	df000015 	stw	fp,0(sp)
  81a2d4:	d839883a 	mov	fp,sp
  81a2d8:	010020b4 	movhi	r4,130
  81a2dc:	213dc204 	addi	r4,r4,-2296
  81a2e0:	014020b4 	movhi	r5,130
  81a2e4:	297a7b04 	addi	r5,r5,-5652
  81a2e8:	018020b4 	movhi	r6,130
  81a2ec:	31bdc204 	addi	r6,r6,-2296
  81a2f0:	081a2640 	call	81a264 <alt_load_section>
  81a2f4:	01002034 	movhi	r4,128
  81a2f8:	21000804 	addi	r4,r4,32
  81a2fc:	01402034 	movhi	r5,128
  81a300:	29400804 	addi	r5,r5,32
  81a304:	01802034 	movhi	r6,128
  81a308:	31809104 	addi	r6,r6,580
  81a30c:	081a2640 	call	81a264 <alt_load_section>
  81a310:	010020b4 	movhi	r4,130
  81a314:	21377804 	addi	r4,r4,-8736
  81a318:	014020b4 	movhi	r5,130
  81a31c:	29777804 	addi	r5,r5,-8736
  81a320:	018020b4 	movhi	r6,130
  81a324:	31ba7b04 	addi	r6,r6,-5652
  81a328:	081a2640 	call	81a264 <alt_load_section>
  81a32c:	081d3440 	call	81d344 <alt_dcache_flush_all>
  81a330:	081d78c0 	call	81d78c <alt_icache_flush_all>
  81a334:	e037883a 	mov	sp,fp
  81a338:	dfc00117 	ldw	ra,4(sp)
  81a33c:	df000017 	ldw	fp,0(sp)
  81a340:	dec00204 	addi	sp,sp,8
  81a344:	f800283a 	ret

0081a348 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a348:	defffe04 	addi	sp,sp,-8
  81a34c:	dfc00115 	stw	ra,4(sp)
  81a350:	df000015 	stw	fp,0(sp)
  81a354:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a358:	008020b4 	movhi	r2,130
  81a35c:	10bdbb04 	addi	r2,r2,-2324
  81a360:	10800017 	ldw	r2,0(r2)
  81a364:	10000526 	beq	r2,zero,81a37c <alt_get_errno+0x34>
  81a368:	008020b4 	movhi	r2,130
  81a36c:	10bdbb04 	addi	r2,r2,-2324
  81a370:	10800017 	ldw	r2,0(r2)
  81a374:	103ee83a 	callr	r2
  81a378:	00000206 	br	81a384 <alt_get_errno+0x3c>
  81a37c:	008020b4 	movhi	r2,130
  81a380:	10811e04 	addi	r2,r2,1144
}
  81a384:	e037883a 	mov	sp,fp
  81a388:	dfc00117 	ldw	ra,4(sp)
  81a38c:	df000017 	ldw	fp,0(sp)
  81a390:	dec00204 	addi	sp,sp,8
  81a394:	f800283a 	ret

0081a398 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  81a398:	defff904 	addi	sp,sp,-28
  81a39c:	dfc00615 	stw	ra,24(sp)
  81a3a0:	df000515 	stw	fp,20(sp)
  81a3a4:	df000504 	addi	fp,sp,20
  81a3a8:	e13ffd15 	stw	r4,-12(fp)
  81a3ac:	e17ffe15 	stw	r5,-8(fp)
  81a3b0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  81a3b4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81a3b8:	e0bffd17 	ldw	r2,-12(fp)
  81a3bc:	10000616 	blt	r2,zero,81a3d8 <lseek+0x40>
  81a3c0:	e0bffd17 	ldw	r2,-12(fp)
  81a3c4:	10c00324 	muli	r3,r2,12
  81a3c8:	008020b4 	movhi	r2,130
  81a3cc:	10bcae04 	addi	r2,r2,-3400
  81a3d0:	1885883a 	add	r2,r3,r2
  81a3d4:	00000106 	br	81a3dc <lseek+0x44>
  81a3d8:	0005883a 	mov	r2,zero
  81a3dc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  81a3e0:	e0bffc17 	ldw	r2,-16(fp)
  81a3e4:	10001026 	beq	r2,zero,81a428 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  81a3e8:	e0bffc17 	ldw	r2,-16(fp)
  81a3ec:	10800017 	ldw	r2,0(r2)
  81a3f0:	10800717 	ldw	r2,28(r2)
  81a3f4:	10000926 	beq	r2,zero,81a41c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  81a3f8:	e0bffc17 	ldw	r2,-16(fp)
  81a3fc:	10800017 	ldw	r2,0(r2)
  81a400:	10800717 	ldw	r2,28(r2)
  81a404:	e13ffc17 	ldw	r4,-16(fp)
  81a408:	e17ffe17 	ldw	r5,-8(fp)
  81a40c:	e1bfff17 	ldw	r6,-4(fp)
  81a410:	103ee83a 	callr	r2
  81a414:	e0bffb15 	stw	r2,-20(fp)
  81a418:	00000506 	br	81a430 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  81a41c:	00bfde84 	movi	r2,-134
  81a420:	e0bffb15 	stw	r2,-20(fp)
  81a424:	00000206 	br	81a430 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  81a428:	00bfebc4 	movi	r2,-81
  81a42c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  81a430:	e0bffb17 	ldw	r2,-20(fp)
  81a434:	1000070e 	bge	r2,zero,81a454 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  81a438:	081a3480 	call	81a348 <alt_get_errno>
  81a43c:	1007883a 	mov	r3,r2
  81a440:	e0bffb17 	ldw	r2,-20(fp)
  81a444:	0085c83a 	sub	r2,zero,r2
  81a448:	18800015 	stw	r2,0(r3)
    rc = -1;
  81a44c:	00bfffc4 	movi	r2,-1
  81a450:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  81a454:	e0bffb17 	ldw	r2,-20(fp)
}
  81a458:	e037883a 	mov	sp,fp
  81a45c:	dfc00117 	ldw	ra,4(sp)
  81a460:	df000017 	ldw	fp,0(sp)
  81a464:	dec00204 	addi	sp,sp,8
  81a468:	f800283a 	ret

0081a46c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  81a46c:	defffd04 	addi	sp,sp,-12
  81a470:	dfc00215 	stw	ra,8(sp)
  81a474:	df000115 	stw	fp,4(sp)
  81a478:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  81a47c:	0009883a 	mov	r4,zero
  81a480:	081afac0 	call	81afac <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  81a484:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  81a488:	081afe00 	call	81afe0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  81a48c:	010020b4 	movhi	r4,130
  81a490:	2139bf04 	addi	r4,r4,-6404
  81a494:	014020b4 	movhi	r5,130
  81a498:	2979bf04 	addi	r5,r5,-6404
  81a49c:	018020b4 	movhi	r6,130
  81a4a0:	31b9bf04 	addi	r6,r6,-6404
  81a4a4:	081d87c0 	call	81d87c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  81a4a8:	081d47c0 	call	81d47c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  81a4ac:	010020b4 	movhi	r4,130
  81a4b0:	21353604 	addi	r4,r4,-11048
  81a4b4:	081da3c0 	call	81da3c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  81a4b8:	d1237c17 	ldw	r4,-29200(gp)
  81a4bc:	d0e37d17 	ldw	r3,-29196(gp)
  81a4c0:	d0a37e17 	ldw	r2,-29192(gp)
  81a4c4:	180b883a 	mov	r5,r3
  81a4c8:	100d883a 	mov	r6,r2
  81a4cc:	0808bd00 	call	808bd0 <main>
  81a4d0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  81a4d4:	01000044 	movi	r4,1
  81a4d8:	0819dc40 	call	819dc4 <close>
  exit (result);
  81a4dc:	e13fff17 	ldw	r4,-4(fp)
  81a4e0:	081da500 	call	81da50 <exit>

0081a4e4 <__malloc_lock>:
  81a4e4:	defffe04 	addi	sp,sp,-8
  81a4e8:	df000115 	stw	fp,4(sp)
  81a4ec:	df000104 	addi	fp,sp,4
  81a4f0:	e13fff15 	stw	r4,-4(fp)
  81a4f4:	e037883a 	mov	sp,fp
  81a4f8:	df000017 	ldw	fp,0(sp)
  81a4fc:	dec00104 	addi	sp,sp,4
  81a500:	f800283a 	ret

0081a504 <__malloc_unlock>:
  81a504:	defffe04 	addi	sp,sp,-8
  81a508:	df000115 	stw	fp,4(sp)
  81a50c:	df000104 	addi	fp,sp,4
  81a510:	e13fff15 	stw	r4,-4(fp)
  81a514:	e037883a 	mov	sp,fp
  81a518:	df000017 	ldw	fp,0(sp)
  81a51c:	dec00104 	addi	sp,sp,4
  81a520:	f800283a 	ret

0081a524 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81a524:	defffe04 	addi	sp,sp,-8
  81a528:	dfc00115 	stw	ra,4(sp)
  81a52c:	df000015 	stw	fp,0(sp)
  81a530:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81a534:	008020b4 	movhi	r2,130
  81a538:	10bdbb04 	addi	r2,r2,-2324
  81a53c:	10800017 	ldw	r2,0(r2)
  81a540:	10000526 	beq	r2,zero,81a558 <alt_get_errno+0x34>
  81a544:	008020b4 	movhi	r2,130
  81a548:	10bdbb04 	addi	r2,r2,-2324
  81a54c:	10800017 	ldw	r2,0(r2)
  81a550:	103ee83a 	callr	r2
  81a554:	00000206 	br	81a560 <alt_get_errno+0x3c>
  81a558:	008020b4 	movhi	r2,130
  81a55c:	10811e04 	addi	r2,r2,1144
}
  81a560:	e037883a 	mov	sp,fp
  81a564:	dfc00117 	ldw	ra,4(sp)
  81a568:	df000017 	ldw	fp,0(sp)
  81a56c:	dec00204 	addi	sp,sp,8
  81a570:	f800283a 	ret

0081a574 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  81a574:	defffd04 	addi	sp,sp,-12
  81a578:	df000215 	stw	fp,8(sp)
  81a57c:	df000204 	addi	fp,sp,8
  81a580:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  81a584:	e0bfff17 	ldw	r2,-4(fp)
  81a588:	10800217 	ldw	r2,8(r2)
  81a58c:	10d00034 	orhi	r3,r2,16384
  81a590:	e0bfff17 	ldw	r2,-4(fp)
  81a594:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  81a598:	e03ffe15 	stw	zero,-8(fp)
  81a59c:	00001d06 	br	81a614 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  81a5a0:	008020b4 	movhi	r2,130
  81a5a4:	10bcae04 	addi	r2,r2,-3400
  81a5a8:	e0fffe17 	ldw	r3,-8(fp)
  81a5ac:	18c00324 	muli	r3,r3,12
  81a5b0:	10c5883a 	add	r2,r2,r3
  81a5b4:	10c00017 	ldw	r3,0(r2)
  81a5b8:	e0bfff17 	ldw	r2,-4(fp)
  81a5bc:	10800017 	ldw	r2,0(r2)
  81a5c0:	1880111e 	bne	r3,r2,81a608 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81a5c4:	008020b4 	movhi	r2,130
  81a5c8:	10bcae04 	addi	r2,r2,-3400
  81a5cc:	e0fffe17 	ldw	r3,-8(fp)
  81a5d0:	18c00324 	muli	r3,r3,12
  81a5d4:	18c00204 	addi	r3,r3,8
  81a5d8:	10c5883a 	add	r2,r2,r3
  81a5dc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  81a5e0:	1000090e 	bge	r2,zero,81a608 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  81a5e4:	e0bffe17 	ldw	r2,-8(fp)
  81a5e8:	10c00324 	muli	r3,r2,12
  81a5ec:	008020b4 	movhi	r2,130
  81a5f0:	10bcae04 	addi	r2,r2,-3400
  81a5f4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81a5f8:	e0bfff17 	ldw	r2,-4(fp)
  81a5fc:	18800226 	beq	r3,r2,81a608 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  81a600:	00bffcc4 	movi	r2,-13
  81a604:	00000a06 	br	81a630 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  81a608:	e0bffe17 	ldw	r2,-8(fp)
  81a60c:	10800044 	addi	r2,r2,1
  81a610:	e0bffe15 	stw	r2,-8(fp)
  81a614:	008020b4 	movhi	r2,130
  81a618:	10bdba04 	addi	r2,r2,-2328
  81a61c:	10800017 	ldw	r2,0(r2)
  81a620:	1007883a 	mov	r3,r2
  81a624:	e0bffe17 	ldw	r2,-8(fp)
  81a628:	18bfdd2e 	bgeu	r3,r2,81a5a0 <__alt_data_end+0xff81a5a0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  81a62c:	0005883a 	mov	r2,zero
}
  81a630:	e037883a 	mov	sp,fp
  81a634:	df000017 	ldw	fp,0(sp)
  81a638:	dec00104 	addi	sp,sp,4
  81a63c:	f800283a 	ret

0081a640 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  81a640:	defff604 	addi	sp,sp,-40
  81a644:	dfc00915 	stw	ra,36(sp)
  81a648:	df000815 	stw	fp,32(sp)
  81a64c:	df000804 	addi	fp,sp,32
  81a650:	e13ffd15 	stw	r4,-12(fp)
  81a654:	e17ffe15 	stw	r5,-8(fp)
  81a658:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  81a65c:	00bfffc4 	movi	r2,-1
  81a660:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  81a664:	00bffb44 	movi	r2,-19
  81a668:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  81a66c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  81a670:	e13ffd17 	ldw	r4,-12(fp)
  81a674:	014020b4 	movhi	r5,130
  81a678:	297db804 	addi	r5,r5,-2336
  81a67c:	081d5340 	call	81d534 <alt_find_dev>
  81a680:	e0bff815 	stw	r2,-32(fp)
  81a684:	e0bff817 	ldw	r2,-32(fp)
  81a688:	1000051e 	bne	r2,zero,81a6a0 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  81a68c:	e13ffd17 	ldw	r4,-12(fp)
  81a690:	081d5c40 	call	81d5c4 <alt_find_file>
  81a694:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  81a698:	00800044 	movi	r2,1
  81a69c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  81a6a0:	e0bff817 	ldw	r2,-32(fp)
  81a6a4:	10002926 	beq	r2,zero,81a74c <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
  81a6a8:	e13ff817 	ldw	r4,-32(fp)
  81a6ac:	081d6d80 	call	81d6d8 <alt_get_fd>
  81a6b0:	e0bff915 	stw	r2,-28(fp)
  81a6b4:	e0bff917 	ldw	r2,-28(fp)
  81a6b8:	1000030e 	bge	r2,zero,81a6c8 <open+0x88>
    {
      status = index;
  81a6bc:	e0bff917 	ldw	r2,-28(fp)
  81a6c0:	e0bffa15 	stw	r2,-24(fp)
  81a6c4:	00002306 	br	81a754 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
  81a6c8:	e0bff917 	ldw	r2,-28(fp)
  81a6cc:	10c00324 	muli	r3,r2,12
  81a6d0:	008020b4 	movhi	r2,130
  81a6d4:	10bcae04 	addi	r2,r2,-3400
  81a6d8:	1885883a 	add	r2,r3,r2
  81a6dc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  81a6e0:	e0fffe17 	ldw	r3,-8(fp)
  81a6e4:	00900034 	movhi	r2,16384
  81a6e8:	10bfffc4 	addi	r2,r2,-1
  81a6ec:	1886703a 	and	r3,r3,r2
  81a6f0:	e0bffc17 	ldw	r2,-16(fp)
  81a6f4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  81a6f8:	e0bffb17 	ldw	r2,-20(fp)
  81a6fc:	1000051e 	bne	r2,zero,81a714 <open+0xd4>
  81a700:	e13ffc17 	ldw	r4,-16(fp)
  81a704:	081a5740 	call	81a574 <alt_file_locked>
  81a708:	e0bffa15 	stw	r2,-24(fp)
  81a70c:	e0bffa17 	ldw	r2,-24(fp)
  81a710:	10001016 	blt	r2,zero,81a754 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  81a714:	e0bff817 	ldw	r2,-32(fp)
  81a718:	10800317 	ldw	r2,12(r2)
  81a71c:	10000826 	beq	r2,zero,81a740 <open+0x100>
  81a720:	e0bff817 	ldw	r2,-32(fp)
  81a724:	10800317 	ldw	r2,12(r2)
  81a728:	e13ffc17 	ldw	r4,-16(fp)
  81a72c:	e17ffd17 	ldw	r5,-12(fp)
  81a730:	e1bffe17 	ldw	r6,-8(fp)
  81a734:	e1ffff17 	ldw	r7,-4(fp)
  81a738:	103ee83a 	callr	r2
  81a73c:	00000106 	br	81a744 <open+0x104>
  81a740:	0005883a 	mov	r2,zero
  81a744:	e0bffa15 	stw	r2,-24(fp)
  81a748:	00000206 	br	81a754 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
  81a74c:	00bffb44 	movi	r2,-19
  81a750:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  81a754:	e0bffa17 	ldw	r2,-24(fp)
  81a758:	1000090e 	bge	r2,zero,81a780 <open+0x140>
  {
    alt_release_fd (index);  
  81a75c:	e13ff917 	ldw	r4,-28(fp)
  81a760:	081ab500 	call	81ab50 <alt_release_fd>
    ALT_ERRNO = -status;
  81a764:	081a5240 	call	81a524 <alt_get_errno>
  81a768:	1007883a 	mov	r3,r2
  81a76c:	e0bffa17 	ldw	r2,-24(fp)
  81a770:	0085c83a 	sub	r2,zero,r2
  81a774:	18800015 	stw	r2,0(r3)
    return -1;
  81a778:	00bfffc4 	movi	r2,-1
  81a77c:	00000106 	br	81a784 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
  81a780:	e0bff917 	ldw	r2,-28(fp)
}
  81a784:	e037883a 	mov	sp,fp
  81a788:	dfc00117 	ldw	ra,4(sp)
  81a78c:	df000017 	ldw	fp,0(sp)
  81a790:	dec00204 	addi	sp,sp,8
  81a794:	f800283a 	ret

0081a798 <alt_printf>:
  81a798:	defff204 	addi	sp,sp,-56
  81a79c:	dfc00a15 	stw	ra,40(sp)
  81a7a0:	df000915 	stw	fp,36(sp)
  81a7a4:	df000904 	addi	fp,sp,36
  81a7a8:	e1400215 	stw	r5,8(fp)
  81a7ac:	e1800315 	stw	r6,12(fp)
  81a7b0:	e1c00415 	stw	r7,16(fp)
  81a7b4:	e13fff15 	stw	r4,-4(fp)
  81a7b8:	e0800204 	addi	r2,fp,8
  81a7bc:	e0bffe15 	stw	r2,-8(fp)
  81a7c0:	e0bfff17 	ldw	r2,-4(fp)
  81a7c4:	e0bff715 	stw	r2,-36(fp)
  81a7c8:	00007106 	br	81a990 <alt_printf+0x1f8>
  81a7cc:	e0bff807 	ldb	r2,-32(fp)
  81a7d0:	10800960 	cmpeqi	r2,r2,37
  81a7d4:	1000041e 	bne	r2,zero,81a7e8 <alt_printf+0x50>
  81a7d8:	e0bff807 	ldb	r2,-32(fp)
  81a7dc:	1009883a 	mov	r4,r2
  81a7e0:	081a9c00 	call	81a9c0 <alt_putchar>
  81a7e4:	00006a06 	br	81a990 <alt_printf+0x1f8>
  81a7e8:	e0bff717 	ldw	r2,-36(fp)
  81a7ec:	10c00044 	addi	r3,r2,1
  81a7f0:	e0fff715 	stw	r3,-36(fp)
  81a7f4:	10800003 	ldbu	r2,0(r2)
  81a7f8:	e0bff805 	stb	r2,-32(fp)
  81a7fc:	e0bff807 	ldb	r2,-32(fp)
  81a800:	10006226 	beq	r2,zero,81a98c <alt_printf+0x1f4>
  81a804:	e0bff807 	ldb	r2,-32(fp)
  81a808:	10800958 	cmpnei	r2,r2,37
  81a80c:	1000041e 	bne	r2,zero,81a820 <alt_printf+0x88>
  81a810:	e0bff807 	ldb	r2,-32(fp)
  81a814:	1009883a 	mov	r4,r2
  81a818:	081a9c00 	call	81a9c0 <alt_putchar>
  81a81c:	00005c06 	br	81a990 <alt_printf+0x1f8>
  81a820:	e0bff807 	ldb	r2,-32(fp)
  81a824:	108018d8 	cmpnei	r2,r2,99
  81a828:	1000081e 	bne	r2,zero,81a84c <alt_printf+0xb4>
  81a82c:	e0bffe17 	ldw	r2,-8(fp)
  81a830:	10c00104 	addi	r3,r2,4
  81a834:	e0fffe15 	stw	r3,-8(fp)
  81a838:	10800017 	ldw	r2,0(r2)
  81a83c:	e0bffd15 	stw	r2,-12(fp)
  81a840:	e13ffd17 	ldw	r4,-12(fp)
  81a844:	081a9c00 	call	81a9c0 <alt_putchar>
  81a848:	00005106 	br	81a990 <alt_printf+0x1f8>
  81a84c:	e0bff807 	ldb	r2,-32(fp)
  81a850:	10801e18 	cmpnei	r2,r2,120
  81a854:	1000341e 	bne	r2,zero,81a928 <alt_printf+0x190>
  81a858:	e0bffe17 	ldw	r2,-8(fp)
  81a85c:	10c00104 	addi	r3,r2,4
  81a860:	e0fffe15 	stw	r3,-8(fp)
  81a864:	10800017 	ldw	r2,0(r2)
  81a868:	e0bffb15 	stw	r2,-20(fp)
  81a86c:	e0bffb17 	ldw	r2,-20(fp)
  81a870:	1000031e 	bne	r2,zero,81a880 <alt_printf+0xe8>
  81a874:	01000c04 	movi	r4,48
  81a878:	081a9c00 	call	81a9c0 <alt_putchar>
  81a87c:	00004406 	br	81a990 <alt_printf+0x1f8>
  81a880:	00800704 	movi	r2,28
  81a884:	e0bff915 	stw	r2,-28(fp)
  81a888:	00000306 	br	81a898 <alt_printf+0x100>
  81a88c:	e0bff917 	ldw	r2,-28(fp)
  81a890:	10bfff04 	addi	r2,r2,-4
  81a894:	e0bff915 	stw	r2,-28(fp)
  81a898:	00c003c4 	movi	r3,15
  81a89c:	e0bff917 	ldw	r2,-28(fp)
  81a8a0:	1884983a 	sll	r2,r3,r2
  81a8a4:	1007883a 	mov	r3,r2
  81a8a8:	e0bffb17 	ldw	r2,-20(fp)
  81a8ac:	1884703a 	and	r2,r3,r2
  81a8b0:	103ff626 	beq	r2,zero,81a88c <__alt_data_end+0xff81a88c>
  81a8b4:	00001906 	br	81a91c <alt_printf+0x184>
  81a8b8:	00c003c4 	movi	r3,15
  81a8bc:	e0bff917 	ldw	r2,-28(fp)
  81a8c0:	1884983a 	sll	r2,r3,r2
  81a8c4:	1007883a 	mov	r3,r2
  81a8c8:	e0bffb17 	ldw	r2,-20(fp)
  81a8cc:	1886703a 	and	r3,r3,r2
  81a8d0:	e0bff917 	ldw	r2,-28(fp)
  81a8d4:	1884d83a 	srl	r2,r3,r2
  81a8d8:	e0bffc15 	stw	r2,-16(fp)
  81a8dc:	e0bffc17 	ldw	r2,-16(fp)
  81a8e0:	108002a8 	cmpgeui	r2,r2,10
  81a8e4:	1000041e 	bne	r2,zero,81a8f8 <alt_printf+0x160>
  81a8e8:	e0bffc17 	ldw	r2,-16(fp)
  81a8ec:	10800c04 	addi	r2,r2,48
  81a8f0:	e0bff805 	stb	r2,-32(fp)
  81a8f4:	00000306 	br	81a904 <alt_printf+0x16c>
  81a8f8:	e0bffc17 	ldw	r2,-16(fp)
  81a8fc:	108015c4 	addi	r2,r2,87
  81a900:	e0bff805 	stb	r2,-32(fp)
  81a904:	e0bff807 	ldb	r2,-32(fp)
  81a908:	1009883a 	mov	r4,r2
  81a90c:	081a9c00 	call	81a9c0 <alt_putchar>
  81a910:	e0bff917 	ldw	r2,-28(fp)
  81a914:	10bfff04 	addi	r2,r2,-4
  81a918:	e0bff915 	stw	r2,-28(fp)
  81a91c:	e0bff917 	ldw	r2,-28(fp)
  81a920:	103fe50e 	bge	r2,zero,81a8b8 <__alt_data_end+0xff81a8b8>
  81a924:	00001a06 	br	81a990 <alt_printf+0x1f8>
  81a928:	e0bff807 	ldb	r2,-32(fp)
  81a92c:	10801cd8 	cmpnei	r2,r2,115
  81a930:	1000151e 	bne	r2,zero,81a988 <alt_printf+0x1f0>
  81a934:	e0bffe17 	ldw	r2,-8(fp)
  81a938:	10c00104 	addi	r3,r2,4
  81a93c:	e0fffe15 	stw	r3,-8(fp)
  81a940:	10800017 	ldw	r2,0(r2)
  81a944:	e0bffa15 	stw	r2,-24(fp)
  81a948:	00000906 	br	81a970 <alt_printf+0x1d8>
  81a94c:	e0bffa17 	ldw	r2,-24(fp)
  81a950:	10c00044 	addi	r3,r2,1
  81a954:	e0fffa15 	stw	r3,-24(fp)
  81a958:	10800003 	ldbu	r2,0(r2)
  81a95c:	10803fcc 	andi	r2,r2,255
  81a960:	1080201c 	xori	r2,r2,128
  81a964:	10bfe004 	addi	r2,r2,-128
  81a968:	1009883a 	mov	r4,r2
  81a96c:	081a9c00 	call	81a9c0 <alt_putchar>
  81a970:	e0bffa17 	ldw	r2,-24(fp)
  81a974:	10800003 	ldbu	r2,0(r2)
  81a978:	10803fcc 	andi	r2,r2,255
  81a97c:	1080201c 	xori	r2,r2,128
  81a980:	10bfe004 	addi	r2,r2,-128
  81a984:	103ff11e 	bne	r2,zero,81a94c <__alt_data_end+0xff81a94c>
  81a988:	00000106 	br	81a990 <alt_printf+0x1f8>
  81a98c:	00000706 	br	81a9ac <alt_printf+0x214>
  81a990:	e0bff717 	ldw	r2,-36(fp)
  81a994:	10c00044 	addi	r3,r2,1
  81a998:	e0fff715 	stw	r3,-36(fp)
  81a99c:	10800003 	ldbu	r2,0(r2)
  81a9a0:	e0bff805 	stb	r2,-32(fp)
  81a9a4:	e0bff807 	ldb	r2,-32(fp)
  81a9a8:	103f881e 	bne	r2,zero,81a7cc <__alt_data_end+0xff81a7cc>
  81a9ac:	e037883a 	mov	sp,fp
  81a9b0:	dfc00117 	ldw	ra,4(sp)
  81a9b4:	df000017 	ldw	fp,0(sp)
  81a9b8:	dec00504 	addi	sp,sp,20
  81a9bc:	f800283a 	ret

0081a9c0 <alt_putchar>:
  81a9c0:	defffd04 	addi	sp,sp,-12
  81a9c4:	dfc00215 	stw	ra,8(sp)
  81a9c8:	df000115 	stw	fp,4(sp)
  81a9cc:	df000104 	addi	fp,sp,4
  81a9d0:	e13fff15 	stw	r4,-4(fp)
  81a9d4:	008020b4 	movhi	r2,130
  81a9d8:	10bdb104 	addi	r2,r2,-2364
  81a9dc:	10800017 	ldw	r2,0(r2)
  81a9e0:	10800217 	ldw	r2,8(r2)
  81a9e4:	e13fff17 	ldw	r4,-4(fp)
  81a9e8:	100b883a 	mov	r5,r2
  81a9ec:	08136940 	call	813694 <putc>
  81a9f0:	e037883a 	mov	sp,fp
  81a9f4:	dfc00117 	ldw	ra,4(sp)
  81a9f8:	df000017 	ldw	fp,0(sp)
  81a9fc:	dec00204 	addi	sp,sp,8
  81aa00:	f800283a 	ret

0081aa04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81aa04:	defffe04 	addi	sp,sp,-8
  81aa08:	dfc00115 	stw	ra,4(sp)
  81aa0c:	df000015 	stw	fp,0(sp)
  81aa10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81aa14:	008020b4 	movhi	r2,130
  81aa18:	10bdbb04 	addi	r2,r2,-2324
  81aa1c:	10800017 	ldw	r2,0(r2)
  81aa20:	10000526 	beq	r2,zero,81aa38 <alt_get_errno+0x34>
  81aa24:	008020b4 	movhi	r2,130
  81aa28:	10bdbb04 	addi	r2,r2,-2324
  81aa2c:	10800017 	ldw	r2,0(r2)
  81aa30:	103ee83a 	callr	r2
  81aa34:	00000206 	br	81aa40 <alt_get_errno+0x3c>
  81aa38:	008020b4 	movhi	r2,130
  81aa3c:	10811e04 	addi	r2,r2,1144
}
  81aa40:	e037883a 	mov	sp,fp
  81aa44:	dfc00117 	ldw	ra,4(sp)
  81aa48:	df000017 	ldw	fp,0(sp)
  81aa4c:	dec00204 	addi	sp,sp,8
  81aa50:	f800283a 	ret

0081aa54 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  81aa54:	defff904 	addi	sp,sp,-28
  81aa58:	dfc00615 	stw	ra,24(sp)
  81aa5c:	df000515 	stw	fp,20(sp)
  81aa60:	df000504 	addi	fp,sp,20
  81aa64:	e13ffd15 	stw	r4,-12(fp)
  81aa68:	e17ffe15 	stw	r5,-8(fp)
  81aa6c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81aa70:	e0bffd17 	ldw	r2,-12(fp)
  81aa74:	10000616 	blt	r2,zero,81aa90 <read+0x3c>
  81aa78:	e0bffd17 	ldw	r2,-12(fp)
  81aa7c:	10c00324 	muli	r3,r2,12
  81aa80:	008020b4 	movhi	r2,130
  81aa84:	10bcae04 	addi	r2,r2,-3400
  81aa88:	1885883a 	add	r2,r3,r2
  81aa8c:	00000106 	br	81aa94 <read+0x40>
  81aa90:	0005883a 	mov	r2,zero
  81aa94:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  81aa98:	e0bffb17 	ldw	r2,-20(fp)
  81aa9c:	10002226 	beq	r2,zero,81ab28 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81aaa0:	e0bffb17 	ldw	r2,-20(fp)
  81aaa4:	10800217 	ldw	r2,8(r2)
  81aaa8:	108000cc 	andi	r2,r2,3
  81aaac:	10800060 	cmpeqi	r2,r2,1
  81aab0:	1000181e 	bne	r2,zero,81ab14 <read+0xc0>
        (fd->dev->read))
  81aab4:	e0bffb17 	ldw	r2,-20(fp)
  81aab8:	10800017 	ldw	r2,0(r2)
  81aabc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81aac0:	10001426 	beq	r2,zero,81ab14 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  81aac4:	e0bffb17 	ldw	r2,-20(fp)
  81aac8:	10800017 	ldw	r2,0(r2)
  81aacc:	10800517 	ldw	r2,20(r2)
  81aad0:	e0ffff17 	ldw	r3,-4(fp)
  81aad4:	e13ffb17 	ldw	r4,-20(fp)
  81aad8:	e17ffe17 	ldw	r5,-8(fp)
  81aadc:	180d883a 	mov	r6,r3
  81aae0:	103ee83a 	callr	r2
  81aae4:	e0bffc15 	stw	r2,-16(fp)
  81aae8:	e0bffc17 	ldw	r2,-16(fp)
  81aaec:	1000070e 	bge	r2,zero,81ab0c <read+0xb8>
        {
          ALT_ERRNO = -rval;
  81aaf0:	081aa040 	call	81aa04 <alt_get_errno>
  81aaf4:	1007883a 	mov	r3,r2
  81aaf8:	e0bffc17 	ldw	r2,-16(fp)
  81aafc:	0085c83a 	sub	r2,zero,r2
  81ab00:	18800015 	stw	r2,0(r3)
          return -1;
  81ab04:	00bfffc4 	movi	r2,-1
  81ab08:	00000c06 	br	81ab3c <read+0xe8>
        }
        return rval;
  81ab0c:	e0bffc17 	ldw	r2,-16(fp)
  81ab10:	00000a06 	br	81ab3c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  81ab14:	081aa040 	call	81aa04 <alt_get_errno>
  81ab18:	1007883a 	mov	r3,r2
  81ab1c:	00800344 	movi	r2,13
  81ab20:	18800015 	stw	r2,0(r3)
  81ab24:	00000406 	br	81ab38 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  81ab28:	081aa040 	call	81aa04 <alt_get_errno>
  81ab2c:	1007883a 	mov	r3,r2
  81ab30:	00801444 	movi	r2,81
  81ab34:	18800015 	stw	r2,0(r3)
  }
  return -1;
  81ab38:	00bfffc4 	movi	r2,-1
}
  81ab3c:	e037883a 	mov	sp,fp
  81ab40:	dfc00117 	ldw	ra,4(sp)
  81ab44:	df000017 	ldw	fp,0(sp)
  81ab48:	dec00204 	addi	sp,sp,8
  81ab4c:	f800283a 	ret

0081ab50 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  81ab50:	defffe04 	addi	sp,sp,-8
  81ab54:	df000115 	stw	fp,4(sp)
  81ab58:	df000104 	addi	fp,sp,4
  81ab5c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  81ab60:	e0bfff17 	ldw	r2,-4(fp)
  81ab64:	108000d0 	cmplti	r2,r2,3
  81ab68:	10000d1e 	bne	r2,zero,81aba0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  81ab6c:	008020b4 	movhi	r2,130
  81ab70:	10bcae04 	addi	r2,r2,-3400
  81ab74:	e0ffff17 	ldw	r3,-4(fp)
  81ab78:	18c00324 	muli	r3,r3,12
  81ab7c:	18c00204 	addi	r3,r3,8
  81ab80:	10c5883a 	add	r2,r2,r3
  81ab84:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  81ab88:	008020b4 	movhi	r2,130
  81ab8c:	10bcae04 	addi	r2,r2,-3400
  81ab90:	e0ffff17 	ldw	r3,-4(fp)
  81ab94:	18c00324 	muli	r3,r3,12
  81ab98:	10c5883a 	add	r2,r2,r3
  81ab9c:	10000015 	stw	zero,0(r2)
  }
}
  81aba0:	e037883a 	mov	sp,fp
  81aba4:	df000017 	ldw	fp,0(sp)
  81aba8:	dec00104 	addi	sp,sp,4
  81abac:	f800283a 	ret

0081abb0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  81abb0:	defff904 	addi	sp,sp,-28
  81abb4:	df000615 	stw	fp,24(sp)
  81abb8:	df000604 	addi	fp,sp,24
  81abbc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81abc0:	0005303a 	rdctl	r2,status
  81abc4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81abc8:	e0fffc17 	ldw	r3,-16(fp)
  81abcc:	00bfff84 	movi	r2,-2
  81abd0:	1884703a 	and	r2,r3,r2
  81abd4:	1001703a 	wrctl	status,r2
  
  return context;
  81abd8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  81abdc:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  81abe0:	d0a01317 	ldw	r2,-32692(gp)
  81abe4:	10c000c4 	addi	r3,r2,3
  81abe8:	00bfff04 	movi	r2,-4
  81abec:	1884703a 	and	r2,r3,r2
  81abf0:	d0a01315 	stw	r2,-32692(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  81abf4:	d0e01317 	ldw	r3,-32692(gp)
  81abf8:	e0bfff17 	ldw	r2,-4(fp)
  81abfc:	1887883a 	add	r3,r3,r2
  81ac00:	00804034 	movhi	r2,256
  81ac04:	10800004 	addi	r2,r2,0
  81ac08:	10c0062e 	bgeu	r2,r3,81ac24 <sbrk+0x74>
  81ac0c:	e0bffa17 	ldw	r2,-24(fp)
  81ac10:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ac14:	e0bffd17 	ldw	r2,-12(fp)
  81ac18:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  81ac1c:	00bfffc4 	movi	r2,-1
  81ac20:	00000b06 	br	81ac50 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  81ac24:	d0a01317 	ldw	r2,-32692(gp)
  81ac28:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
  81ac2c:	d0e01317 	ldw	r3,-32692(gp)
  81ac30:	e0bfff17 	ldw	r2,-4(fp)
  81ac34:	1885883a 	add	r2,r3,r2
  81ac38:	d0a01315 	stw	r2,-32692(gp)
  81ac3c:	e0bffa17 	ldw	r2,-24(fp)
  81ac40:	e0bffe15 	stw	r2,-8(fp)
  81ac44:	e0bffe17 	ldw	r2,-8(fp)
  81ac48:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  81ac4c:	e0bffb17 	ldw	r2,-20(fp)
} 
  81ac50:	e037883a 	mov	sp,fp
  81ac54:	df000017 	ldw	fp,0(sp)
  81ac58:	dec00104 	addi	sp,sp,4
  81ac5c:	f800283a 	ret

0081ac60 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  81ac60:	defffa04 	addi	sp,sp,-24
  81ac64:	df000515 	stw	fp,20(sp)
  81ac68:	df000504 	addi	fp,sp,20
  81ac6c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81ac70:	0005303a 	rdctl	r2,status
  81ac74:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81ac78:	e0fffc17 	ldw	r3,-16(fp)
  81ac7c:	00bfff84 	movi	r2,-2
  81ac80:	1884703a 	and	r2,r3,r2
  81ac84:	1001703a 	wrctl	status,r2
  
  return context;
  81ac88:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  81ac8c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  81ac90:	e0bfff17 	ldw	r2,-4(fp)
  81ac94:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  81ac98:	e0bffd17 	ldw	r2,-12(fp)
  81ac9c:	10800017 	ldw	r2,0(r2)
  81aca0:	e0fffd17 	ldw	r3,-12(fp)
  81aca4:	18c00117 	ldw	r3,4(r3)
  81aca8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  81acac:	e0bffd17 	ldw	r2,-12(fp)
  81acb0:	10800117 	ldw	r2,4(r2)
  81acb4:	e0fffd17 	ldw	r3,-12(fp)
  81acb8:	18c00017 	ldw	r3,0(r3)
  81acbc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81acc0:	e0bffd17 	ldw	r2,-12(fp)
  81acc4:	e0fffd17 	ldw	r3,-12(fp)
  81acc8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  81accc:	e0bffd17 	ldw	r2,-12(fp)
  81acd0:	e0fffd17 	ldw	r3,-12(fp)
  81acd4:	10c00015 	stw	r3,0(r2)
  81acd8:	e0bffb17 	ldw	r2,-20(fp)
  81acdc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ace0:	e0bffe17 	ldw	r2,-8(fp)
  81ace4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81ace8:	e037883a 	mov	sp,fp
  81acec:	df000017 	ldw	fp,0(sp)
  81acf0:	dec00104 	addi	sp,sp,4
  81acf4:	f800283a 	ret

0081acf8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  81acf8:	defffb04 	addi	sp,sp,-20
  81acfc:	dfc00415 	stw	ra,16(sp)
  81ad00:	df000315 	stw	fp,12(sp)
  81ad04:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  81ad08:	d0a01417 	ldw	r2,-32688(gp)
  81ad0c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  81ad10:	d0a38017 	ldw	r2,-29184(gp)
  81ad14:	10800044 	addi	r2,r2,1
  81ad18:	d0a38015 	stw	r2,-29184(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81ad1c:	00002e06 	br	81add8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  81ad20:	e0bffd17 	ldw	r2,-12(fp)
  81ad24:	10800017 	ldw	r2,0(r2)
  81ad28:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  81ad2c:	e0bffd17 	ldw	r2,-12(fp)
  81ad30:	10800403 	ldbu	r2,16(r2)
  81ad34:	10803fcc 	andi	r2,r2,255
  81ad38:	10000426 	beq	r2,zero,81ad4c <alt_tick+0x54>
  81ad3c:	d0a38017 	ldw	r2,-29184(gp)
  81ad40:	1000021e 	bne	r2,zero,81ad4c <alt_tick+0x54>
    {
      alarm->rollover = 0;
  81ad44:	e0bffd17 	ldw	r2,-12(fp)
  81ad48:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  81ad4c:	e0bffd17 	ldw	r2,-12(fp)
  81ad50:	10800217 	ldw	r2,8(r2)
  81ad54:	d0e38017 	ldw	r3,-29184(gp)
  81ad58:	18801d36 	bltu	r3,r2,81add0 <alt_tick+0xd8>
  81ad5c:	e0bffd17 	ldw	r2,-12(fp)
  81ad60:	10800403 	ldbu	r2,16(r2)
  81ad64:	10803fcc 	andi	r2,r2,255
  81ad68:	1000191e 	bne	r2,zero,81add0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  81ad6c:	e0bffd17 	ldw	r2,-12(fp)
  81ad70:	10800317 	ldw	r2,12(r2)
  81ad74:	e0fffd17 	ldw	r3,-12(fp)
  81ad78:	18c00517 	ldw	r3,20(r3)
  81ad7c:	1809883a 	mov	r4,r3
  81ad80:	103ee83a 	callr	r2
  81ad84:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  81ad88:	e0bfff17 	ldw	r2,-4(fp)
  81ad8c:	1000031e 	bne	r2,zero,81ad9c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  81ad90:	e13ffd17 	ldw	r4,-12(fp)
  81ad94:	081ac600 	call	81ac60 <alt_alarm_stop>
  81ad98:	00000d06 	br	81add0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  81ad9c:	e0bffd17 	ldw	r2,-12(fp)
  81ada0:	10c00217 	ldw	r3,8(r2)
  81ada4:	e0bfff17 	ldw	r2,-4(fp)
  81ada8:	1887883a 	add	r3,r3,r2
  81adac:	e0bffd17 	ldw	r2,-12(fp)
  81adb0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81adb4:	e0bffd17 	ldw	r2,-12(fp)
  81adb8:	10c00217 	ldw	r3,8(r2)
  81adbc:	d0a38017 	ldw	r2,-29184(gp)
  81adc0:	1880032e 	bgeu	r3,r2,81add0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81adc4:	e0bffd17 	ldw	r2,-12(fp)
  81adc8:	00c00044 	movi	r3,1
  81adcc:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  81add0:	e0bffe17 	ldw	r2,-8(fp)
  81add4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81add8:	e0fffd17 	ldw	r3,-12(fp)
  81addc:	d0a01404 	addi	r2,gp,-32688
  81ade0:	18bfcf1e 	bne	r3,r2,81ad20 <__alt_data_end+0xff81ad20>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81ade4:	0001883a 	nop
}
  81ade8:	e037883a 	mov	sp,fp
  81adec:	dfc00117 	ldw	ra,4(sp)
  81adf0:	df000017 	ldw	fp,0(sp)
  81adf4:	dec00204 	addi	sp,sp,8
  81adf8:	f800283a 	ret

0081adfc <usleep>:
  81adfc:	defffd04 	addi	sp,sp,-12
  81ae00:	dfc00215 	stw	ra,8(sp)
  81ae04:	df000115 	stw	fp,4(sp)
  81ae08:	df000104 	addi	fp,sp,4
  81ae0c:	e13fff15 	stw	r4,-4(fp)
  81ae10:	e13fff17 	ldw	r4,-4(fp)
  81ae14:	081d1ec0 	call	81d1ec <alt_busy_sleep>
  81ae18:	e037883a 	mov	sp,fp
  81ae1c:	dfc00117 	ldw	ra,4(sp)
  81ae20:	df000017 	ldw	fp,0(sp)
  81ae24:	dec00204 	addi	sp,sp,8
  81ae28:	f800283a 	ret

0081ae2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81ae2c:	defffe04 	addi	sp,sp,-8
  81ae30:	dfc00115 	stw	ra,4(sp)
  81ae34:	df000015 	stw	fp,0(sp)
  81ae38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81ae3c:	008020b4 	movhi	r2,130
  81ae40:	10bdbb04 	addi	r2,r2,-2324
  81ae44:	10800017 	ldw	r2,0(r2)
  81ae48:	10000526 	beq	r2,zero,81ae60 <alt_get_errno+0x34>
  81ae4c:	008020b4 	movhi	r2,130
  81ae50:	10bdbb04 	addi	r2,r2,-2324
  81ae54:	10800017 	ldw	r2,0(r2)
  81ae58:	103ee83a 	callr	r2
  81ae5c:	00000206 	br	81ae68 <alt_get_errno+0x3c>
  81ae60:	008020b4 	movhi	r2,130
  81ae64:	10811e04 	addi	r2,r2,1144
}
  81ae68:	e037883a 	mov	sp,fp
  81ae6c:	dfc00117 	ldw	ra,4(sp)
  81ae70:	df000017 	ldw	fp,0(sp)
  81ae74:	dec00204 	addi	sp,sp,8
  81ae78:	f800283a 	ret

0081ae7c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  81ae7c:	defff904 	addi	sp,sp,-28
  81ae80:	dfc00615 	stw	ra,24(sp)
  81ae84:	df000515 	stw	fp,20(sp)
  81ae88:	df000504 	addi	fp,sp,20
  81ae8c:	e13ffd15 	stw	r4,-12(fp)
  81ae90:	e17ffe15 	stw	r5,-8(fp)
  81ae94:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81ae98:	e0bffd17 	ldw	r2,-12(fp)
  81ae9c:	10000616 	blt	r2,zero,81aeb8 <write+0x3c>
  81aea0:	e0bffd17 	ldw	r2,-12(fp)
  81aea4:	10c00324 	muli	r3,r2,12
  81aea8:	008020b4 	movhi	r2,130
  81aeac:	10bcae04 	addi	r2,r2,-3400
  81aeb0:	1885883a 	add	r2,r3,r2
  81aeb4:	00000106 	br	81aebc <write+0x40>
  81aeb8:	0005883a 	mov	r2,zero
  81aebc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  81aec0:	e0bffb17 	ldw	r2,-20(fp)
  81aec4:	10002126 	beq	r2,zero,81af4c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  81aec8:	e0bffb17 	ldw	r2,-20(fp)
  81aecc:	10800217 	ldw	r2,8(r2)
  81aed0:	108000cc 	andi	r2,r2,3
  81aed4:	10001826 	beq	r2,zero,81af38 <write+0xbc>
  81aed8:	e0bffb17 	ldw	r2,-20(fp)
  81aedc:	10800017 	ldw	r2,0(r2)
  81aee0:	10800617 	ldw	r2,24(r2)
  81aee4:	10001426 	beq	r2,zero,81af38 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  81aee8:	e0bffb17 	ldw	r2,-20(fp)
  81aeec:	10800017 	ldw	r2,0(r2)
  81aef0:	10800617 	ldw	r2,24(r2)
  81aef4:	e0ffff17 	ldw	r3,-4(fp)
  81aef8:	e13ffb17 	ldw	r4,-20(fp)
  81aefc:	e17ffe17 	ldw	r5,-8(fp)
  81af00:	180d883a 	mov	r6,r3
  81af04:	103ee83a 	callr	r2
  81af08:	e0bffc15 	stw	r2,-16(fp)
  81af0c:	e0bffc17 	ldw	r2,-16(fp)
  81af10:	1000070e 	bge	r2,zero,81af30 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  81af14:	081ae2c0 	call	81ae2c <alt_get_errno>
  81af18:	1007883a 	mov	r3,r2
  81af1c:	e0bffc17 	ldw	r2,-16(fp)
  81af20:	0085c83a 	sub	r2,zero,r2
  81af24:	18800015 	stw	r2,0(r3)
        return -1;
  81af28:	00bfffc4 	movi	r2,-1
  81af2c:	00000c06 	br	81af60 <write+0xe4>
      }
      return rval;
  81af30:	e0bffc17 	ldw	r2,-16(fp)
  81af34:	00000a06 	br	81af60 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  81af38:	081ae2c0 	call	81ae2c <alt_get_errno>
  81af3c:	1007883a 	mov	r3,r2
  81af40:	00800344 	movi	r2,13
  81af44:	18800015 	stw	r2,0(r3)
  81af48:	00000406 	br	81af5c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  81af4c:	081ae2c0 	call	81ae2c <alt_get_errno>
  81af50:	1007883a 	mov	r3,r2
  81af54:	00801444 	movi	r2,81
  81af58:	18800015 	stw	r2,0(r3)
  }
  return -1;
  81af5c:	00bfffc4 	movi	r2,-1
}
  81af60:	e037883a 	mov	sp,fp
  81af64:	dfc00117 	ldw	ra,4(sp)
  81af68:	df000017 	ldw	fp,0(sp)
  81af6c:	dec00204 	addi	sp,sp,8
  81af70:	f800283a 	ret

0081af74 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  81af74:	defffd04 	addi	sp,sp,-12
  81af78:	dfc00215 	stw	ra,8(sp)
  81af7c:	df000115 	stw	fp,4(sp)
  81af80:	df000104 	addi	fp,sp,4
  81af84:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  81af88:	e13fff17 	ldw	r4,-4(fp)
  81af8c:	014020b4 	movhi	r5,130
  81af90:	297db804 	addi	r5,r5,-2336
  81af94:	081d3d80 	call	81d3d8 <alt_dev_llist_insert>
}
  81af98:	e037883a 	mov	sp,fp
  81af9c:	dfc00117 	ldw	ra,4(sp)
  81afa0:	df000017 	ldw	fp,0(sp)
  81afa4:	dec00204 	addi	sp,sp,8
  81afa8:	f800283a 	ret

0081afac <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  81afac:	defffd04 	addi	sp,sp,-12
  81afb0:	dfc00215 	stw	ra,8(sp)
  81afb4:	df000115 	stw	fp,4(sp)
  81afb8:	df000104 	addi	fp,sp,4
  81afbc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  81afc0:	081d8f40 	call	81d8f4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  81afc4:	00800044 	movi	r2,1
  81afc8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  81afcc:	e037883a 	mov	sp,fp
  81afd0:	dfc00117 	ldw	ra,4(sp)
  81afd4:	df000017 	ldw	fp,0(sp)
  81afd8:	dec00204 	addi	sp,sp,8
  81afdc:	f800283a 	ret

0081afe0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  81afe0:	defffe04 	addi	sp,sp,-8
  81afe4:	dfc00115 	stw	ra,4(sp)
  81afe8:	df000015 	stw	fp,0(sp)
  81afec:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYSTEM_TIMER, system_timer);
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  81aff0:	010020b4 	movhi	r4,130
  81aff4:	213d0e04 	addi	r4,r4,-3016
  81aff8:	081af740 	call	81af74 <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_DISPLAY, lcd_display);
  81affc:	010020b4 	movhi	r4,130
  81b000:	213d2304 	addi	r4,r4,-2932
  81b004:	081bfd40 	call	81bfd4 <altera_avalon_lcd_16207_init>
  81b008:	010020b4 	movhi	r4,130
  81b00c:	213d1904 	addi	r4,r4,-2972
  81b010:	081af740 	call	81af74 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  81b014:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART, uart);
  81b018:	010020b4 	movhi	r4,130
  81b01c:	213d6b04 	addi	r4,r4,-2644
  81b020:	000b883a 	mov	r5,zero
  81b024:	018000c4 	movi	r6,3
  81b028:	081c27c0 	call	81c27c <altera_avalon_uart_init>
  81b02c:	010020b4 	movhi	r4,130
  81b030:	213d6104 	addi	r4,r4,-2684
  81b034:	081af740 	call	81af74 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AUDIO_I2C_CONFIG, audio_i2c_config);
  81b038:	010020b4 	movhi	r4,130
  81b03c:	213d9204 	addi	r4,r4,-2488
  81b040:	081af740 	call	81af74 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO, Audio);
  81b044:	010020b4 	movhi	r4,130
  81b048:	213d9e04 	addi	r4,r4,-2440
  81b04c:	081af740 	call	81af74 <alt_dev_reg>
}
  81b050:	e037883a 	mov	sp,fp
  81b054:	dfc00117 	ldw	ra,4(sp)
  81b058:	df000017 	ldw	fp,0(sp)
  81b05c:	dec00204 	addi	sp,sp,8
  81b060:	f800283a 	ret

0081b064 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  81b064:	defffa04 	addi	sp,sp,-24
  81b068:	dfc00515 	stw	ra,20(sp)
  81b06c:	df000415 	stw	fp,16(sp)
  81b070:	df000404 	addi	fp,sp,16
  81b074:	e13ffd15 	stw	r4,-12(fp)
  81b078:	e17ffe15 	stw	r5,-8(fp)
  81b07c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  81b080:	e0bffd17 	ldw	r2,-12(fp)
  81b084:	10800017 	ldw	r2,0(r2)
  81b088:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  81b08c:	e0bffc17 	ldw	r2,-16(fp)
  81b090:	10c00a04 	addi	r3,r2,40
  81b094:	e0bffd17 	ldw	r2,-12(fp)
  81b098:	10800217 	ldw	r2,8(r2)
  81b09c:	1809883a 	mov	r4,r3
  81b0a0:	e17ffe17 	ldw	r5,-8(fp)
  81b0a4:	e1bfff17 	ldw	r6,-4(fp)
  81b0a8:	100f883a 	mov	r7,r2
  81b0ac:	081b1240 	call	81b124 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  81b0b0:	e037883a 	mov	sp,fp
  81b0b4:	dfc00117 	ldw	ra,4(sp)
  81b0b8:	df000017 	ldw	fp,0(sp)
  81b0bc:	dec00204 	addi	sp,sp,8
  81b0c0:	f800283a 	ret

0081b0c4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81b0c4:	defffa04 	addi	sp,sp,-24
  81b0c8:	dfc00515 	stw	ra,20(sp)
  81b0cc:	df000415 	stw	fp,16(sp)
  81b0d0:	df000404 	addi	fp,sp,16
  81b0d4:	e13ffd15 	stw	r4,-12(fp)
  81b0d8:	e17ffe15 	stw	r5,-8(fp)
  81b0dc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  81b0e0:	e0bffd17 	ldw	r2,-12(fp)
  81b0e4:	10800017 	ldw	r2,0(r2)
  81b0e8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  81b0ec:	e0bffc17 	ldw	r2,-16(fp)
  81b0f0:	10c00a04 	addi	r3,r2,40
  81b0f4:	e0bffd17 	ldw	r2,-12(fp)
  81b0f8:	10800217 	ldw	r2,8(r2)
  81b0fc:	1809883a 	mov	r4,r3
  81b100:	e17ffe17 	ldw	r5,-8(fp)
  81b104:	e1bfff17 	ldw	r6,-4(fp)
  81b108:	100f883a 	mov	r7,r2
  81b10c:	081b2080 	call	81b208 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  81b110:	e037883a 	mov	sp,fp
  81b114:	dfc00117 	ldw	ra,4(sp)
  81b118:	df000017 	ldw	fp,0(sp)
  81b11c:	dec00204 	addi	sp,sp,8
  81b120:	f800283a 	ret

0081b124 <altera_avalon_jtag_uart_read>:
 */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  81b124:	defff704 	addi	sp,sp,-36
  81b128:	df000815 	stw	fp,32(sp)
  81b12c:	df000804 	addi	fp,sp,32
  81b130:	e13ffc15 	stw	r4,-16(fp)
  81b134:	e17ffd15 	stw	r5,-12(fp)
  81b138:	e1bffe15 	stw	r6,-8(fp)
  81b13c:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
  81b140:	e0bffc17 	ldw	r2,-16(fp)
  81b144:	10800017 	ldw	r2,0(r2)
  81b148:	e0bff915 	stw	r2,-28(fp)

  char * ptr = buffer;
  81b14c:	e0bffd17 	ldw	r2,-12(fp)
  81b150:	e0bff815 	stw	r2,-32(fp)
  char * end = buffer + space;
  81b154:	e0bffe17 	ldw	r2,-8(fp)
  81b158:	e0fffd17 	ldw	r3,-12(fp)
  81b15c:	1885883a 	add	r2,r3,r2
  81b160:	e0bffa15 	stw	r2,-24(fp)

  while (ptr < end)
  81b164:	00001406 	br	81b1b8 <altera_avalon_jtag_uart_read+0x94>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  81b168:	e0bff917 	ldw	r2,-28(fp)
  81b16c:	10800037 	ldwio	r2,0(r2)
  81b170:	e0bffb15 	stw	r2,-20(fp)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
  81b174:	e0bffb17 	ldw	r2,-20(fp)
  81b178:	10a0000c 	andi	r2,r2,32768
  81b17c:	10000626 	beq	r2,zero,81b198 <altera_avalon_jtag_uart_read+0x74>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  81b180:	e0bff817 	ldw	r2,-32(fp)
  81b184:	10c00044 	addi	r3,r2,1
  81b188:	e0fff815 	stw	r3,-32(fp)
  81b18c:	e0fffb17 	ldw	r3,-20(fp)
  81b190:	10c00005 	stb	r3,0(r2)
  81b194:	00000806 	br	81b1b8 <altera_avalon_jtag_uart_read+0x94>
    else if (ptr != buffer)
  81b198:	e0fff817 	ldw	r3,-32(fp)
  81b19c:	e0bffd17 	ldw	r2,-12(fp)
  81b1a0:	18800126 	beq	r3,r2,81b1a8 <altera_avalon_jtag_uart_read+0x84>
      break;
  81b1a4:	00000706 	br	81b1c4 <altera_avalon_jtag_uart_read+0xa0>
    else if(flags & O_NONBLOCK)
  81b1a8:	e0bfff17 	ldw	r2,-4(fp)
  81b1ac:	1090000c 	andi	r2,r2,16384
  81b1b0:	10000126 	beq	r2,zero,81b1b8 <altera_avalon_jtag_uart_read+0x94>
      break;   
  81b1b4:	00000306 	br	81b1c4 <altera_avalon_jtag_uart_read+0xa0>
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
  81b1b8:	e0fff817 	ldw	r3,-32(fp)
  81b1bc:	e0bffa17 	ldw	r2,-24(fp)
  81b1c0:	18bfe936 	bltu	r3,r2,81b168 <__alt_data_end+0xff81b168>
    else if(flags & O_NONBLOCK)
      break;   
    
  }

  if (ptr != buffer)
  81b1c4:	e0fff817 	ldw	r3,-32(fp)
  81b1c8:	e0bffd17 	ldw	r2,-12(fp)
  81b1cc:	18800426 	beq	r3,r2,81b1e0 <altera_avalon_jtag_uart_read+0xbc>
    return ptr - buffer;
  81b1d0:	e0fff817 	ldw	r3,-32(fp)
  81b1d4:	e0bffd17 	ldw	r2,-12(fp)
  81b1d8:	1885c83a 	sub	r2,r3,r2
  81b1dc:	00000606 	br	81b1f8 <altera_avalon_jtag_uart_read+0xd4>
  else if (flags & O_NONBLOCK)
  81b1e0:	e0bfff17 	ldw	r2,-4(fp)
  81b1e4:	1090000c 	andi	r2,r2,16384
  81b1e8:	10000226 	beq	r2,zero,81b1f4 <altera_avalon_jtag_uart_read+0xd0>
    return -EWOULDBLOCK;
  81b1ec:	00bffd44 	movi	r2,-11
  81b1f0:	00000106 	br	81b1f8 <altera_avalon_jtag_uart_read+0xd4>
  else
    return -EIO;
  81b1f4:	00bffec4 	movi	r2,-5
}
  81b1f8:	e037883a 	mov	sp,fp
  81b1fc:	df000017 	ldw	fp,0(sp)
  81b200:	dec00104 	addi	sp,sp,4
  81b204:	f800283a 	ret

0081b208 <altera_avalon_jtag_uart_write>:
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  81b208:	defff904 	addi	sp,sp,-28
  81b20c:	df000615 	stw	fp,24(sp)
  81b210:	df000604 	addi	fp,sp,24
  81b214:	e13ffc15 	stw	r4,-16(fp)
  81b218:	e17ffd15 	stw	r5,-12(fp)
  81b21c:	e1bffe15 	stw	r6,-8(fp)
  81b220:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
  81b224:	e0bffc17 	ldw	r2,-16(fp)
  81b228:	10800017 	ldw	r2,0(r2)
  81b22c:	e0bffa15 	stw	r2,-24(fp)

  const char * end = ptr + count;
  81b230:	e0bffe17 	ldw	r2,-8(fp)
  81b234:	e0fffd17 	ldw	r3,-12(fp)
  81b238:	1885883a 	add	r2,r3,r2
  81b23c:	e0bffb15 	stw	r2,-20(fp)

  while (ptr < end)
  81b240:	00000e06 	br	81b27c <altera_avalon_jtag_uart_write+0x74>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
  81b244:	e0bffa17 	ldw	r2,-24(fp)
  81b248:	10800104 	addi	r2,r2,4
  81b24c:	10800037 	ldwio	r2,0(r2)
  81b250:	10bfffec 	andhi	r2,r2,65535
  81b254:	10000926 	beq	r2,zero,81b27c <altera_avalon_jtag_uart_write+0x74>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
  81b258:	e0fffa17 	ldw	r3,-24(fp)
  81b25c:	e0bffd17 	ldw	r2,-12(fp)
  81b260:	11000044 	addi	r4,r2,1
  81b264:	e13ffd15 	stw	r4,-12(fp)
  81b268:	10800003 	ldbu	r2,0(r2)
  81b26c:	10803fcc 	andi	r2,r2,255
  81b270:	1080201c 	xori	r2,r2,128
  81b274:	10bfe004 	addi	r2,r2,-128
  81b278:	18800035 	stwio	r2,0(r3)
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
  81b27c:	e0fffd17 	ldw	r3,-12(fp)
  81b280:	e0bffb17 	ldw	r2,-20(fp)
  81b284:	18bfef36 	bltu	r3,r2,81b244 <__alt_data_end+0xff81b244>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);

  return count;
  81b288:	e0bffe17 	ldw	r2,-8(fp)
}
  81b28c:	e037883a 	mov	sp,fp
  81b290:	df000017 	ldw	fp,0(sp)
  81b294:	dec00104 	addi	sp,sp,4
  81b298:	f800283a 	ret

0081b29c <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
  81b29c:	defffa04 	addi	sp,sp,-24
  81b2a0:	dfc00515 	stw	ra,20(sp)
  81b2a4:	df000415 	stw	fp,16(sp)
  81b2a8:	df000404 	addi	fp,sp,16
  81b2ac:	e13ffe15 	stw	r4,-8(fp)
  81b2b0:	2805883a 	mov	r2,r5
  81b2b4:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  81b2b8:	e0bffe17 	ldw	r2,-8(fp)
  81b2bc:	10800017 	ldw	r2,0(r2)
  81b2c0:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  81b2c4:	008003f4 	movhi	r2,15
  81b2c8:	10909004 	addi	r2,r2,16960
  81b2cc:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  81b2d0:	e0bffe17 	ldw	r2,-8(fp)
  81b2d4:	10800803 	ldbu	r2,32(r2)
  81b2d8:	10803fcc 	andi	r2,r2,255
  81b2dc:	1080201c 	xori	r2,r2,128
  81b2e0:	10bfe004 	addi	r2,r2,-128
  81b2e4:	10000126 	beq	r2,zero,81b2ec <lcd_write_command+0x50>
    return;
  81b2e8:	00001406 	br	81b33c <lcd_write_command+0xa0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  81b2ec:	00000906 	br	81b314 <lcd_write_command+0x78>
    if (--i == 0)
  81b2f0:	e0bffc17 	ldw	r2,-16(fp)
  81b2f4:	10bfffc4 	addi	r2,r2,-1
  81b2f8:	e0bffc15 	stw	r2,-16(fp)
  81b2fc:	e0bffc17 	ldw	r2,-16(fp)
  81b300:	1000041e 	bne	r2,zero,81b314 <lcd_write_command+0x78>
    {
      sp->broken = 1;
  81b304:	e0bffe17 	ldw	r2,-8(fp)
  81b308:	00c00044 	movi	r3,1
  81b30c:	10c00805 	stb	r3,32(r2)
      return;
  81b310:	00000a06 	br	81b33c <lcd_write_command+0xa0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  81b314:	e0bffd17 	ldw	r2,-12(fp)
  81b318:	10800104 	addi	r2,r2,4
  81b31c:	10800037 	ldwio	r2,0(r2)
  81b320:	1080200c 	andi	r2,r2,128
  81b324:	103ff21e 	bne	r2,zero,81b2f0 <__alt_data_end+0xff81b2f0>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  81b328:	01001904 	movi	r4,100
  81b32c:	081adfc0 	call	81adfc <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
  81b330:	e0bffd17 	ldw	r2,-12(fp)
  81b334:	e0ffff03 	ldbu	r3,-4(fp)
  81b338:	10c00035 	stwio	r3,0(r2)
}
  81b33c:	e037883a 	mov	sp,fp
  81b340:	dfc00117 	ldw	ra,4(sp)
  81b344:	df000017 	ldw	fp,0(sp)
  81b348:	dec00204 	addi	sp,sp,8
  81b34c:	f800283a 	ret

0081b350 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
  81b350:	defffa04 	addi	sp,sp,-24
  81b354:	dfc00515 	stw	ra,20(sp)
  81b358:	df000415 	stw	fp,16(sp)
  81b35c:	df000404 	addi	fp,sp,16
  81b360:	e13ffe15 	stw	r4,-8(fp)
  81b364:	2805883a 	mov	r2,r5
  81b368:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  81b36c:	e0bffe17 	ldw	r2,-8(fp)
  81b370:	10800017 	ldw	r2,0(r2)
  81b374:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  81b378:	008003f4 	movhi	r2,15
  81b37c:	10909004 	addi	r2,r2,16960
  81b380:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  81b384:	e0bffe17 	ldw	r2,-8(fp)
  81b388:	10800803 	ldbu	r2,32(r2)
  81b38c:	10803fcc 	andi	r2,r2,255
  81b390:	1080201c 	xori	r2,r2,128
  81b394:	10bfe004 	addi	r2,r2,-128
  81b398:	10000126 	beq	r2,zero,81b3a0 <lcd_write_data+0x50>
    return;
  81b39c:	00001c06 	br	81b410 <lcd_write_data+0xc0>

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  81b3a0:	00000906 	br	81b3c8 <lcd_write_data+0x78>
    if (--i == 0)
  81b3a4:	e0bffc17 	ldw	r2,-16(fp)
  81b3a8:	10bfffc4 	addi	r2,r2,-1
  81b3ac:	e0bffc15 	stw	r2,-16(fp)
  81b3b0:	e0bffc17 	ldw	r2,-16(fp)
  81b3b4:	1000041e 	bne	r2,zero,81b3c8 <lcd_write_data+0x78>
    {
      sp->broken = 1;
  81b3b8:	e0bffe17 	ldw	r2,-8(fp)
  81b3bc:	00c00044 	movi	r3,1
  81b3c0:	10c00805 	stb	r3,32(r2)
      return;
  81b3c4:	00001206 	br	81b410 <lcd_write_data+0xc0>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  81b3c8:	e0bffd17 	ldw	r2,-12(fp)
  81b3cc:	10800104 	addi	r2,r2,4
  81b3d0:	10800037 	ldwio	r2,0(r2)
  81b3d4:	1080200c 	andi	r2,r2,128
  81b3d8:	103ff21e 	bne	r2,zero,81b3a4 <__alt_data_end+0xff81b3a4>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  81b3dc:	01001904 	movi	r4,100
  81b3e0:	081adfc0 	call	81adfc <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
  81b3e4:	e0bffd17 	ldw	r2,-12(fp)
  81b3e8:	10800204 	addi	r2,r2,8
  81b3ec:	1007883a 	mov	r3,r2
  81b3f0:	e0bfff03 	ldbu	r2,-4(fp)
  81b3f4:	18800035 	stwio	r2,0(r3)

  sp->address++;
  81b3f8:	e0bffe17 	ldw	r2,-8(fp)
  81b3fc:	108008c3 	ldbu	r2,35(r2)
  81b400:	10800044 	addi	r2,r2,1
  81b404:	1007883a 	mov	r3,r2
  81b408:	e0bffe17 	ldw	r2,-8(fp)
  81b40c:	10c008c5 	stb	r3,35(r2)
}
  81b410:	e037883a 	mov	sp,fp
  81b414:	dfc00117 	ldw	ra,4(sp)
  81b418:	df000017 	ldw	fp,0(sp)
  81b41c:	dec00204 	addi	sp,sp,8
  81b420:	f800283a 	ret

0081b424 <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
  81b424:	defffc04 	addi	sp,sp,-16
  81b428:	dfc00315 	stw	ra,12(sp)
  81b42c:	df000215 	stw	fp,8(sp)
  81b430:	df000204 	addi	fp,sp,8
  81b434:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
  81b438:	e13fff17 	ldw	r4,-4(fp)
  81b43c:	01400044 	movi	r5,1
  81b440:	081b29c0 	call	81b29c <lcd_write_command>

  sp->x = 0;
  81b444:	e0bfff17 	ldw	r2,-4(fp)
  81b448:	10000845 	stb	zero,33(r2)
  sp->y = 0;
  81b44c:	e0bfff17 	ldw	r2,-4(fp)
  81b450:	10000885 	stb	zero,34(r2)
  sp->address = 0;
  81b454:	e0bfff17 	ldw	r2,-4(fp)
  81b458:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b45c:	e03ffe15 	stw	zero,-8(fp)
  81b460:	00001b06 	br	81b4d0 <lcd_clear_screen+0xac>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
  81b464:	e0bffe17 	ldw	r2,-8(fp)
  81b468:	108018e4 	muli	r2,r2,99
  81b46c:	10801004 	addi	r2,r2,64
  81b470:	e0ffff17 	ldw	r3,-4(fp)
  81b474:	1885883a 	add	r2,r3,r2
  81b478:	1009883a 	mov	r4,r2
  81b47c:	01400804 	movi	r5,32
  81b480:	01801444 	movi	r6,81
  81b484:	080b8380 	call	80b838 <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
  81b488:	e0bffe17 	ldw	r2,-8(fp)
  81b48c:	108018e4 	muli	r2,r2,99
  81b490:	10800c04 	addi	r2,r2,48
  81b494:	e0ffff17 	ldw	r3,-4(fp)
  81b498:	1885883a 	add	r2,r3,r2
  81b49c:	1009883a 	mov	r4,r2
  81b4a0:	01400804 	movi	r5,32
  81b4a4:	01800404 	movi	r6,16
  81b4a8:	080b8380 	call	80b838 <memset>
    sp->line[y].width = 0;
  81b4ac:	e0ffff17 	ldw	r3,-4(fp)
  81b4b0:	e0bffe17 	ldw	r2,-8(fp)
  81b4b4:	108018e4 	muli	r2,r2,99
  81b4b8:	10802404 	addi	r2,r2,144
  81b4bc:	1885883a 	add	r2,r3,r2
  81b4c0:	10000045 	stb	zero,1(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b4c4:	e0bffe17 	ldw	r2,-8(fp)
  81b4c8:	10800044 	addi	r2,r2,1
  81b4cc:	e0bffe15 	stw	r2,-8(fp)
  81b4d0:	e0bffe17 	ldw	r2,-8(fp)
  81b4d4:	10800090 	cmplti	r2,r2,2
  81b4d8:	103fe21e 	bne	r2,zero,81b464 <__alt_data_end+0xff81b464>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
  81b4dc:	e037883a 	mov	sp,fp
  81b4e0:	dfc00117 	ldw	ra,4(sp)
  81b4e4:	df000017 	ldw	fp,0(sp)
  81b4e8:	dec00204 	addi	sp,sp,8
  81b4ec:	f800283a 	ret

0081b4f0 <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
  81b4f0:	defff704 	addi	sp,sp,-36
  81b4f4:	dfc00815 	stw	ra,32(sp)
  81b4f8:	df000715 	stw	fp,28(sp)
  81b4fc:	df000704 	addi	fp,sp,28
  81b500:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
  81b504:	e0bfff17 	ldw	r2,-4(fp)
  81b508:	10800943 	ldbu	r2,37(r2)
  81b50c:	10803fcc 	andi	r2,r2,255
  81b510:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b514:	e03ff915 	stw	zero,-28(fp)
  81b518:	00006706 	br	81b6b8 <lcd_repaint_screen+0x1c8>
  {
    int width  = sp->line[y].width;
  81b51c:	e0ffff17 	ldw	r3,-4(fp)
  81b520:	e0bff917 	ldw	r2,-28(fp)
  81b524:	108018e4 	muli	r2,r2,99
  81b528:	10802404 	addi	r2,r2,144
  81b52c:	1885883a 	add	r2,r3,r2
  81b530:	10800043 	ldbu	r2,1(r2)
  81b534:	10803fcc 	andi	r2,r2,255
  81b538:	1080201c 	xori	r2,r2,128
  81b53c:	10bfe004 	addi	r2,r2,-128
  81b540:	e0bffd15 	stw	r2,-12(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
  81b544:	e0ffff17 	ldw	r3,-4(fp)
  81b548:	e0bff917 	ldw	r2,-28(fp)
  81b54c:	108018e4 	muli	r2,r2,99
  81b550:	10802404 	addi	r2,r2,144
  81b554:	1885883a 	add	r2,r3,r2
  81b558:	10800083 	ldbu	r2,2(r2)
  81b55c:	10c03fcc 	andi	r3,r2,255
  81b560:	e0bffc17 	ldw	r2,-16(fp)
  81b564:	1885383a 	mul	r2,r3,r2
  81b568:	1005d23a 	srai	r2,r2,8
  81b56c:	e0bffb15 	stw	r2,-20(fp)
    if (offset >= width)
  81b570:	e0fffb17 	ldw	r3,-20(fp)
  81b574:	e0bffd17 	ldw	r2,-12(fp)
  81b578:	18800116 	blt	r3,r2,81b580 <lcd_repaint_screen+0x90>
      offset = 0;
  81b57c:	e03ffb15 	stw	zero,-20(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  81b580:	e03ffa15 	stw	zero,-24(fp)
  81b584:	00004606 	br	81b6a0 <lcd_repaint_screen+0x1b0>
    {
      char c = sp->line[y].data[(x + offset) % width];
  81b588:	e0fffa17 	ldw	r3,-24(fp)
  81b58c:	e0bffb17 	ldw	r2,-20(fp)
  81b590:	1885883a 	add	r2,r3,r2
  81b594:	1009883a 	mov	r4,r2
  81b598:	e17ffd17 	ldw	r5,-12(fp)
  81b59c:	0809a600 	call	809a60 <__modsi3>
  81b5a0:	1009883a 	mov	r4,r2
  81b5a4:	e0ffff17 	ldw	r3,-4(fp)
  81b5a8:	e0bff917 	ldw	r2,-28(fp)
  81b5ac:	108018e4 	muli	r2,r2,99
  81b5b0:	1885883a 	add	r2,r3,r2
  81b5b4:	1105883a 	add	r2,r2,r4
  81b5b8:	10801004 	addi	r2,r2,64
  81b5bc:	10800003 	ldbu	r2,0(r2)
  81b5c0:	e0bffe05 	stb	r2,-8(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
  81b5c4:	e0ffff17 	ldw	r3,-4(fp)
  81b5c8:	e0bff917 	ldw	r2,-28(fp)
  81b5cc:	108018e4 	muli	r2,r2,99
  81b5d0:	1887883a 	add	r3,r3,r2
  81b5d4:	e0bffa17 	ldw	r2,-24(fp)
  81b5d8:	1885883a 	add	r2,r3,r2
  81b5dc:	10800c04 	addi	r2,r2,48
  81b5e0:	10800003 	ldbu	r2,0(r2)
  81b5e4:	10c03fcc 	andi	r3,r2,255
  81b5e8:	18c0201c 	xori	r3,r3,128
  81b5ec:	18ffe004 	addi	r3,r3,-128
  81b5f0:	e0bffe07 	ldb	r2,-8(fp)
  81b5f4:	18802726 	beq	r3,r2,81b694 <lcd_repaint_screen+0x1a4>
      {
        unsigned char address = x + colstart[y];
  81b5f8:	e0fff917 	ldw	r3,-28(fp)
  81b5fc:	d0a01604 	addi	r2,gp,-32680
  81b600:	1885883a 	add	r2,r3,r2
  81b604:	10800003 	ldbu	r2,0(r2)
  81b608:	1007883a 	mov	r3,r2
  81b60c:	e0bffa17 	ldw	r2,-24(fp)
  81b610:	1885883a 	add	r2,r3,r2
  81b614:	e0bffe45 	stb	r2,-7(fp)

        if (address != sp->address)
  81b618:	e0fffe43 	ldbu	r3,-7(fp)
  81b61c:	e0bfff17 	ldw	r2,-4(fp)
  81b620:	108008c3 	ldbu	r2,35(r2)
  81b624:	10803fcc 	andi	r2,r2,255
  81b628:	1080201c 	xori	r2,r2,128
  81b62c:	10bfe004 	addi	r2,r2,-128
  81b630:	18800a26 	beq	r3,r2,81b65c <lcd_repaint_screen+0x16c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
  81b634:	e0fffe43 	ldbu	r3,-7(fp)
  81b638:	00bfe004 	movi	r2,-128
  81b63c:	1884b03a 	or	r2,r3,r2
  81b640:	10803fcc 	andi	r2,r2,255
  81b644:	e13fff17 	ldw	r4,-4(fp)
  81b648:	100b883a 	mov	r5,r2
  81b64c:	081b29c0 	call	81b29c <lcd_write_command>
          sp->address = address;
  81b650:	e0fffe43 	ldbu	r3,-7(fp)
  81b654:	e0bfff17 	ldw	r2,-4(fp)
  81b658:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
  81b65c:	e0bffe03 	ldbu	r2,-8(fp)
  81b660:	10803fcc 	andi	r2,r2,255
  81b664:	e13fff17 	ldw	r4,-4(fp)
  81b668:	100b883a 	mov	r5,r2
  81b66c:	081b3500 	call	81b350 <lcd_write_data>
        sp->line[y].visible[x] = c;
  81b670:	e0ffff17 	ldw	r3,-4(fp)
  81b674:	e0bff917 	ldw	r2,-28(fp)
  81b678:	108018e4 	muli	r2,r2,99
  81b67c:	1887883a 	add	r3,r3,r2
  81b680:	e0bffa17 	ldw	r2,-24(fp)
  81b684:	1885883a 	add	r2,r3,r2
  81b688:	10800c04 	addi	r2,r2,48
  81b68c:	e0fffe03 	ldbu	r3,-8(fp)
  81b690:	10c00005 	stb	r3,0(r2)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  81b694:	e0bffa17 	ldw	r2,-24(fp)
  81b698:	10800044 	addi	r2,r2,1
  81b69c:	e0bffa15 	stw	r2,-24(fp)
  81b6a0:	e0bffa17 	ldw	r2,-24(fp)
  81b6a4:	10800410 	cmplti	r2,r2,16
  81b6a8:	103fb71e 	bne	r2,zero,81b588 <__alt_data_end+0xff81b588>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b6ac:	e0bff917 	ldw	r2,-28(fp)
  81b6b0:	10800044 	addi	r2,r2,1
  81b6b4:	e0bff915 	stw	r2,-28(fp)
  81b6b8:	e0bff917 	ldw	r2,-28(fp)
  81b6bc:	10800090 	cmplti	r2,r2,2
  81b6c0:	103f961e 	bne	r2,zero,81b51c <__alt_data_end+0xff81b51c>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
  81b6c4:	e037883a 	mov	sp,fp
  81b6c8:	dfc00117 	ldw	ra,4(sp)
  81b6cc:	df000017 	ldw	fp,0(sp)
  81b6d0:	dec00204 	addi	sp,sp,8
  81b6d4:	f800283a 	ret

0081b6d8 <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  81b6d8:	defffc04 	addi	sp,sp,-16
  81b6dc:	dfc00315 	stw	ra,12(sp)
  81b6e0:	df000215 	stw	fp,8(sp)
  81b6e4:	df000204 	addi	fp,sp,8
  81b6e8:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b6ec:	e03ffe15 	stw	zero,-8(fp)
  81b6f0:	00001d06 	br	81b768 <lcd_scroll_up+0x90>
  {
    if (y < ALT_LCD_HEIGHT-1)
  81b6f4:	e0bffe17 	ldw	r2,-8(fp)
  81b6f8:	00800f16 	blt	zero,r2,81b738 <lcd_scroll_up+0x60>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
  81b6fc:	e0bffe17 	ldw	r2,-8(fp)
  81b700:	108018e4 	muli	r2,r2,99
  81b704:	10801004 	addi	r2,r2,64
  81b708:	e0ffff17 	ldw	r3,-4(fp)
  81b70c:	1889883a 	add	r4,r3,r2
  81b710:	e0bffe17 	ldw	r2,-8(fp)
  81b714:	10800044 	addi	r2,r2,1
  81b718:	108018e4 	muli	r2,r2,99
  81b71c:	10801004 	addi	r2,r2,64
  81b720:	e0ffff17 	ldw	r3,-4(fp)
  81b724:	1885883a 	add	r2,r3,r2
  81b728:	100b883a 	mov	r5,r2
  81b72c:	01801404 	movi	r6,80
  81b730:	08123c00 	call	8123c0 <memcpy>
  81b734:	00000906 	br	81b75c <lcd_scroll_up+0x84>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  81b738:	e0bffe17 	ldw	r2,-8(fp)
  81b73c:	108018e4 	muli	r2,r2,99
  81b740:	10801004 	addi	r2,r2,64
  81b744:	e0ffff17 	ldw	r3,-4(fp)
  81b748:	1885883a 	add	r2,r3,r2
  81b74c:	1009883a 	mov	r4,r2
  81b750:	01400804 	movi	r5,32
  81b754:	01801404 	movi	r6,80
  81b758:	080b8380 	call	80b838 <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81b75c:	e0bffe17 	ldw	r2,-8(fp)
  81b760:	10800044 	addi	r2,r2,1
  81b764:	e0bffe15 	stw	r2,-8(fp)
  81b768:	e0bffe17 	ldw	r2,-8(fp)
  81b76c:	10800090 	cmplti	r2,r2,2
  81b770:	103fe01e 	bne	r2,zero,81b6f4 <__alt_data_end+0xff81b6f4>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
  81b774:	e0bfff17 	ldw	r2,-4(fp)
  81b778:	10800883 	ldbu	r2,34(r2)
  81b77c:	10bfffc4 	addi	r2,r2,-1
  81b780:	1007883a 	mov	r3,r2
  81b784:	e0bfff17 	ldw	r2,-4(fp)
  81b788:	10c00885 	stb	r3,34(r2)
}
  81b78c:	e037883a 	mov	sp,fp
  81b790:	dfc00117 	ldw	ra,4(sp)
  81b794:	df000017 	ldw	fp,0(sp)
  81b798:	dec00204 	addi	sp,sp,8
  81b79c:	f800283a 	ret

0081b7a0 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
  81b7a0:	defff904 	addi	sp,sp,-28
  81b7a4:	dfc00615 	stw	ra,24(sp)
  81b7a8:	df000515 	stw	fp,20(sp)
  81b7ac:	df000504 	addi	fp,sp,20
  81b7b0:	e13ffe15 	stw	r4,-8(fp)
  81b7b4:	2805883a 	mov	r2,r5
  81b7b8:	e0bfff05 	stb	r2,-4(fp)
  int parm1 = 0, parm2 = 0;
  81b7bc:	e03ffb15 	stw	zero,-20(fp)
  81b7c0:	e03ffc15 	stw	zero,-16(fp)

  if (sp->escape[0] == '[')
  81b7c4:	e0bffe17 	ldw	r2,-8(fp)
  81b7c8:	10800a03 	ldbu	r2,40(r2)
  81b7cc:	10803fcc 	andi	r2,r2,255
  81b7d0:	1080201c 	xori	r2,r2,128
  81b7d4:	10bfe004 	addi	r2,r2,-128
  81b7d8:	108016d8 	cmpnei	r2,r2,91
  81b7dc:	1000441e 	bne	r2,zero,81b8f0 <lcd_handle_escape+0x150>
  {
    char * ptr = sp->escape+1;
  81b7e0:	e0bffe17 	ldw	r2,-8(fp)
  81b7e4:	10800a44 	addi	r2,r2,41
  81b7e8:	e0bffd15 	stw	r2,-12(fp)
    while (isdigit(*ptr))
  81b7ec:	00000c06 	br	81b820 <lcd_handle_escape+0x80>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
  81b7f0:	e0bffb17 	ldw	r2,-20(fp)
  81b7f4:	10c002a4 	muli	r3,r2,10
  81b7f8:	e0bffd17 	ldw	r2,-12(fp)
  81b7fc:	11000044 	addi	r4,r2,1
  81b800:	e13ffd15 	stw	r4,-12(fp)
  81b804:	10800003 	ldbu	r2,0(r2)
  81b808:	10803fcc 	andi	r2,r2,255
  81b80c:	1080201c 	xori	r2,r2,128
  81b810:	10bfe004 	addi	r2,r2,-128
  81b814:	10bff404 	addi	r2,r2,-48
  81b818:	1885883a 	add	r2,r3,r2
  81b81c:	e0bffb15 	stw	r2,-20(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
  81b820:	008020b4 	movhi	r2,130
  81b824:	10bdc104 	addi	r2,r2,-2300
  81b828:	10c00017 	ldw	r3,0(r2)
  81b82c:	e0bffd17 	ldw	r2,-12(fp)
  81b830:	10800003 	ldbu	r2,0(r2)
  81b834:	10803fcc 	andi	r2,r2,255
  81b838:	1080201c 	xori	r2,r2,128
  81b83c:	10bfe004 	addi	r2,r2,-128
  81b840:	10800044 	addi	r2,r2,1
  81b844:	1885883a 	add	r2,r3,r2
  81b848:	10800003 	ldbu	r2,0(r2)
  81b84c:	10803fcc 	andi	r2,r2,255
  81b850:	1080010c 	andi	r2,r2,4
  81b854:	103fe61e 	bne	r2,zero,81b7f0 <__alt_data_end+0xff81b7f0>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
  81b858:	e0bffd17 	ldw	r2,-12(fp)
  81b85c:	10800003 	ldbu	r2,0(r2)
  81b860:	10803fcc 	andi	r2,r2,255
  81b864:	1080201c 	xori	r2,r2,128
  81b868:	10bfe004 	addi	r2,r2,-128
  81b86c:	10800ed8 	cmpnei	r2,r2,59
  81b870:	10001e1e 	bne	r2,zero,81b8ec <lcd_handle_escape+0x14c>
    {
      ptr++;
  81b874:	e0bffd17 	ldw	r2,-12(fp)
  81b878:	10800044 	addi	r2,r2,1
  81b87c:	e0bffd15 	stw	r2,-12(fp)
      while (isdigit(*ptr))
  81b880:	00000c06 	br	81b8b4 <lcd_handle_escape+0x114>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
  81b884:	e0bffc17 	ldw	r2,-16(fp)
  81b888:	10c002a4 	muli	r3,r2,10
  81b88c:	e0bffd17 	ldw	r2,-12(fp)
  81b890:	11000044 	addi	r4,r2,1
  81b894:	e13ffd15 	stw	r4,-12(fp)
  81b898:	10800003 	ldbu	r2,0(r2)
  81b89c:	10803fcc 	andi	r2,r2,255
  81b8a0:	1080201c 	xori	r2,r2,128
  81b8a4:	10bfe004 	addi	r2,r2,-128
  81b8a8:	10bff404 	addi	r2,r2,-48
  81b8ac:	1885883a 	add	r2,r3,r2
  81b8b0:	e0bffc15 	stw	r2,-16(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
  81b8b4:	008020b4 	movhi	r2,130
  81b8b8:	10bdc104 	addi	r2,r2,-2300
  81b8bc:	10c00017 	ldw	r3,0(r2)
  81b8c0:	e0bffd17 	ldw	r2,-12(fp)
  81b8c4:	10800003 	ldbu	r2,0(r2)
  81b8c8:	10803fcc 	andi	r2,r2,255
  81b8cc:	1080201c 	xori	r2,r2,128
  81b8d0:	10bfe004 	addi	r2,r2,-128
  81b8d4:	10800044 	addi	r2,r2,1
  81b8d8:	1885883a 	add	r2,r3,r2
  81b8dc:	10800003 	ldbu	r2,0(r2)
  81b8e0:	10803fcc 	andi	r2,r2,255
  81b8e4:	1080010c 	andi	r2,r2,4
  81b8e8:	103fe61e 	bne	r2,zero,81b884 <__alt_data_end+0xff81b884>
  81b8ec:	00000206 	br	81b8f8 <lcd_handle_escape+0x158>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
  81b8f0:	00bfffc4 	movi	r2,-1
  81b8f4:	e0bffb15 	stw	r2,-20(fp)

  switch (c)
  81b8f8:	e0bfff07 	ldb	r2,-4(fp)
  81b8fc:	10c012a0 	cmpeqi	r3,r2,74
  81b900:	1800281e 	bne	r3,zero,81b9a4 <lcd_handle_escape+0x204>
  81b904:	10c012c8 	cmpgei	r3,r2,75
  81b908:	1800031e 	bne	r3,zero,81b918 <lcd_handle_escape+0x178>
  81b90c:	10801220 	cmpeqi	r2,r2,72
  81b910:	1000051e 	bne	r2,zero,81b928 <lcd_handle_escape+0x188>
  81b914:	00004506 	br	81ba2c <lcd_handle_escape+0x28c>
  81b918:	10c012e0 	cmpeqi	r3,r2,75
  81b91c:	1800281e 	bne	r3,zero,81b9c0 <lcd_handle_escape+0x220>
  81b920:	108019a0 	cmpeqi	r2,r2,102
  81b924:	10004126 	beq	r2,zero,81ba2c <lcd_handle_escape+0x28c>
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
  81b928:	e0bffc17 	ldw	r2,-16(fp)
  81b92c:	0080050e 	bge	zero,r2,81b944 <lcd_handle_escape+0x1a4>
      sp->x = parm2 - 1;
  81b930:	e0bffc17 	ldw	r2,-16(fp)
  81b934:	10bfffc4 	addi	r2,r2,-1
  81b938:	1007883a 	mov	r3,r2
  81b93c:	e0bffe17 	ldw	r2,-8(fp)
  81b940:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
  81b944:	e0bffb17 	ldw	r2,-20(fp)
  81b948:	0080150e 	bge	zero,r2,81b9a0 <lcd_handle_escape+0x200>
    {
      sp->y = parm1 - 1;
  81b94c:	e0bffb17 	ldw	r2,-20(fp)
  81b950:	10bfffc4 	addi	r2,r2,-1
  81b954:	1007883a 	mov	r3,r2
  81b958:	e0bffe17 	ldw	r2,-8(fp)
  81b95c:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
  81b960:	e0bffe17 	ldw	r2,-8(fp)
  81b964:	10800883 	ldbu	r2,34(r2)
  81b968:	10803fcc 	andi	r2,r2,255
  81b96c:	10800170 	cmpltui	r2,r2,5
  81b970:	1000031e 	bne	r2,zero,81b980 <lcd_handle_escape+0x1e0>
        sp->y = ALT_LCD_HEIGHT * 2;
  81b974:	e0bffe17 	ldw	r2,-8(fp)
  81b978:	00c00104 	movi	r3,4
  81b97c:	10c00885 	stb	r3,34(r2)
      while (sp->y > ALT_LCD_HEIGHT)
  81b980:	00000206 	br	81b98c <lcd_handle_escape+0x1ec>
        lcd_scroll_up(sp);
  81b984:	e13ffe17 	ldw	r4,-8(fp)
  81b988:	081b6d80 	call	81b6d8 <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
  81b98c:	e0bffe17 	ldw	r2,-8(fp)
  81b990:	10800883 	ldbu	r2,34(r2)
  81b994:	10803fcc 	andi	r2,r2,255
  81b998:	108000e8 	cmpgeui	r2,r2,3
  81b99c:	103ff91e 	bne	r2,zero,81b984 <__alt_data_end+0xff81b984>
        lcd_scroll_up(sp);
    }
    break;
  81b9a0:	00002206 	br	81ba2c <lcd_handle_escape+0x28c>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
  81b9a4:	e0bffb17 	ldw	r2,-20(fp)
  81b9a8:	10800098 	cmpnei	r2,r2,2
  81b9ac:	1000031e 	bne	r2,zero,81b9bc <lcd_handle_escape+0x21c>
      lcd_clear_screen(sp);
  81b9b0:	e13ffe17 	ldw	r4,-8(fp)
  81b9b4:	081b4240 	call	81b424 <lcd_clear_screen>
    break;
  81b9b8:	00001c06 	br	81ba2c <lcd_handle_escape+0x28c>
  81b9bc:	00001b06 	br	81ba2c <lcd_handle_escape+0x28c>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
  81b9c0:	e0bffb17 	ldw	r2,-20(fp)
  81b9c4:	00801816 	blt	zero,r2,81ba28 <lcd_handle_escape+0x288>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  81b9c8:	e0bffe17 	ldw	r2,-8(fp)
  81b9cc:	10800843 	ldbu	r2,33(r2)
  81b9d0:	10803fcc 	andi	r2,r2,255
  81b9d4:	10801428 	cmpgeui	r2,r2,80
  81b9d8:	1000131e 	bne	r2,zero,81ba28 <lcd_handle_escape+0x288>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
  81b9dc:	e0bffe17 	ldw	r2,-8(fp)
  81b9e0:	10800883 	ldbu	r2,34(r2)
  81b9e4:	10803fcc 	andi	r2,r2,255
  81b9e8:	108018e4 	muli	r2,r2,99
  81b9ec:	10801004 	addi	r2,r2,64
  81b9f0:	e0fffe17 	ldw	r3,-8(fp)
  81b9f4:	1887883a 	add	r3,r3,r2
  81b9f8:	e0bffe17 	ldw	r2,-8(fp)
  81b9fc:	10800843 	ldbu	r2,33(r2)
  81ba00:	10803fcc 	andi	r2,r2,255
  81ba04:	1889883a 	add	r4,r3,r2
  81ba08:	e0bffe17 	ldw	r2,-8(fp)
  81ba0c:	10800843 	ldbu	r2,33(r2)
  81ba10:	10803fcc 	andi	r2,r2,255
  81ba14:	00c01404 	movi	r3,80
  81ba18:	1885c83a 	sub	r2,r3,r2
  81ba1c:	01400804 	movi	r5,32
  81ba20:	100d883a 	mov	r6,r2
  81ba24:	080b8380 	call	80b838 <memset>
    }
    break;
  81ba28:	0001883a 	nop
  }
}
  81ba2c:	e037883a 	mov	sp,fp
  81ba30:	dfc00117 	ldw	ra,4(sp)
  81ba34:	df000017 	ldw	fp,0(sp)
  81ba38:	dec00204 	addi	sp,sp,8
  81ba3c:	f800283a 	ret

0081ba40 <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
  81ba40:	defff304 	addi	sp,sp,-52
  81ba44:	dfc00c15 	stw	ra,48(sp)
  81ba48:	df000b15 	stw	fp,44(sp)
  81ba4c:	df000b04 	addi	fp,sp,44
  81ba50:	e13ffc15 	stw	r4,-16(fp)
  81ba54:	e17ffd15 	stw	r5,-12(fp)
  81ba58:	e1bffe15 	stw	r6,-8(fp)
  81ba5c:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
  81ba60:	e0bffe17 	ldw	r2,-8(fp)
  81ba64:	e0fffd17 	ldw	r3,-12(fp)
  81ba68:	1885883a 	add	r2,r3,r2
  81ba6c:	e0bff815 	stw	r2,-32(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
  81ba70:	e0bffc17 	ldw	r2,-16(fp)
  81ba74:	00c00044 	movi	r3,1
  81ba78:	10c009c5 	stb	r3,39(r2)

  for ( ; ptr < end ; ptr++)
  81ba7c:	00009e06 	br	81bcf8 <altera_avalon_lcd_16207_write+0x2b8>
  {
    char c = *ptr;
  81ba80:	e0bffd17 	ldw	r2,-12(fp)
  81ba84:	10800003 	ldbu	r2,0(r2)
  81ba88:	e0bff905 	stb	r2,-28(fp)

    if (sp->esccount >= 0)
  81ba8c:	e0bffc17 	ldw	r2,-16(fp)
  81ba90:	10800903 	ldbu	r2,36(r2)
  81ba94:	10803fcc 	andi	r2,r2,255
  81ba98:	1080201c 	xori	r2,r2,128
  81ba9c:	10bfe004 	addi	r2,r2,-128
  81baa0:	10003a16 	blt	r2,zero,81bb8c <altera_avalon_lcd_16207_write+0x14c>
    {
      unsigned int esccount = sp->esccount;
  81baa4:	e0bffc17 	ldw	r2,-16(fp)
  81baa8:	10800903 	ldbu	r2,36(r2)
  81baac:	10803fcc 	andi	r2,r2,255
  81bab0:	1080201c 	xori	r2,r2,128
  81bab4:	10bfe004 	addi	r2,r2,-128
  81bab8:	e0bffa15 	stw	r2,-24(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
  81babc:	e0bffa17 	ldw	r2,-24(fp)
  81bac0:	1000031e 	bne	r2,zero,81bad0 <altera_avalon_lcd_16207_write+0x90>
  81bac4:	e0bff907 	ldb	r2,-28(fp)
  81bac8:	108016d8 	cmpnei	r2,r2,91
  81bacc:	10000f1e 	bne	r2,zero,81bb0c <altera_avalon_lcd_16207_write+0xcc>
  81bad0:	e0bffa17 	ldw	r2,-24(fp)
  81bad4:	10001a26 	beq	r2,zero,81bb40 <altera_avalon_lcd_16207_write+0x100>
          (esccount > 0 && !isdigit(c) && c != ';'))
  81bad8:	008020b4 	movhi	r2,130
  81badc:	10bdc104 	addi	r2,r2,-2300
  81bae0:	10c00017 	ldw	r3,0(r2)
  81bae4:	e0bff907 	ldb	r2,-28(fp)
  81bae8:	10800044 	addi	r2,r2,1
  81baec:	1885883a 	add	r2,r3,r2
  81baf0:	10800003 	ldbu	r2,0(r2)
  81baf4:	10803fcc 	andi	r2,r2,255
  81baf8:	1080010c 	andi	r2,r2,4
  81bafc:	1000101e 	bne	r2,zero,81bb40 <altera_avalon_lcd_16207_write+0x100>
  81bb00:	e0bff907 	ldb	r2,-28(fp)
  81bb04:	10800ee0 	cmpeqi	r2,r2,59
  81bb08:	10000d1e 	bne	r2,zero,81bb40 <altera_avalon_lcd_16207_write+0x100>
      {
        sp->escape[esccount] = 0;
  81bb0c:	e0fffc17 	ldw	r3,-16(fp)
  81bb10:	e0bffa17 	ldw	r2,-24(fp)
  81bb14:	1885883a 	add	r2,r3,r2
  81bb18:	10800a04 	addi	r2,r2,40
  81bb1c:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
  81bb20:	e0bff907 	ldb	r2,-28(fp)
  81bb24:	e13ffc17 	ldw	r4,-16(fp)
  81bb28:	100b883a 	mov	r5,r2
  81bb2c:	081b7a00 	call	81b7a0 <lcd_handle_escape>

        sp->esccount = -1;
  81bb30:	e0bffc17 	ldw	r2,-16(fp)
  81bb34:	00ffffc4 	movi	r3,-1
  81bb38:	10c00905 	stb	r3,36(r2)
  81bb3c:	00001206 	br	81bb88 <altera_avalon_lcd_16207_write+0x148>
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
  81bb40:	e0bffc17 	ldw	r2,-16(fp)
  81bb44:	10800903 	ldbu	r2,36(r2)
  81bb48:	10803fcc 	andi	r2,r2,255
  81bb4c:	108001e8 	cmpgeui	r2,r2,7
  81bb50:	10000d1e 	bne	r2,zero,81bb88 <altera_avalon_lcd_16207_write+0x148>
      {
        sp->escape[esccount] = c;
  81bb54:	e0fffc17 	ldw	r3,-16(fp)
  81bb58:	e0bffa17 	ldw	r2,-24(fp)
  81bb5c:	1885883a 	add	r2,r3,r2
  81bb60:	10800a04 	addi	r2,r2,40
  81bb64:	e0fff903 	ldbu	r3,-28(fp)
  81bb68:	10c00005 	stb	r3,0(r2)
        sp->esccount++;
  81bb6c:	e0bffc17 	ldw	r2,-16(fp)
  81bb70:	10800903 	ldbu	r2,36(r2)
  81bb74:	10800044 	addi	r2,r2,1
  81bb78:	1007883a 	mov	r3,r2
  81bb7c:	e0bffc17 	ldw	r2,-16(fp)
  81bb80:	10c00905 	stb	r3,36(r2)
  81bb84:	00005906 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
  81bb88:	00005806 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
      }
    }
    else if (c == 27) /* ESC */
  81bb8c:	e0bff907 	ldb	r2,-28(fp)
  81bb90:	108006d8 	cmpnei	r2,r2,27
  81bb94:	1000031e 	bne	r2,zero,81bba4 <altera_avalon_lcd_16207_write+0x164>
    {
      sp->esccount = 0;
  81bb98:	e0bffc17 	ldw	r2,-16(fp)
  81bb9c:	10000905 	stb	zero,36(r2)
  81bba0:	00005206 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\r')
  81bba4:	e0bff907 	ldb	r2,-28(fp)
  81bba8:	10800358 	cmpnei	r2,r2,13
  81bbac:	1000031e 	bne	r2,zero,81bbbc <altera_avalon_lcd_16207_write+0x17c>
    {
      sp->x = 0;
  81bbb0:	e0bffc17 	ldw	r2,-16(fp)
  81bbb4:	10000845 	stb	zero,33(r2)
  81bbb8:	00004c06 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\n')
  81bbbc:	e0bff907 	ldb	r2,-28(fp)
  81bbc0:	10800298 	cmpnei	r2,r2,10
  81bbc4:	1000101e 	bne	r2,zero,81bc08 <altera_avalon_lcd_16207_write+0x1c8>
    {
      sp->x = 0;
  81bbc8:	e0bffc17 	ldw	r2,-16(fp)
  81bbcc:	10000845 	stb	zero,33(r2)
      sp->y++;
  81bbd0:	e0bffc17 	ldw	r2,-16(fp)
  81bbd4:	10800883 	ldbu	r2,34(r2)
  81bbd8:	10800044 	addi	r2,r2,1
  81bbdc:	1007883a 	mov	r3,r2
  81bbe0:	e0bffc17 	ldw	r2,-16(fp)
  81bbe4:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
  81bbe8:	e0bffc17 	ldw	r2,-16(fp)
  81bbec:	10800883 	ldbu	r2,34(r2)
  81bbf0:	10803fcc 	andi	r2,r2,255
  81bbf4:	108000f0 	cmpltui	r2,r2,3
  81bbf8:	10003c1e 	bne	r2,zero,81bcec <altera_avalon_lcd_16207_write+0x2ac>
        lcd_scroll_up(sp);
  81bbfc:	e13ffc17 	ldw	r4,-16(fp)
  81bc00:	081b6d80 	call	81b6d8 <lcd_scroll_up>
  81bc04:	00003906 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (c == '\b')
  81bc08:	e0bff907 	ldb	r2,-28(fp)
  81bc0c:	10800218 	cmpnei	r2,r2,8
  81bc10:	10000b1e 	bne	r2,zero,81bc40 <altera_avalon_lcd_16207_write+0x200>
    {
      if (sp->x > 0)
  81bc14:	e0bffc17 	ldw	r2,-16(fp)
  81bc18:	10800843 	ldbu	r2,33(r2)
  81bc1c:	10803fcc 	andi	r2,r2,255
  81bc20:	10003226 	beq	r2,zero,81bcec <altera_avalon_lcd_16207_write+0x2ac>
        sp->x--;
  81bc24:	e0bffc17 	ldw	r2,-16(fp)
  81bc28:	10800843 	ldbu	r2,33(r2)
  81bc2c:	10bfffc4 	addi	r2,r2,-1
  81bc30:	1007883a 	mov	r3,r2
  81bc34:	e0bffc17 	ldw	r2,-16(fp)
  81bc38:	10c00845 	stb	r3,33(r2)
  81bc3c:	00002b06 	br	81bcec <altera_avalon_lcd_16207_write+0x2ac>
    }
    else if (isprint(c))
  81bc40:	008020b4 	movhi	r2,130
  81bc44:	10bdc104 	addi	r2,r2,-2300
  81bc48:	10c00017 	ldw	r3,0(r2)
  81bc4c:	e0bff907 	ldb	r2,-28(fp)
  81bc50:	10800044 	addi	r2,r2,1
  81bc54:	1885883a 	add	r2,r3,r2
  81bc58:	10800003 	ldbu	r2,0(r2)
  81bc5c:	10803fcc 	andi	r2,r2,255
  81bc60:	1080201c 	xori	r2,r2,128
  81bc64:	10bfe004 	addi	r2,r2,-128
  81bc68:	108025cc 	andi	r2,r2,151
  81bc6c:	10001f26 	beq	r2,zero,81bcec <altera_avalon_lcd_16207_write+0x2ac>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
  81bc70:	e0bffc17 	ldw	r2,-16(fp)
  81bc74:	10800883 	ldbu	r2,34(r2)
  81bc78:	10803fcc 	andi	r2,r2,255
  81bc7c:	108000b0 	cmpltui	r2,r2,2
  81bc80:	1000021e 	bne	r2,zero,81bc8c <altera_avalon_lcd_16207_write+0x24c>
        lcd_scroll_up(sp);
  81bc84:	e13ffc17 	ldw	r4,-16(fp)
  81bc88:	081b6d80 	call	81b6d8 <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  81bc8c:	e0bffc17 	ldw	r2,-16(fp)
  81bc90:	10800843 	ldbu	r2,33(r2)
  81bc94:	10803fcc 	andi	r2,r2,255
  81bc98:	10801428 	cmpgeui	r2,r2,80
  81bc9c:	10000d1e 	bne	r2,zero,81bcd4 <altera_avalon_lcd_16207_write+0x294>
        sp->line[sp->y].data[sp->x] = c;
  81bca0:	e0bffc17 	ldw	r2,-16(fp)
  81bca4:	10800883 	ldbu	r2,34(r2)
  81bca8:	10c03fcc 	andi	r3,r2,255
  81bcac:	e0bffc17 	ldw	r2,-16(fp)
  81bcb0:	10800843 	ldbu	r2,33(r2)
  81bcb4:	10803fcc 	andi	r2,r2,255
  81bcb8:	e13ffc17 	ldw	r4,-16(fp)
  81bcbc:	18c018e4 	muli	r3,r3,99
  81bcc0:	20c7883a 	add	r3,r4,r3
  81bcc4:	1885883a 	add	r2,r3,r2
  81bcc8:	10801004 	addi	r2,r2,64
  81bccc:	e0fff903 	ldbu	r3,-28(fp)
  81bcd0:	10c00005 	stb	r3,0(r2)

      sp->x++;
  81bcd4:	e0bffc17 	ldw	r2,-16(fp)
  81bcd8:	10800843 	ldbu	r2,33(r2)
  81bcdc:	10800044 	addi	r2,r2,1
  81bce0:	1007883a 	mov	r3,r2
  81bce4:	e0bffc17 	ldw	r2,-16(fp)
  81bce8:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
  81bcec:	e0bffd17 	ldw	r2,-12(fp)
  81bcf0:	10800044 	addi	r2,r2,1
  81bcf4:	e0bffd15 	stw	r2,-12(fp)
  81bcf8:	e0fffd17 	ldw	r3,-12(fp)
  81bcfc:	e0bff817 	ldw	r2,-32(fp)
  81bd00:	18bf5f36 	bltu	r3,r2,81ba80 <__alt_data_end+0xff81ba80>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  81bd04:	00800404 	movi	r2,16
  81bd08:	e0bff615 	stw	r2,-40(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81bd0c:	e03ff515 	stw	zero,-44(fp)
  81bd10:	00003606 	br	81bdec <altera_avalon_lcd_16207_write+0x3ac>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  81bd14:	00801404 	movi	r2,80
  81bd18:	e0bff715 	stw	r2,-36(fp)
  81bd1c:	00001206 	br	81bd68 <altera_avalon_lcd_16207_write+0x328>
      if (sp->line[y].data[width-1] != ' ')
  81bd20:	e0bff717 	ldw	r2,-36(fp)
  81bd24:	10bfffc4 	addi	r2,r2,-1
  81bd28:	e13ffc17 	ldw	r4,-16(fp)
  81bd2c:	e0fff517 	ldw	r3,-44(fp)
  81bd30:	18c018e4 	muli	r3,r3,99
  81bd34:	20c7883a 	add	r3,r4,r3
  81bd38:	1885883a 	add	r2,r3,r2
  81bd3c:	10801004 	addi	r2,r2,64
  81bd40:	10800003 	ldbu	r2,0(r2)
  81bd44:	10803fcc 	andi	r2,r2,255
  81bd48:	1080201c 	xori	r2,r2,128
  81bd4c:	10bfe004 	addi	r2,r2,-128
  81bd50:	10800820 	cmpeqi	r2,r2,32
  81bd54:	1000011e 	bne	r2,zero,81bd5c <altera_avalon_lcd_16207_write+0x31c>
        break;
  81bd58:	00000506 	br	81bd70 <altera_avalon_lcd_16207_write+0x330>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  81bd5c:	e0bff717 	ldw	r2,-36(fp)
  81bd60:	10bfffc4 	addi	r2,r2,-1
  81bd64:	e0bff715 	stw	r2,-36(fp)
  81bd68:	e0bff717 	ldw	r2,-36(fp)
  81bd6c:	00bfec16 	blt	zero,r2,81bd20 <__alt_data_end+0xff81bd20>

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
  81bd70:	e0bff717 	ldw	r2,-36(fp)
  81bd74:	10800448 	cmpgei	r2,r2,17
  81bd78:	1000031e 	bne	r2,zero,81bd88 <altera_avalon_lcd_16207_write+0x348>
      width = ALT_LCD_WIDTH;
  81bd7c:	00800404 	movi	r2,16
  81bd80:	e0bff715 	stw	r2,-36(fp)
  81bd84:	00000306 	br	81bd94 <altera_avalon_lcd_16207_write+0x354>
    else
      width++;
  81bd88:	e0bff717 	ldw	r2,-36(fp)
  81bd8c:	10800044 	addi	r2,r2,1
  81bd90:	e0bff715 	stw	r2,-36(fp)

    sp->line[y].width = width;
  81bd94:	e0bff717 	ldw	r2,-36(fp)
  81bd98:	1009883a 	mov	r4,r2
  81bd9c:	e0fffc17 	ldw	r3,-16(fp)
  81bda0:	e0bff517 	ldw	r2,-44(fp)
  81bda4:	108018e4 	muli	r2,r2,99
  81bda8:	10802404 	addi	r2,r2,144
  81bdac:	1885883a 	add	r2,r3,r2
  81bdb0:	11000045 	stb	r4,1(r2)
    if (widthmax < width)
  81bdb4:	e0fff617 	ldw	r3,-40(fp)
  81bdb8:	e0bff717 	ldw	r2,-36(fp)
  81bdbc:	1880020e 	bge	r3,r2,81bdc8 <altera_avalon_lcd_16207_write+0x388>
      widthmax = width;
  81bdc0:	e0bff717 	ldw	r2,-36(fp)
  81bdc4:	e0bff615 	stw	r2,-40(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
  81bdc8:	e0fffc17 	ldw	r3,-16(fp)
  81bdcc:	e0bff517 	ldw	r2,-44(fp)
  81bdd0:	108018e4 	muli	r2,r2,99
  81bdd4:	10802404 	addi	r2,r2,144
  81bdd8:	1885883a 	add	r2,r3,r2
  81bddc:	10000085 	stb	zero,2(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81bde0:	e0bff517 	ldw	r2,-44(fp)
  81bde4:	10800044 	addi	r2,r2,1
  81bde8:	e0bff515 	stw	r2,-44(fp)
  81bdec:	e0bff517 	ldw	r2,-44(fp)
  81bdf0:	10800090 	cmplti	r2,r2,2
  81bdf4:	103fc71e 	bne	r2,zero,81bd14 <__alt_data_end+0xff81bd14>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
  81bdf8:	e0bff617 	ldw	r2,-40(fp)
  81bdfc:	10800448 	cmpgei	r2,r2,17
  81be00:	1000031e 	bne	r2,zero,81be10 <altera_avalon_lcd_16207_write+0x3d0>
    sp->scrollmax = 0;
  81be04:	e0bffc17 	ldw	r2,-16(fp)
  81be08:	10000985 	stb	zero,38(r2)
  81be0c:	00002e06 	br	81bec8 <altera_avalon_lcd_16207_write+0x488>
  else
  {
    widthmax *= 2;
  81be10:	e0bff617 	ldw	r2,-40(fp)
  81be14:	1085883a 	add	r2,r2,r2
  81be18:	e0bff615 	stw	r2,-40(fp)
    sp->scrollmax = widthmax;
  81be1c:	e0bff617 	ldw	r2,-40(fp)
  81be20:	1007883a 	mov	r3,r2
  81be24:	e0bffc17 	ldw	r2,-16(fp)
  81be28:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81be2c:	e03ff515 	stw	zero,-44(fp)
  81be30:	00002206 	br	81bebc <altera_avalon_lcd_16207_write+0x47c>
      if (sp->line[y].width > ALT_LCD_WIDTH)
  81be34:	e0fffc17 	ldw	r3,-16(fp)
  81be38:	e0bff517 	ldw	r2,-44(fp)
  81be3c:	108018e4 	muli	r2,r2,99
  81be40:	10802404 	addi	r2,r2,144
  81be44:	1885883a 	add	r2,r3,r2
  81be48:	10800043 	ldbu	r2,1(r2)
  81be4c:	10803fcc 	andi	r2,r2,255
  81be50:	1080201c 	xori	r2,r2,128
  81be54:	10bfe004 	addi	r2,r2,-128
  81be58:	10800450 	cmplti	r2,r2,17
  81be5c:	1000141e 	bne	r2,zero,81beb0 <altera_avalon_lcd_16207_write+0x470>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
  81be60:	e0fffc17 	ldw	r3,-16(fp)
  81be64:	e0bff517 	ldw	r2,-44(fp)
  81be68:	108018e4 	muli	r2,r2,99
  81be6c:	10802404 	addi	r2,r2,144
  81be70:	1885883a 	add	r2,r3,r2
  81be74:	10800043 	ldbu	r2,1(r2)
  81be78:	10803fcc 	andi	r2,r2,255
  81be7c:	1080201c 	xori	r2,r2,128
  81be80:	10bfe004 	addi	r2,r2,-128
  81be84:	1004923a 	slli	r2,r2,8
  81be88:	1009883a 	mov	r4,r2
  81be8c:	e17ff617 	ldw	r5,-40(fp)
  81be90:	0809a0c0 	call	809a0c <__divsi3>
  81be94:	1009883a 	mov	r4,r2
  81be98:	e0fffc17 	ldw	r3,-16(fp)
  81be9c:	e0bff517 	ldw	r2,-44(fp)
  81bea0:	108018e4 	muli	r2,r2,99
  81bea4:	10802404 	addi	r2,r2,144
  81bea8:	1885883a 	add	r2,r3,r2
  81beac:	11000085 	stb	r4,2(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81beb0:	e0bff517 	ldw	r2,-44(fp)
  81beb4:	10800044 	addi	r2,r2,1
  81beb8:	e0bff515 	stw	r2,-44(fp)
  81bebc:	e0bff517 	ldw	r2,-44(fp)
  81bec0:	10800090 	cmplti	r2,r2,2
  81bec4:	103fdb1e 	bne	r2,zero,81be34 <__alt_data_end+0xff81be34>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
  81bec8:	e0bffc17 	ldw	r2,-16(fp)
  81becc:	10800943 	ldbu	r2,37(r2)
  81bed0:	10803fcc 	andi	r2,r2,255
  81bed4:	e0bffb15 	stw	r2,-20(fp)

    lcd_repaint_screen(sp);
  81bed8:	e13ffc17 	ldw	r4,-16(fp)
  81bedc:	081b4f00 	call	81b4f0 <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
  81bee0:	e0bffc17 	ldw	r2,-16(fp)
  81bee4:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
  81bee8:	e0bffc17 	ldw	r2,-16(fp)
  81beec:	10800943 	ldbu	r2,37(r2)
  81bef0:	10c03fcc 	andi	r3,r2,255
  81bef4:	e0bffb17 	ldw	r2,-20(fp)
  81bef8:	1880011e 	bne	r3,r2,81bf00 <altera_avalon_lcd_16207_write+0x4c0>
      break;
  81befc:	00000406 	br	81bf10 <altera_avalon_lcd_16207_write+0x4d0>

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
  81bf00:	e0bffc17 	ldw	r2,-16(fp)
  81bf04:	00c00044 	movi	r3,1
  81bf08:	10c009c5 	stb	r3,39(r2)
  }
  81bf0c:	003fee06 	br	81bec8 <__alt_data_end+0xff81bec8>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
  81bf10:	e0bffe17 	ldw	r2,-8(fp)
}
  81bf14:	e037883a 	mov	sp,fp
  81bf18:	dfc00117 	ldw	ra,4(sp)
  81bf1c:	df000017 	ldw	fp,0(sp)
  81bf20:	dec00204 	addi	sp,sp,8
  81bf24:	f800283a 	ret

0081bf28 <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
  81bf28:	defffc04 	addi	sp,sp,-16
  81bf2c:	dfc00315 	stw	ra,12(sp)
  81bf30:	df000215 	stw	fp,8(sp)
  81bf34:	df000204 	addi	fp,sp,8
  81bf38:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
  81bf3c:	e0bfff17 	ldw	r2,-4(fp)
  81bf40:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
  81bf44:	e0bffe17 	ldw	r2,-8(fp)
  81bf48:	10800943 	ldbu	r2,37(r2)
  81bf4c:	10803fcc 	andi	r2,r2,255
  81bf50:	10c00044 	addi	r3,r2,1
  81bf54:	e0bffe17 	ldw	r2,-8(fp)
  81bf58:	10800983 	ldbu	r2,38(r2)
  81bf5c:	10803fcc 	andi	r2,r2,255
  81bf60:	18800316 	blt	r3,r2,81bf70 <alt_lcd_16207_timeout+0x48>
    sp->scrollpos = 0;
  81bf64:	e0bffe17 	ldw	r2,-8(fp)
  81bf68:	10000945 	stb	zero,37(r2)
  81bf6c:	00000606 	br	81bf88 <alt_lcd_16207_timeout+0x60>
  else
    sp->scrollpos = sp->scrollpos + 1;
  81bf70:	e0bffe17 	ldw	r2,-8(fp)
  81bf74:	10800943 	ldbu	r2,37(r2)
  81bf78:	10800044 	addi	r2,r2,1
  81bf7c:	1007883a 	mov	r3,r2
  81bf80:	e0bffe17 	ldw	r2,-8(fp)
  81bf84:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
  81bf88:	e0bffe17 	ldw	r2,-8(fp)
  81bf8c:	10800983 	ldbu	r2,38(r2)
  81bf90:	10803fcc 	andi	r2,r2,255
  81bf94:	10000826 	beq	r2,zero,81bfb8 <alt_lcd_16207_timeout+0x90>
  81bf98:	e0bffe17 	ldw	r2,-8(fp)
  81bf9c:	108009c3 	ldbu	r2,39(r2)
  81bfa0:	10803fcc 	andi	r2,r2,255
  81bfa4:	1080201c 	xori	r2,r2,128
  81bfa8:	10bfe004 	addi	r2,r2,-128
  81bfac:	1000021e 	bne	r2,zero,81bfb8 <alt_lcd_16207_timeout+0x90>
    lcd_repaint_screen(sp);
  81bfb0:	e13ffe17 	ldw	r4,-8(fp)
  81bfb4:	081b4f00 	call	81b4f0 <lcd_repaint_screen>

  return sp->period;
  81bfb8:	e0bffe17 	ldw	r2,-8(fp)
  81bfbc:	10800717 	ldw	r2,28(r2)
}
  81bfc0:	e037883a 	mov	sp,fp
  81bfc4:	dfc00117 	ldw	ra,4(sp)
  81bfc8:	df000017 	ldw	fp,0(sp)
  81bfcc:	dec00204 	addi	sp,sp,8
  81bfd0:	f800283a 	ret

0081bfd4 <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
  81bfd4:	defffc04 	addi	sp,sp,-16
  81bfd8:	dfc00315 	stw	ra,12(sp)
  81bfdc:	df000215 	stw	fp,8(sp)
  81bfe0:	df000204 	addi	fp,sp,8
  81bfe4:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
  81bfe8:	e0bfff17 	ldw	r2,-4(fp)
  81bfec:	10800017 	ldw	r2,0(r2)
  81bff0:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
  81bff4:	e0bfff17 	ldw	r2,-4(fp)
  81bff8:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
  81bffc:	010ea604 	movi	r4,15000
  81c000:	081adfc0 	call	81adfc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81c004:	e0bffe17 	ldw	r2,-8(fp)
  81c008:	00c00c04 	movi	r3,48
  81c00c:	10c00035 	stwio	r3,0(r2)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
  81c010:	01040104 	movi	r4,4100
  81c014:	081adfc0 	call	81adfc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81c018:	e0bffe17 	ldw	r2,-8(fp)
  81c01c:	00c00c04 	movi	r3,48
  81c020:	10c00035 	stwio	r3,0(r2)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
  81c024:	0100fa04 	movi	r4,1000
  81c028:	081adfc0 	call	81adfc <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81c02c:	e0bffe17 	ldw	r2,-8(fp)
  81c030:	00c00c04 	movi	r3,48
  81c034:	10c00035 	stwio	r3,0(r2)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
  81c038:	e13fff17 	ldw	r4,-4(fp)
  81c03c:	01400e04 	movi	r5,56
  81c040:	081b29c0 	call	81b29c <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
  81c044:	e13fff17 	ldw	r4,-4(fp)
  81c048:	01400204 	movi	r5,8
  81c04c:	081b29c0 	call	81b29c <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
  81c050:	e13fff17 	ldw	r4,-4(fp)
  81c054:	081b4240 	call	81b424 <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
  81c058:	e13fff17 	ldw	r4,-4(fp)
  81c05c:	01400184 	movi	r5,6
  81c060:	081b29c0 	call	81b29c <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
  81c064:	e13fff17 	ldw	r4,-4(fp)
  81c068:	01400304 	movi	r5,12
  81c06c:	081b29c0 	call	81b29c <lcd_write_command>

  sp->esccount = -1;
  81c070:	e0bfff17 	ldw	r2,-4(fp)
  81c074:	00ffffc4 	movi	r3,-1
  81c078:	10c00905 	stb	r3,36(r2)
  memset(sp->escape, 0, sizeof(sp->escape));
  81c07c:	e0bfff17 	ldw	r2,-4(fp)
  81c080:	10800a04 	addi	r2,r2,40
  81c084:	1009883a 	mov	r4,r2
  81c088:	000b883a 	mov	r5,zero
  81c08c:	01800204 	movi	r6,8
  81c090:	080b8380 	call	80b838 <memset>

  sp->scrollpos = 0;
  81c094:	e0bfff17 	ldw	r2,-4(fp)
  81c098:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
  81c09c:	e0bfff17 	ldw	r2,-4(fp)
  81c0a0:	10000985 	stb	zero,38(r2)
  sp->active = 0;
  81c0a4:	e0bfff17 	ldw	r2,-4(fp)
  81c0a8:	100009c5 	stb	zero,39(r2)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  81c0ac:	008020b4 	movhi	r2,130
  81c0b0:	10812904 	addi	r2,r2,1188
  81c0b4:	10800017 	ldw	r2,0(r2)

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
  81c0b8:	1009883a 	mov	r4,r2
  81c0bc:	01400284 	movi	r5,10
  81c0c0:	0809abc0 	call	809abc <__udivsi3>
  81c0c4:	1007883a 	mov	r3,r2
  81c0c8:	e0bfff17 	ldw	r2,-4(fp)
  81c0cc:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
  81c0d0:	e0bfff17 	ldw	r2,-4(fp)
  81c0d4:	10c00104 	addi	r3,r2,4
  81c0d8:	e0bfff17 	ldw	r2,-4(fp)
  81c0dc:	10800717 	ldw	r2,28(r2)
  81c0e0:	1809883a 	mov	r4,r3
  81c0e4:	100b883a 	mov	r5,r2
  81c0e8:	018020b4 	movhi	r6,130
  81c0ec:	31afca04 	addi	r6,r6,-16600
  81c0f0:	e1ffff17 	ldw	r7,-4(fp)
  81c0f4:	0819c340 	call	819c34 <alt_alarm_start>
}
  81c0f8:	e037883a 	mov	sp,fp
  81c0fc:	dfc00117 	ldw	ra,4(sp)
  81c100:	df000017 	ldw	fp,0(sp)
  81c104:	dec00204 	addi	sp,sp,8
  81c108:	f800283a 	ret

0081c10c <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81c10c:	defffa04 	addi	sp,sp,-24
  81c110:	dfc00515 	stw	ra,20(sp)
  81c114:	df000415 	stw	fp,16(sp)
  81c118:	df000404 	addi	fp,sp,16
  81c11c:	e13ffd15 	stw	r4,-12(fp)
  81c120:	e17ffe15 	stw	r5,-8(fp)
  81c124:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
  81c128:	e0bffd17 	ldw	r2,-12(fp)
  81c12c:	10800017 	ldw	r2,0(r2)
  81c130:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
  81c134:	e0bffc17 	ldw	r2,-16(fp)
  81c138:	10c00a04 	addi	r3,r2,40
  81c13c:	e0bffd17 	ldw	r2,-12(fp)
  81c140:	10800217 	ldw	r2,8(r2)
  81c144:	1809883a 	mov	r4,r3
  81c148:	e17ffe17 	ldw	r5,-8(fp)
  81c14c:	e1bfff17 	ldw	r6,-4(fp)
  81c150:	100f883a 	mov	r7,r2
  81c154:	081ba400 	call	81ba40 <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
  81c158:	e037883a 	mov	sp,fp
  81c15c:	dfc00117 	ldw	ra,4(sp)
  81c160:	df000017 	ldw	fp,0(sp)
  81c164:	dec00204 	addi	sp,sp,8
  81c168:	f800283a 	ret

0081c16c <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  81c16c:	defffa04 	addi	sp,sp,-24
  81c170:	dfc00515 	stw	ra,20(sp)
  81c174:	df000415 	stw	fp,16(sp)
  81c178:	df000404 	addi	fp,sp,16
  81c17c:	e13ffd15 	stw	r4,-12(fp)
  81c180:	e17ffe15 	stw	r5,-8(fp)
  81c184:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81c188:	e0bffd17 	ldw	r2,-12(fp)
  81c18c:	10800017 	ldw	r2,0(r2)
  81c190:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  81c194:	e0bffc17 	ldw	r2,-16(fp)
  81c198:	10c00a04 	addi	r3,r2,40
  81c19c:	e0bffd17 	ldw	r2,-12(fp)
  81c1a0:	10800217 	ldw	r2,8(r2)
  81c1a4:	1809883a 	mov	r4,r3
  81c1a8:	e17ffe17 	ldw	r5,-8(fp)
  81c1ac:	e1bfff17 	ldw	r6,-4(fp)
  81c1b0:	100f883a 	mov	r7,r2
  81c1b4:	081c6800 	call	81c680 <altera_avalon_uart_read>
      fd->fd_flags);
}
  81c1b8:	e037883a 	mov	sp,fp
  81c1bc:	dfc00117 	ldw	ra,4(sp)
  81c1c0:	df000017 	ldw	fp,0(sp)
  81c1c4:	dec00204 	addi	sp,sp,8
  81c1c8:	f800283a 	ret

0081c1cc <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81c1cc:	defffa04 	addi	sp,sp,-24
  81c1d0:	dfc00515 	stw	ra,20(sp)
  81c1d4:	df000415 	stw	fp,16(sp)
  81c1d8:	df000404 	addi	fp,sp,16
  81c1dc:	e13ffd15 	stw	r4,-12(fp)
  81c1e0:	e17ffe15 	stw	r5,-8(fp)
  81c1e4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81c1e8:	e0bffd17 	ldw	r2,-12(fp)
  81c1ec:	10800017 	ldw	r2,0(r2)
  81c1f0:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  81c1f4:	e0bffc17 	ldw	r2,-16(fp)
  81c1f8:	10c00a04 	addi	r3,r2,40
  81c1fc:	e0bffd17 	ldw	r2,-12(fp)
  81c200:	10800217 	ldw	r2,8(r2)
  81c204:	1809883a 	mov	r4,r3
  81c208:	e17ffe17 	ldw	r5,-8(fp)
  81c20c:	e1bfff17 	ldw	r6,-4(fp)
  81c210:	100f883a 	mov	r7,r2
  81c214:	081c8ac0 	call	81c8ac <altera_avalon_uart_write>
      fd->fd_flags);
}
  81c218:	e037883a 	mov	sp,fp
  81c21c:	dfc00117 	ldw	ra,4(sp)
  81c220:	df000017 	ldw	fp,0(sp)
  81c224:	dec00204 	addi	sp,sp,8
  81c228:	f800283a 	ret

0081c22c <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  81c22c:	defffc04 	addi	sp,sp,-16
  81c230:	dfc00315 	stw	ra,12(sp)
  81c234:	df000215 	stw	fp,8(sp)
  81c238:	df000204 	addi	fp,sp,8
  81c23c:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81c240:	e0bfff17 	ldw	r2,-4(fp)
  81c244:	10800017 	ldw	r2,0(r2)
  81c248:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  81c24c:	e0bffe17 	ldw	r2,-8(fp)
  81c250:	10c00a04 	addi	r3,r2,40
  81c254:	e0bfff17 	ldw	r2,-4(fp)
  81c258:	10800217 	ldw	r2,8(r2)
  81c25c:	1809883a 	mov	r4,r3
  81c260:	100b883a 	mov	r5,r2
  81c264:	081c5dc0 	call	81c5dc <altera_avalon_uart_close>
}
  81c268:	e037883a 	mov	sp,fp
  81c26c:	dfc00117 	ldw	ra,4(sp)
  81c270:	df000017 	ldw	fp,0(sp)
  81c274:	dec00204 	addi	sp,sp,8
  81c278:	f800283a 	ret

0081c27c <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  81c27c:	defff904 	addi	sp,sp,-28
  81c280:	dfc00615 	stw	ra,24(sp)
  81c284:	df000515 	stw	fp,20(sp)
  81c288:	df000504 	addi	fp,sp,20
  81c28c:	e13ffd15 	stw	r4,-12(fp)
  81c290:	e17ffe15 	stw	r5,-8(fp)
  81c294:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  81c298:	e0bffd17 	ldw	r2,-12(fp)
  81c29c:	10800017 	ldw	r2,0(r2)
  81c2a0:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  81c2a4:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  81c2a8:	1000041e 	bne	r2,zero,81c2bc <altera_avalon_uart_init+0x40>
  81c2ac:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  81c2b0:	1000021e 	bne	r2,zero,81c2bc <altera_avalon_uart_init+0x40>
  81c2b4:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  81c2b8:	10000226 	beq	r2,zero,81c2c4 <altera_avalon_uart_init+0x48>
  81c2bc:	00800044 	movi	r2,1
  81c2c0:	00000106 	br	81c2c8 <altera_avalon_uart_init+0x4c>
  81c2c4:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  81c2c8:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  81c2cc:	e0bffc17 	ldw	r2,-16(fp)
  81c2d0:	10000d1e 	bne	r2,zero,81c308 <altera_avalon_uart_init+0x8c>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  81c2d4:	e0bffd17 	ldw	r2,-12(fp)
  81c2d8:	00c32004 	movi	r3,3200
  81c2dc:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  81c2e0:	e0bffb17 	ldw	r2,-20(fp)
  81c2e4:	10800304 	addi	r2,r2,12
  81c2e8:	e0fffd17 	ldw	r3,-12(fp)
  81c2ec:	18c00117 	ldw	r3,4(r3)
  81c2f0:	10c00035 	stwio	r3,0(r2)
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
  81c2f4:	e13fff17 	ldw	r4,-4(fp)
  81c2f8:	e17ffd17 	ldw	r5,-12(fp)
  81c2fc:	018020b4 	movhi	r6,130
  81c300:	31b0c704 	addi	r6,r6,-15588
  81c304:	0819fc00 	call	819fc0 <alt_irq_register>
#endif  
  }
}
  81c308:	e037883a 	mov	sp,fp
  81c30c:	dfc00117 	ldw	ra,4(sp)
  81c310:	df000017 	ldw	fp,0(sp)
  81c314:	dec00204 	addi	sp,sp,8
  81c318:	f800283a 	ret

0081c31c <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  81c31c:	defff904 	addi	sp,sp,-28
  81c320:	dfc00615 	stw	ra,24(sp)
  81c324:	df000515 	stw	fp,20(sp)
  81c328:	df000504 	addi	fp,sp,20
  81c32c:	e13ffe15 	stw	r4,-8(fp)
  81c330:	e17fff15 	stw	r5,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  81c334:	e0bffe17 	ldw	r2,-8(fp)
  81c338:	e0bffb15 	stw	r2,-20(fp)
  void* base               = sp->base;
  81c33c:	e0bffb17 	ldw	r2,-20(fp)
  81c340:	10800017 	ldw	r2,0(r2)
  81c344:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  81c348:	e0bffc17 	ldw	r2,-16(fp)
  81c34c:	10800204 	addi	r2,r2,8
  81c350:	10800037 	ldwio	r2,0(r2)
  81c354:	e0bffd15 	stw	r2,-12(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  81c358:	e0bffc17 	ldw	r2,-16(fp)
  81c35c:	10800204 	addi	r2,r2,8
  81c360:	0007883a 	mov	r3,zero
  81c364:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  81c368:	e0bffc17 	ldw	r2,-16(fp)
  81c36c:	10800204 	addi	r2,r2,8
  81c370:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  81c374:	e0bffd17 	ldw	r2,-12(fp)
  81c378:	1080200c 	andi	r2,r2,128
  81c37c:	10000326 	beq	r2,zero,81c38c <altera_avalon_uart_irq+0x70>
  {
    altera_avalon_uart_rxirq(sp, status);
  81c380:	e13ffb17 	ldw	r4,-20(fp)
  81c384:	e17ffd17 	ldw	r5,-12(fp)
  81c388:	081c3b80 	call	81c3b8 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  81c38c:	e0bffd17 	ldw	r2,-12(fp)
  81c390:	1081100c 	andi	r2,r2,1088
  81c394:	10000326 	beq	r2,zero,81c3a4 <altera_avalon_uart_irq+0x88>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  81c398:	e13ffb17 	ldw	r4,-20(fp)
  81c39c:	e17ffd17 	ldw	r5,-12(fp)
  81c3a0:	081c4980 	call	81c498 <altera_avalon_uart_txirq>
  }
  

}
  81c3a4:	e037883a 	mov	sp,fp
  81c3a8:	dfc00117 	ldw	ra,4(sp)
  81c3ac:	df000017 	ldw	fp,0(sp)
  81c3b0:	dec00204 	addi	sp,sp,8
  81c3b4:	f800283a 	ret

0081c3b8 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81c3b8:	defffc04 	addi	sp,sp,-16
  81c3bc:	df000315 	stw	fp,12(sp)
  81c3c0:	df000304 	addi	fp,sp,12
  81c3c4:	e13ffe15 	stw	r4,-8(fp)
  81c3c8:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  81c3cc:	e0bfff17 	ldw	r2,-4(fp)
  81c3d0:	108000cc 	andi	r2,r2,3
  81c3d4:	10000126 	beq	r2,zero,81c3dc <altera_avalon_uart_rxirq+0x24>
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  81c3d8:	00002b06 	br	81c488 <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  81c3dc:	e0bffe17 	ldw	r2,-8(fp)
  81c3e0:	10800317 	ldw	r2,12(r2)
  81c3e4:	e0bffe17 	ldw	r2,-8(fp)
  81c3e8:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81c3ec:	e0bffe17 	ldw	r2,-8(fp)
  81c3f0:	10800317 	ldw	r2,12(r2)
  81c3f4:	10800044 	addi	r2,r2,1
  81c3f8:	10800fcc 	andi	r2,r2,63
  81c3fc:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  81c400:	e0bffe17 	ldw	r2,-8(fp)
  81c404:	10800317 	ldw	r2,12(r2)
  81c408:	e0fffe17 	ldw	r3,-8(fp)
  81c40c:	18c00017 	ldw	r3,0(r3)
  81c410:	18c00037 	ldwio	r3,0(r3)
  81c414:	1809883a 	mov	r4,r3
  81c418:	e0fffe17 	ldw	r3,-8(fp)
  81c41c:	1885883a 	add	r2,r3,r2
  81c420:	10800704 	addi	r2,r2,28
  81c424:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  81c428:	e0bffe17 	ldw	r2,-8(fp)
  81c42c:	e0fffd17 	ldw	r3,-12(fp)
  81c430:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81c434:	e0bffe17 	ldw	r2,-8(fp)
  81c438:	10800317 	ldw	r2,12(r2)
  81c43c:	10800044 	addi	r2,r2,1
  81c440:	10800fcc 	andi	r2,r2,63
  81c444:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  81c448:	e0bffe17 	ldw	r2,-8(fp)
  81c44c:	10c00217 	ldw	r3,8(r2)
  81c450:	e0bffd17 	ldw	r2,-12(fp)
  81c454:	18800c1e 	bne	r3,r2,81c488 <altera_avalon_uart_rxirq+0xd0>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81c458:	e0bffe17 	ldw	r2,-8(fp)
  81c45c:	10c00117 	ldw	r3,4(r2)
  81c460:	00bfdfc4 	movi	r2,-129
  81c464:	1886703a 	and	r3,r3,r2
  81c468:	e0bffe17 	ldw	r2,-8(fp)
  81c46c:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  81c470:	e0bffe17 	ldw	r2,-8(fp)
  81c474:	10800017 	ldw	r2,0(r2)
  81c478:	10800304 	addi	r2,r2,12
  81c47c:	e0fffe17 	ldw	r3,-8(fp)
  81c480:	18c00117 	ldw	r3,4(r3)
  81c484:	10c00035 	stwio	r3,0(r2)
  }   
}
  81c488:	e037883a 	mov	sp,fp
  81c48c:	df000017 	ldw	fp,0(sp)
  81c490:	dec00104 	addi	sp,sp,4
  81c494:	f800283a 	ret

0081c498 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81c498:	defffb04 	addi	sp,sp,-20
  81c49c:	df000415 	stw	fp,16(sp)
  81c4a0:	df000404 	addi	fp,sp,16
  81c4a4:	e13ffc15 	stw	r4,-16(fp)
  81c4a8:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  81c4ac:	e0bffc17 	ldw	r2,-16(fp)
  81c4b0:	10c00417 	ldw	r3,16(r2)
  81c4b4:	e0bffc17 	ldw	r2,-16(fp)
  81c4b8:	10800517 	ldw	r2,20(r2)
  81c4bc:	18803226 	beq	r3,r2,81c588 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81c4c0:	e0bffc17 	ldw	r2,-16(fp)
  81c4c4:	10800617 	ldw	r2,24(r2)
  81c4c8:	1080008c 	andi	r2,r2,2
  81c4cc:	10000326 	beq	r2,zero,81c4dc <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81c4d0:	e0bffd17 	ldw	r2,-12(fp)
  81c4d4:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81c4d8:	10001d26 	beq	r2,zero,81c550 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  81c4dc:	e0bffc17 	ldw	r2,-16(fp)
  81c4e0:	10800417 	ldw	r2,16(r2)
  81c4e4:	e0bffc17 	ldw	r2,-16(fp)
  81c4e8:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  81c4ec:	e0bffc17 	ldw	r2,-16(fp)
  81c4f0:	10800017 	ldw	r2,0(r2)
  81c4f4:	10800104 	addi	r2,r2,4
  81c4f8:	e0fffc17 	ldw	r3,-16(fp)
  81c4fc:	18c00417 	ldw	r3,16(r3)
  81c500:	e13ffc17 	ldw	r4,-16(fp)
  81c504:	20c7883a 	add	r3,r4,r3
  81c508:	18c01704 	addi	r3,r3,92
  81c50c:	18c00003 	ldbu	r3,0(r3)
  81c510:	18c03fcc 	andi	r3,r3,255
  81c514:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  81c518:	e0bffc17 	ldw	r2,-16(fp)
  81c51c:	10800417 	ldw	r2,16(r2)
  81c520:	10800044 	addi	r2,r2,1
  81c524:	e0fffc17 	ldw	r3,-16(fp)
  81c528:	18800415 	stw	r2,16(r3)
  81c52c:	10c00fcc 	andi	r3,r2,63
  81c530:	e0bffc17 	ldw	r2,-16(fp)
  81c534:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81c538:	e0bffc17 	ldw	r2,-16(fp)
  81c53c:	10800117 	ldw	r2,4(r2)
  81c540:	10c01014 	ori	r3,r2,64
  81c544:	e0bffc17 	ldw	r2,-16(fp)
  81c548:	10c00115 	stw	r3,4(r2)
  81c54c:	00000e06 	br	81c588 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  81c550:	e0bffc17 	ldw	r2,-16(fp)
  81c554:	10800017 	ldw	r2,0(r2)
  81c558:	10800204 	addi	r2,r2,8
  81c55c:	10800037 	ldwio	r2,0(r2)
  81c560:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81c564:	e0bffd17 	ldw	r2,-12(fp)
  81c568:	1082000c 	andi	r2,r2,2048
  81c56c:	1000061e 	bne	r2,zero,81c588 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81c570:	e0bffc17 	ldw	r2,-16(fp)
  81c574:	10c00117 	ldw	r3,4(r2)
  81c578:	00bfefc4 	movi	r2,-65
  81c57c:	1886703a 	and	r3,r3,r2
  81c580:	e0bffc17 	ldw	r2,-16(fp)
  81c584:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  81c588:	e0bffc17 	ldw	r2,-16(fp)
  81c58c:	10c00417 	ldw	r3,16(r2)
  81c590:	e0bffc17 	ldw	r2,-16(fp)
  81c594:	10800517 	ldw	r2,20(r2)
  81c598:	1880061e 	bne	r3,r2,81c5b4 <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81c59c:	e0bffc17 	ldw	r2,-16(fp)
  81c5a0:	10c00117 	ldw	r3,4(r2)
  81c5a4:	00beefc4 	movi	r2,-1089
  81c5a8:	1886703a 	and	r3,r3,r2
  81c5ac:	e0bffc17 	ldw	r2,-16(fp)
  81c5b0:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81c5b4:	e0bffc17 	ldw	r2,-16(fp)
  81c5b8:	10800017 	ldw	r2,0(r2)
  81c5bc:	10800304 	addi	r2,r2,12
  81c5c0:	e0fffc17 	ldw	r3,-16(fp)
  81c5c4:	18c00117 	ldw	r3,4(r3)
  81c5c8:	10c00035 	stwio	r3,0(r2)
}
  81c5cc:	e037883a 	mov	sp,fp
  81c5d0:	df000017 	ldw	fp,0(sp)
  81c5d4:	dec00104 	addi	sp,sp,4
  81c5d8:	f800283a 	ret

0081c5dc <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  81c5dc:	defffd04 	addi	sp,sp,-12
  81c5e0:	df000215 	stw	fp,8(sp)
  81c5e4:	df000204 	addi	fp,sp,8
  81c5e8:	e13ffe15 	stw	r4,-8(fp)
  81c5ec:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81c5f0:	00000506 	br	81c608 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  81c5f4:	e0bfff17 	ldw	r2,-4(fp)
  81c5f8:	1090000c 	andi	r2,r2,16384
  81c5fc:	10000226 	beq	r2,zero,81c608 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  81c600:	00bffd44 	movi	r2,-11
  81c604:	00000606 	br	81c620 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81c608:	e0bffe17 	ldw	r2,-8(fp)
  81c60c:	10c00417 	ldw	r3,16(r2)
  81c610:	e0bffe17 	ldw	r2,-8(fp)
  81c614:	10800517 	ldw	r2,20(r2)
  81c618:	18bff61e 	bne	r3,r2,81c5f4 <__alt_data_end+0xff81c5f4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  81c61c:	0005883a 	mov	r2,zero
}
  81c620:	e037883a 	mov	sp,fp
  81c624:	df000017 	ldw	fp,0(sp)
  81c628:	dec00104 	addi	sp,sp,4
  81c62c:	f800283a 	ret

0081c630 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81c630:	defffe04 	addi	sp,sp,-8
  81c634:	dfc00115 	stw	ra,4(sp)
  81c638:	df000015 	stw	fp,0(sp)
  81c63c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81c640:	008020b4 	movhi	r2,130
  81c644:	10bdbb04 	addi	r2,r2,-2324
  81c648:	10800017 	ldw	r2,0(r2)
  81c64c:	10000526 	beq	r2,zero,81c664 <alt_get_errno+0x34>
  81c650:	008020b4 	movhi	r2,130
  81c654:	10bdbb04 	addi	r2,r2,-2324
  81c658:	10800017 	ldw	r2,0(r2)
  81c65c:	103ee83a 	callr	r2
  81c660:	00000206 	br	81c66c <alt_get_errno+0x3c>
  81c664:	008020b4 	movhi	r2,130
  81c668:	10811e04 	addi	r2,r2,1144
}
  81c66c:	e037883a 	mov	sp,fp
  81c670:	dfc00117 	ldw	ra,4(sp)
  81c674:	df000017 	ldw	fp,0(sp)
  81c678:	dec00204 	addi	sp,sp,8
  81c67c:	f800283a 	ret

0081c680 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  81c680:	defff204 	addi	sp,sp,-56
  81c684:	dfc00d15 	stw	ra,52(sp)
  81c688:	df000c15 	stw	fp,48(sp)
  81c68c:	df000c04 	addi	fp,sp,48
  81c690:	e13ffc15 	stw	r4,-16(fp)
  81c694:	e17ffd15 	stw	r5,-12(fp)
  81c698:	e1bffe15 	stw	r6,-8(fp)
  81c69c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  81c6a0:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  81c6a4:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  81c6a8:	e0bfff17 	ldw	r2,-4(fp)
  81c6ac:	1090000c 	andi	r2,r2,16384
  81c6b0:	1005003a 	cmpeq	r2,r2,zero
  81c6b4:	10803fcc 	andi	r2,r2,255
  81c6b8:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81c6bc:	00001306 	br	81c70c <altera_avalon_uart_read+0x8c>
    {
      count++;
  81c6c0:	e0bff517 	ldw	r2,-44(fp)
  81c6c4:	10800044 	addi	r2,r2,1
  81c6c8:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  81c6cc:	e0bffd17 	ldw	r2,-12(fp)
  81c6d0:	10c00044 	addi	r3,r2,1
  81c6d4:	e0fffd15 	stw	r3,-12(fp)
  81c6d8:	e0fffc17 	ldw	r3,-16(fp)
  81c6dc:	18c00217 	ldw	r3,8(r3)
  81c6e0:	e13ffc17 	ldw	r4,-16(fp)
  81c6e4:	20c7883a 	add	r3,r4,r3
  81c6e8:	18c00704 	addi	r3,r3,28
  81c6ec:	18c00003 	ldbu	r3,0(r3)
  81c6f0:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  81c6f4:	e0bffc17 	ldw	r2,-16(fp)
  81c6f8:	10800217 	ldw	r2,8(r2)
  81c6fc:	10800044 	addi	r2,r2,1
  81c700:	10c00fcc 	andi	r3,r2,63
  81c704:	e0bffc17 	ldw	r2,-16(fp)
  81c708:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81c70c:	e0fff517 	ldw	r3,-44(fp)
  81c710:	e0bffe17 	ldw	r2,-8(fp)
  81c714:	1880050e 	bge	r3,r2,81c72c <altera_avalon_uart_read+0xac>
  81c718:	e0bffc17 	ldw	r2,-16(fp)
  81c71c:	10c00217 	ldw	r3,8(r2)
  81c720:	e0bffc17 	ldw	r2,-16(fp)
  81c724:	10800317 	ldw	r2,12(r2)
  81c728:	18bfe51e 	bne	r3,r2,81c6c0 <__alt_data_end+0xff81c6c0>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  81c72c:	e0bff517 	ldw	r2,-44(fp)
  81c730:	1000251e 	bne	r2,zero,81c7c8 <altera_avalon_uart_read+0x148>
  81c734:	e0bffc17 	ldw	r2,-16(fp)
  81c738:	10c00217 	ldw	r3,8(r2)
  81c73c:	e0bffc17 	ldw	r2,-16(fp)
  81c740:	10800317 	ldw	r2,12(r2)
  81c744:	1880201e 	bne	r3,r2,81c7c8 <altera_avalon_uart_read+0x148>
    {
      if (!block)
  81c748:	e0bff617 	ldw	r2,-40(fp)
  81c74c:	1000071e 	bne	r2,zero,81c76c <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  81c750:	081c6300 	call	81c630 <alt_get_errno>
  81c754:	1007883a 	mov	r3,r2
  81c758:	008002c4 	movi	r2,11
  81c75c:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  81c760:	00800044 	movi	r2,1
  81c764:	e0bff405 	stb	r2,-48(fp)
        break;
  81c768:	00001b06 	br	81c7d8 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81c76c:	0005303a 	rdctl	r2,status
  81c770:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81c774:	e0fff817 	ldw	r3,-32(fp)
  81c778:	00bfff84 	movi	r2,-2
  81c77c:	1884703a 	and	r2,r3,r2
  81c780:	1001703a 	wrctl	status,r2
  
  return context;
  81c784:	e0bff817 	ldw	r2,-32(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  81c788:	e0bff715 	stw	r2,-36(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81c78c:	e0bffc17 	ldw	r2,-16(fp)
  81c790:	10800117 	ldw	r2,4(r2)
  81c794:	10c02014 	ori	r3,r2,128
  81c798:	e0bffc17 	ldw	r2,-16(fp)
  81c79c:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81c7a0:	e0bffc17 	ldw	r2,-16(fp)
  81c7a4:	10800017 	ldw	r2,0(r2)
  81c7a8:	10800304 	addi	r2,r2,12
  81c7ac:	e0fffc17 	ldw	r3,-16(fp)
  81c7b0:	18c00117 	ldw	r3,4(r3)
  81c7b4:	10c00035 	stwio	r3,0(r2)
  81c7b8:	e0bff717 	ldw	r2,-36(fp)
  81c7bc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81c7c0:	e0bff917 	ldw	r2,-28(fp)
  81c7c4:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  81c7c8:	e0bff517 	ldw	r2,-44(fp)
  81c7cc:	1000021e 	bne	r2,zero,81c7d8 <altera_avalon_uart_read+0x158>
  81c7d0:	e0bffe17 	ldw	r2,-8(fp)
  81c7d4:	103fb91e 	bne	r2,zero,81c6bc <__alt_data_end+0xff81c6bc>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81c7d8:	0005303a 	rdctl	r2,status
  81c7dc:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81c7e0:	e0fffa17 	ldw	r3,-24(fp)
  81c7e4:	00bfff84 	movi	r2,-2
  81c7e8:	1884703a 	and	r2,r3,r2
  81c7ec:	1001703a 	wrctl	status,r2
  
  return context;
  81c7f0:	e0bffa17 	ldw	r2,-24(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  81c7f4:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81c7f8:	e0bffc17 	ldw	r2,-16(fp)
  81c7fc:	10800117 	ldw	r2,4(r2)
  81c800:	10c02014 	ori	r3,r2,128
  81c804:	e0bffc17 	ldw	r2,-16(fp)
  81c808:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81c80c:	e0bffc17 	ldw	r2,-16(fp)
  81c810:	10800017 	ldw	r2,0(r2)
  81c814:	10800304 	addi	r2,r2,12
  81c818:	e0fffc17 	ldw	r3,-16(fp)
  81c81c:	18c00117 	ldw	r3,4(r3)
  81c820:	10c00035 	stwio	r3,0(r2)
  81c824:	e0bff717 	ldw	r2,-36(fp)
  81c828:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81c82c:	e0bffb17 	ldw	r2,-20(fp)
  81c830:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  81c834:	e0bff403 	ldbu	r2,-48(fp)
  81c838:	10000226 	beq	r2,zero,81c844 <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  81c83c:	00bffd44 	movi	r2,-11
  81c840:	00000106 	br	81c848 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  81c844:	e0bff517 	ldw	r2,-44(fp)
  }
}
  81c848:	e037883a 	mov	sp,fp
  81c84c:	dfc00117 	ldw	ra,4(sp)
  81c850:	df000017 	ldw	fp,0(sp)
  81c854:	dec00204 	addi	sp,sp,8
  81c858:	f800283a 	ret

0081c85c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81c85c:	defffe04 	addi	sp,sp,-8
  81c860:	dfc00115 	stw	ra,4(sp)
  81c864:	df000015 	stw	fp,0(sp)
  81c868:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81c86c:	008020b4 	movhi	r2,130
  81c870:	10bdbb04 	addi	r2,r2,-2324
  81c874:	10800017 	ldw	r2,0(r2)
  81c878:	10000526 	beq	r2,zero,81c890 <alt_get_errno+0x34>
  81c87c:	008020b4 	movhi	r2,130
  81c880:	10bdbb04 	addi	r2,r2,-2324
  81c884:	10800017 	ldw	r2,0(r2)
  81c888:	103ee83a 	callr	r2
  81c88c:	00000206 	br	81c898 <alt_get_errno+0x3c>
  81c890:	008020b4 	movhi	r2,130
  81c894:	10811e04 	addi	r2,r2,1144
}
  81c898:	e037883a 	mov	sp,fp
  81c89c:	dfc00117 	ldw	ra,4(sp)
  81c8a0:	df000017 	ldw	fp,0(sp)
  81c8a4:	dec00204 	addi	sp,sp,8
  81c8a8:	f800283a 	ret

0081c8ac <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  81c8ac:	defff204 	addi	sp,sp,-56
  81c8b0:	dfc00d15 	stw	ra,52(sp)
  81c8b4:	df000c15 	stw	fp,48(sp)
  81c8b8:	df000c04 	addi	fp,sp,48
  81c8bc:	e13ffc15 	stw	r4,-16(fp)
  81c8c0:	e17ffd15 	stw	r5,-12(fp)
  81c8c4:	e1bffe15 	stw	r6,-8(fp)
  81c8c8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  81c8cc:	e0bffe17 	ldw	r2,-8(fp)
  81c8d0:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  81c8d4:	e0bfff17 	ldw	r2,-4(fp)
  81c8d8:	1090000c 	andi	r2,r2,16384
  81c8dc:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81c8e0:	00003c06 	br	81c9d4 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81c8e4:	e0bffc17 	ldw	r2,-16(fp)
  81c8e8:	10800517 	ldw	r2,20(r2)
  81c8ec:	10800044 	addi	r2,r2,1
  81c8f0:	10800fcc 	andi	r2,r2,63
  81c8f4:	e0bff615 	stw	r2,-40(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  81c8f8:	e0bffc17 	ldw	r2,-16(fp)
  81c8fc:	10c00417 	ldw	r3,16(r2)
  81c900:	e0bff617 	ldw	r2,-40(fp)
  81c904:	1880221e 	bne	r3,r2,81c990 <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  81c908:	e0bff517 	ldw	r2,-44(fp)
  81c90c:	10000526 	beq	r2,zero,81c924 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  81c910:	081c85c0 	call	81c85c <alt_get_errno>
  81c914:	1007883a 	mov	r3,r2
  81c918:	008002c4 	movi	r2,11
  81c91c:	18800015 	stw	r2,0(r3)
        break;
  81c920:	00002e06 	br	81c9dc <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81c924:	0005303a 	rdctl	r2,status
  81c928:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81c92c:	e0fff817 	ldw	r3,-32(fp)
  81c930:	00bfff84 	movi	r2,-2
  81c934:	1884703a 	and	r2,r3,r2
  81c938:	1001703a 	wrctl	status,r2
  
  return context;
  81c93c:	e0bff817 	ldw	r2,-32(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  81c940:	e0bff715 	stw	r2,-36(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81c944:	e0bffc17 	ldw	r2,-16(fp)
  81c948:	10800117 	ldw	r2,4(r2)
  81c94c:	10c11014 	ori	r3,r2,1088
  81c950:	e0bffc17 	ldw	r2,-16(fp)
  81c954:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81c958:	e0bffc17 	ldw	r2,-16(fp)
  81c95c:	10800017 	ldw	r2,0(r2)
  81c960:	10800304 	addi	r2,r2,12
  81c964:	e0fffc17 	ldw	r3,-16(fp)
  81c968:	18c00117 	ldw	r3,4(r3)
  81c96c:	10c00035 	stwio	r3,0(r2)
  81c970:	e0bff717 	ldw	r2,-36(fp)
  81c974:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81c978:	e0bff917 	ldw	r2,-28(fp)
  81c97c:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  81c980:	e0bffc17 	ldw	r2,-16(fp)
  81c984:	10c00417 	ldw	r3,16(r2)
  81c988:	e0bff617 	ldw	r2,-40(fp)
  81c98c:	18bffc26 	beq	r3,r2,81c980 <__alt_data_end+0xff81c980>
      }
    }

    count--;
  81c990:	e0bff417 	ldw	r2,-48(fp)
  81c994:	10bfffc4 	addi	r2,r2,-1
  81c998:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  81c99c:	e0bffc17 	ldw	r2,-16(fp)
  81c9a0:	10c00517 	ldw	r3,20(r2)
  81c9a4:	e0bffd17 	ldw	r2,-12(fp)
  81c9a8:	11000044 	addi	r4,r2,1
  81c9ac:	e13ffd15 	stw	r4,-12(fp)
  81c9b0:	10800003 	ldbu	r2,0(r2)
  81c9b4:	1009883a 	mov	r4,r2
  81c9b8:	e0bffc17 	ldw	r2,-16(fp)
  81c9bc:	10c5883a 	add	r2,r2,r3
  81c9c0:	10801704 	addi	r2,r2,92
  81c9c4:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  81c9c8:	e0bffc17 	ldw	r2,-16(fp)
  81c9cc:	e0fff617 	ldw	r3,-40(fp)
  81c9d0:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81c9d4:	e0bff417 	ldw	r2,-48(fp)
  81c9d8:	103fc21e 	bne	r2,zero,81c8e4 <__alt_data_end+0xff81c8e4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81c9dc:	0005303a 	rdctl	r2,status
  81c9e0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81c9e4:	e0fffa17 	ldw	r3,-24(fp)
  81c9e8:	00bfff84 	movi	r2,-2
  81c9ec:	1884703a 	and	r2,r3,r2
  81c9f0:	1001703a 	wrctl	status,r2
  
  return context;
  81c9f4:	e0bffa17 	ldw	r2,-24(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  81c9f8:	e0bff715 	stw	r2,-36(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81c9fc:	e0bffc17 	ldw	r2,-16(fp)
  81ca00:	10800117 	ldw	r2,4(r2)
  81ca04:	10c11014 	ori	r3,r2,1088
  81ca08:	e0bffc17 	ldw	r2,-16(fp)
  81ca0c:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81ca10:	e0bffc17 	ldw	r2,-16(fp)
  81ca14:	10800017 	ldw	r2,0(r2)
  81ca18:	10800304 	addi	r2,r2,12
  81ca1c:	e0fffc17 	ldw	r3,-16(fp)
  81ca20:	18c00117 	ldw	r3,4(r3)
  81ca24:	10c00035 	stwio	r3,0(r2)
  81ca28:	e0bff717 	ldw	r2,-36(fp)
  81ca2c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ca30:	e0bffb17 	ldw	r2,-20(fp)
  81ca34:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  81ca38:	e0fffe17 	ldw	r3,-8(fp)
  81ca3c:	e0bff417 	ldw	r2,-48(fp)
  81ca40:	1885c83a 	sub	r2,r3,r2
}
  81ca44:	e037883a 	mov	sp,fp
  81ca48:	dfc00117 	ldw	ra,4(sp)
  81ca4c:	df000017 	ldw	fp,0(sp)
  81ca50:	dec00204 	addi	sp,sp,8
  81ca54:	f800283a 	ret

0081ca58 <alt_up_audio_open_dev>:
#include "altera_up_avalon_audio_regs.h"

///////////////////////////////////////////////////////////////////////////
// Direct functions
alt_up_audio_dev* alt_up_audio_open_dev(const char* name)
{
  81ca58:	defffc04 	addi	sp,sp,-16
  81ca5c:	dfc00315 	stw	ra,12(sp)
  81ca60:	df000215 	stw	fp,8(sp)
  81ca64:	df000204 	addi	fp,sp,8
  81ca68:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_audio_dev *dev = (alt_up_audio_dev*)alt_find_dev(name, &alt_dev_list);
  81ca6c:	e13fff17 	ldw	r4,-4(fp)
  81ca70:	014020b4 	movhi	r5,130
  81ca74:	297db804 	addi	r5,r5,-2336
  81ca78:	081d5340 	call	81d534 <alt_find_dev>
  81ca7c:	e0bffe15 	stw	r2,-8(fp)
  return dev;
  81ca80:	e0bffe17 	ldw	r2,-8(fp)
}
  81ca84:	e037883a 	mov	sp,fp
  81ca88:	dfc00117 	ldw	ra,4(sp)
  81ca8c:	df000017 	ldw	fp,0(sp)
  81ca90:	dec00204 	addi	sp,sp,8
  81ca94:	f800283a 	ret

0081ca98 <alt_up_audio_enable_read_interrupt>:

void alt_up_audio_enable_read_interrupt(alt_up_audio_dev *audio)
{
  81ca98:	defffd04 	addi	sp,sp,-12
  81ca9c:	df000215 	stw	fp,8(sp)
  81caa0:	df000204 	addi	fp,sp,8
  81caa4:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81caa8:	e0bfff17 	ldw	r2,-4(fp)
  81caac:	10800a17 	ldw	r2,40(r2)
  81cab0:	10800037 	ldwio	r2,0(r2)
  81cab4:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_RE_MSK;
  81cab8:	e0bffe17 	ldw	r2,-8(fp)
  81cabc:	10800054 	ori	r2,r2,1
  81cac0:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cac4:	e0bfff17 	ldw	r2,-4(fp)
  81cac8:	10800a17 	ldw	r2,40(r2)
  81cacc:	1007883a 	mov	r3,r2
  81cad0:	e0bffe17 	ldw	r2,-8(fp)
  81cad4:	18800035 	stwio	r2,0(r3)
}
  81cad8:	e037883a 	mov	sp,fp
  81cadc:	df000017 	ldw	fp,0(sp)
  81cae0:	dec00104 	addi	sp,sp,4
  81cae4:	f800283a 	ret

0081cae8 <alt_up_audio_disable_read_interrupt>:

void alt_up_audio_disable_read_interrupt(alt_up_audio_dev *audio)
{
  81cae8:	defffd04 	addi	sp,sp,-12
  81caec:	df000215 	stw	fp,8(sp)
  81caf0:	df000204 	addi	fp,sp,8
  81caf4:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81caf8:	e0bfff17 	ldw	r2,-4(fp)
  81cafc:	10800a17 	ldw	r2,40(r2)
  81cb00:	10800037 	ldwio	r2,0(r2)
  81cb04:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_RE_MSK;
  81cb08:	e0fffe17 	ldw	r3,-8(fp)
  81cb0c:	00bfff84 	movi	r2,-2
  81cb10:	1884703a 	and	r2,r3,r2
  81cb14:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cb18:	e0bfff17 	ldw	r2,-4(fp)
  81cb1c:	10800a17 	ldw	r2,40(r2)
  81cb20:	1007883a 	mov	r3,r2
  81cb24:	e0bffe17 	ldw	r2,-8(fp)
  81cb28:	18800035 	stwio	r2,0(r3)
}
  81cb2c:	e037883a 	mov	sp,fp
  81cb30:	df000017 	ldw	fp,0(sp)
  81cb34:	dec00104 	addi	sp,sp,4
  81cb38:	f800283a 	ret

0081cb3c <alt_up_audio_enable_write_interrupt>:

void alt_up_audio_enable_write_interrupt(alt_up_audio_dev *audio)
{
  81cb3c:	defffd04 	addi	sp,sp,-12
  81cb40:	df000215 	stw	fp,8(sp)
  81cb44:	df000204 	addi	fp,sp,8
  81cb48:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81cb4c:	e0bfff17 	ldw	r2,-4(fp)
  81cb50:	10800a17 	ldw	r2,40(r2)
  81cb54:	10800037 	ldwio	r2,0(r2)
  81cb58:	e0bffe15 	stw	r2,-8(fp)
	// set WE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_WE_MSK;
  81cb5c:	e0bffe17 	ldw	r2,-8(fp)
  81cb60:	10800094 	ori	r2,r2,2
  81cb64:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cb68:	e0bfff17 	ldw	r2,-4(fp)
  81cb6c:	10800a17 	ldw	r2,40(r2)
  81cb70:	1007883a 	mov	r3,r2
  81cb74:	e0bffe17 	ldw	r2,-8(fp)
  81cb78:	18800035 	stwio	r2,0(r3)
}
  81cb7c:	e037883a 	mov	sp,fp
  81cb80:	df000017 	ldw	fp,0(sp)
  81cb84:	dec00104 	addi	sp,sp,4
  81cb88:	f800283a 	ret

0081cb8c <alt_up_audio_disable_write_interrupt>:

void alt_up_audio_disable_write_interrupt(alt_up_audio_dev *audio)
{
  81cb8c:	defffd04 	addi	sp,sp,-12
  81cb90:	df000215 	stw	fp,8(sp)
  81cb94:	df000204 	addi	fp,sp,8
  81cb98:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81cb9c:	e0bfff17 	ldw	r2,-4(fp)
  81cba0:	10800a17 	ldw	r2,40(r2)
  81cba4:	10800037 	ldwio	r2,0(r2)
  81cba8:	e0bffe15 	stw	r2,-8(fp)
	// set WE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_WE_MSK;
  81cbac:	e0fffe17 	ldw	r3,-8(fp)
  81cbb0:	00bfff44 	movi	r2,-3
  81cbb4:	1884703a 	and	r2,r3,r2
  81cbb8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cbbc:	e0bfff17 	ldw	r2,-4(fp)
  81cbc0:	10800a17 	ldw	r2,40(r2)
  81cbc4:	1007883a 	mov	r3,r2
  81cbc8:	e0bffe17 	ldw	r2,-8(fp)
  81cbcc:	18800035 	stwio	r2,0(r3)
}
  81cbd0:	e037883a 	mov	sp,fp
  81cbd4:	df000017 	ldw	fp,0(sp)
  81cbd8:	dec00104 	addi	sp,sp,4
  81cbdc:	f800283a 	ret

0081cbe0 <alt_up_audio_read_interrupt_pending>:

int alt_up_audio_read_interrupt_pending(alt_up_audio_dev *audio)
{
  81cbe0:	defffd04 	addi	sp,sp,-12
  81cbe4:	df000215 	stw	fp,8(sp)
  81cbe8:	df000204 	addi	fp,sp,8
  81cbec:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81cbf0:	e0bfff17 	ldw	r2,-4(fp)
  81cbf4:	10800a17 	ldw	r2,40(r2)
  81cbf8:	10800037 	ldwio	r2,0(r2)
  81cbfc:	e0bffe15 	stw	r2,-8(fp)
	// return 1 if RI is set to 1
	return ( (ctrl_reg & ALT_UP_AUDIO_CONTROL_RI_MSK) ? 1 : 0 );
  81cc00:	e0bffe17 	ldw	r2,-8(fp)
  81cc04:	1080400c 	andi	r2,r2,256
  81cc08:	1004c03a 	cmpne	r2,r2,zero
  81cc0c:	10803fcc 	andi	r2,r2,255
}
  81cc10:	e037883a 	mov	sp,fp
  81cc14:	df000017 	ldw	fp,0(sp)
  81cc18:	dec00104 	addi	sp,sp,4
  81cc1c:	f800283a 	ret

0081cc20 <alt_up_audio_write_interrupt_pending>:

int alt_up_audio_write_interrupt_pending(alt_up_audio_dev *audio)
{
  81cc20:	defffd04 	addi	sp,sp,-12
  81cc24:	df000215 	stw	fp,8(sp)
  81cc28:	df000204 	addi	fp,sp,8
  81cc2c:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81cc30:	e0bfff17 	ldw	r2,-4(fp)
  81cc34:	10800a17 	ldw	r2,40(r2)
  81cc38:	10800037 	ldwio	r2,0(r2)
  81cc3c:	e0bffe15 	stw	r2,-8(fp)
	// return the WI value
	return ( (ctrl_reg & ALT_UP_AUDIO_CONTROL_WI_MSK) ? 1 : 0 );
  81cc40:	e0bffe17 	ldw	r2,-8(fp)
  81cc44:	1080800c 	andi	r2,r2,512
  81cc48:	1004c03a 	cmpne	r2,r2,zero
  81cc4c:	10803fcc 	andi	r2,r2,255
}
  81cc50:	e037883a 	mov	sp,fp
  81cc54:	df000017 	ldw	fp,0(sp)
  81cc58:	dec00104 	addi	sp,sp,4
  81cc5c:	f800283a 	ret

0081cc60 <alt_up_audio_reset_audio_core>:

void alt_up_audio_reset_audio_core(alt_up_audio_dev *audio)
{
  81cc60:	defffd04 	addi	sp,sp,-12
  81cc64:	df000215 	stw	fp,8(sp)
  81cc68:	df000204 	addi	fp,sp,8
  81cc6c:	e13fff15 	stw	r4,-4(fp)
	unsigned int ctrl_reg;
	ctrl_reg = IORD_ALT_UP_AUDIO_CONTROL(audio->base); 
  81cc70:	e0bfff17 	ldw	r2,-4(fp)
  81cc74:	10800a17 	ldw	r2,40(r2)
  81cc78:	10800037 	ldwio	r2,0(r2)
  81cc7c:	e0bffe15 	stw	r2,-8(fp)
	// set CR and CW to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_CR_MSK;
  81cc80:	e0bffe17 	ldw	r2,-8(fp)
  81cc84:	10800114 	ori	r2,r2,4
  81cc88:	e0bffe15 	stw	r2,-8(fp)
	ctrl_reg |= ALT_UP_AUDIO_CONTROL_CW_MSK;
  81cc8c:	e0bffe17 	ldw	r2,-8(fp)
  81cc90:	10800214 	ori	r2,r2,8
  81cc94:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cc98:	e0bfff17 	ldw	r2,-4(fp)
  81cc9c:	10800a17 	ldw	r2,40(r2)
  81cca0:	1007883a 	mov	r3,r2
  81cca4:	e0bffe17 	ldw	r2,-8(fp)
  81cca8:	18800035 	stwio	r2,0(r3)
	// set CR and CW to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_CR_MSK;
  81ccac:	e0fffe17 	ldw	r3,-8(fp)
  81ccb0:	00bffec4 	movi	r2,-5
  81ccb4:	1884703a 	and	r2,r3,r2
  81ccb8:	e0bffe15 	stw	r2,-8(fp)
	ctrl_reg &= ~ALT_UP_AUDIO_CONTROL_CW_MSK;
  81ccbc:	e0fffe17 	ldw	r3,-8(fp)
  81ccc0:	00bffdc4 	movi	r2,-9
  81ccc4:	1884703a 	and	r2,r3,r2
  81ccc8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_AUDIO_CONTROL(audio->base, ctrl_reg);
  81cccc:	e0bfff17 	ldw	r2,-4(fp)
  81ccd0:	10800a17 	ldw	r2,40(r2)
  81ccd4:	1007883a 	mov	r3,r2
  81ccd8:	e0bffe17 	ldw	r2,-8(fp)
  81ccdc:	18800035 	stwio	r2,0(r3)
}
  81cce0:	e037883a 	mov	sp,fp
  81cce4:	df000017 	ldw	fp,0(sp)
  81cce8:	dec00104 	addi	sp,sp,4
  81ccec:	f800283a 	ret

0081ccf0 <alt_up_audio_read_fifo_avail>:

/* Provides number of words of data available in the incoming FIFO: RALC or RARC */
unsigned int alt_up_audio_read_fifo_avail(alt_up_audio_dev *audio, int channel)
{
  81ccf0:	defffc04 	addi	sp,sp,-16
  81ccf4:	df000315 	stw	fp,12(sp)
  81ccf8:	df000304 	addi	fp,sp,12
  81ccfc:	e13ffe15 	stw	r4,-8(fp)
  81cd00:	e17fff15 	stw	r5,-4(fp)
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
  81cd04:	e0bffe17 	ldw	r2,-8(fp)
  81cd08:	10800a17 	ldw	r2,40(r2)
  81cd0c:	10800104 	addi	r2,r2,4
  81cd10:	10800037 	ldwio	r2,0(r2)
  81cd14:	e0bffd15 	stw	r2,-12(fp)
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST :
  81cd18:	e0bfff17 	ldw	r2,-4(fp)
  81cd1c:	1000041e 	bne	r2,zero,81cd30 <alt_up_audio_read_fifo_avail+0x40>
  81cd20:	e0bffd17 	ldw	r2,-12(fp)
  81cd24:	10bfc00c 	andi	r2,r2,65280
  81cd28:	1004d23a 	srli	r2,r2,8
  81cd2c:	00000206 	br	81cd38 <alt_up_audio_read_fifo_avail+0x48>
  81cd30:	e0bffd17 	ldw	r2,-12(fp)
  81cd34:	10803fcc 	andi	r2,r2,255
{
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
  81cd38:	e0bffd15 	stw	r2,-12(fp)
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST :
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
	return (fifospace);
  81cd3c:	e0bffd17 	ldw	r2,-12(fp)
}
  81cd40:	e037883a 	mov	sp,fp
  81cd44:	df000017 	ldw	fp,0(sp)
  81cd48:	dec00104 	addi	sp,sp,4
  81cd4c:	f800283a 	ret

0081cd50 <alt_up_audio_record_r>:
/* Checks if the read FIFO for the right channel has at least BUF_THRESHOLD data words 
 * available. If it doesn't, then just returns 0. If it does, then data is read from the
 * FIFO up to a maximum of len words, and stored into buf.
 */
unsigned int alt_up_audio_record_r(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
  81cd50:	defffa04 	addi	sp,sp,-24
  81cd54:	dfc00515 	stw	ra,20(sp)
  81cd58:	df000415 	stw	fp,16(sp)
  81cd5c:	df000404 	addi	fp,sp,16
  81cd60:	e13ffd15 	stw	r4,-12(fp)
  81cd64:	e17ffe15 	stw	r5,-8(fp)
  81cd68:	e1bfff15 	stw	r6,-4(fp)
	unsigned int data_words = alt_up_audio_read_fifo_avail (audio, ALT_UP_AUDIO_RIGHT);
  81cd6c:	e13ffd17 	ldw	r4,-12(fp)
  81cd70:	01400044 	movi	r5,1
  81cd74:	081ccf00 	call	81ccf0 <alt_up_audio_read_fifo_avail>
  81cd78:	e0bffc15 	stw	r2,-16(fp)
	if (data_words <= BUF_THRESHOLD)
  81cd7c:	e0bffc17 	ldw	r2,-16(fp)
  81cd80:	10801868 	cmpgeui	r2,r2,97
  81cd84:	1000021e 	bne	r2,zero,81cd90 <alt_up_audio_record_r+0x40>
		return 0;
  81cd88:	0005883a 	mov	r2,zero
  81cd8c:	00000506 	br	81cda4 <alt_up_audio_record_r+0x54>
	else
		return (alt_up_audio_read_fifo(audio, buf, len, ALT_UP_AUDIO_RIGHT));
  81cd90:	e13ffd17 	ldw	r4,-12(fp)
  81cd94:	e17ffe17 	ldw	r5,-8(fp)
  81cd98:	e1bfff17 	ldw	r6,-4(fp)
  81cd9c:	01c00044 	movi	r7,1
  81cda0:	081cf500 	call	81cf50 <alt_up_audio_read_fifo>
}
  81cda4:	e037883a 	mov	sp,fp
  81cda8:	dfc00117 	ldw	ra,4(sp)
  81cdac:	df000017 	ldw	fp,0(sp)
  81cdb0:	dec00204 	addi	sp,sp,8
  81cdb4:	f800283a 	ret

0081cdb8 <alt_up_audio_record_l>:
/* Checks if the read FIFO for the left channel has at least BUF_THRESHOLD data words 
 * available. If it doesn't, then just returns 0. If it does, then data is read from the
 * FIFO up to a maximum of len words, and stored into buf.
 */
unsigned int alt_up_audio_record_l(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
  81cdb8:	defffa04 	addi	sp,sp,-24
  81cdbc:	dfc00515 	stw	ra,20(sp)
  81cdc0:	df000415 	stw	fp,16(sp)
  81cdc4:	df000404 	addi	fp,sp,16
  81cdc8:	e13ffd15 	stw	r4,-12(fp)
  81cdcc:	e17ffe15 	stw	r5,-8(fp)
  81cdd0:	e1bfff15 	stw	r6,-4(fp)
	unsigned int data_words = alt_up_audio_read_fifo_avail (audio, ALT_UP_AUDIO_LEFT);
  81cdd4:	e13ffd17 	ldw	r4,-12(fp)
  81cdd8:	000b883a 	mov	r5,zero
  81cddc:	081ccf00 	call	81ccf0 <alt_up_audio_read_fifo_avail>
  81cde0:	e0bffc15 	stw	r2,-16(fp)
	if (data_words <= BUF_THRESHOLD)
  81cde4:	e0bffc17 	ldw	r2,-16(fp)
  81cde8:	10801868 	cmpgeui	r2,r2,97
  81cdec:	1000021e 	bne	r2,zero,81cdf8 <alt_up_audio_record_l+0x40>
		return 0;
  81cdf0:	0005883a 	mov	r2,zero
  81cdf4:	00000506 	br	81ce0c <alt_up_audio_record_l+0x54>
	else
		return (alt_up_audio_read_fifo(audio, buf, len, ALT_UP_AUDIO_LEFT));
  81cdf8:	e13ffd17 	ldw	r4,-12(fp)
  81cdfc:	e17ffe17 	ldw	r5,-8(fp)
  81ce00:	e1bfff17 	ldw	r6,-4(fp)
  81ce04:	000f883a 	mov	r7,zero
  81ce08:	081cf500 	call	81cf50 <alt_up_audio_read_fifo>
}
  81ce0c:	e037883a 	mov	sp,fp
  81ce10:	dfc00117 	ldw	ra,4(sp)
  81ce14:	df000017 	ldw	fp,0(sp)
  81ce18:	dec00204 	addi	sp,sp,8
  81ce1c:	f800283a 	ret

0081ce20 <alt_up_audio_write_fifo_space>:

/* Provides the amount of empty space available in the outgoing FIFO: WSLC or WSRC */
unsigned int alt_up_audio_write_fifo_space(alt_up_audio_dev *audio, int channel)
{
  81ce20:	defffc04 	addi	sp,sp,-16
  81ce24:	df000315 	stw	fp,12(sp)
  81ce28:	df000304 	addi	fp,sp,12
  81ce2c:	e13ffe15 	stw	r4,-8(fp)
  81ce30:	e17fff15 	stw	r5,-4(fp)
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
  81ce34:	e0bffe17 	ldw	r2,-8(fp)
  81ce38:	10800a17 	ldw	r2,40(r2)
  81ce3c:	10800104 	addi	r2,r2,4
  81ce40:	10800037 	ldwio	r2,0(r2)
  81ce44:	e0bffd15 	stw	r2,-12(fp)
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
  81ce48:	e0bfff17 	ldw	r2,-4(fp)
  81ce4c:	1000031e 	bne	r2,zero,81ce5c <alt_up_audio_write_fifo_space+0x3c>
  81ce50:	e0bffd17 	ldw	r2,-12(fp)
  81ce54:	1004d63a 	srli	r2,r2,24
  81ce58:	00000306 	br	81ce68 <alt_up_audio_write_fifo_space+0x48>
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
  81ce5c:	e0bffd17 	ldw	r2,-12(fp)
  81ce60:	10803fec 	andhi	r2,r2,255
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
  81ce64:	1004d43a 	srli	r2,r2,16
{
	unsigned int fifospace;
	// read the whole fifospace register
	fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
	// extract the part for proper Channel Read Space
	fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
  81ce68:	e0bffd15 	stw	r2,-12(fp)
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
		(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
	return (fifospace);
  81ce6c:	e0bffd17 	ldw	r2,-12(fp)
}
  81ce70:	e037883a 	mov	sp,fp
  81ce74:	df000017 	ldw	fp,0(sp)
  81ce78:	dec00104 	addi	sp,sp,4
  81ce7c:	f800283a 	ret

0081ce80 <alt_up_audio_play_r>:
/* Checks if the write FIFO for the right channel has at least BUF_THRESHOLD space available.
 * If it doesn't, then just returns 0. If it does, then data from buf is written into the 
 * FIFO, up to a maximum of len words.
 */
unsigned int alt_up_audio_play_r(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
  81ce80:	defffa04 	addi	sp,sp,-24
  81ce84:	dfc00515 	stw	ra,20(sp)
  81ce88:	df000415 	stw	fp,16(sp)
  81ce8c:	df000404 	addi	fp,sp,16
  81ce90:	e13ffd15 	stw	r4,-12(fp)
  81ce94:	e17ffe15 	stw	r5,-8(fp)
  81ce98:	e1bfff15 	stw	r6,-4(fp)
	unsigned int space = alt_up_audio_write_fifo_space (audio, ALT_UP_AUDIO_RIGHT);
  81ce9c:	e13ffd17 	ldw	r4,-12(fp)
  81cea0:	01400044 	movi	r5,1
  81cea4:	081ce200 	call	81ce20 <alt_up_audio_write_fifo_space>
  81cea8:	e0bffc15 	stw	r2,-16(fp)
	if (space <= BUF_THRESHOLD)
  81ceac:	e0bffc17 	ldw	r2,-16(fp)
  81ceb0:	10801868 	cmpgeui	r2,r2,97
  81ceb4:	1000021e 	bne	r2,zero,81cec0 <alt_up_audio_play_r+0x40>
		return 0;
  81ceb8:	0005883a 	mov	r2,zero
  81cebc:	00000506 	br	81ced4 <alt_up_audio_play_r+0x54>
	else
		return (alt_up_audio_write_fifo(audio, buf, len, ALT_UP_AUDIO_RIGHT));
  81cec0:	e13ffd17 	ldw	r4,-12(fp)
  81cec4:	e17ffe17 	ldw	r5,-8(fp)
  81cec8:	e1bfff17 	ldw	r6,-4(fp)
  81cecc:	01c00044 	movi	r7,1
  81ced0:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
}
  81ced4:	e037883a 	mov	sp,fp
  81ced8:	dfc00117 	ldw	ra,4(sp)
  81cedc:	df000017 	ldw	fp,0(sp)
  81cee0:	dec00204 	addi	sp,sp,8
  81cee4:	f800283a 	ret

0081cee8 <alt_up_audio_play_l>:
/* Checks if the write FIFO for the left channel has at least BUF_THRESHOLD space available.
 * If it doesn't, then just returns 0. If it does, then data from buf is written into the 
 * FIFO, up to a maximum of len words.
 */
unsigned int alt_up_audio_play_l(alt_up_audio_dev *audio, unsigned int *buf, int len)
{
  81cee8:	defffa04 	addi	sp,sp,-24
  81ceec:	dfc00515 	stw	ra,20(sp)
  81cef0:	df000415 	stw	fp,16(sp)
  81cef4:	df000404 	addi	fp,sp,16
  81cef8:	e13ffd15 	stw	r4,-12(fp)
  81cefc:	e17ffe15 	stw	r5,-8(fp)
  81cf00:	e1bfff15 	stw	r6,-4(fp)
	unsigned int space = alt_up_audio_write_fifo_space (audio, ALT_UP_AUDIO_LEFT);
  81cf04:	e13ffd17 	ldw	r4,-12(fp)
  81cf08:	000b883a 	mov	r5,zero
  81cf0c:	081ce200 	call	81ce20 <alt_up_audio_write_fifo_space>
  81cf10:	e0bffc15 	stw	r2,-16(fp)
	if (space <= BUF_THRESHOLD)
  81cf14:	e0bffc17 	ldw	r2,-16(fp)
  81cf18:	10801868 	cmpgeui	r2,r2,97
  81cf1c:	1000021e 	bne	r2,zero,81cf28 <alt_up_audio_play_l+0x40>
		return 0;
  81cf20:	0005883a 	mov	r2,zero
  81cf24:	00000506 	br	81cf3c <alt_up_audio_play_l+0x54>
	else
		return (alt_up_audio_write_fifo(audio, buf, len, ALT_UP_AUDIO_LEFT));
  81cf28:	e13ffd17 	ldw	r4,-12(fp)
  81cf2c:	e17ffe17 	ldw	r5,-8(fp)
  81cf30:	e1bfff17 	ldw	r6,-4(fp)
  81cf34:	000f883a 	mov	r7,zero
  81cf38:	081d0300 	call	81d030 <alt_up_audio_write_fifo>
}
  81cf3c:	e037883a 	mov	sp,fp
  81cf40:	dfc00117 	ldw	ra,4(sp)
  81cf44:	df000017 	ldw	fp,0(sp)
  81cf48:	dec00204 	addi	sp,sp,8
  81cf4c:	f800283a 	ret

0081cf50 <alt_up_audio_read_fifo>:

int alt_up_audio_read_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
  81cf50:	defff904 	addi	sp,sp,-28
  81cf54:	df000615 	stw	fp,24(sp)
  81cf58:	df000604 	addi	fp,sp,24
  81cf5c:	e13ffc15 	stw	r4,-16(fp)
  81cf60:	e17ffd15 	stw	r5,-12(fp)
  81cf64:	e1bffe15 	stw	r6,-8(fp)
  81cf68:	e1ffff15 	stw	r7,-4(fp)
	unsigned int fifospace;
	int count = 0;
  81cf6c:	e03ffa15 	stw	zero,-24(fp)
	while ( count < len ) 
  81cf70:	00002706 	br	81d010 <alt_up_audio_read_fifo+0xc0>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
  81cf74:	e0bffc17 	ldw	r2,-16(fp)
  81cf78:	10800a17 	ldw	r2,40(r2)
  81cf7c:	10800104 	addi	r2,r2,4
  81cf80:	10800037 	ldwio	r2,0(r2)
  81cf84:	e0bffb15 	stw	r2,-20(fp)
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
  81cf88:	e0bfff17 	ldw	r2,-4(fp)
  81cf8c:	1000041e 	bne	r2,zero,81cfa0 <alt_up_audio_read_fifo+0x50>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
  81cf90:	e0bffb17 	ldw	r2,-20(fp)
  81cf94:	10bfc00c 	andi	r2,r2,65280
			:
  81cf98:	1004d23a 	srli	r2,r2,8
  81cf9c:	00000206 	br	81cfa8 <alt_up_audio_read_fifo+0x58>
  81cfa0:	e0bffb17 	ldw	r2,-20(fp)
  81cfa4:	10803fcc 	andi	r2,r2,255
	while ( count < len ) 
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for proper Channel Read Space
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
  81cfa8:	e0bffb15 	stw	r2,-20(fp)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
		if (fifospace > 0) 
  81cfac:	e0bffb17 	ldw	r2,-20(fp)
  81cfb0:	10001626 	beq	r2,zero,81d00c <alt_up_audio_read_fifo+0xbc>
		{
			buf[count] = (channel == ALT_UP_AUDIO_LEFT) ? 
  81cfb4:	e0bffa17 	ldw	r2,-24(fp)
  81cfb8:	1085883a 	add	r2,r2,r2
  81cfbc:	1085883a 	add	r2,r2,r2
  81cfc0:	1007883a 	mov	r3,r2
  81cfc4:	e0bffd17 	ldw	r2,-12(fp)
  81cfc8:	10c5883a 	add	r2,r2,r3
  81cfcc:	e0ffff17 	ldw	r3,-4(fp)
  81cfd0:	1800051e 	bne	r3,zero,81cfe8 <alt_up_audio_read_fifo+0x98>
				IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
  81cfd4:	e0fffc17 	ldw	r3,-16(fp)
  81cfd8:	18c00a17 	ldw	r3,40(r3)
  81cfdc:	18c00204 	addi	r3,r3,8
  81cfe0:	18c00037 	ldwio	r3,0(r3)
  81cfe4:	00000406 	br	81cff8 <alt_up_audio_read_fifo+0xa8>
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base);
  81cfe8:	e0fffc17 	ldw	r3,-16(fp)
  81cfec:	18c00a17 	ldw	r3,40(r3)
  81cff0:	18c00304 	addi	r3,r3,12
  81cff4:	18c00037 	ldwio	r3,0(r3)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RALC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RALC_OFST 
			:
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_RARC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_RARC_OFST;
		if (fifospace > 0) 
		{
			buf[count] = (channel == ALT_UP_AUDIO_LEFT) ? 
  81cff8:	10c00015 	stw	r3,0(r2)
				IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base);
			count ++;
  81cffc:	e0bffa17 	ldw	r2,-24(fp)
  81d000:	10800044 	addi	r2,r2,1
  81d004:	e0bffa15 	stw	r2,-24(fp)
  81d008:	00000106 	br	81d010 <alt_up_audio_read_fifo+0xc0>
		}
		else
		{
			// no more data to read
			break;
  81d00c:	00000306 	br	81d01c <alt_up_audio_read_fifo+0xcc>

int alt_up_audio_read_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
	unsigned int fifospace;
	int count = 0;
	while ( count < len ) 
  81d010:	e0fffa17 	ldw	r3,-24(fp)
  81d014:	e0bffe17 	ldw	r2,-8(fp)
  81d018:	18bfd616 	blt	r3,r2,81cf74 <__alt_data_end+0xff81cf74>
		{
			// no more data to read
			break;
		}
	}
	return count;
  81d01c:	e0bffa17 	ldw	r2,-24(fp)
}
  81d020:	e037883a 	mov	sp,fp
  81d024:	df000017 	ldw	fp,0(sp)
  81d028:	dec00104 	addi	sp,sp,4
  81d02c:	f800283a 	ret

0081d030 <alt_up_audio_write_fifo>:

int alt_up_audio_write_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
  81d030:	defff904 	addi	sp,sp,-28
  81d034:	df000615 	stw	fp,24(sp)
  81d038:	df000604 	addi	fp,sp,24
  81d03c:	e13ffc15 	stw	r4,-16(fp)
  81d040:	e17ffd15 	stw	r5,-12(fp)
  81d044:	e1bffe15 	stw	r6,-8(fp)
  81d048:	e1ffff15 	stw	r7,-4(fp)
	unsigned int fifospace;
	int count = 0;
  81d04c:	e03ffa15 	stw	zero,-24(fp)
	while ( count < len ) 
  81d050:	00003106 	br	81d118 <alt_up_audio_write_fifo+0xe8>
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
  81d054:	e0bffc17 	ldw	r2,-16(fp)
  81d058:	10800a17 	ldw	r2,40(r2)
  81d05c:	10800104 	addi	r2,r2,4
  81d060:	10800037 	ldwio	r2,0(r2)
  81d064:	e0bffb15 	stw	r2,-20(fp)
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
  81d068:	e0bfff17 	ldw	r2,-4(fp)
  81d06c:	1000031e 	bne	r2,zero,81d07c <alt_up_audio_write_fifo+0x4c>
  81d070:	e0bffb17 	ldw	r2,-20(fp)
  81d074:	1004d63a 	srli	r2,r2,24
  81d078:	00000306 	br	81d088 <alt_up_audio_write_fifo+0x58>
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
  81d07c:	e0bffb17 	ldw	r2,-20(fp)
  81d080:	10803fec 	andhi	r2,r2,255
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
  81d084:	1004d43a 	srli	r2,r2,16
	while ( count < len ) 
	{
		// read the whole fifospace register
		fifospace = IORD_ALT_UP_AUDIO_FIFOSPACE(audio->base);
		// extract the part for Left Channel Write Space 
		fifospace = (channel == ALT_UP_AUDIO_LEFT) ? 
  81d088:	e0bffb15 	stw	r2,-20(fp)
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSLC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSLC_OFST :
			(fifospace & ALT_UP_AUDIO_FIFOSPACE_WSRC_MSK) >> ALT_UP_AUDIO_FIFOSPACE_WSRC_OFST;
		if (fifospace > 0) 
  81d08c:	e0bffb17 	ldw	r2,-20(fp)
  81d090:	10002026 	beq	r2,zero,81d114 <alt_up_audio_write_fifo+0xe4>
		{
			if (channel == ALT_UP_AUDIO_LEFT) 
  81d094:	e0bfff17 	ldw	r2,-4(fp)
  81d098:	10000f1e 	bne	r2,zero,81d0d8 <alt_up_audio_write_fifo+0xa8>
				IOWR_ALT_UP_AUDIO_LEFTDATA(audio->base, buf[count++]);
  81d09c:	e0bffc17 	ldw	r2,-16(fp)
  81d0a0:	10800a17 	ldw	r2,40(r2)
  81d0a4:	10800204 	addi	r2,r2,8
  81d0a8:	1009883a 	mov	r4,r2
  81d0ac:	e0bffa17 	ldw	r2,-24(fp)
  81d0b0:	10c00044 	addi	r3,r2,1
  81d0b4:	e0fffa15 	stw	r3,-24(fp)
  81d0b8:	1085883a 	add	r2,r2,r2
  81d0bc:	1085883a 	add	r2,r2,r2
  81d0c0:	1007883a 	mov	r3,r2
  81d0c4:	e0bffd17 	ldw	r2,-12(fp)
  81d0c8:	10c5883a 	add	r2,r2,r3
  81d0cc:	10800017 	ldw	r2,0(r2)
  81d0d0:	20800035 	stwio	r2,0(r4)
  81d0d4:	00001006 	br	81d118 <alt_up_audio_write_fifo+0xe8>
			else
				IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, buf[count++]);
  81d0d8:	e0bffc17 	ldw	r2,-16(fp)
  81d0dc:	10800a17 	ldw	r2,40(r2)
  81d0e0:	10800304 	addi	r2,r2,12
  81d0e4:	1009883a 	mov	r4,r2
  81d0e8:	e0bffa17 	ldw	r2,-24(fp)
  81d0ec:	10c00044 	addi	r3,r2,1
  81d0f0:	e0fffa15 	stw	r3,-24(fp)
  81d0f4:	1085883a 	add	r2,r2,r2
  81d0f8:	1085883a 	add	r2,r2,r2
  81d0fc:	1007883a 	mov	r3,r2
  81d100:	e0bffd17 	ldw	r2,-12(fp)
  81d104:	10c5883a 	add	r2,r2,r3
  81d108:	10800017 	ldw	r2,0(r2)
  81d10c:	20800035 	stwio	r2,0(r4)
  81d110:	00000106 	br	81d118 <alt_up_audio_write_fifo+0xe8>
		}
		else
		{
			// no more space to write
			break;
  81d114:	00000306 	br	81d124 <alt_up_audio_write_fifo+0xf4>

int alt_up_audio_write_fifo(alt_up_audio_dev *audio, unsigned int *buf, int len, int channel)
{
	unsigned int fifospace;
	int count = 0;
	while ( count < len ) 
  81d118:	e0fffa17 	ldw	r3,-24(fp)
  81d11c:	e0bffe17 	ldw	r2,-8(fp)
  81d120:	18bfcc16 	blt	r3,r2,81d054 <__alt_data_end+0xff81d054>
		{
			// no more space to write
			break;
		}
	}
	return count;
  81d124:	e0bffa17 	ldw	r2,-24(fp)
}
  81d128:	e037883a 	mov	sp,fp
  81d12c:	df000017 	ldw	fp,0(sp)
  81d130:	dec00104 	addi	sp,sp,4
  81d134:	f800283a 	ret

0081d138 <alt_up_audio_read_fifo_head>:

unsigned int alt_up_audio_read_fifo_head(alt_up_audio_dev *audio, int channel)
{
  81d138:	defffd04 	addi	sp,sp,-12
  81d13c:	df000215 	stw	fp,8(sp)
  81d140:	df000204 	addi	fp,sp,8
  81d144:	e13ffe15 	stw	r4,-8(fp)
  81d148:	e17fff15 	stw	r5,-4(fp)
	return ( (channel == ALT_UP_AUDIO_LEFT) ?  IORD_ALT_UP_AUDIO_LEFTDATA(audio->base) :
  81d14c:	e0bfff17 	ldw	r2,-4(fp)
  81d150:	1000051e 	bne	r2,zero,81d168 <alt_up_audio_read_fifo_head+0x30>
  81d154:	e0bffe17 	ldw	r2,-8(fp)
  81d158:	10800a17 	ldw	r2,40(r2)
  81d15c:	10800204 	addi	r2,r2,8
  81d160:	10800037 	ldwio	r2,0(r2)
  81d164:	00000406 	br	81d178 <alt_up_audio_read_fifo_head+0x40>
				IORD_ALT_UP_AUDIO_RIGHTDATA(audio->base) );
  81d168:	e0bffe17 	ldw	r2,-8(fp)
  81d16c:	10800a17 	ldw	r2,40(r2)
  81d170:	10800304 	addi	r2,r2,12
  81d174:	10800037 	ldwio	r2,0(r2)
}
  81d178:	e037883a 	mov	sp,fp
  81d17c:	df000017 	ldw	fp,0(sp)
  81d180:	dec00104 	addi	sp,sp,4
  81d184:	f800283a 	ret

0081d188 <alt_up_audio_write_fifo_head>:

void alt_up_audio_write_fifo_head(alt_up_audio_dev *audio, unsigned int data, int channel)
{
  81d188:	defffc04 	addi	sp,sp,-16
  81d18c:	df000315 	stw	fp,12(sp)
  81d190:	df000304 	addi	fp,sp,12
  81d194:	e13ffd15 	stw	r4,-12(fp)
  81d198:	e17ffe15 	stw	r5,-8(fp)
  81d19c:	e1bfff15 	stw	r6,-4(fp)
	if (channel == ALT_UP_AUDIO_LEFT) 
  81d1a0:	e0bfff17 	ldw	r2,-4(fp)
  81d1a4:	1000071e 	bne	r2,zero,81d1c4 <alt_up_audio_write_fifo_head+0x3c>
		IOWR_ALT_UP_AUDIO_LEFTDATA(audio->base, data);
  81d1a8:	e0bffd17 	ldw	r2,-12(fp)
  81d1ac:	10800a17 	ldw	r2,40(r2)
  81d1b0:	10800204 	addi	r2,r2,8
  81d1b4:	1007883a 	mov	r3,r2
  81d1b8:	e0bffe17 	ldw	r2,-8(fp)
  81d1bc:	18800035 	stwio	r2,0(r3)
  81d1c0:	00000606 	br	81d1dc <alt_up_audio_write_fifo_head+0x54>
	else
		IOWR_ALT_UP_AUDIO_RIGHTDATA(audio->base, data);
  81d1c4:	e0bffd17 	ldw	r2,-12(fp)
  81d1c8:	10800a17 	ldw	r2,40(r2)
  81d1cc:	10800304 	addi	r2,r2,12
  81d1d0:	1007883a 	mov	r3,r2
  81d1d4:	e0bffe17 	ldw	r2,-8(fp)
  81d1d8:	18800035 	stwio	r2,0(r3)
}
  81d1dc:	e037883a 	mov	sp,fp
  81d1e0:	df000017 	ldw	fp,0(sp)
  81d1e4:	dec00104 	addi	sp,sp,4
  81d1e8:	f800283a 	ret

0081d1ec <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  81d1ec:	defffa04 	addi	sp,sp,-24
  81d1f0:	dfc00515 	stw	ra,20(sp)
  81d1f4:	df000415 	stw	fp,16(sp)
  81d1f8:	df000404 	addi	fp,sp,16
  81d1fc:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  81d200:	008000c4 	movi	r2,3
  81d204:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  81d208:	e0fffd17 	ldw	r3,-12(fp)
  81d20c:	008003f4 	movhi	r2,15
  81d210:	10909004 	addi	r2,r2,16960
  81d214:	1885383a 	mul	r2,r3,r2
  81d218:	0100bef4 	movhi	r4,763
  81d21c:	213c2004 	addi	r4,r4,-3968
  81d220:	100b883a 	mov	r5,r2
  81d224:	0809abc0 	call	809abc <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  81d228:	01200034 	movhi	r4,32768
  81d22c:	213fffc4 	addi	r4,r4,-1
  81d230:	100b883a 	mov	r5,r2
  81d234:	0809abc0 	call	809abc <__udivsi3>
  81d238:	e13fff17 	ldw	r4,-4(fp)
  81d23c:	100b883a 	mov	r5,r2
  81d240:	0809abc0 	call	809abc <__udivsi3>
  81d244:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  81d248:	e0bffe17 	ldw	r2,-8(fp)
  81d24c:	10002a26 	beq	r2,zero,81d2f8 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  81d250:	e03ffc15 	stw	zero,-16(fp)
  81d254:	00001706 	br	81d2b4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  81d258:	00a00034 	movhi	r2,32768
  81d25c:	10bfffc4 	addi	r2,r2,-1
  81d260:	10bfffc4 	addi	r2,r2,-1
  81d264:	103ffe1e 	bne	r2,zero,81d260 <__alt_data_end+0xff81d260>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  81d268:	e0fffd17 	ldw	r3,-12(fp)
  81d26c:	008003f4 	movhi	r2,15
  81d270:	10909004 	addi	r2,r2,16960
  81d274:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  81d278:	0100bef4 	movhi	r4,763
  81d27c:	213c2004 	addi	r4,r4,-3968
  81d280:	100b883a 	mov	r5,r2
  81d284:	0809abc0 	call	809abc <__udivsi3>
  81d288:	01200034 	movhi	r4,32768
  81d28c:	213fffc4 	addi	r4,r4,-1
  81d290:	100b883a 	mov	r5,r2
  81d294:	0809abc0 	call	809abc <__udivsi3>
  81d298:	1007883a 	mov	r3,r2
  81d29c:	e0bfff17 	ldw	r2,-4(fp)
  81d2a0:	10c5c83a 	sub	r2,r2,r3
  81d2a4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  81d2a8:	e0bffc17 	ldw	r2,-16(fp)
  81d2ac:	10800044 	addi	r2,r2,1
  81d2b0:	e0bffc15 	stw	r2,-16(fp)
  81d2b4:	e0fffc17 	ldw	r3,-16(fp)
  81d2b8:	e0bffe17 	ldw	r2,-8(fp)
  81d2bc:	18bfe616 	blt	r3,r2,81d258 <__alt_data_end+0xff81d258>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81d2c0:	e0fffd17 	ldw	r3,-12(fp)
  81d2c4:	008003f4 	movhi	r2,15
  81d2c8:	10909004 	addi	r2,r2,16960
  81d2cc:	1885383a 	mul	r2,r3,r2
  81d2d0:	0100bef4 	movhi	r4,763
  81d2d4:	213c2004 	addi	r4,r4,-3968
  81d2d8:	100b883a 	mov	r5,r2
  81d2dc:	0809abc0 	call	809abc <__udivsi3>
  81d2e0:	1007883a 	mov	r3,r2
  81d2e4:	e0bfff17 	ldw	r2,-4(fp)
  81d2e8:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81d2ec:	10bfffc4 	addi	r2,r2,-1
  81d2f0:	103ffe1e 	bne	r2,zero,81d2ec <__alt_data_end+0xff81d2ec>
  81d2f4:	00000d06 	br	81d32c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81d2f8:	e0fffd17 	ldw	r3,-12(fp)
  81d2fc:	008003f4 	movhi	r2,15
  81d300:	10909004 	addi	r2,r2,16960
  81d304:	1885383a 	mul	r2,r3,r2
  81d308:	0100bef4 	movhi	r4,763
  81d30c:	213c2004 	addi	r4,r4,-3968
  81d310:	100b883a 	mov	r5,r2
  81d314:	0809abc0 	call	809abc <__udivsi3>
  81d318:	1007883a 	mov	r3,r2
  81d31c:	e0bfff17 	ldw	r2,-4(fp)
  81d320:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81d324:	10bfffc4 	addi	r2,r2,-1
  81d328:	00bffe16 	blt	zero,r2,81d324 <__alt_data_end+0xff81d324>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  81d32c:	0005883a 	mov	r2,zero
}
  81d330:	e037883a 	mov	sp,fp
  81d334:	dfc00117 	ldw	ra,4(sp)
  81d338:	df000017 	ldw	fp,0(sp)
  81d33c:	dec00204 	addi	sp,sp,8
  81d340:	f800283a 	ret

0081d344 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  81d344:	defffe04 	addi	sp,sp,-8
  81d348:	df000115 	stw	fp,4(sp)
  81d34c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81d350:	e03fff15 	stw	zero,-4(fp)
  81d354:	00000506 	br	81d36c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  81d358:	e0bfff17 	ldw	r2,-4(fp)
  81d35c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81d360:	e0bfff17 	ldw	r2,-4(fp)
  81d364:	10800804 	addi	r2,r2,32
  81d368:	e0bfff15 	stw	r2,-4(fp)
  81d36c:	e0bfff17 	ldw	r2,-4(fp)
  81d370:	10820030 	cmpltui	r2,r2,2048
  81d374:	103ff81e 	bne	r2,zero,81d358 <__alt_data_end+0xff81d358>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  81d378:	e037883a 	mov	sp,fp
  81d37c:	df000017 	ldw	fp,0(sp)
  81d380:	dec00104 	addi	sp,sp,4
  81d384:	f800283a 	ret

0081d388 <alt_get_errno>:
  81d388:	defffe04 	addi	sp,sp,-8
  81d38c:	dfc00115 	stw	ra,4(sp)
  81d390:	df000015 	stw	fp,0(sp)
  81d394:	d839883a 	mov	fp,sp
  81d398:	008020b4 	movhi	r2,130
  81d39c:	10bdbb04 	addi	r2,r2,-2324
  81d3a0:	10800017 	ldw	r2,0(r2)
  81d3a4:	10000526 	beq	r2,zero,81d3bc <alt_get_errno+0x34>
  81d3a8:	008020b4 	movhi	r2,130
  81d3ac:	10bdbb04 	addi	r2,r2,-2324
  81d3b0:	10800017 	ldw	r2,0(r2)
  81d3b4:	103ee83a 	callr	r2
  81d3b8:	00000206 	br	81d3c4 <alt_get_errno+0x3c>
  81d3bc:	008020b4 	movhi	r2,130
  81d3c0:	10811e04 	addi	r2,r2,1144
  81d3c4:	e037883a 	mov	sp,fp
  81d3c8:	dfc00117 	ldw	ra,4(sp)
  81d3cc:	df000017 	ldw	fp,0(sp)
  81d3d0:	dec00204 	addi	sp,sp,8
  81d3d4:	f800283a 	ret

0081d3d8 <alt_dev_llist_insert>:
  81d3d8:	defffa04 	addi	sp,sp,-24
  81d3dc:	dfc00515 	stw	ra,20(sp)
  81d3e0:	df000415 	stw	fp,16(sp)
  81d3e4:	df000404 	addi	fp,sp,16
  81d3e8:	e13ffe15 	stw	r4,-8(fp)
  81d3ec:	e17fff15 	stw	r5,-4(fp)
  81d3f0:	e0bffe17 	ldw	r2,-8(fp)
  81d3f4:	10000326 	beq	r2,zero,81d404 <alt_dev_llist_insert+0x2c>
  81d3f8:	e0bffe17 	ldw	r2,-8(fp)
  81d3fc:	10800217 	ldw	r2,8(r2)
  81d400:	1000061e 	bne	r2,zero,81d41c <alt_dev_llist_insert+0x44>
  81d404:	081d3880 	call	81d388 <alt_get_errno>
  81d408:	1007883a 	mov	r3,r2
  81d40c:	00800584 	movi	r2,22
  81d410:	18800015 	stw	r2,0(r3)
  81d414:	00bffa84 	movi	r2,-22
  81d418:	00001306 	br	81d468 <alt_dev_llist_insert+0x90>
  81d41c:	e0bffe17 	ldw	r2,-8(fp)
  81d420:	e0ffff17 	ldw	r3,-4(fp)
  81d424:	e0fffc15 	stw	r3,-16(fp)
  81d428:	e0bffd15 	stw	r2,-12(fp)
  81d42c:	e0bffd17 	ldw	r2,-12(fp)
  81d430:	e0fffc17 	ldw	r3,-16(fp)
  81d434:	10c00115 	stw	r3,4(r2)
  81d438:	e0bffc17 	ldw	r2,-16(fp)
  81d43c:	10c00017 	ldw	r3,0(r2)
  81d440:	e0bffd17 	ldw	r2,-12(fp)
  81d444:	10c00015 	stw	r3,0(r2)
  81d448:	e0bffc17 	ldw	r2,-16(fp)
  81d44c:	10800017 	ldw	r2,0(r2)
  81d450:	e0fffd17 	ldw	r3,-12(fp)
  81d454:	10c00115 	stw	r3,4(r2)
  81d458:	e0bffc17 	ldw	r2,-16(fp)
  81d45c:	e0fffd17 	ldw	r3,-12(fp)
  81d460:	10c00015 	stw	r3,0(r2)
  81d464:	0005883a 	mov	r2,zero
  81d468:	e037883a 	mov	sp,fp
  81d46c:	dfc00117 	ldw	ra,4(sp)
  81d470:	df000017 	ldw	fp,0(sp)
  81d474:	dec00204 	addi	sp,sp,8
  81d478:	f800283a 	ret

0081d47c <_do_ctors>:
  81d47c:	defffd04 	addi	sp,sp,-12
  81d480:	dfc00215 	stw	ra,8(sp)
  81d484:	df000115 	stw	fp,4(sp)
  81d488:	df000104 	addi	fp,sp,4
  81d48c:	008020b4 	movhi	r2,130
  81d490:	10b77704 	addi	r2,r2,-8740
  81d494:	e0bfff15 	stw	r2,-4(fp)
  81d498:	00000606 	br	81d4b4 <_do_ctors+0x38>
  81d49c:	e0bfff17 	ldw	r2,-4(fp)
  81d4a0:	10800017 	ldw	r2,0(r2)
  81d4a4:	103ee83a 	callr	r2
  81d4a8:	e0bfff17 	ldw	r2,-4(fp)
  81d4ac:	10bfff04 	addi	r2,r2,-4
  81d4b0:	e0bfff15 	stw	r2,-4(fp)
  81d4b4:	e0ffff17 	ldw	r3,-4(fp)
  81d4b8:	008020b4 	movhi	r2,130
  81d4bc:	10b77804 	addi	r2,r2,-8736
  81d4c0:	18bff62e 	bgeu	r3,r2,81d49c <__alt_data_end+0xff81d49c>
  81d4c4:	e037883a 	mov	sp,fp
  81d4c8:	dfc00117 	ldw	ra,4(sp)
  81d4cc:	df000017 	ldw	fp,0(sp)
  81d4d0:	dec00204 	addi	sp,sp,8
  81d4d4:	f800283a 	ret

0081d4d8 <_do_dtors>:
  81d4d8:	defffd04 	addi	sp,sp,-12
  81d4dc:	dfc00215 	stw	ra,8(sp)
  81d4e0:	df000115 	stw	fp,4(sp)
  81d4e4:	df000104 	addi	fp,sp,4
  81d4e8:	008020b4 	movhi	r2,130
  81d4ec:	10b77704 	addi	r2,r2,-8740
  81d4f0:	e0bfff15 	stw	r2,-4(fp)
  81d4f4:	00000606 	br	81d510 <_do_dtors+0x38>
  81d4f8:	e0bfff17 	ldw	r2,-4(fp)
  81d4fc:	10800017 	ldw	r2,0(r2)
  81d500:	103ee83a 	callr	r2
  81d504:	e0bfff17 	ldw	r2,-4(fp)
  81d508:	10bfff04 	addi	r2,r2,-4
  81d50c:	e0bfff15 	stw	r2,-4(fp)
  81d510:	e0ffff17 	ldw	r3,-4(fp)
  81d514:	008020b4 	movhi	r2,130
  81d518:	10b77804 	addi	r2,r2,-8736
  81d51c:	18bff62e 	bgeu	r3,r2,81d4f8 <__alt_data_end+0xff81d4f8>
  81d520:	e037883a 	mov	sp,fp
  81d524:	dfc00117 	ldw	ra,4(sp)
  81d528:	df000017 	ldw	fp,0(sp)
  81d52c:	dec00204 	addi	sp,sp,8
  81d530:	f800283a 	ret

0081d534 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81d534:	defffa04 	addi	sp,sp,-24
  81d538:	dfc00515 	stw	ra,20(sp)
  81d53c:	df000415 	stw	fp,16(sp)
  81d540:	df000404 	addi	fp,sp,16
  81d544:	e13ffe15 	stw	r4,-8(fp)
  81d548:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  81d54c:	e0bfff17 	ldw	r2,-4(fp)
  81d550:	10800017 	ldw	r2,0(r2)
  81d554:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81d558:	e13ffe17 	ldw	r4,-8(fp)
  81d55c:	080c0580 	call	80c058 <strlen>
  81d560:	10800044 	addi	r2,r2,1
  81d564:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81d568:	00000d06 	br	81d5a0 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  81d56c:	e0bffc17 	ldw	r2,-16(fp)
  81d570:	10c00217 	ldw	r3,8(r2)
  81d574:	e0bffd17 	ldw	r2,-12(fp)
  81d578:	1809883a 	mov	r4,r3
  81d57c:	e17ffe17 	ldw	r5,-8(fp)
  81d580:	100d883a 	mov	r6,r2
  81d584:	081da880 	call	81da88 <memcmp>
  81d588:	1000021e 	bne	r2,zero,81d594 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  81d58c:	e0bffc17 	ldw	r2,-16(fp)
  81d590:	00000706 	br	81d5b0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  81d594:	e0bffc17 	ldw	r2,-16(fp)
  81d598:	10800017 	ldw	r2,0(r2)
  81d59c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81d5a0:	e0fffc17 	ldw	r3,-16(fp)
  81d5a4:	e0bfff17 	ldw	r2,-4(fp)
  81d5a8:	18bff01e 	bne	r3,r2,81d56c <__alt_data_end+0xff81d56c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  81d5ac:	0005883a 	mov	r2,zero
}
  81d5b0:	e037883a 	mov	sp,fp
  81d5b4:	dfc00117 	ldw	ra,4(sp)
  81d5b8:	df000017 	ldw	fp,0(sp)
  81d5bc:	dec00204 	addi	sp,sp,8
  81d5c0:	f800283a 	ret

0081d5c4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81d5c4:	defffb04 	addi	sp,sp,-20
  81d5c8:	dfc00415 	stw	ra,16(sp)
  81d5cc:	df000315 	stw	fp,12(sp)
  81d5d0:	df000304 	addi	fp,sp,12
  81d5d4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81d5d8:	008020b4 	movhi	r2,130
  81d5dc:	10bdb604 	addi	r2,r2,-2344
  81d5e0:	10800017 	ldw	r2,0(r2)
  81d5e4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81d5e8:	00003106 	br	81d6b0 <alt_find_file+0xec>
  {
    len = strlen(next->name);
  81d5ec:	e0bffd17 	ldw	r2,-12(fp)
  81d5f0:	10800217 	ldw	r2,8(r2)
  81d5f4:	1009883a 	mov	r4,r2
  81d5f8:	080c0580 	call	80c058 <strlen>
  81d5fc:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81d600:	e0bffd17 	ldw	r2,-12(fp)
  81d604:	10c00217 	ldw	r3,8(r2)
  81d608:	e0bffe17 	ldw	r2,-8(fp)
  81d60c:	10bfffc4 	addi	r2,r2,-1
  81d610:	1885883a 	add	r2,r3,r2
  81d614:	10800003 	ldbu	r2,0(r2)
  81d618:	10803fcc 	andi	r2,r2,255
  81d61c:	1080201c 	xori	r2,r2,128
  81d620:	10bfe004 	addi	r2,r2,-128
  81d624:	10800bd8 	cmpnei	r2,r2,47
  81d628:	1000031e 	bne	r2,zero,81d638 <alt_find_file+0x74>
    {
      len -= 1;
  81d62c:	e0bffe17 	ldw	r2,-8(fp)
  81d630:	10bfffc4 	addi	r2,r2,-1
  81d634:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81d638:	e0bffe17 	ldw	r2,-8(fp)
  81d63c:	e0ffff17 	ldw	r3,-4(fp)
  81d640:	1885883a 	add	r2,r3,r2
  81d644:	10800003 	ldbu	r2,0(r2)
  81d648:	10803fcc 	andi	r2,r2,255
  81d64c:	1080201c 	xori	r2,r2,128
  81d650:	10bfe004 	addi	r2,r2,-128
  81d654:	10800be0 	cmpeqi	r2,r2,47
  81d658:	1000081e 	bne	r2,zero,81d67c <alt_find_file+0xb8>
  81d65c:	e0bffe17 	ldw	r2,-8(fp)
  81d660:	e0ffff17 	ldw	r3,-4(fp)
  81d664:	1885883a 	add	r2,r3,r2
  81d668:	10800003 	ldbu	r2,0(r2)
  81d66c:	10803fcc 	andi	r2,r2,255
  81d670:	1080201c 	xori	r2,r2,128
  81d674:	10bfe004 	addi	r2,r2,-128
  81d678:	10000a1e 	bne	r2,zero,81d6a4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
  81d67c:	e0bffd17 	ldw	r2,-12(fp)
  81d680:	10c00217 	ldw	r3,8(r2)
  81d684:	e0bffe17 	ldw	r2,-8(fp)
  81d688:	1809883a 	mov	r4,r3
  81d68c:	e17fff17 	ldw	r5,-4(fp)
  81d690:	100d883a 	mov	r6,r2
  81d694:	081da880 	call	81da88 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81d698:	1000021e 	bne	r2,zero,81d6a4 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  81d69c:	e0bffd17 	ldw	r2,-12(fp)
  81d6a0:	00000806 	br	81d6c4 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
  81d6a4:	e0bffd17 	ldw	r2,-12(fp)
  81d6a8:	10800017 	ldw	r2,0(r2)
  81d6ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81d6b0:	e0fffd17 	ldw	r3,-12(fp)
  81d6b4:	008020b4 	movhi	r2,130
  81d6b8:	10bdb604 	addi	r2,r2,-2344
  81d6bc:	18bfcb1e 	bne	r3,r2,81d5ec <__alt_data_end+0xff81d5ec>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  81d6c0:	0005883a 	mov	r2,zero
}
  81d6c4:	e037883a 	mov	sp,fp
  81d6c8:	dfc00117 	ldw	ra,4(sp)
  81d6cc:	df000017 	ldw	fp,0(sp)
  81d6d0:	dec00204 	addi	sp,sp,8
  81d6d4:	f800283a 	ret

0081d6d8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  81d6d8:	defffc04 	addi	sp,sp,-16
  81d6dc:	df000315 	stw	fp,12(sp)
  81d6e0:	df000304 	addi	fp,sp,12
  81d6e4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  81d6e8:	00bffa04 	movi	r2,-24
  81d6ec:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81d6f0:	e03ffd15 	stw	zero,-12(fp)
  81d6f4:	00001d06 	br	81d76c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  81d6f8:	008020b4 	movhi	r2,130
  81d6fc:	10bcae04 	addi	r2,r2,-3400
  81d700:	e0fffd17 	ldw	r3,-12(fp)
  81d704:	18c00324 	muli	r3,r3,12
  81d708:	10c5883a 	add	r2,r2,r3
  81d70c:	10800017 	ldw	r2,0(r2)
  81d710:	1000131e 	bne	r2,zero,81d760 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  81d714:	008020b4 	movhi	r2,130
  81d718:	10bcae04 	addi	r2,r2,-3400
  81d71c:	e0fffd17 	ldw	r3,-12(fp)
  81d720:	18c00324 	muli	r3,r3,12
  81d724:	10c5883a 	add	r2,r2,r3
  81d728:	e0ffff17 	ldw	r3,-4(fp)
  81d72c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81d730:	008020b4 	movhi	r2,130
  81d734:	10bdba04 	addi	r2,r2,-2328
  81d738:	10c00017 	ldw	r3,0(r2)
  81d73c:	e0bffd17 	ldw	r2,-12(fp)
  81d740:	1880040e 	bge	r3,r2,81d754 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  81d744:	008020b4 	movhi	r2,130
  81d748:	10bdba04 	addi	r2,r2,-2328
  81d74c:	e0fffd17 	ldw	r3,-12(fp)
  81d750:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
  81d754:	e0bffd17 	ldw	r2,-12(fp)
  81d758:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  81d75c:	00000606 	br	81d778 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81d760:	e0bffd17 	ldw	r2,-12(fp)
  81d764:	10800044 	addi	r2,r2,1
  81d768:	e0bffd15 	stw	r2,-12(fp)
  81d76c:	e0bffd17 	ldw	r2,-12(fp)
  81d770:	10800810 	cmplti	r2,r2,32
  81d774:	103fe01e 	bne	r2,zero,81d6f8 <__alt_data_end+0xff81d6f8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  81d778:	e0bffe17 	ldw	r2,-8(fp)
}
  81d77c:	e037883a 	mov	sp,fp
  81d780:	df000017 	ldw	fp,0(sp)
  81d784:	dec00104 	addi	sp,sp,4
  81d788:	f800283a 	ret

0081d78c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  81d78c:	defffe04 	addi	sp,sp,-8
  81d790:	dfc00115 	stw	ra,4(sp)
  81d794:	df000015 	stw	fp,0(sp)
  81d798:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  81d79c:	0009883a 	mov	r4,zero
  81d7a0:	01440004 	movi	r5,4096
  81d7a4:	081d9140 	call	81d914 <alt_icache_flush>
#endif
}
  81d7a8:	e037883a 	mov	sp,fp
  81d7ac:	dfc00117 	ldw	ra,4(sp)
  81d7b0:	df000017 	ldw	fp,0(sp)
  81d7b4:	dec00204 	addi	sp,sp,8
  81d7b8:	f800283a 	ret

0081d7bc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81d7bc:	defff904 	addi	sp,sp,-28
  81d7c0:	dfc00615 	stw	ra,24(sp)
  81d7c4:	df000515 	stw	fp,20(sp)
  81d7c8:	df000504 	addi	fp,sp,20
  81d7cc:	e13ffc15 	stw	r4,-16(fp)
  81d7d0:	e17ffd15 	stw	r5,-12(fp)
  81d7d4:	e1bffe15 	stw	r6,-8(fp)
  81d7d8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  81d7dc:	e13ffd17 	ldw	r4,-12(fp)
  81d7e0:	e17ffe17 	ldw	r5,-8(fp)
  81d7e4:	e1bfff17 	ldw	r6,-4(fp)
  81d7e8:	081a6400 	call	81a640 <open>
  81d7ec:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  81d7f0:	e0bffb17 	ldw	r2,-20(fp)
  81d7f4:	10001c16 	blt	r2,zero,81d868 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81d7f8:	008020b4 	movhi	r2,130
  81d7fc:	10bcae04 	addi	r2,r2,-3400
  81d800:	e0fffb17 	ldw	r3,-20(fp)
  81d804:	18c00324 	muli	r3,r3,12
  81d808:	10c5883a 	add	r2,r2,r3
  81d80c:	10c00017 	ldw	r3,0(r2)
  81d810:	e0bffc17 	ldw	r2,-16(fp)
  81d814:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81d818:	008020b4 	movhi	r2,130
  81d81c:	10bcae04 	addi	r2,r2,-3400
  81d820:	e0fffb17 	ldw	r3,-20(fp)
  81d824:	18c00324 	muli	r3,r3,12
  81d828:	18c00104 	addi	r3,r3,4
  81d82c:	10c5883a 	add	r2,r2,r3
  81d830:	10c00017 	ldw	r3,0(r2)
  81d834:	e0bffc17 	ldw	r2,-16(fp)
  81d838:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  81d83c:	008020b4 	movhi	r2,130
  81d840:	10bcae04 	addi	r2,r2,-3400
  81d844:	e0fffb17 	ldw	r3,-20(fp)
  81d848:	18c00324 	muli	r3,r3,12
  81d84c:	18c00204 	addi	r3,r3,8
  81d850:	10c5883a 	add	r2,r2,r3
  81d854:	10c00017 	ldw	r3,0(r2)
  81d858:	e0bffc17 	ldw	r2,-16(fp)
  81d85c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  81d860:	e13ffb17 	ldw	r4,-20(fp)
  81d864:	081ab500 	call	81ab50 <alt_release_fd>
  }
} 
  81d868:	e037883a 	mov	sp,fp
  81d86c:	dfc00117 	ldw	ra,4(sp)
  81d870:	df000017 	ldw	fp,0(sp)
  81d874:	dec00204 	addi	sp,sp,8
  81d878:	f800283a 	ret

0081d87c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  81d87c:	defffb04 	addi	sp,sp,-20
  81d880:	dfc00415 	stw	ra,16(sp)
  81d884:	df000315 	stw	fp,12(sp)
  81d888:	df000304 	addi	fp,sp,12
  81d88c:	e13ffd15 	stw	r4,-12(fp)
  81d890:	e17ffe15 	stw	r5,-8(fp)
  81d894:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81d898:	010020b4 	movhi	r4,130
  81d89c:	213cb104 	addi	r4,r4,-3388
  81d8a0:	e17ffd17 	ldw	r5,-12(fp)
  81d8a4:	01800044 	movi	r6,1
  81d8a8:	01c07fc4 	movi	r7,511
  81d8ac:	081d7bc0 	call	81d7bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81d8b0:	010020b4 	movhi	r4,130
  81d8b4:	213cae04 	addi	r4,r4,-3400
  81d8b8:	e17ffe17 	ldw	r5,-8(fp)
  81d8bc:	000d883a 	mov	r6,zero
  81d8c0:	01c07fc4 	movi	r7,511
  81d8c4:	081d7bc0 	call	81d7bc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  81d8c8:	010020b4 	movhi	r4,130
  81d8cc:	213cb404 	addi	r4,r4,-3376
  81d8d0:	e17fff17 	ldw	r5,-4(fp)
  81d8d4:	01800044 	movi	r6,1
  81d8d8:	01c07fc4 	movi	r7,511
  81d8dc:	081d7bc0 	call	81d7bc <alt_open_fd>
}  
  81d8e0:	e037883a 	mov	sp,fp
  81d8e4:	dfc00117 	ldw	ra,4(sp)
  81d8e8:	df000017 	ldw	fp,0(sp)
  81d8ec:	dec00204 	addi	sp,sp,8
  81d8f0:	f800283a 	ret

0081d8f4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  81d8f4:	deffff04 	addi	sp,sp,-4
  81d8f8:	df000015 	stw	fp,0(sp)
  81d8fc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  81d900:	000170fa 	wrctl	ienable,zero
}
  81d904:	e037883a 	mov	sp,fp
  81d908:	df000017 	ldw	fp,0(sp)
  81d90c:	dec00104 	addi	sp,sp,4
  81d910:	f800283a 	ret

0081d914 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  81d914:	defffb04 	addi	sp,sp,-20
  81d918:	df000415 	stw	fp,16(sp)
  81d91c:	df000404 	addi	fp,sp,16
  81d920:	e13ffe15 	stw	r4,-8(fp)
  81d924:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  81d928:	e0bfff17 	ldw	r2,-4(fp)
  81d92c:	10840070 	cmpltui	r2,r2,4097
  81d930:	1000021e 	bne	r2,zero,81d93c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  81d934:	00840004 	movi	r2,4096
  81d938:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  81d93c:	e0fffe17 	ldw	r3,-8(fp)
  81d940:	e0bfff17 	ldw	r2,-4(fp)
  81d944:	1885883a 	add	r2,r3,r2
  81d948:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81d94c:	e0bffe17 	ldw	r2,-8(fp)
  81d950:	e0bffc15 	stw	r2,-16(fp)
  81d954:	00000506 	br	81d96c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81d958:	e0bffc17 	ldw	r2,-16(fp)
  81d95c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81d960:	e0bffc17 	ldw	r2,-16(fp)
  81d964:	10800804 	addi	r2,r2,32
  81d968:	e0bffc15 	stw	r2,-16(fp)
  81d96c:	e0fffc17 	ldw	r3,-16(fp)
  81d970:	e0bffd17 	ldw	r2,-12(fp)
  81d974:	18bff836 	bltu	r3,r2,81d958 <__alt_data_end+0xff81d958>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81d978:	e0bffe17 	ldw	r2,-8(fp)
  81d97c:	108007cc 	andi	r2,r2,31
  81d980:	10000226 	beq	r2,zero,81d98c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  81d984:	e0bffc17 	ldw	r2,-16(fp)
  81d988:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  81d98c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81d990:	e037883a 	mov	sp,fp
  81d994:	df000017 	ldw	fp,0(sp)
  81d998:	dec00104 	addi	sp,sp,4
  81d99c:	f800283a 	ret

0081d9a0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  81d9a0:	defffe04 	addi	sp,sp,-8
  81d9a4:	df000115 	stw	fp,4(sp)
  81d9a8:	df000104 	addi	fp,sp,4
  81d9ac:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  81d9b0:	e0bfff17 	ldw	r2,-4(fp)
  81d9b4:	10bffe84 	addi	r2,r2,-6
  81d9b8:	10c00428 	cmpgeui	r3,r2,16
  81d9bc:	18001a1e 	bne	r3,zero,81da28 <alt_exception_cause_generated_bad_addr+0x88>
  81d9c0:	100690ba 	slli	r3,r2,2
  81d9c4:	008020b4 	movhi	r2,130
  81d9c8:	10b67604 	addi	r2,r2,-9768
  81d9cc:	1885883a 	add	r2,r3,r2
  81d9d0:	10800017 	ldw	r2,0(r2)
  81d9d4:	1000683a 	jmp	r2
  81d9d8:	0081da18 	cmpnei	r2,zero,1896
  81d9dc:	0081da18 	cmpnei	r2,zero,1896
  81d9e0:	0081da28 	cmpgeui	r2,zero,1896
  81d9e4:	0081da28 	cmpgeui	r2,zero,1896
  81d9e8:	0081da28 	cmpgeui	r2,zero,1896
  81d9ec:	0081da18 	cmpnei	r2,zero,1896
  81d9f0:	0081da20 	cmpeqi	r2,zero,1896
  81d9f4:	0081da28 	cmpgeui	r2,zero,1896
  81d9f8:	0081da18 	cmpnei	r2,zero,1896
  81d9fc:	0081da18 	cmpnei	r2,zero,1896
  81da00:	0081da28 	cmpgeui	r2,zero,1896
  81da04:	0081da18 	cmpnei	r2,zero,1896
  81da08:	0081da20 	cmpeqi	r2,zero,1896
  81da0c:	0081da28 	cmpgeui	r2,zero,1896
  81da10:	0081da28 	cmpgeui	r2,zero,1896
  81da14:	0081da18 	cmpnei	r2,zero,1896
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81da18:	00800044 	movi	r2,1
  81da1c:	00000306 	br	81da2c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  81da20:	0005883a 	mov	r2,zero
  81da24:	00000106 	br	81da2c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81da28:	0005883a 	mov	r2,zero
  }
}
  81da2c:	e037883a 	mov	sp,fp
  81da30:	df000017 	ldw	fp,0(sp)
  81da34:	dec00104 	addi	sp,sp,4
  81da38:	f800283a 	ret

0081da3c <atexit>:
  81da3c:	200b883a 	mov	r5,r4
  81da40:	000d883a 	mov	r6,zero
  81da44:	0009883a 	mov	r4,zero
  81da48:	000f883a 	mov	r7,zero
  81da4c:	081db041 	jmpi	81db04 <__register_exitproc>

0081da50 <exit>:
  81da50:	defffe04 	addi	sp,sp,-8
  81da54:	000b883a 	mov	r5,zero
  81da58:	dc000015 	stw	r16,0(sp)
  81da5c:	dfc00115 	stw	ra,4(sp)
  81da60:	2021883a 	mov	r16,r4
  81da64:	081dc180 	call	81dc18 <__call_exitprocs>
  81da68:	008020b4 	movhi	r2,130
  81da6c:	10bdb004 	addi	r2,r2,-2368
  81da70:	11000017 	ldw	r4,0(r2)
  81da74:	20800f17 	ldw	r2,60(r4)
  81da78:	10000126 	beq	r2,zero,81da80 <exit+0x30>
  81da7c:	103ee83a 	callr	r2
  81da80:	8009883a 	mov	r4,r16
  81da84:	081ddac0 	call	81ddac <_exit>

0081da88 <memcmp>:
  81da88:	01c000c4 	movi	r7,3
  81da8c:	3980192e 	bgeu	r7,r6,81daf4 <memcmp+0x6c>
  81da90:	2144b03a 	or	r2,r4,r5
  81da94:	11c4703a 	and	r2,r2,r7
  81da98:	10000f26 	beq	r2,zero,81dad8 <memcmp+0x50>
  81da9c:	20800003 	ldbu	r2,0(r4)
  81daa0:	28c00003 	ldbu	r3,0(r5)
  81daa4:	10c0151e 	bne	r2,r3,81dafc <memcmp+0x74>
  81daa8:	31bfff84 	addi	r6,r6,-2
  81daac:	01ffffc4 	movi	r7,-1
  81dab0:	00000406 	br	81dac4 <memcmp+0x3c>
  81dab4:	20800003 	ldbu	r2,0(r4)
  81dab8:	28c00003 	ldbu	r3,0(r5)
  81dabc:	31bfffc4 	addi	r6,r6,-1
  81dac0:	10c00e1e 	bne	r2,r3,81dafc <memcmp+0x74>
  81dac4:	21000044 	addi	r4,r4,1
  81dac8:	29400044 	addi	r5,r5,1
  81dacc:	31fff91e 	bne	r6,r7,81dab4 <__alt_data_end+0xff81dab4>
  81dad0:	0005883a 	mov	r2,zero
  81dad4:	f800283a 	ret
  81dad8:	20c00017 	ldw	r3,0(r4)
  81dadc:	28800017 	ldw	r2,0(r5)
  81dae0:	1880041e 	bne	r3,r2,81daf4 <memcmp+0x6c>
  81dae4:	31bfff04 	addi	r6,r6,-4
  81dae8:	21000104 	addi	r4,r4,4
  81daec:	29400104 	addi	r5,r5,4
  81daf0:	39bff936 	bltu	r7,r6,81dad8 <__alt_data_end+0xff81dad8>
  81daf4:	303fe91e 	bne	r6,zero,81da9c <__alt_data_end+0xff81da9c>
  81daf8:	003ff506 	br	81dad0 <__alt_data_end+0xff81dad0>
  81dafc:	10c5c83a 	sub	r2,r2,r3
  81db00:	f800283a 	ret

0081db04 <__register_exitproc>:
  81db04:	008020b4 	movhi	r2,130
  81db08:	defffa04 	addi	sp,sp,-24
  81db0c:	10bdb004 	addi	r2,r2,-2368
  81db10:	dc000315 	stw	r16,12(sp)
  81db14:	14000017 	ldw	r16,0(r2)
  81db18:	dc400415 	stw	r17,16(sp)
  81db1c:	dfc00515 	stw	ra,20(sp)
  81db20:	80805217 	ldw	r2,328(r16)
  81db24:	2023883a 	mov	r17,r4
  81db28:	10003626 	beq	r2,zero,81dc04 <__register_exitproc+0x100>
  81db2c:	10c00117 	ldw	r3,4(r2)
  81db30:	010007c4 	movi	r4,31
  81db34:	20c00e16 	blt	r4,r3,81db70 <__register_exitproc+0x6c>
  81db38:	1a400044 	addi	r9,r3,1
  81db3c:	8800211e 	bne	r17,zero,81dbc4 <__register_exitproc+0xc0>
  81db40:	18c00084 	addi	r3,r3,2
  81db44:	18c7883a 	add	r3,r3,r3
  81db48:	18c7883a 	add	r3,r3,r3
  81db4c:	12400115 	stw	r9,4(r2)
  81db50:	10c7883a 	add	r3,r2,r3
  81db54:	19400015 	stw	r5,0(r3)
  81db58:	0005883a 	mov	r2,zero
  81db5c:	dfc00517 	ldw	ra,20(sp)
  81db60:	dc400417 	ldw	r17,16(sp)
  81db64:	dc000317 	ldw	r16,12(sp)
  81db68:	dec00604 	addi	sp,sp,24
  81db6c:	f800283a 	ret
  81db70:	00800034 	movhi	r2,0
  81db74:	10800004 	addi	r2,r2,0
  81db78:	10002526 	beq	r2,zero,81dc10 <__register_exitproc+0x10c>
  81db7c:	01006404 	movi	r4,400
  81db80:	d9400015 	stw	r5,0(sp)
  81db84:	d9800115 	stw	r6,4(sp)
  81db88:	d9c00215 	stw	r7,8(sp)
  81db8c:	00000000 	call	0 <__reset-0x800000>
  81db90:	d9400017 	ldw	r5,0(sp)
  81db94:	d9800117 	ldw	r6,4(sp)
  81db98:	d9c00217 	ldw	r7,8(sp)
  81db9c:	10001c26 	beq	r2,zero,81dc10 <__register_exitproc+0x10c>
  81dba0:	80c05217 	ldw	r3,328(r16)
  81dba4:	10000115 	stw	zero,4(r2)
  81dba8:	02400044 	movi	r9,1
  81dbac:	10c00015 	stw	r3,0(r2)
  81dbb0:	80805215 	stw	r2,328(r16)
  81dbb4:	10006215 	stw	zero,392(r2)
  81dbb8:	10006315 	stw	zero,396(r2)
  81dbbc:	0007883a 	mov	r3,zero
  81dbc0:	883fdf26 	beq	r17,zero,81db40 <__alt_data_end+0xff81db40>
  81dbc4:	18d1883a 	add	r8,r3,r3
  81dbc8:	4211883a 	add	r8,r8,r8
  81dbcc:	1211883a 	add	r8,r2,r8
  81dbd0:	41802215 	stw	r6,136(r8)
  81dbd4:	01000044 	movi	r4,1
  81dbd8:	11806217 	ldw	r6,392(r2)
  81dbdc:	20c8983a 	sll	r4,r4,r3
  81dbe0:	310cb03a 	or	r6,r6,r4
  81dbe4:	11806215 	stw	r6,392(r2)
  81dbe8:	41c04215 	stw	r7,264(r8)
  81dbec:	01800084 	movi	r6,2
  81dbf0:	89bfd31e 	bne	r17,r6,81db40 <__alt_data_end+0xff81db40>
  81dbf4:	11806317 	ldw	r6,396(r2)
  81dbf8:	3108b03a 	or	r4,r6,r4
  81dbfc:	11006315 	stw	r4,396(r2)
  81dc00:	003fcf06 	br	81db40 <__alt_data_end+0xff81db40>
  81dc04:	80805304 	addi	r2,r16,332
  81dc08:	80805215 	stw	r2,328(r16)
  81dc0c:	003fc706 	br	81db2c <__alt_data_end+0xff81db2c>
  81dc10:	00bfffc4 	movi	r2,-1
  81dc14:	003fd106 	br	81db5c <__alt_data_end+0xff81db5c>

0081dc18 <__call_exitprocs>:
  81dc18:	008020b4 	movhi	r2,130
  81dc1c:	10bdb004 	addi	r2,r2,-2368
  81dc20:	10800017 	ldw	r2,0(r2)
  81dc24:	defff404 	addi	sp,sp,-48
  81dc28:	dd800815 	stw	r22,32(sp)
  81dc2c:	d8800015 	stw	r2,0(sp)
  81dc30:	10805204 	addi	r2,r2,328
  81dc34:	dd000615 	stw	r20,24(sp)
  81dc38:	dc800415 	stw	r18,16(sp)
  81dc3c:	dfc00b15 	stw	ra,44(sp)
  81dc40:	df000a15 	stw	fp,40(sp)
  81dc44:	ddc00915 	stw	r23,36(sp)
  81dc48:	dd400715 	stw	r21,28(sp)
  81dc4c:	dcc00515 	stw	r19,20(sp)
  81dc50:	dc400315 	stw	r17,12(sp)
  81dc54:	dc000215 	stw	r16,8(sp)
  81dc58:	2025883a 	mov	r18,r4
  81dc5c:	2829883a 	mov	r20,r5
  81dc60:	d8800115 	stw	r2,4(sp)
  81dc64:	05bfffc4 	movi	r22,-1
  81dc68:	d8800017 	ldw	r2,0(sp)
  81dc6c:	14c05217 	ldw	r19,328(r2)
  81dc70:	98001d26 	beq	r19,zero,81dce8 <__call_exitprocs+0xd0>
  81dc74:	dd400117 	ldw	r21,4(sp)
  81dc78:	98800117 	ldw	r2,4(r19)
  81dc7c:	173fffc4 	addi	fp,r2,-1
  81dc80:	e0000d16 	blt	fp,zero,81dcb8 <__call_exitprocs+0xa0>
  81dc84:	14000044 	addi	r16,r2,1
  81dc88:	8421883a 	add	r16,r16,r16
  81dc8c:	8421883a 	add	r16,r16,r16
  81dc90:	84402004 	addi	r17,r16,128
  81dc94:	9c63883a 	add	r17,r19,r17
  81dc98:	9c21883a 	add	r16,r19,r16
  81dc9c:	a0001e26 	beq	r20,zero,81dd18 <__call_exitprocs+0x100>
  81dca0:	80804017 	ldw	r2,256(r16)
  81dca4:	15001c26 	beq	r2,r20,81dd18 <__call_exitprocs+0x100>
  81dca8:	e73fffc4 	addi	fp,fp,-1
  81dcac:	843fff04 	addi	r16,r16,-4
  81dcb0:	8c7fff04 	addi	r17,r17,-4
  81dcb4:	e5bff91e 	bne	fp,r22,81dc9c <__alt_data_end+0xff81dc9c>
  81dcb8:	00800034 	movhi	r2,0
  81dcbc:	10800004 	addi	r2,r2,0
  81dcc0:	10000926 	beq	r2,zero,81dce8 <__call_exitprocs+0xd0>
  81dcc4:	98800117 	ldw	r2,4(r19)
  81dcc8:	1000311e 	bne	r2,zero,81dd90 <__call_exitprocs+0x178>
  81dccc:	98800017 	ldw	r2,0(r19)
  81dcd0:	10003426 	beq	r2,zero,81dda4 <__call_exitprocs+0x18c>
  81dcd4:	9809883a 	mov	r4,r19
  81dcd8:	a8800015 	stw	r2,0(r21)
  81dcdc:	00000000 	call	0 <__reset-0x800000>
  81dce0:	acc00017 	ldw	r19,0(r21)
  81dce4:	983fe41e 	bne	r19,zero,81dc78 <__alt_data_end+0xff81dc78>
  81dce8:	dfc00b17 	ldw	ra,44(sp)
  81dcec:	df000a17 	ldw	fp,40(sp)
  81dcf0:	ddc00917 	ldw	r23,36(sp)
  81dcf4:	dd800817 	ldw	r22,32(sp)
  81dcf8:	dd400717 	ldw	r21,28(sp)
  81dcfc:	dd000617 	ldw	r20,24(sp)
  81dd00:	dcc00517 	ldw	r19,20(sp)
  81dd04:	dc800417 	ldw	r18,16(sp)
  81dd08:	dc400317 	ldw	r17,12(sp)
  81dd0c:	dc000217 	ldw	r16,8(sp)
  81dd10:	dec00c04 	addi	sp,sp,48
  81dd14:	f800283a 	ret
  81dd18:	98800117 	ldw	r2,4(r19)
  81dd1c:	80c00017 	ldw	r3,0(r16)
  81dd20:	10bfffc4 	addi	r2,r2,-1
  81dd24:	17001526 	beq	r2,fp,81dd7c <__call_exitprocs+0x164>
  81dd28:	80000015 	stw	zero,0(r16)
  81dd2c:	183fde26 	beq	r3,zero,81dca8 <__alt_data_end+0xff81dca8>
  81dd30:	00800044 	movi	r2,1
  81dd34:	1708983a 	sll	r4,r2,fp
  81dd38:	98806217 	ldw	r2,392(r19)
  81dd3c:	9dc00117 	ldw	r23,4(r19)
  81dd40:	2084703a 	and	r2,r4,r2
  81dd44:	1000061e 	bne	r2,zero,81dd60 <__call_exitprocs+0x148>
  81dd48:	183ee83a 	callr	r3
  81dd4c:	98800117 	ldw	r2,4(r19)
  81dd50:	15ffc51e 	bne	r2,r23,81dc68 <__alt_data_end+0xff81dc68>
  81dd54:	a8800017 	ldw	r2,0(r21)
  81dd58:	14ffd326 	beq	r2,r19,81dca8 <__alt_data_end+0xff81dca8>
  81dd5c:	003fc206 	br	81dc68 <__alt_data_end+0xff81dc68>
  81dd60:	98806317 	ldw	r2,396(r19)
  81dd64:	2084703a 	and	r2,r4,r2
  81dd68:	1000061e 	bne	r2,zero,81dd84 <__call_exitprocs+0x16c>
  81dd6c:	89400017 	ldw	r5,0(r17)
  81dd70:	9009883a 	mov	r4,r18
  81dd74:	183ee83a 	callr	r3
  81dd78:	003ff406 	br	81dd4c <__alt_data_end+0xff81dd4c>
  81dd7c:	9f000115 	stw	fp,4(r19)
  81dd80:	003fea06 	br	81dd2c <__alt_data_end+0xff81dd2c>
  81dd84:	89000017 	ldw	r4,0(r17)
  81dd88:	183ee83a 	callr	r3
  81dd8c:	003fef06 	br	81dd4c <__alt_data_end+0xff81dd4c>
  81dd90:	98800017 	ldw	r2,0(r19)
  81dd94:	982b883a 	mov	r21,r19
  81dd98:	1027883a 	mov	r19,r2
  81dd9c:	983fb61e 	bne	r19,zero,81dc78 <__alt_data_end+0xff81dc78>
  81dda0:	003fd106 	br	81dce8 <__alt_data_end+0xff81dce8>
  81dda4:	0005883a 	mov	r2,zero
  81dda8:	003ffa06 	br	81dd94 <__alt_data_end+0xff81dd94>

0081ddac <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  81ddac:	defffd04 	addi	sp,sp,-12
  81ddb0:	df000215 	stw	fp,8(sp)
  81ddb4:	df000204 	addi	fp,sp,8
  81ddb8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  81ddbc:	0001883a 	nop
  81ddc0:	e0bfff17 	ldw	r2,-4(fp)
  81ddc4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  81ddc8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  81ddcc:	10000226 	beq	r2,zero,81ddd8 <_exit+0x2c>
    ALT_SIM_FAIL();
  81ddd0:	002af070 	cmpltui	zero,zero,43969
  81ddd4:	00000106 	br	81dddc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  81ddd8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  81dddc:	003fff06 	br	81dddc <__alt_data_end+0xff81dddc>
